
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006074  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000042c  08006208  08006208  00007208  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006634  08006634  000081dc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08006634  08006634  00007634  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800663c  0800663c  000081dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800663c  0800663c  0000763c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08006640  08006640  00007640  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001dc  20000000  08006644  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000081dc  2**0
                  CONTENTS
 10 .bss          00000198  200001dc  200001dc  000081dc  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000374  20000374  000081dc  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000081dc  2**0
                  CONTENTS, READONLY
 13 .debug_info   000020da  00000000  00000000  0000820c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000081b  00000000  00000000  0000a2e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000270  00000000  00000000  0000ab08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001c2  00000000  00000000  0000ad78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000015a8  00000000  00000000  0000af3a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000038a9  00000000  00000000  0000c4e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000d030  00000000  00000000  0000fd8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0001cdbb  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001dfc  00000000  00000000  0001ce00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000069  00000000  00000000  0001ebfc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001dc 	.word	0x200001dc
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080061ec 	.word	0x080061ec

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001e0 	.word	0x200001e0
 80001cc:	080061ec 	.word	0x080061ec

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_d2lz>:
 8000c88:	b538      	push	{r3, r4, r5, lr}
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	4604      	mov	r4, r0
 8000c90:	460d      	mov	r5, r1
 8000c92:	f7ff ff23 	bl	8000adc <__aeabi_dcmplt>
 8000c96:	b928      	cbnz	r0, 8000ca4 <__aeabi_d2lz+0x1c>
 8000c98:	4620      	mov	r0, r4
 8000c9a:	4629      	mov	r1, r5
 8000c9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ca0:	f000 b80a 	b.w	8000cb8 <__aeabi_d2ulz>
 8000ca4:	4620      	mov	r0, r4
 8000ca6:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000caa:	f000 f805 	bl	8000cb8 <__aeabi_d2ulz>
 8000cae:	4240      	negs	r0, r0
 8000cb0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cb4:	bd38      	pop	{r3, r4, r5, pc}
 8000cb6:	bf00      	nop

08000cb8 <__aeabi_d2ulz>:
 8000cb8:	b5d0      	push	{r4, r6, r7, lr}
 8000cba:	4b0c      	ldr	r3, [pc, #48]	@ (8000cec <__aeabi_d2ulz+0x34>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	4606      	mov	r6, r0
 8000cc0:	460f      	mov	r7, r1
 8000cc2:	f7ff fc99 	bl	80005f8 <__aeabi_dmul>
 8000cc6:	f7ff ff6f 	bl	8000ba8 <__aeabi_d2uiz>
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f7ff fc1a 	bl	8000504 <__aeabi_ui2d>
 8000cd0:	4b07      	ldr	r3, [pc, #28]	@ (8000cf0 <__aeabi_d2ulz+0x38>)
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	f7ff fc90 	bl	80005f8 <__aeabi_dmul>
 8000cd8:	4602      	mov	r2, r0
 8000cda:	460b      	mov	r3, r1
 8000cdc:	4630      	mov	r0, r6
 8000cde:	4639      	mov	r1, r7
 8000ce0:	f7ff fad2 	bl	8000288 <__aeabi_dsub>
 8000ce4:	f7ff ff60 	bl	8000ba8 <__aeabi_d2uiz>
 8000ce8:	4621      	mov	r1, r4
 8000cea:	bdd0      	pop	{r4, r6, r7, pc}
 8000cec:	3df00000 	.word	0x3df00000
 8000cf0:	41f00000 	.word	0x41f00000

08000cf4 <GPIO_PeriClockControl>:
  * @param  GPIOx where x can be (A..I) to select the GPIO peripheral .
  * @param  clockState Specifies whether to ENABLE or DISABLE of the clock for the given GPIO peripheral.
  * @retval None
  */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t clockState)
{
 8000cf4:	b480      	push	{r7}
 8000cf6:	b083      	sub	sp, #12
 8000cf8:	af00      	add	r7, sp, #0
 8000cfa:	6078      	str	r0, [r7, #4]
 8000cfc:	460b      	mov	r3, r1
 8000cfe:	70fb      	strb	r3, [r7, #3]
    if (clockState == ENABLE) {
 8000d00:	78fb      	ldrb	r3, [r7, #3]
 8000d02:	2b01      	cmp	r3, #1
 8000d04:	d162      	bne.n	8000dcc <GPIO_PeriClockControl+0xd8>
        if (pGPIOx == GPIOA) {
 8000d06:	687b      	ldr	r3, [r7, #4]
 8000d08:	4a64      	ldr	r2, [pc, #400]	@ (8000e9c <GPIO_PeriClockControl+0x1a8>)
 8000d0a:	4293      	cmp	r3, r2
 8000d0c:	d106      	bne.n	8000d1c <GPIO_PeriClockControl+0x28>
            GPIOA_PCLK_EN();
 8000d0e:	4b64      	ldr	r3, [pc, #400]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d12:	4a63      	ldr	r2, [pc, #396]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d14:	f043 0301 	orr.w	r3, r3, #1
 8000d18:	6313      	str	r3, [r2, #48]	@ 0x30
            GPIOH_PCLK_DI();
        }else if (pGPIOx == GPIOI) {
            GPIOI_PCLK_DI();
        }
    }
}
 8000d1a:	e0b9      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOB) {
 8000d1c:	687b      	ldr	r3, [r7, #4]
 8000d1e:	4a61      	ldr	r2, [pc, #388]	@ (8000ea4 <GPIO_PeriClockControl+0x1b0>)
 8000d20:	4293      	cmp	r3, r2
 8000d22:	d106      	bne.n	8000d32 <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 8000d24:	4b5e      	ldr	r3, [pc, #376]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d28:	4a5d      	ldr	r2, [pc, #372]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d2a:	f043 0302 	orr.w	r3, r3, #2
 8000d2e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d30:	e0ae      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOC) {
 8000d32:	687b      	ldr	r3, [r7, #4]
 8000d34:	4a5c      	ldr	r2, [pc, #368]	@ (8000ea8 <GPIO_PeriClockControl+0x1b4>)
 8000d36:	4293      	cmp	r3, r2
 8000d38:	d106      	bne.n	8000d48 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 8000d3a:	4b59      	ldr	r3, [pc, #356]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d3e:	4a58      	ldr	r2, [pc, #352]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d40:	f043 0304 	orr.w	r3, r3, #4
 8000d44:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d46:	e0a3      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOD) {
 8000d48:	687b      	ldr	r3, [r7, #4]
 8000d4a:	4a58      	ldr	r2, [pc, #352]	@ (8000eac <GPIO_PeriClockControl+0x1b8>)
 8000d4c:	4293      	cmp	r3, r2
 8000d4e:	d106      	bne.n	8000d5e <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 8000d50:	4b53      	ldr	r3, [pc, #332]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d54:	4a52      	ldr	r2, [pc, #328]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d56:	f043 0308 	orr.w	r3, r3, #8
 8000d5a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d5c:	e098      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOE) {
 8000d5e:	687b      	ldr	r3, [r7, #4]
 8000d60:	4a53      	ldr	r2, [pc, #332]	@ (8000eb0 <GPIO_PeriClockControl+0x1bc>)
 8000d62:	4293      	cmp	r3, r2
 8000d64:	d106      	bne.n	8000d74 <GPIO_PeriClockControl+0x80>
            GPIOE_PCLK_EN();
 8000d66:	4b4e      	ldr	r3, [pc, #312]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d6a:	4a4d      	ldr	r2, [pc, #308]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d6c:	f043 0310 	orr.w	r3, r3, #16
 8000d70:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d72:	e08d      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOF) {
 8000d74:	687b      	ldr	r3, [r7, #4]
 8000d76:	4a4f      	ldr	r2, [pc, #316]	@ (8000eb4 <GPIO_PeriClockControl+0x1c0>)
 8000d78:	4293      	cmp	r3, r2
 8000d7a:	d106      	bne.n	8000d8a <GPIO_PeriClockControl+0x96>
            GPIOF_PCLK_EN();
 8000d7c:	4b48      	ldr	r3, [pc, #288]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d7e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d80:	4a47      	ldr	r2, [pc, #284]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d82:	f043 0320 	orr.w	r3, r3, #32
 8000d86:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d88:	e082      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOG) {
 8000d8a:	687b      	ldr	r3, [r7, #4]
 8000d8c:	4a4a      	ldr	r2, [pc, #296]	@ (8000eb8 <GPIO_PeriClockControl+0x1c4>)
 8000d8e:	4293      	cmp	r3, r2
 8000d90:	d106      	bne.n	8000da0 <GPIO_PeriClockControl+0xac>
            GPIOG_PCLK_EN();
 8000d92:	4b43      	ldr	r3, [pc, #268]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d96:	4a42      	ldr	r2, [pc, #264]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000d98:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000d9c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d9e:	e077      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOH) {
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	4a46      	ldr	r2, [pc, #280]	@ (8000ebc <GPIO_PeriClockControl+0x1c8>)
 8000da4:	4293      	cmp	r3, r2
 8000da6:	d106      	bne.n	8000db6 <GPIO_PeriClockControl+0xc2>
            GPIOH_PCLK_EN();
 8000da8:	4b3d      	ldr	r3, [pc, #244]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000daa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dac:	4a3c      	ldr	r2, [pc, #240]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000dae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000db2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000db4:	e06c      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOI) {
 8000db6:	687b      	ldr	r3, [r7, #4]
 8000db8:	4a41      	ldr	r2, [pc, #260]	@ (8000ec0 <GPIO_PeriClockControl+0x1cc>)
 8000dba:	4293      	cmp	r3, r2
 8000dbc:	d168      	bne.n	8000e90 <GPIO_PeriClockControl+0x19c>
            GPIOI_PCLK_EN();
 8000dbe:	4b38      	ldr	r3, [pc, #224]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000dc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dc2:	4a37      	ldr	r2, [pc, #220]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000dc4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000dc8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000dca:	e061      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        if (pGPIOx == GPIOA) {
 8000dcc:	687b      	ldr	r3, [r7, #4]
 8000dce:	4a33      	ldr	r2, [pc, #204]	@ (8000e9c <GPIO_PeriClockControl+0x1a8>)
 8000dd0:	4293      	cmp	r3, r2
 8000dd2:	d106      	bne.n	8000de2 <GPIO_PeriClockControl+0xee>
            GPIOA_PCLK_DI();
 8000dd4:	4b32      	ldr	r3, [pc, #200]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000dd6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dd8:	4a31      	ldr	r2, [pc, #196]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000dda:	f023 0301 	bic.w	r3, r3, #1
 8000dde:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000de0:	e056      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOB) {
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	4a2f      	ldr	r2, [pc, #188]	@ (8000ea4 <GPIO_PeriClockControl+0x1b0>)
 8000de6:	4293      	cmp	r3, r2
 8000de8:	d106      	bne.n	8000df8 <GPIO_PeriClockControl+0x104>
            GPIOB_PCLK_DI();
 8000dea:	4b2d      	ldr	r3, [pc, #180]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000dec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dee:	4a2c      	ldr	r2, [pc, #176]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000df0:	f023 0302 	bic.w	r3, r3, #2
 8000df4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000df6:	e04b      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOC) {
 8000df8:	687b      	ldr	r3, [r7, #4]
 8000dfa:	4a2b      	ldr	r2, [pc, #172]	@ (8000ea8 <GPIO_PeriClockControl+0x1b4>)
 8000dfc:	4293      	cmp	r3, r2
 8000dfe:	d106      	bne.n	8000e0e <GPIO_PeriClockControl+0x11a>
            GPIOC_PCLK_DI();
 8000e00:	4b27      	ldr	r3, [pc, #156]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e04:	4a26      	ldr	r2, [pc, #152]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e06:	f023 0304 	bic.w	r3, r3, #4
 8000e0a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000e0c:	e040      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOD) {
 8000e0e:	687b      	ldr	r3, [r7, #4]
 8000e10:	4a26      	ldr	r2, [pc, #152]	@ (8000eac <GPIO_PeriClockControl+0x1b8>)
 8000e12:	4293      	cmp	r3, r2
 8000e14:	d106      	bne.n	8000e24 <GPIO_PeriClockControl+0x130>
            GPIOD_PCLK_DI();
 8000e16:	4b22      	ldr	r3, [pc, #136]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e1a:	4a21      	ldr	r2, [pc, #132]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e1c:	f023 0308 	bic.w	r3, r3, #8
 8000e20:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000e22:	e035      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOE) {
 8000e24:	687b      	ldr	r3, [r7, #4]
 8000e26:	4a22      	ldr	r2, [pc, #136]	@ (8000eb0 <GPIO_PeriClockControl+0x1bc>)
 8000e28:	4293      	cmp	r3, r2
 8000e2a:	d106      	bne.n	8000e3a <GPIO_PeriClockControl+0x146>
            GPIOE_PCLK_DI();
 8000e2c:	4b1c      	ldr	r3, [pc, #112]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e2e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e30:	4a1b      	ldr	r2, [pc, #108]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e32:	f023 0310 	bic.w	r3, r3, #16
 8000e36:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000e38:	e02a      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOF) {
 8000e3a:	687b      	ldr	r3, [r7, #4]
 8000e3c:	4a1d      	ldr	r2, [pc, #116]	@ (8000eb4 <GPIO_PeriClockControl+0x1c0>)
 8000e3e:	4293      	cmp	r3, r2
 8000e40:	d106      	bne.n	8000e50 <GPIO_PeriClockControl+0x15c>
            GPIOF_PCLK_DI();
 8000e42:	4b17      	ldr	r3, [pc, #92]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e46:	4a16      	ldr	r2, [pc, #88]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e48:	f023 0320 	bic.w	r3, r3, #32
 8000e4c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000e4e:	e01f      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOG) {
 8000e50:	687b      	ldr	r3, [r7, #4]
 8000e52:	4a19      	ldr	r2, [pc, #100]	@ (8000eb8 <GPIO_PeriClockControl+0x1c4>)
 8000e54:	4293      	cmp	r3, r2
 8000e56:	d106      	bne.n	8000e66 <GPIO_PeriClockControl+0x172>
            GPIOG_PCLK_DI();
 8000e58:	4b11      	ldr	r3, [pc, #68]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e5c:	4a10      	ldr	r2, [pc, #64]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e5e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000e62:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000e64:	e014      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOH) {
 8000e66:	687b      	ldr	r3, [r7, #4]
 8000e68:	4a14      	ldr	r2, [pc, #80]	@ (8000ebc <GPIO_PeriClockControl+0x1c8>)
 8000e6a:	4293      	cmp	r3, r2
 8000e6c:	d106      	bne.n	8000e7c <GPIO_PeriClockControl+0x188>
            GPIOH_PCLK_DI();
 8000e6e:	4b0c      	ldr	r3, [pc, #48]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e72:	4a0b      	ldr	r2, [pc, #44]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e74:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000e78:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000e7a:	e009      	b.n	8000e90 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOI) {
 8000e7c:	687b      	ldr	r3, [r7, #4]
 8000e7e:	4a10      	ldr	r2, [pc, #64]	@ (8000ec0 <GPIO_PeriClockControl+0x1cc>)
 8000e80:	4293      	cmp	r3, r2
 8000e82:	d105      	bne.n	8000e90 <GPIO_PeriClockControl+0x19c>
            GPIOI_PCLK_DI();
 8000e84:	4b06      	ldr	r3, [pc, #24]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e88:	4a05      	ldr	r2, [pc, #20]	@ (8000ea0 <GPIO_PeriClockControl+0x1ac>)
 8000e8a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000e8e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000e90:	bf00      	nop
 8000e92:	370c      	adds	r7, #12
 8000e94:	46bd      	mov	sp, r7
 8000e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e9a:	4770      	bx	lr
 8000e9c:	40020000 	.word	0x40020000
 8000ea0:	40023800 	.word	0x40023800
 8000ea4:	40020400 	.word	0x40020400
 8000ea8:	40020800 	.word	0x40020800
 8000eac:	40020c00 	.word	0x40020c00
 8000eb0:	40021000 	.word	0x40021000
 8000eb4:	40021400 	.word	0x40021400
 8000eb8:	40021800 	.word	0x40021800
 8000ebc:	40021c00 	.word	0x40021c00
 8000ec0:	40022000 	.word	0x40022000

08000ec4 <GPIO_Init>:
  * @param  hGPIO pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_HandleTypeDef *hGPIO)
{
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	b086      	sub	sp, #24
 8000ec8:	af00      	add	r7, sp, #0
 8000eca:	6078      	str	r0, [r7, #4]
	uint32_t temp;
	// Enable the clock peripheral
	GPIO_PeriClockControl(hGPIO->pGPIOx, ENABLE);
 8000ecc:	687b      	ldr	r3, [r7, #4]
 8000ece:	681b      	ldr	r3, [r3, #0]
 8000ed0:	2101      	movs	r1, #1
 8000ed2:	4618      	mov	r0, r3
 8000ed4:	f7ff ff0e 	bl	8000cf4 <GPIO_PeriClockControl>

	// 1. Configure mode
	if (hGPIO->Init.Mode <= GPIO_MODE_ANALOG) {
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	795b      	ldrb	r3, [r3, #5]
 8000edc:	2b03      	cmp	r3, #3
 8000ede:	d820      	bhi.n	8000f22 <GPIO_Init+0x5e>
		// The non interrupt mode
		temp = (hGPIO->Init.Mode << (2 * hGPIO->Init.Pin));
 8000ee0:	687b      	ldr	r3, [r7, #4]
 8000ee2:	795b      	ldrb	r3, [r3, #5]
 8000ee4:	461a      	mov	r2, r3
 8000ee6:	687b      	ldr	r3, [r7, #4]
 8000ee8:	791b      	ldrb	r3, [r3, #4]
 8000eea:	005b      	lsls	r3, r3, #1
 8000eec:	fa02 f303 	lsl.w	r3, r2, r3
 8000ef0:	613b      	str	r3, [r7, #16]
		hGPIO->pGPIOx->MODER &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 8000ef2:	687b      	ldr	r3, [r7, #4]
 8000ef4:	681b      	ldr	r3, [r3, #0]
 8000ef6:	681a      	ldr	r2, [r3, #0]
 8000ef8:	687b      	ldr	r3, [r7, #4]
 8000efa:	791b      	ldrb	r3, [r3, #4]
 8000efc:	005b      	lsls	r3, r3, #1
 8000efe:	2103      	movs	r1, #3
 8000f00:	fa01 f303 	lsl.w	r3, r1, r3
 8000f04:	43db      	mvns	r3, r3
 8000f06:	4619      	mov	r1, r3
 8000f08:	687b      	ldr	r3, [r7, #4]
 8000f0a:	681b      	ldr	r3, [r3, #0]
 8000f0c:	400a      	ands	r2, r1
 8000f0e:	601a      	str	r2, [r3, #0]
		hGPIO->pGPIOx->MODER |= temp;
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	681b      	ldr	r3, [r3, #0]
 8000f14:	6819      	ldr	r1, [r3, #0]
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	681b      	ldr	r3, [r3, #0]
 8000f1a:	693a      	ldr	r2, [r7, #16]
 8000f1c:	430a      	orrs	r2, r1
 8000f1e:	601a      	str	r2, [r3, #0]
 8000f20:	e0e4      	b.n	80010ec <GPIO_Init+0x228>
	}else {
		// Interrupt mode
		if (hGPIO->Init.Mode == GPIO_MODE_IT_FALLING) {
 8000f22:	687b      	ldr	r3, [r7, #4]
 8000f24:	795b      	ldrb	r3, [r3, #5]
 8000f26:	2b04      	cmp	r3, #4
 8000f28:	d117      	bne.n	8000f5a <GPIO_Init+0x96>
			// Configure the FTSR
			EXTI->FTSR |= (1 << hGPIO->Init.Pin);
 8000f2a:	4b4b      	ldr	r3, [pc, #300]	@ (8001058 <GPIO_Init+0x194>)
 8000f2c:	68db      	ldr	r3, [r3, #12]
 8000f2e:	687a      	ldr	r2, [r7, #4]
 8000f30:	7912      	ldrb	r2, [r2, #4]
 8000f32:	4611      	mov	r1, r2
 8000f34:	2201      	movs	r2, #1
 8000f36:	408a      	lsls	r2, r1
 8000f38:	4611      	mov	r1, r2
 8000f3a:	4a47      	ldr	r2, [pc, #284]	@ (8001058 <GPIO_Init+0x194>)
 8000f3c:	430b      	orrs	r3, r1
 8000f3e:	60d3      	str	r3, [r2, #12]
			// Clear the corresponding the RTSR
			EXTI->RTSR &= ~(1 << hGPIO->Init.Pin);
 8000f40:	4b45      	ldr	r3, [pc, #276]	@ (8001058 <GPIO_Init+0x194>)
 8000f42:	689b      	ldr	r3, [r3, #8]
 8000f44:	687a      	ldr	r2, [r7, #4]
 8000f46:	7912      	ldrb	r2, [r2, #4]
 8000f48:	4611      	mov	r1, r2
 8000f4a:	2201      	movs	r2, #1
 8000f4c:	408a      	lsls	r2, r1
 8000f4e:	43d2      	mvns	r2, r2
 8000f50:	4611      	mov	r1, r2
 8000f52:	4a41      	ldr	r2, [pc, #260]	@ (8001058 <GPIO_Init+0x194>)
 8000f54:	400b      	ands	r3, r1
 8000f56:	6093      	str	r3, [r2, #8]
 8000f58:	e035      	b.n	8000fc6 <GPIO_Init+0x102>
		}else if (hGPIO->Init.Mode == GPIO_MODE_IT_RISING) {
 8000f5a:	687b      	ldr	r3, [r7, #4]
 8000f5c:	795b      	ldrb	r3, [r3, #5]
 8000f5e:	2b05      	cmp	r3, #5
 8000f60:	d117      	bne.n	8000f92 <GPIO_Init+0xce>
			EXTI->RTSR |= (1 << hGPIO->Init.Pin);
 8000f62:	4b3d      	ldr	r3, [pc, #244]	@ (8001058 <GPIO_Init+0x194>)
 8000f64:	689b      	ldr	r3, [r3, #8]
 8000f66:	687a      	ldr	r2, [r7, #4]
 8000f68:	7912      	ldrb	r2, [r2, #4]
 8000f6a:	4611      	mov	r1, r2
 8000f6c:	2201      	movs	r2, #1
 8000f6e:	408a      	lsls	r2, r1
 8000f70:	4611      	mov	r1, r2
 8000f72:	4a39      	ldr	r2, [pc, #228]	@ (8001058 <GPIO_Init+0x194>)
 8000f74:	430b      	orrs	r3, r1
 8000f76:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << hGPIO->Init.Pin);
 8000f78:	4b37      	ldr	r3, [pc, #220]	@ (8001058 <GPIO_Init+0x194>)
 8000f7a:	68db      	ldr	r3, [r3, #12]
 8000f7c:	687a      	ldr	r2, [r7, #4]
 8000f7e:	7912      	ldrb	r2, [r2, #4]
 8000f80:	4611      	mov	r1, r2
 8000f82:	2201      	movs	r2, #1
 8000f84:	408a      	lsls	r2, r1
 8000f86:	43d2      	mvns	r2, r2
 8000f88:	4611      	mov	r1, r2
 8000f8a:	4a33      	ldr	r2, [pc, #204]	@ (8001058 <GPIO_Init+0x194>)
 8000f8c:	400b      	ands	r3, r1
 8000f8e:	60d3      	str	r3, [r2, #12]
 8000f90:	e019      	b.n	8000fc6 <GPIO_Init+0x102>
		}else if (hGPIO->Init.Mode == GPIO_MODE_IT_RISING_FALLING) {
 8000f92:	687b      	ldr	r3, [r7, #4]
 8000f94:	795b      	ldrb	r3, [r3, #5]
 8000f96:	2b06      	cmp	r3, #6
 8000f98:	d115      	bne.n	8000fc6 <GPIO_Init+0x102>
			EXTI->RTSR |= (1 << hGPIO->Init.Pin);
 8000f9a:	4b2f      	ldr	r3, [pc, #188]	@ (8001058 <GPIO_Init+0x194>)
 8000f9c:	689b      	ldr	r3, [r3, #8]
 8000f9e:	687a      	ldr	r2, [r7, #4]
 8000fa0:	7912      	ldrb	r2, [r2, #4]
 8000fa2:	4611      	mov	r1, r2
 8000fa4:	2201      	movs	r2, #1
 8000fa6:	408a      	lsls	r2, r1
 8000fa8:	4611      	mov	r1, r2
 8000faa:	4a2b      	ldr	r2, [pc, #172]	@ (8001058 <GPIO_Init+0x194>)
 8000fac:	430b      	orrs	r3, r1
 8000fae:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << hGPIO->Init.Pin);
 8000fb0:	4b29      	ldr	r3, [pc, #164]	@ (8001058 <GPIO_Init+0x194>)
 8000fb2:	68db      	ldr	r3, [r3, #12]
 8000fb4:	687a      	ldr	r2, [r7, #4]
 8000fb6:	7912      	ldrb	r2, [r2, #4]
 8000fb8:	4611      	mov	r1, r2
 8000fba:	2201      	movs	r2, #1
 8000fbc:	408a      	lsls	r2, r1
 8000fbe:	4611      	mov	r1, r2
 8000fc0:	4a25      	ldr	r2, [pc, #148]	@ (8001058 <GPIO_Init+0x194>)
 8000fc2:	430b      	orrs	r3, r1
 8000fc4:	60d3      	str	r3, [r2, #12]
		}
		// Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t tmp1 = hGPIO->Init.Pin / 4;
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	791b      	ldrb	r3, [r3, #4]
 8000fca:	089b      	lsrs	r3, r3, #2
 8000fcc:	75fb      	strb	r3, [r7, #23]
		uint8_t tmp2 = hGPIO->Init.Pin % 4;
 8000fce:	687b      	ldr	r3, [r7, #4]
 8000fd0:	791b      	ldrb	r3, [r3, #4]
 8000fd2:	f003 0303 	and.w	r3, r3, #3
 8000fd6:	75bb      	strb	r3, [r7, #22]
		uint8_t portCode = GPIO_BASEADDR_TO_CODE(hGPIO->pGPIOx);
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	4a1f      	ldr	r2, [pc, #124]	@ (800105c <GPIO_Init+0x198>)
 8000fde:	4293      	cmp	r3, r2
 8000fe0:	d04e      	beq.n	8001080 <GPIO_Init+0x1bc>
 8000fe2:	687b      	ldr	r3, [r7, #4]
 8000fe4:	681b      	ldr	r3, [r3, #0]
 8000fe6:	4a1e      	ldr	r2, [pc, #120]	@ (8001060 <GPIO_Init+0x19c>)
 8000fe8:	4293      	cmp	r3, r2
 8000fea:	d032      	beq.n	8001052 <GPIO_Init+0x18e>
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	681b      	ldr	r3, [r3, #0]
 8000ff0:	4a1c      	ldr	r2, [pc, #112]	@ (8001064 <GPIO_Init+0x1a0>)
 8000ff2:	4293      	cmp	r3, r2
 8000ff4:	d02b      	beq.n	800104e <GPIO_Init+0x18a>
 8000ff6:	687b      	ldr	r3, [r7, #4]
 8000ff8:	681b      	ldr	r3, [r3, #0]
 8000ffa:	4a1b      	ldr	r2, [pc, #108]	@ (8001068 <GPIO_Init+0x1a4>)
 8000ffc:	4293      	cmp	r3, r2
 8000ffe:	d024      	beq.n	800104a <GPIO_Init+0x186>
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	681b      	ldr	r3, [r3, #0]
 8001004:	4a19      	ldr	r2, [pc, #100]	@ (800106c <GPIO_Init+0x1a8>)
 8001006:	4293      	cmp	r3, r2
 8001008:	d01d      	beq.n	8001046 <GPIO_Init+0x182>
 800100a:	687b      	ldr	r3, [r7, #4]
 800100c:	681b      	ldr	r3, [r3, #0]
 800100e:	4a18      	ldr	r2, [pc, #96]	@ (8001070 <GPIO_Init+0x1ac>)
 8001010:	4293      	cmp	r3, r2
 8001012:	d016      	beq.n	8001042 <GPIO_Init+0x17e>
 8001014:	687b      	ldr	r3, [r7, #4]
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	4a16      	ldr	r2, [pc, #88]	@ (8001074 <GPIO_Init+0x1b0>)
 800101a:	4293      	cmp	r3, r2
 800101c:	d00f      	beq.n	800103e <GPIO_Init+0x17a>
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	4a15      	ldr	r2, [pc, #84]	@ (8001078 <GPIO_Init+0x1b4>)
 8001024:	4293      	cmp	r3, r2
 8001026:	d008      	beq.n	800103a <GPIO_Init+0x176>
 8001028:	687b      	ldr	r3, [r7, #4]
 800102a:	681b      	ldr	r3, [r3, #0]
 800102c:	4a13      	ldr	r2, [pc, #76]	@ (800107c <GPIO_Init+0x1b8>)
 800102e:	4293      	cmp	r3, r2
 8001030:	d101      	bne.n	8001036 <GPIO_Init+0x172>
 8001032:	2308      	movs	r3, #8
 8001034:	e025      	b.n	8001082 <GPIO_Init+0x1be>
 8001036:	2300      	movs	r3, #0
 8001038:	e023      	b.n	8001082 <GPIO_Init+0x1be>
 800103a:	2307      	movs	r3, #7
 800103c:	e021      	b.n	8001082 <GPIO_Init+0x1be>
 800103e:	2306      	movs	r3, #6
 8001040:	e01f      	b.n	8001082 <GPIO_Init+0x1be>
 8001042:	2305      	movs	r3, #5
 8001044:	e01d      	b.n	8001082 <GPIO_Init+0x1be>
 8001046:	2304      	movs	r3, #4
 8001048:	e01b      	b.n	8001082 <GPIO_Init+0x1be>
 800104a:	2303      	movs	r3, #3
 800104c:	e019      	b.n	8001082 <GPIO_Init+0x1be>
 800104e:	2302      	movs	r3, #2
 8001050:	e017      	b.n	8001082 <GPIO_Init+0x1be>
 8001052:	2301      	movs	r3, #1
 8001054:	e015      	b.n	8001082 <GPIO_Init+0x1be>
 8001056:	bf00      	nop
 8001058:	40013c00 	.word	0x40013c00
 800105c:	40020000 	.word	0x40020000
 8001060:	40020400 	.word	0x40020400
 8001064:	40020800 	.word	0x40020800
 8001068:	40020c00 	.word	0x40020c00
 800106c:	40021000 	.word	0x40021000
 8001070:	40021400 	.word	0x40021400
 8001074:	40021800 	.word	0x40021800
 8001078:	40021c00 	.word	0x40021c00
 800107c:	40022000 	.word	0x40022000
 8001080:	2300      	movs	r3, #0
 8001082:	757b      	strb	r3, [r7, #21]
		SYSCFG_PCLK_EN();
 8001084:	4b65      	ldr	r3, [pc, #404]	@ (800121c <GPIO_Init+0x358>)
 8001086:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001088:	4a64      	ldr	r2, [pc, #400]	@ (800121c <GPIO_Init+0x358>)
 800108a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800108e:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[tmp1] &= ~(0xF << (tmp2 * 4)); // Clear bits first
 8001090:	4a63      	ldr	r2, [pc, #396]	@ (8001220 <GPIO_Init+0x35c>)
 8001092:	7dfb      	ldrb	r3, [r7, #23]
 8001094:	3302      	adds	r3, #2
 8001096:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800109a:	7dbb      	ldrb	r3, [r7, #22]
 800109c:	009b      	lsls	r3, r3, #2
 800109e:	210f      	movs	r1, #15
 80010a0:	fa01 f303 	lsl.w	r3, r1, r3
 80010a4:	43db      	mvns	r3, r3
 80010a6:	4618      	mov	r0, r3
 80010a8:	495d      	ldr	r1, [pc, #372]	@ (8001220 <GPIO_Init+0x35c>)
 80010aa:	7dfb      	ldrb	r3, [r7, #23]
 80010ac:	4002      	ands	r2, r0
 80010ae:	3302      	adds	r3, #2
 80010b0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		SYSCFG->EXTICR[tmp1] |= portCode << (tmp2 * 4);
 80010b4:	4a5a      	ldr	r2, [pc, #360]	@ (8001220 <GPIO_Init+0x35c>)
 80010b6:	7dfb      	ldrb	r3, [r7, #23]
 80010b8:	3302      	adds	r3, #2
 80010ba:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80010be:	7d79      	ldrb	r1, [r7, #21]
 80010c0:	7dbb      	ldrb	r3, [r7, #22]
 80010c2:	009b      	lsls	r3, r3, #2
 80010c4:	fa01 f303 	lsl.w	r3, r1, r3
 80010c8:	4618      	mov	r0, r3
 80010ca:	4955      	ldr	r1, [pc, #340]	@ (8001220 <GPIO_Init+0x35c>)
 80010cc:	7dfb      	ldrb	r3, [r7, #23]
 80010ce:	4302      	orrs	r2, r0
 80010d0:	3302      	adds	r3, #2
 80010d2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// Enable the EXTI Interrupt delivery using IMR
		EXTI->IMR |= 1 << hGPIO->Init.Pin;
 80010d6:	4b53      	ldr	r3, [pc, #332]	@ (8001224 <GPIO_Init+0x360>)
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	687a      	ldr	r2, [r7, #4]
 80010dc:	7912      	ldrb	r2, [r2, #4]
 80010de:	4611      	mov	r1, r2
 80010e0:	2201      	movs	r2, #1
 80010e2:	408a      	lsls	r2, r1
 80010e4:	4611      	mov	r1, r2
 80010e6:	4a4f      	ldr	r2, [pc, #316]	@ (8001224 <GPIO_Init+0x360>)
 80010e8:	430b      	orrs	r3, r1
 80010ea:	6013      	str	r3, [r2, #0]
	}

	// 2. Configure speed
	temp = ((hGPIO->Init.Speed) << (2 * hGPIO->Init.Pin));
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	79db      	ldrb	r3, [r3, #7]
 80010f0:	461a      	mov	r2, r3
 80010f2:	687b      	ldr	r3, [r7, #4]
 80010f4:	791b      	ldrb	r3, [r3, #4]
 80010f6:	005b      	lsls	r3, r3, #1
 80010f8:	fa02 f303 	lsl.w	r3, r2, r3
 80010fc:	613b      	str	r3, [r7, #16]
	hGPIO->pGPIOx->OSPEEDR &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	689a      	ldr	r2, [r3, #8]
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	791b      	ldrb	r3, [r3, #4]
 8001108:	005b      	lsls	r3, r3, #1
 800110a:	2103      	movs	r1, #3
 800110c:	fa01 f303 	lsl.w	r3, r1, r3
 8001110:	43db      	mvns	r3, r3
 8001112:	4619      	mov	r1, r3
 8001114:	687b      	ldr	r3, [r7, #4]
 8001116:	681b      	ldr	r3, [r3, #0]
 8001118:	400a      	ands	r2, r1
 800111a:	609a      	str	r2, [r3, #8]
	hGPIO->pGPIOx->OSPEEDR |= temp;
 800111c:	687b      	ldr	r3, [r7, #4]
 800111e:	681b      	ldr	r3, [r3, #0]
 8001120:	6899      	ldr	r1, [r3, #8]
 8001122:	687b      	ldr	r3, [r7, #4]
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	693a      	ldr	r2, [r7, #16]
 8001128:	430a      	orrs	r2, r1
 800112a:	609a      	str	r2, [r3, #8]

	// 3. Configure pull settings
	temp = (hGPIO->Init.Pull) << (2 * hGPIO->Init.Pin);
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	799b      	ldrb	r3, [r3, #6]
 8001130:	461a      	mov	r2, r3
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	791b      	ldrb	r3, [r3, #4]
 8001136:	005b      	lsls	r3, r3, #1
 8001138:	fa02 f303 	lsl.w	r3, r2, r3
 800113c:	613b      	str	r3, [r7, #16]
	hGPIO->pGPIOx->PUPDR &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 800113e:	687b      	ldr	r3, [r7, #4]
 8001140:	681b      	ldr	r3, [r3, #0]
 8001142:	68da      	ldr	r2, [r3, #12]
 8001144:	687b      	ldr	r3, [r7, #4]
 8001146:	791b      	ldrb	r3, [r3, #4]
 8001148:	005b      	lsls	r3, r3, #1
 800114a:	2103      	movs	r1, #3
 800114c:	fa01 f303 	lsl.w	r3, r1, r3
 8001150:	43db      	mvns	r3, r3
 8001152:	4619      	mov	r1, r3
 8001154:	687b      	ldr	r3, [r7, #4]
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	400a      	ands	r2, r1
 800115a:	60da      	str	r2, [r3, #12]
	hGPIO->pGPIOx->PUPDR |= temp;
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	68d9      	ldr	r1, [r3, #12]
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	681b      	ldr	r3, [r3, #0]
 8001166:	693a      	ldr	r2, [r7, #16]
 8001168:	430a      	orrs	r2, r1
 800116a:	60da      	str	r2, [r3, #12]

	// 4. Configure OPType
	temp = (hGPIO->Init.OPType) << hGPIO->Init.Pin;
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	7a1b      	ldrb	r3, [r3, #8]
 8001170:	461a      	mov	r2, r3
 8001172:	687b      	ldr	r3, [r7, #4]
 8001174:	791b      	ldrb	r3, [r3, #4]
 8001176:	fa02 f303 	lsl.w	r3, r2, r3
 800117a:	613b      	str	r3, [r7, #16]
	hGPIO->pGPIOx->OTYPER &= ~(0x1 << hGPIO->Init.Pin); // clearing
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	685a      	ldr	r2, [r3, #4]
 8001182:	687b      	ldr	r3, [r7, #4]
 8001184:	791b      	ldrb	r3, [r3, #4]
 8001186:	4619      	mov	r1, r3
 8001188:	2301      	movs	r3, #1
 800118a:	408b      	lsls	r3, r1
 800118c:	43db      	mvns	r3, r3
 800118e:	4619      	mov	r1, r3
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	400a      	ands	r2, r1
 8001196:	605a      	str	r2, [r3, #4]
	hGPIO->pGPIOx->OTYPER |= temp;
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	6859      	ldr	r1, [r3, #4]
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	693a      	ldr	r2, [r7, #16]
 80011a4:	430a      	orrs	r2, r1
 80011a6:	605a      	str	r2, [r3, #4]

	// 5. Configure the alternate function
	if (hGPIO->Init.Mode == GPIO_MODE_AF) {
 80011a8:	687b      	ldr	r3, [r7, #4]
 80011aa:	795b      	ldrb	r3, [r3, #5]
 80011ac:	2b02      	cmp	r3, #2
 80011ae:	d131      	bne.n	8001214 <GPIO_Init+0x350>
		uint8_t temp1, temp2;

		temp1 = hGPIO->Init.Pin / 8; // AFR[0] or AFR[1]
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	791b      	ldrb	r3, [r3, #4]
 80011b4:	08db      	lsrs	r3, r3, #3
 80011b6:	73fb      	strb	r3, [r7, #15]
		temp2 = hGPIO->Init.Pin % 8; // Position in AFR register
 80011b8:	687b      	ldr	r3, [r7, #4]
 80011ba:	791b      	ldrb	r3, [r3, #4]
 80011bc:	f003 0307 	and.w	r3, r3, #7
 80011c0:	73bb      	strb	r3, [r7, #14]
		hGPIO->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // clearing
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	681b      	ldr	r3, [r3, #0]
 80011c6:	7bfa      	ldrb	r2, [r7, #15]
 80011c8:	3208      	adds	r2, #8
 80011ca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80011ce:	7bbb      	ldrb	r3, [r7, #14]
 80011d0:	009b      	lsls	r3, r3, #2
 80011d2:	220f      	movs	r2, #15
 80011d4:	fa02 f303 	lsl.w	r3, r2, r3
 80011d8:	43db      	mvns	r3, r3
 80011da:	4618      	mov	r0, r3
 80011dc:	687b      	ldr	r3, [r7, #4]
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	7bfa      	ldrb	r2, [r7, #15]
 80011e2:	4001      	ands	r1, r0
 80011e4:	3208      	adds	r2, #8
 80011e6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		hGPIO->pGPIOx->AFR[temp1] |= (hGPIO->Init.Alternate << (4 * temp2));
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	7bfa      	ldrb	r2, [r7, #15]
 80011f0:	3208      	adds	r2, #8
 80011f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	7a5b      	ldrb	r3, [r3, #9]
 80011fa:	461a      	mov	r2, r3
 80011fc:	7bbb      	ldrb	r3, [r7, #14]
 80011fe:	009b      	lsls	r3, r3, #2
 8001200:	fa02 f303 	lsl.w	r3, r2, r3
 8001204:	4618      	mov	r0, r3
 8001206:	687b      	ldr	r3, [r7, #4]
 8001208:	681b      	ldr	r3, [r3, #0]
 800120a:	7bfa      	ldrb	r2, [r7, #15]
 800120c:	4301      	orrs	r1, r0
 800120e:	3208      	adds	r2, #8
 8001210:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8001214:	bf00      	nop
 8001216:	3718      	adds	r7, #24
 8001218:	46bd      	mov	sp, r7
 800121a:	bd80      	pop	{r7, pc}
 800121c:	40023800 	.word	0x40023800
 8001220:	40013800 	.word	0x40013800
 8001224:	40013c00 	.word	0x40013c00

08001228 <RCC_GetPCLK1_Value>:
 * @retval uint32_t PCLK1 frequency in Hz, or 0 if an error occurs.
 * @note   Assumes HSI = 16 MHz, HSE = 8 MHz, or PLL output as system clock source.
 *         Uses RCC_CFGR to determine clock source, AHB, and APB1 prescalers.
 */
uint32_t RCC_GetPCLK1_Value(void)
{
 8001228:	b580      	push	{r7, lr}
 800122a:	b084      	sub	sp, #16
 800122c:	af00      	add	r7, sp, #0
    uint32_t PCLK1_value, systemClock;
    uint8_t clockSrc, temp, AHBP_value, APB1P_value;

    // Extract the clock source bits (bits 2:3 of RCC->CFGR)
    clockSrc = ((RCC->CFGR >> 2) & 0x3);
 800122e:	4b24      	ldr	r3, [pc, #144]	@ (80012c0 <RCC_GetPCLK1_Value+0x98>)
 8001230:	689b      	ldr	r3, [r3, #8]
 8001232:	089b      	lsrs	r3, r3, #2
 8001234:	b2db      	uxtb	r3, r3
 8001236:	f003 0303 	and.w	r3, r3, #3
 800123a:	727b      	strb	r3, [r7, #9]
    if (clockSrc == 0) {
 800123c:	7a7b      	ldrb	r3, [r7, #9]
 800123e:	2b00      	cmp	r3, #0
 8001240:	d102      	bne.n	8001248 <RCC_GetPCLK1_Value+0x20>
        // Clock source is HSI (internal oscillator)
        systemClock = HSI_FREQ_DEFAULT;  // e.g., 16 MHz
 8001242:	4b20      	ldr	r3, [pc, #128]	@ (80012c4 <RCC_GetPCLK1_Value+0x9c>)
 8001244:	60fb      	str	r3, [r7, #12]
 8001246:	e008      	b.n	800125a <RCC_GetPCLK1_Value+0x32>
    } else if (clockSrc == 1) {
 8001248:	7a7b      	ldrb	r3, [r7, #9]
 800124a:	2b01      	cmp	r3, #1
 800124c:	d102      	bne.n	8001254 <RCC_GetPCLK1_Value+0x2c>
        // Clock source is HSE (external oscillator)
        systemClock = HSE_FREQ_DEFAULT;  // e.g., 8 MHz
 800124e:	4b1e      	ldr	r3, [pc, #120]	@ (80012c8 <RCC_GetPCLK1_Value+0xa0>)
 8001250:	60fb      	str	r3, [r7, #12]
 8001252:	e002      	b.n	800125a <RCC_GetPCLK1_Value+0x32>
    } else {
        // Clock source is PLL, so get the PLL output frequency
        systemClock = RCC_GetPLLOutputClock();
 8001254:	f000 f894 	bl	8001380 <RCC_GetPLLOutputClock>
 8001258:	60f8      	str	r0, [r7, #12]
    }

    // Get the AHB prescaler value from RCC->CFGR (bits 4:7)
    temp = ((RCC->CFGR >> 4) & 0xF);
 800125a:	4b19      	ldr	r3, [pc, #100]	@ (80012c0 <RCC_GetPCLK1_Value+0x98>)
 800125c:	689b      	ldr	r3, [r3, #8]
 800125e:	091b      	lsrs	r3, r3, #4
 8001260:	b2db      	uxtb	r3, r3
 8001262:	f003 030f 	and.w	r3, r3, #15
 8001266:	723b      	strb	r3, [r7, #8]
    if (temp < 8) {
 8001268:	7a3b      	ldrb	r3, [r7, #8]
 800126a:	2b07      	cmp	r3, #7
 800126c:	d802      	bhi.n	8001274 <RCC_GetPCLK1_Value+0x4c>
        // No division; AHB clock is equal to system clock
        AHBP_value = 1;
 800126e:	2301      	movs	r3, #1
 8001270:	72fb      	strb	r3, [r7, #11]
 8001272:	e005      	b.n	8001280 <RCC_GetPCLK1_Value+0x58>
    } else {
        // Division factor is determined from the AHP_Prescaler array.
        AHBP_value = AHP_Prescaler[temp - 8];
 8001274:	7a3b      	ldrb	r3, [r7, #8]
 8001276:	3b08      	subs	r3, #8
 8001278:	4a14      	ldr	r2, [pc, #80]	@ (80012cc <RCC_GetPCLK1_Value+0xa4>)
 800127a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800127e:	72fb      	strb	r3, [r7, #11]
    }

    // Get the APB1 prescaler value from RCC->CFGR (bits 10:12)
    temp = ((RCC->CFGR >> 10) & 0x7);
 8001280:	4b0f      	ldr	r3, [pc, #60]	@ (80012c0 <RCC_GetPCLK1_Value+0x98>)
 8001282:	689b      	ldr	r3, [r3, #8]
 8001284:	0a9b      	lsrs	r3, r3, #10
 8001286:	b2db      	uxtb	r3, r3
 8001288:	f003 0307 	and.w	r3, r3, #7
 800128c:	723b      	strb	r3, [r7, #8]
    if (temp < 4) {
 800128e:	7a3b      	ldrb	r3, [r7, #8]
 8001290:	2b03      	cmp	r3, #3
 8001292:	d802      	bhi.n	800129a <RCC_GetPCLK1_Value+0x72>
        // No division; APB1 clock is equal to AHB clock
        APB1P_value = 1;
 8001294:	2301      	movs	r3, #1
 8001296:	72bb      	strb	r3, [r7, #10]
 8001298:	e004      	b.n	80012a4 <RCC_GetPCLK1_Value+0x7c>
    } else {
        // Division factor is determined from the APB_Prescaler array.
        APB1P_value = APB_Prescaler[temp - 4];
 800129a:	7a3b      	ldrb	r3, [r7, #8]
 800129c:	3b04      	subs	r3, #4
 800129e:	4a0c      	ldr	r2, [pc, #48]	@ (80012d0 <RCC_GetPCLK1_Value+0xa8>)
 80012a0:	5cd3      	ldrb	r3, [r2, r3]
 80012a2:	72bb      	strb	r3, [r7, #10]
    }

    // Compute PCLK1: First, divide the system clock by the AHB prescaler,
    // then divide that result by the APB1 prescaler.
    PCLK1_value = (systemClock / AHBP_value) / APB1P_value;
 80012a4:	7afb      	ldrb	r3, [r7, #11]
 80012a6:	68fa      	ldr	r2, [r7, #12]
 80012a8:	fbb2 f2f3 	udiv	r2, r2, r3
 80012ac:	7abb      	ldrb	r3, [r7, #10]
 80012ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80012b2:	607b      	str	r3, [r7, #4]

    return PCLK1_value;
 80012b4:	687b      	ldr	r3, [r7, #4]
}
 80012b6:	4618      	mov	r0, r3
 80012b8:	3710      	adds	r7, #16
 80012ba:	46bd      	mov	sp, r7
 80012bc:	bd80      	pop	{r7, pc}
 80012be:	bf00      	nop
 80012c0:	40023800 	.word	0x40023800
 80012c4:	00f42400 	.word	0x00f42400
 80012c8:	007a1200 	.word	0x007a1200
 80012cc:	20000000 	.word	0x20000000
 80012d0:	20000010 	.word	0x20000010

080012d4 <RCC_GetPCLK2_Value>:
 * @retval uint32_t PCLK2 frequency in Hz, or 0 if an error occurs.
 * @note   Assumes HSI = 16 MHz, HSE = 8 MHz, or PLL output as system clock source.
 *         Uses RCC_CFGR to determine clock source, AHB, and APB2 prescalers.
 */
uint32_t RCC_GetPCLK2_Value(void)
{
 80012d4:	b580      	push	{r7, lr}
 80012d6:	b084      	sub	sp, #16
 80012d8:	af00      	add	r7, sp, #0
    uint32_t PCLK2_value, systemClock;
    uint8_t clockSrc, temp, AHBP_value, APB2P_value;

    // Determine system clock source (bits 2:3 of RCC->CFGR)
    clockSrc = ((RCC->CFGR >> 2) & 0x3);
 80012da:	4b24      	ldr	r3, [pc, #144]	@ (800136c <RCC_GetPCLK2_Value+0x98>)
 80012dc:	689b      	ldr	r3, [r3, #8]
 80012de:	089b      	lsrs	r3, r3, #2
 80012e0:	b2db      	uxtb	r3, r3
 80012e2:	f003 0303 	and.w	r3, r3, #3
 80012e6:	727b      	strb	r3, [r7, #9]
    if (clockSrc == 0) {
 80012e8:	7a7b      	ldrb	r3, [r7, #9]
 80012ea:	2b00      	cmp	r3, #0
 80012ec:	d102      	bne.n	80012f4 <RCC_GetPCLK2_Value+0x20>
        systemClock = HSI_FREQ_DEFAULT;  // e.g., 16 MHz
 80012ee:	4b20      	ldr	r3, [pc, #128]	@ (8001370 <RCC_GetPCLK2_Value+0x9c>)
 80012f0:	60fb      	str	r3, [r7, #12]
 80012f2:	e008      	b.n	8001306 <RCC_GetPCLK2_Value+0x32>
    } else if (clockSrc == 1) {
 80012f4:	7a7b      	ldrb	r3, [r7, #9]
 80012f6:	2b01      	cmp	r3, #1
 80012f8:	d102      	bne.n	8001300 <RCC_GetPCLK2_Value+0x2c>
        systemClock = HSE_FREQ_DEFAULT;  // e.g., 8 MHz
 80012fa:	4b1e      	ldr	r3, [pc, #120]	@ (8001374 <RCC_GetPCLK2_Value+0xa0>)
 80012fc:	60fb      	str	r3, [r7, #12]
 80012fe:	e002      	b.n	8001306 <RCC_GetPCLK2_Value+0x32>
    } else {
        systemClock = RCC_GetPLLOutputClock();
 8001300:	f000 f83e 	bl	8001380 <RCC_GetPLLOutputClock>
 8001304:	60f8      	str	r0, [r7, #12]
    }

    // Determine AHB prescaler (bits 4:7 of RCC->CFGR)
    temp = ((RCC->CFGR >> 4) & 0xF);
 8001306:	4b19      	ldr	r3, [pc, #100]	@ (800136c <RCC_GetPCLK2_Value+0x98>)
 8001308:	689b      	ldr	r3, [r3, #8]
 800130a:	091b      	lsrs	r3, r3, #4
 800130c:	b2db      	uxtb	r3, r3
 800130e:	f003 030f 	and.w	r3, r3, #15
 8001312:	723b      	strb	r3, [r7, #8]
    if (temp < 8) {
 8001314:	7a3b      	ldrb	r3, [r7, #8]
 8001316:	2b07      	cmp	r3, #7
 8001318:	d802      	bhi.n	8001320 <RCC_GetPCLK2_Value+0x4c>
        AHBP_value = 1;
 800131a:	2301      	movs	r3, #1
 800131c:	72fb      	strb	r3, [r7, #11]
 800131e:	e005      	b.n	800132c <RCC_GetPCLK2_Value+0x58>
    } else {
        AHBP_value = AHP_Prescaler[temp - 8];
 8001320:	7a3b      	ldrb	r3, [r7, #8]
 8001322:	3b08      	subs	r3, #8
 8001324:	4a14      	ldr	r2, [pc, #80]	@ (8001378 <RCC_GetPCLK2_Value+0xa4>)
 8001326:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800132a:	72fb      	strb	r3, [r7, #11]
    }

    // Determine APB2 prescaler (bits 13:15 of RCC->CFGR)
    temp = ((RCC->CFGR >> 13) & 0x7);
 800132c:	4b0f      	ldr	r3, [pc, #60]	@ (800136c <RCC_GetPCLK2_Value+0x98>)
 800132e:	689b      	ldr	r3, [r3, #8]
 8001330:	0b5b      	lsrs	r3, r3, #13
 8001332:	b2db      	uxtb	r3, r3
 8001334:	f003 0307 	and.w	r3, r3, #7
 8001338:	723b      	strb	r3, [r7, #8]
    if (temp < 4) {
 800133a:	7a3b      	ldrb	r3, [r7, #8]
 800133c:	2b03      	cmp	r3, #3
 800133e:	d802      	bhi.n	8001346 <RCC_GetPCLK2_Value+0x72>
        APB2P_value = 1;
 8001340:	2301      	movs	r3, #1
 8001342:	72bb      	strb	r3, [r7, #10]
 8001344:	e004      	b.n	8001350 <RCC_GetPCLK2_Value+0x7c>
    } else {
        APB2P_value = APB_Prescaler[temp - 4];
 8001346:	7a3b      	ldrb	r3, [r7, #8]
 8001348:	3b04      	subs	r3, #4
 800134a:	4a0c      	ldr	r2, [pc, #48]	@ (800137c <RCC_GetPCLK2_Value+0xa8>)
 800134c:	5cd3      	ldrb	r3, [r2, r3]
 800134e:	72bb      	strb	r3, [r7, #10]
    }

    // Calculate PCLK2 by dividing the system clock by the AHB prescaler, then by the APB2 prescaler.
    PCLK2_value = (systemClock / AHBP_value) / APB2P_value;
 8001350:	7afb      	ldrb	r3, [r7, #11]
 8001352:	68fa      	ldr	r2, [r7, #12]
 8001354:	fbb2 f2f3 	udiv	r2, r2, r3
 8001358:	7abb      	ldrb	r3, [r7, #10]
 800135a:	fbb2 f3f3 	udiv	r3, r2, r3
 800135e:	607b      	str	r3, [r7, #4]

    return PCLK2_value;
 8001360:	687b      	ldr	r3, [r7, #4]
}
 8001362:	4618      	mov	r0, r3
 8001364:	3710      	adds	r7, #16
 8001366:	46bd      	mov	sp, r7
 8001368:	bd80      	pop	{r7, pc}
 800136a:	bf00      	nop
 800136c:	40023800 	.word	0x40023800
 8001370:	00f42400 	.word	0x00f42400
 8001374:	007a1200 	.word	0x007a1200
 8001378:	20000000 	.word	0x20000000
 800137c:	20000010 	.word	0x20000010

08001380 <RCC_GetPLLOutputClock>:


uint32_t  RCC_GetPLLOutputClock()
{
 8001380:	b480      	push	{r7}
 8001382:	af00      	add	r7, sp, #0
	return 0;
 8001384:	2300      	movs	r3, #0
}
 8001386:	4618      	mov	r0, r3
 8001388:	46bd      	mov	sp, r7
 800138a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800138e:	4770      	bx	lr

08001390 <USART_PeriClockControl>:
  * @param  pUSARTx Pointer to USART_RegDef_t structure representing USART1, USART2, USART3, or UART4.
  * @param  state ENABLE (1) to enable the clock, DISABLE (0) to disable it.
  * @retval None
  */
void USART_PeriClockControl(USART_RegDef_t *pUSARTx, uint8_t state)
{
 8001390:	b480      	push	{r7}
 8001392:	b083      	sub	sp, #12
 8001394:	af00      	add	r7, sp, #0
 8001396:	6078      	str	r0, [r7, #4]
 8001398:	460b      	mov	r3, r1
 800139a:	70fb      	strb	r3, [r7, #3]
    if(state == ENABLE)
 800139c:	78fb      	ldrb	r3, [r7, #3]
 800139e:	2b01      	cmp	r3, #1
 80013a0:	d12b      	bne.n	80013fa <USART_PeriClockControl+0x6a>
    {
        if(pUSARTx == USART1)
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	4a2d      	ldr	r2, [pc, #180]	@ (800145c <USART_PeriClockControl+0xcc>)
 80013a6:	4293      	cmp	r3, r2
 80013a8:	d106      	bne.n	80013b8 <USART_PeriClockControl+0x28>
        {
            USART1_PCLK_EN();
 80013aa:	4b2d      	ldr	r3, [pc, #180]	@ (8001460 <USART_PeriClockControl+0xd0>)
 80013ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80013ae:	4a2c      	ldr	r2, [pc, #176]	@ (8001460 <USART_PeriClockControl+0xd0>)
 80013b0:	f043 0310 	orr.w	r3, r3, #16
 80013b4:	6453      	str	r3, [r2, #68]	@ 0x44
        else if (pUSARTx == UART4)
        {
            UART4_PCLK_DI();
        }
    }
}
 80013b6:	e04b      	b.n	8001450 <USART_PeriClockControl+0xc0>
        }else if (pUSARTx == USART2)
 80013b8:	687b      	ldr	r3, [r7, #4]
 80013ba:	4a2a      	ldr	r2, [pc, #168]	@ (8001464 <USART_PeriClockControl+0xd4>)
 80013bc:	4293      	cmp	r3, r2
 80013be:	d106      	bne.n	80013ce <USART_PeriClockControl+0x3e>
            USART2_PCLK_EN();
 80013c0:	4b27      	ldr	r3, [pc, #156]	@ (8001460 <USART_PeriClockControl+0xd0>)
 80013c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80013c4:	4a26      	ldr	r2, [pc, #152]	@ (8001460 <USART_PeriClockControl+0xd0>)
 80013c6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80013ca:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80013cc:	e040      	b.n	8001450 <USART_PeriClockControl+0xc0>
        }else if (pUSARTx == USART3)
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	4a25      	ldr	r2, [pc, #148]	@ (8001468 <USART_PeriClockControl+0xd8>)
 80013d2:	4293      	cmp	r3, r2
 80013d4:	d106      	bne.n	80013e4 <USART_PeriClockControl+0x54>
            USART3_PCLK_EN();
 80013d6:	4b22      	ldr	r3, [pc, #136]	@ (8001460 <USART_PeriClockControl+0xd0>)
 80013d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80013da:	4a21      	ldr	r2, [pc, #132]	@ (8001460 <USART_PeriClockControl+0xd0>)
 80013dc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80013e0:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80013e2:	e035      	b.n	8001450 <USART_PeriClockControl+0xc0>
        else if (pUSARTx == UART4)
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	4a21      	ldr	r2, [pc, #132]	@ (800146c <USART_PeriClockControl+0xdc>)
 80013e8:	4293      	cmp	r3, r2
 80013ea:	d131      	bne.n	8001450 <USART_PeriClockControl+0xc0>
            UART4_PCLK_EN();
 80013ec:	4b1c      	ldr	r3, [pc, #112]	@ (8001460 <USART_PeriClockControl+0xd0>)
 80013ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80013f0:	4a1b      	ldr	r2, [pc, #108]	@ (8001460 <USART_PeriClockControl+0xd0>)
 80013f2:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80013f6:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80013f8:	e02a      	b.n	8001450 <USART_PeriClockControl+0xc0>
        if(pUSARTx == USART1)
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	4a17      	ldr	r2, [pc, #92]	@ (800145c <USART_PeriClockControl+0xcc>)
 80013fe:	4293      	cmp	r3, r2
 8001400:	d106      	bne.n	8001410 <USART_PeriClockControl+0x80>
            USART1_PCLK_DI();
 8001402:	4b17      	ldr	r3, [pc, #92]	@ (8001460 <USART_PeriClockControl+0xd0>)
 8001404:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001406:	4a16      	ldr	r2, [pc, #88]	@ (8001460 <USART_PeriClockControl+0xd0>)
 8001408:	f023 0310 	bic.w	r3, r3, #16
 800140c:	6453      	str	r3, [r2, #68]	@ 0x44
}
 800140e:	e01f      	b.n	8001450 <USART_PeriClockControl+0xc0>
        }else if (pUSARTx == USART2)
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	4a14      	ldr	r2, [pc, #80]	@ (8001464 <USART_PeriClockControl+0xd4>)
 8001414:	4293      	cmp	r3, r2
 8001416:	d106      	bne.n	8001426 <USART_PeriClockControl+0x96>
            USART2_PCLK_DI();
 8001418:	4b11      	ldr	r3, [pc, #68]	@ (8001460 <USART_PeriClockControl+0xd0>)
 800141a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800141c:	4a10      	ldr	r2, [pc, #64]	@ (8001460 <USART_PeriClockControl+0xd0>)
 800141e:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8001422:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001424:	e014      	b.n	8001450 <USART_PeriClockControl+0xc0>
        }else if (pUSARTx == USART3)
 8001426:	687b      	ldr	r3, [r7, #4]
 8001428:	4a0f      	ldr	r2, [pc, #60]	@ (8001468 <USART_PeriClockControl+0xd8>)
 800142a:	4293      	cmp	r3, r2
 800142c:	d106      	bne.n	800143c <USART_PeriClockControl+0xac>
            USART3_PCLK_DI();
 800142e:	4b0c      	ldr	r3, [pc, #48]	@ (8001460 <USART_PeriClockControl+0xd0>)
 8001430:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001432:	4a0b      	ldr	r2, [pc, #44]	@ (8001460 <USART_PeriClockControl+0xd0>)
 8001434:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001438:	6413      	str	r3, [r2, #64]	@ 0x40
}
 800143a:	e009      	b.n	8001450 <USART_PeriClockControl+0xc0>
        else if (pUSARTx == UART4)
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	4a0b      	ldr	r2, [pc, #44]	@ (800146c <USART_PeriClockControl+0xdc>)
 8001440:	4293      	cmp	r3, r2
 8001442:	d105      	bne.n	8001450 <USART_PeriClockControl+0xc0>
            UART4_PCLK_DI();
 8001444:	4b06      	ldr	r3, [pc, #24]	@ (8001460 <USART_PeriClockControl+0xd0>)
 8001446:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001448:	4a05      	ldr	r2, [pc, #20]	@ (8001460 <USART_PeriClockControl+0xd0>)
 800144a:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 800144e:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001450:	bf00      	nop
 8001452:	370c      	adds	r7, #12
 8001454:	46bd      	mov	sp, r7
 8001456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800145a:	4770      	bx	lr
 800145c:	40011000 	.word	0x40011000
 8001460:	40023800 	.word	0x40023800
 8001464:	40004400 	.word	0x40004400
 8001468:	40004800 	.word	0x40004800
 800146c:	40004c00 	.word	0x40004c00

08001470 <USART_SetBaudRate>:
  * @param  BaudRate The desired baud rate to set for the USART communication.
  * @retval None
  */

void USART_SetBaudRate(USART_RegDef_t *pUSARTx, uint32_t BaudRate)
{
 8001470:	b580      	push	{r7, lr}
 8001472:	b088      	sub	sp, #32
 8001474:	af00      	add	r7, sp, #0
 8001476:	6078      	str	r0, [r7, #4]
 8001478:	6039      	str	r1, [r7, #0]
    uint32_t PCLKx = 0;          // Variable to store the peripheral clock
 800147a:	2300      	movs	r3, #0
 800147c:	61fb      	str	r3, [r7, #28]
    uint32_t usartdiv = 0;       // Variable to store USARTDIV value
 800147e:	2300      	movs	r3, #0
 8001480:	61bb      	str	r3, [r7, #24]
    uint32_t M_part = 0, F_part = 0; // Variables to store Mantissa and Fraction parts
 8001482:	2300      	movs	r3, #0
 8001484:	613b      	str	r3, [r7, #16]
 8001486:	2300      	movs	r3, #0
 8001488:	617b      	str	r3, [r7, #20]
    uint32_t tempreg = 0;    // Temporary variable to store final BRR value
 800148a:	2300      	movs	r3, #0
 800148c:	60fb      	str	r3, [r7, #12]

    // Step 1: Get the peripheral clock (PCLKx)
    if (pUSARTx == USART1 || pUSARTx == USART6)
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	4a31      	ldr	r2, [pc, #196]	@ (8001558 <USART_SetBaudRate+0xe8>)
 8001492:	4293      	cmp	r3, r2
 8001494:	d003      	beq.n	800149e <USART_SetBaudRate+0x2e>
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	4a30      	ldr	r2, [pc, #192]	@ (800155c <USART_SetBaudRate+0xec>)
 800149a:	4293      	cmp	r3, r2
 800149c:	d103      	bne.n	80014a6 <USART_SetBaudRate+0x36>
    {
        PCLKx = RCC_GetPCLK2_Value(); // For USART1 and USART6, use APB2 clock
 800149e:	f7ff ff19 	bl	80012d4 <RCC_GetPCLK2_Value>
 80014a2:	61f8      	str	r0, [r7, #28]
 80014a4:	e002      	b.n	80014ac <USART_SetBaudRate+0x3c>
    }
    else
    {
        PCLKx = RCC_GetPCLK1_Value(); // For other USARTs, use APB1 clock
 80014a6:	f7ff febf 	bl	8001228 <RCC_GetPCLK1_Value>
 80014aa:	61f8      	str	r0, [r7, #28]
    }

    // Step 2: Check if OVER8 is enabled and calculate USARTDIV accordingly
    if (pUSARTx->CR1 & (1 << USART_CR1_OVER8))
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	68db      	ldr	r3, [r3, #12]
 80014b0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d00b      	beq.n	80014d0 <USART_SetBaudRate+0x60>
    {
        // OVER8 = 1 (over-sampling by 8)
        // Formula: usartdiv = (25 * PCLKx) / (2 * BaudRate)
        usartdiv = ((25 * PCLKx) / (2 * BaudRate));
 80014b8:	69fa      	ldr	r2, [r7, #28]
 80014ba:	4613      	mov	r3, r2
 80014bc:	009b      	lsls	r3, r3, #2
 80014be:	4413      	add	r3, r2
 80014c0:	009a      	lsls	r2, r3, #2
 80014c2:	441a      	add	r2, r3
 80014c4:	683b      	ldr	r3, [r7, #0]
 80014c6:	005b      	lsls	r3, r3, #1
 80014c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80014cc:	61bb      	str	r3, [r7, #24]
 80014ce:	e00a      	b.n	80014e6 <USART_SetBaudRate+0x76>
    }
    else
    {
        // OVER8 = 0 (over-sampling by 16)
        // Formula: usartdiv = (25 * PCLKx) / (4 * BaudRate)
        usartdiv = ((25 * PCLKx) / (4 * BaudRate));
 80014d0:	69fa      	ldr	r2, [r7, #28]
 80014d2:	4613      	mov	r3, r2
 80014d4:	009b      	lsls	r3, r3, #2
 80014d6:	4413      	add	r3, r2
 80014d8:	009a      	lsls	r2, r3, #2
 80014da:	441a      	add	r2, r3
 80014dc:	683b      	ldr	r3, [r7, #0]
 80014de:	009b      	lsls	r3, r3, #2
 80014e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80014e4:	61bb      	str	r3, [r7, #24]
    }

    // Step 3: Calculate the Mantissa part (integer part)
    M_part = usartdiv / 100;   // Integer part of USARTDIV (dividing by 100)
 80014e6:	69bb      	ldr	r3, [r7, #24]
 80014e8:	4a1d      	ldr	r2, [pc, #116]	@ (8001560 <USART_SetBaudRate+0xf0>)
 80014ea:	fba2 2303 	umull	r2, r3, r2, r3
 80014ee:	095b      	lsrs	r3, r3, #5
 80014f0:	613b      	str	r3, [r7, #16]

    // Step 4: Place Mantissa in the appropriate bit positions of BRR
    tempreg |= M_part << 4;    // Shifting the Mantissa part to the correct position in BRR
 80014f2:	693b      	ldr	r3, [r7, #16]
 80014f4:	011b      	lsls	r3, r3, #4
 80014f6:	68fa      	ldr	r2, [r7, #12]
 80014f8:	4313      	orrs	r3, r2
 80014fa:	60fb      	str	r3, [r7, #12]

    // Step 5: Extract the Fraction part (decimal part)
    F_part = (usartdiv - (M_part * 100)); // Fractional part (subtracting the Mantissa)
 80014fc:	693b      	ldr	r3, [r7, #16]
 80014fe:	2264      	movs	r2, #100	@ 0x64
 8001500:	fb02 f303 	mul.w	r3, r2, r3
 8001504:	69ba      	ldr	r2, [r7, #24]
 8001506:	1ad3      	subs	r3, r2, r3
 8001508:	617b      	str	r3, [r7, #20]

    // Step 6: Calculate the fractional value based on OVER8
    if (pUSARTx->CR1 & (1 << USART_CR1_OVER8))
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	68db      	ldr	r3, [r3, #12]
 800150e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8001512:	2b00      	cmp	r3, #0
 8001514:	d00a      	beq.n	800152c <USART_SetBaudRate+0xbc>
    {
        // OVER8 = 1 (oversampling by 8)
        // Formula: F_part = ((F_part * 8) + 50) / 100 & 0x07
        F_part = (((F_part * 8) + 50) / 100) & ((uint8_t)0x07);
 8001516:	697b      	ldr	r3, [r7, #20]
 8001518:	00db      	lsls	r3, r3, #3
 800151a:	3332      	adds	r3, #50	@ 0x32
 800151c:	4a10      	ldr	r2, [pc, #64]	@ (8001560 <USART_SetBaudRate+0xf0>)
 800151e:	fba2 2303 	umull	r2, r3, r2, r3
 8001522:	095b      	lsrs	r3, r3, #5
 8001524:	f003 0307 	and.w	r3, r3, #7
 8001528:	617b      	str	r3, [r7, #20]
 800152a:	e009      	b.n	8001540 <USART_SetBaudRate+0xd0>
    }
    else
    {
        // OVER8 = 0 (oversampling by 16)
        // Formula: F_part = ((F_part * 16) + 50) / 100 & 0x0F
        F_part = (((F_part * 16) + 50) / 100) & ((uint8_t)0x0F);
 800152c:	697b      	ldr	r3, [r7, #20]
 800152e:	011b      	lsls	r3, r3, #4
 8001530:	3332      	adds	r3, #50	@ 0x32
 8001532:	4a0b      	ldr	r2, [pc, #44]	@ (8001560 <USART_SetBaudRate+0xf0>)
 8001534:	fba2 2303 	umull	r2, r3, r2, r3
 8001538:	095b      	lsrs	r3, r3, #5
 800153a:	f003 030f 	and.w	r3, r3, #15
 800153e:	617b      	str	r3, [r7, #20]
    }

    // Step 7: Place Fraction part in the appropriate bit positions of BRR
    tempreg |= F_part;         // Adding the Fraction part to tempreg
 8001540:	68fa      	ldr	r2, [r7, #12]
 8001542:	697b      	ldr	r3, [r7, #20]
 8001544:	4313      	orrs	r3, r2
 8001546:	60fb      	str	r3, [r7, #12]

    // Step 8: Program the final value to USART_BRR
    pUSARTx->BRR = tempreg;    // Set the BRR register to configure the baud rate
 8001548:	687b      	ldr	r3, [r7, #4]
 800154a:	68fa      	ldr	r2, [r7, #12]
 800154c:	609a      	str	r2, [r3, #8]
}
 800154e:	bf00      	nop
 8001550:	3720      	adds	r7, #32
 8001552:	46bd      	mov	sp, r7
 8001554:	bd80      	pop	{r7, pc}
 8001556:	bf00      	nop
 8001558:	40011000 	.word	0x40011000
 800155c:	40011400 	.word	0x40011400
 8001560:	51eb851f 	.word	0x51eb851f

08001564 <USART_InitGPIO>:
  *         - Speed: Fast
  *         - Alternate Function number: 7 (for USART)
  *         - Port/Pin selection based on the USART instance
  */

void USART_InitGPIO(USART_RegDef_t *BaseAddress){
 8001564:	b580      	push	{r7, lr}
 8001566:	b086      	sub	sp, #24
 8001568:	af00      	add	r7, sp, #0
 800156a:	6078      	str	r0, [r7, #4]
	GPIO_HandleTypeDef hGPIO;

	if(BaseAddress == USART2){
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	4a2a      	ldr	r2, [pc, #168]	@ (8001618 <USART_InitGPIO+0xb4>)
 8001570:	4293      	cmp	r3, r2
 8001572:	d118      	bne.n	80015a6 <USART_InitGPIO+0x42>
		hGPIO.pGPIOx = GPIOA;
 8001574:	4b29      	ldr	r3, [pc, #164]	@ (800161c <USART_InitGPIO+0xb8>)
 8001576:	60fb      	str	r3, [r7, #12]
		hGPIO.Init.Pin = GPIO_PIN_2;
 8001578:	2302      	movs	r3, #2
 800157a:	743b      	strb	r3, [r7, #16]
		hGPIO.Init.Mode = GPIO_MODE_AF;
 800157c:	2302      	movs	r3, #2
 800157e:	747b      	strb	r3, [r7, #17]
		hGPIO.Init.Speed = GPIO_SPEED_FAST;
 8001580:	2302      	movs	r3, #2
 8001582:	74fb      	strb	r3, [r7, #19]
		hGPIO.Init.Pull = GPIO_PULLUP;
 8001584:	2301      	movs	r3, #1
 8001586:	74bb      	strb	r3, [r7, #18]
		hGPIO.Init.Alternate = 7;
 8001588:	2307      	movs	r3, #7
 800158a:	757b      	strb	r3, [r7, #21]
		GPIO_Init(&hGPIO);
 800158c:	f107 030c 	add.w	r3, r7, #12
 8001590:	4618      	mov	r0, r3
 8001592:	f7ff fc97 	bl	8000ec4 <GPIO_Init>

		hGPIO.Init.Pin = GPIO_PIN_3;
 8001596:	2303      	movs	r3, #3
 8001598:	743b      	strb	r3, [r7, #16]
		GPIO_Init(&hGPIO);
 800159a:	f107 030c 	add.w	r3, r7, #12
 800159e:	4618      	mov	r0, r3
 80015a0:	f7ff fc90 	bl	8000ec4 <GPIO_Init>
		GPIO_Init(&hGPIO);

		hGPIO.Init.Pin = GPIO_PIN_11;
		GPIO_Init(&hGPIO);
	}
}
 80015a4:	e034      	b.n	8001610 <USART_InitGPIO+0xac>
	else if(BaseAddress == USART1){
 80015a6:	687b      	ldr	r3, [r7, #4]
 80015a8:	4a1d      	ldr	r2, [pc, #116]	@ (8001620 <USART_InitGPIO+0xbc>)
 80015aa:	4293      	cmp	r3, r2
 80015ac:	d116      	bne.n	80015dc <USART_InitGPIO+0x78>
		hGPIO.pGPIOx = GPIOA;
 80015ae:	4b1b      	ldr	r3, [pc, #108]	@ (800161c <USART_InitGPIO+0xb8>)
 80015b0:	60fb      	str	r3, [r7, #12]
		hGPIO.Init.Pin = GPIO_PIN_9;
 80015b2:	2309      	movs	r3, #9
 80015b4:	743b      	strb	r3, [r7, #16]
		hGPIO.Init.Mode = GPIO_MODE_AF;
 80015b6:	2302      	movs	r3, #2
 80015b8:	747b      	strb	r3, [r7, #17]
		hGPIO.Init.Speed = GPIO_SPEED_FAST;
 80015ba:	2302      	movs	r3, #2
 80015bc:	74fb      	strb	r3, [r7, #19]
		hGPIO.Init.Alternate = 7;
 80015be:	2307      	movs	r3, #7
 80015c0:	757b      	strb	r3, [r7, #21]
		GPIO_Init(&hGPIO);
 80015c2:	f107 030c 	add.w	r3, r7, #12
 80015c6:	4618      	mov	r0, r3
 80015c8:	f7ff fc7c 	bl	8000ec4 <GPIO_Init>
		hGPIO.Init.Pin = GPIO_PIN_10;
 80015cc:	230a      	movs	r3, #10
 80015ce:	743b      	strb	r3, [r7, #16]
		GPIO_Init(&hGPIO);
 80015d0:	f107 030c 	add.w	r3, r7, #12
 80015d4:	4618      	mov	r0, r3
 80015d6:	f7ff fc75 	bl	8000ec4 <GPIO_Init>
}
 80015da:	e019      	b.n	8001610 <USART_InitGPIO+0xac>
	else if(BaseAddress == USART3){
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	4a11      	ldr	r2, [pc, #68]	@ (8001624 <USART_InitGPIO+0xc0>)
 80015e0:	4293      	cmp	r3, r2
 80015e2:	d115      	bne.n	8001610 <USART_InitGPIO+0xac>
		hGPIO.pGPIOx = GPIOB;
 80015e4:	4b10      	ldr	r3, [pc, #64]	@ (8001628 <USART_InitGPIO+0xc4>)
 80015e6:	60fb      	str	r3, [r7, #12]
		hGPIO.Init.Pin = GPIO_PIN_10;
 80015e8:	230a      	movs	r3, #10
 80015ea:	743b      	strb	r3, [r7, #16]
		hGPIO.Init.Mode = GPIO_MODE_AF;
 80015ec:	2302      	movs	r3, #2
 80015ee:	747b      	strb	r3, [r7, #17]
		hGPIO.Init.Speed = GPIO_SPEED_FAST;
 80015f0:	2302      	movs	r3, #2
 80015f2:	74fb      	strb	r3, [r7, #19]
		hGPIO.Init.Alternate = 7;
 80015f4:	2307      	movs	r3, #7
 80015f6:	757b      	strb	r3, [r7, #21]
		GPIO_Init(&hGPIO);
 80015f8:	f107 030c 	add.w	r3, r7, #12
 80015fc:	4618      	mov	r0, r3
 80015fe:	f7ff fc61 	bl	8000ec4 <GPIO_Init>
		hGPIO.Init.Pin = GPIO_PIN_11;
 8001602:	230b      	movs	r3, #11
 8001604:	743b      	strb	r3, [r7, #16]
		GPIO_Init(&hGPIO);
 8001606:	f107 030c 	add.w	r3, r7, #12
 800160a:	4618      	mov	r0, r3
 800160c:	f7ff fc5a 	bl	8000ec4 <GPIO_Init>
}
 8001610:	bf00      	nop
 8001612:	3718      	adds	r7, #24
 8001614:	46bd      	mov	sp, r7
 8001616:	bd80      	pop	{r7, pc}
 8001618:	40004400 	.word	0x40004400
 800161c:	40020000 	.word	0x40020000
 8001620:	40011000 	.word	0x40011000
 8001624:	40004800 	.word	0x40004800
 8001628:	40020400 	.word	0x40020400

0800162c <USART_SetParam>:
  * @param  ParityMode: Parity configuration (None, Even, Odd).
  * @param  BaudRate: Desired baud rate for communication.
  * @retval None
  */

void USART_SetParam(USART_HandleTypeDef *USART_Handle, USART_RegDef_t *BaseAddress, uint8_t USART_TX_RX_Mode, uint8_t NoOfStopBits, uint8_t WordLength, uint8_t ParityMode, uint32_t BaudRate){
 800162c:	b580      	push	{r7, lr}
 800162e:	b084      	sub	sp, #16
 8001630:	af00      	add	r7, sp, #0
 8001632:	60f8      	str	r0, [r7, #12]
 8001634:	60b9      	str	r1, [r7, #8]
 8001636:	4611      	mov	r1, r2
 8001638:	461a      	mov	r2, r3
 800163a:	460b      	mov	r3, r1
 800163c:	71fb      	strb	r3, [r7, #7]
 800163e:	4613      	mov	r3, r2
 8001640:	71bb      	strb	r3, [r7, #6]
		USART_Handle->pUSARTx = BaseAddress;
 8001642:	68fb      	ldr	r3, [r7, #12]
 8001644:	68ba      	ldr	r2, [r7, #8]
 8001646:	601a      	str	r2, [r3, #0]
		USART_Handle->Init.Mode = USART_TX_RX_Mode;
 8001648:	68fb      	ldr	r3, [r7, #12]
 800164a:	79fa      	ldrb	r2, [r7, #7]
 800164c:	711a      	strb	r2, [r3, #4]
		USART_Handle->Init.StopBits = NoOfStopBits;
 800164e:	68fb      	ldr	r3, [r7, #12]
 8001650:	79ba      	ldrb	r2, [r7, #6]
 8001652:	739a      	strb	r2, [r3, #14]
		USART_Handle->Init.WordLength = WordLength;
 8001654:	68fb      	ldr	r3, [r7, #12]
 8001656:	7e3a      	ldrb	r2, [r7, #24]
 8001658:	731a      	strb	r2, [r3, #12]
		USART_Handle->Init.ParityControl = ParityMode;
 800165a:	68fb      	ldr	r3, [r7, #12]
 800165c:	7f3a      	ldrb	r2, [r7, #28]
 800165e:	73da      	strb	r2, [r3, #15]
		USART_Handle->Init.BaudRate = BaudRate;
 8001660:	68fb      	ldr	r3, [r7, #12]
 8001662:	6a3a      	ldr	r2, [r7, #32]
 8001664:	609a      	str	r2, [r3, #8]

		USART_InitGPIO(BaseAddress);
 8001666:	68b8      	ldr	r0, [r7, #8]
 8001668:	f7ff ff7c 	bl	8001564 <USART_InitGPIO>
		USART_Init(USART_Handle);
 800166c:	68f8      	ldr	r0, [r7, #12]
 800166e:	f000 f808 	bl	8001682 <USART_Init>
		USART_PeripheralControl(BaseAddress, ENABLE);
 8001672:	2101      	movs	r1, #1
 8001674:	68b8      	ldr	r0, [r7, #8]
 8001676:	f000 f8a9 	bl	80017cc <USART_PeripheralControl>
}
 800167a:	bf00      	nop
 800167c:	3710      	adds	r7, #16
 800167e:	46bd      	mov	sp, r7
 8001680:	bd80      	pop	{r7, pc}

08001682 <USART_Init>:
  * @param  hspi Pointer to an USART_HandleTypeDef structure that contains
  *         the configuration information for the specified USART peripheral.
  * @retval None
  */
void USART_Init(USART_HandleTypeDef *husart)
{
 8001682:	b580      	push	{r7, lr}
 8001684:	b084      	sub	sp, #16
 8001686:	af00      	add	r7, sp, #0
 8001688:	6078      	str	r0, [r7, #4]
	uint32_t tempreg = 0;
 800168a:	2300      	movs	r3, #0
 800168c:	60fb      	str	r3, [r7, #12]

	// Enable peripheral clock
	USART_PeriClockControl(husart->pUSARTx, ENABLE);
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	2101      	movs	r1, #1
 8001694:	4618      	mov	r0, r3
 8001696:	f7ff fe7b 	bl	8001390 <USART_PeriClockControl>

/******************************** Configuration of CR1******************************************/
	// Configure USART mode
	if (husart->Init.Mode == USART_MODE_RX)
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	791b      	ldrb	r3, [r3, #4]
 800169e:	2b01      	cmp	r3, #1
 80016a0:	d108      	bne.n	80016b4 <USART_Init+0x32>
	{
		// Enable Receive field
		tempreg |= (1 << USART_CR1_RE);
 80016a2:	68fb      	ldr	r3, [r7, #12]
 80016a4:	f043 0304 	orr.w	r3, r3, #4
 80016a8:	60fb      	str	r3, [r7, #12]

		// Clear Transmit field
		tempreg &= ~(1 << USART_CR1_TE);
 80016aa:	68fb      	ldr	r3, [r7, #12]
 80016ac:	f023 0308 	bic.w	r3, r3, #8
 80016b0:	60fb      	str	r3, [r7, #12]
 80016b2:	e014      	b.n	80016de <USART_Init+0x5c>
	}else if (husart->Init.Mode == USART_MODE_TX)
 80016b4:	687b      	ldr	r3, [r7, #4]
 80016b6:	791b      	ldrb	r3, [r3, #4]
 80016b8:	2b00      	cmp	r3, #0
 80016ba:	d108      	bne.n	80016ce <USART_Init+0x4c>
	{
		// Enable Transmit field
		tempreg |= (1 << USART_CR1_TE);
 80016bc:	68fb      	ldr	r3, [r7, #12]
 80016be:	f043 0308 	orr.w	r3, r3, #8
 80016c2:	60fb      	str	r3, [r7, #12]

		// Clear Receive field
		tempreg &= ~(1 << USART_CR1_RE);
 80016c4:	68fb      	ldr	r3, [r7, #12]
 80016c6:	f023 0304 	bic.w	r3, r3, #4
 80016ca:	60fb      	str	r3, [r7, #12]
 80016cc:	e007      	b.n	80016de <USART_Init+0x5c>
	}else {
		// Enable Receive field
		tempreg |= (1 << USART_CR1_RE);
 80016ce:	68fb      	ldr	r3, [r7, #12]
 80016d0:	f043 0304 	orr.w	r3, r3, #4
 80016d4:	60fb      	str	r3, [r7, #12]

		// Enable Transmit field
		tempreg |= (1 << USART_CR1_TE);
 80016d6:	68fb      	ldr	r3, [r7, #12]
 80016d8:	f043 0308 	orr.w	r3, r3, #8
 80016dc:	60fb      	str	r3, [r7, #12]
	}

	// Configure Word Length
	tempreg |= husart->Init.WordLength << USART_CR1_M;
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	7b1b      	ldrb	r3, [r3, #12]
 80016e2:	031b      	lsls	r3, r3, #12
 80016e4:	68fa      	ldr	r2, [r7, #12]
 80016e6:	4313      	orrs	r3, r2
 80016e8:	60fb      	str	r3, [r7, #12]

	// Configure parity control bit
	if (husart->Init.ParityControl == USART_PARITY_EVEN)
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	7bdb      	ldrb	r3, [r3, #15]
 80016ee:	2b01      	cmp	r3, #1
 80016f0:	d104      	bne.n	80016fc <USART_Init+0x7a>
	{
		//Implement the code to enable the parity control
		tempreg |= ( 1 << USART_CR1_PCE);
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80016f8:	60fb      	str	r3, [r7, #12]
 80016fa:	e010      	b.n	800171e <USART_Init+0x9c>
	}else if (husart->Init.ParityControl == USART_PARITY_ODD)
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	7bdb      	ldrb	r3, [r3, #15]
 8001700:	2b02      	cmp	r3, #2
 8001702:	d108      	bne.n	8001716 <USART_Init+0x94>
	{
		//Implement the code to enable the parity control
		tempreg |= ( 1 << USART_CR1_PCE);
 8001704:	68fb      	ldr	r3, [r7, #12]
 8001706:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800170a:	60fb      	str	r3, [r7, #12]

		//Implement the code to enable ODD parity
		tempreg |= ( 1 << USART_CR1_PS);
 800170c:	68fb      	ldr	r3, [r7, #12]
 800170e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001712:	60fb      	str	r3, [r7, #12]
 8001714:	e003      	b.n	800171e <USART_Init+0x9c>
	}else {
		// Clear the parity bit
		tempreg &= ~( 1 << USART_CR1_PCE);
 8001716:	68fb      	ldr	r3, [r7, #12]
 8001718:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800171c:	60fb      	str	r3, [r7, #12]
	}
	// Configure Oversampling mode
	tempreg |= husart->Init.Oversampling << USART_CR1_OVER8;
 800171e:	687b      	ldr	r3, [r7, #4]
 8001720:	7b5b      	ldrb	r3, [r3, #13]
 8001722:	03db      	lsls	r3, r3, #15
 8001724:	68fa      	ldr	r2, [r7, #12]
 8001726:	4313      	orrs	r3, r2
 8001728:	60fb      	str	r3, [r7, #12]

	//Program the CR1 register
	husart->pUSARTx->CR1 = tempreg;
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	68fa      	ldr	r2, [r7, #12]
 8001730:	60da      	str	r2, [r3, #12]

/******************************** Configuration of CR2******************************************/
	tempreg = 0;
 8001732:	2300      	movs	r3, #0
 8001734:	60fb      	str	r3, [r7, #12]

	//Implement the code to configure the number of stop bits inserted during USART frame transmission
	tempreg |= husart->Init.StopBits << USART_CR2_STOP;
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	7b9b      	ldrb	r3, [r3, #14]
 800173a:	031b      	lsls	r3, r3, #12
 800173c:	68fa      	ldr	r2, [r7, #12]
 800173e:	4313      	orrs	r3, r2
 8001740:	60fb      	str	r3, [r7, #12]

	// Program the CR2 register
	husart->pUSARTx->CR2 = tempreg;
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	68fa      	ldr	r2, [r7, #12]
 8001748:	611a      	str	r2, [r3, #16]

/******************************** Configuration of CR3******************************************/
	tempreg=0;
 800174a:	2300      	movs	r3, #0
 800174c:	60fb      	str	r3, [r7, #12]

	//Configuration of USART hardware flow control
	if (husart->Init.HWFlowControl == USART_HW_CTS)
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	7c1b      	ldrb	r3, [r3, #16]
 8001752:	2b01      	cmp	r3, #1
 8001754:	d108      	bne.n	8001768 <USART_Init+0xe6>
	{
		//Implement the code to enable CTS flow control
		tempreg |= ( 1 << USART_CR3_CTSE);
 8001756:	68fb      	ldr	r3, [r7, #12]
 8001758:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800175c:	60fb      	str	r3, [r7, #12]

		// Clear the RTS flow control
		tempreg &= ~( 1 << USART_CR3_RTSE);
 800175e:	68fb      	ldr	r3, [r7, #12]
 8001760:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001764:	60fb      	str	r3, [r7, #12]
 8001766:	e021      	b.n	80017ac <USART_Init+0x12a>
	}else if (husart->Init.HWFlowControl == USART_HW_RTS)
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	7c1b      	ldrb	r3, [r3, #16]
 800176c:	2b02      	cmp	r3, #2
 800176e:	d108      	bne.n	8001782 <USART_Init+0x100>
	{
		//Implement the code to enable RTS flow control
		tempreg |= ( 1 << USART_CR3_RTSE);
 8001770:	68fb      	ldr	r3, [r7, #12]
 8001772:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001776:	60fb      	str	r3, [r7, #12]

		// Clear the CTS flow control
		tempreg &= ~( 1 << USART_CR3_CTSE);
 8001778:	68fb      	ldr	r3, [r7, #12]
 800177a:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800177e:	60fb      	str	r3, [r7, #12]
 8001780:	e014      	b.n	80017ac <USART_Init+0x12a>
	}else if (husart->Init.HWFlowControl == USART_HW_CTS_RTS) {
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	7c1b      	ldrb	r3, [r3, #16]
 8001786:	2b03      	cmp	r3, #3
 8001788:	d108      	bne.n	800179c <USART_Init+0x11a>
		//Implement the code to enable both CTS and RTS Flow control
		tempreg |= ( 1 << USART_CR3_CTSE);
 800178a:	68fb      	ldr	r3, [r7, #12]
 800178c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001790:	60fb      	str	r3, [r7, #12]
		tempreg |= ( 1 << USART_CR3_RTSE);
 8001792:	68fb      	ldr	r3, [r7, #12]
 8001794:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001798:	60fb      	str	r3, [r7, #12]
 800179a:	e007      	b.n	80017ac <USART_Init+0x12a>
	}else {
		//Implement the code to enable both CTS and RTS Flow control
		tempreg &= ~( 1 << USART_CR3_CTSE);
 800179c:	68fb      	ldr	r3, [r7, #12]
 800179e:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80017a2:	60fb      	str	r3, [r7, #12]
		tempreg &= ~( 1 << USART_CR3_RTSE);
 80017a4:	68fb      	ldr	r3, [r7, #12]
 80017a6:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80017aa:	60fb      	str	r3, [r7, #12]
	}
	husart->pUSARTx->CR3 = tempreg;
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	68fa      	ldr	r2, [r7, #12]
 80017b2:	615a      	str	r2, [r3, #20]

/******************************** Configuration of BRR(Baudrate register)******************************************/

	//Implement the code to configure the baud rate
	USART_SetBaudRate(husart->pUSARTx,husart->Init.BaudRate);
 80017b4:	687b      	ldr	r3, [r7, #4]
 80017b6:	681a      	ldr	r2, [r3, #0]
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	689b      	ldr	r3, [r3, #8]
 80017bc:	4619      	mov	r1, r3
 80017be:	4610      	mov	r0, r2
 80017c0:	f7ff fe56 	bl	8001470 <USART_SetBaudRate>
}
 80017c4:	bf00      	nop
 80017c6:	3710      	adds	r7, #16
 80017c8:	46bd      	mov	sp, r7
 80017ca:	bd80      	pop	{r7, pc}

080017cc <USART_PeripheralControl>:
  * @param  pUSARTx Pointer to the USART peripheral (USART1, USART2, USART3 and UART4).
  * @param  controlState ENABLE (1) to enable the Peripheral, DISABLE (0) to disable it.
  * @retval None
  */
void USART_PeripheralControl(USART_RegDef_t *pUSARTx, uint8_t state)
{
 80017cc:	b480      	push	{r7}
 80017ce:	b083      	sub	sp, #12
 80017d0:	af00      	add	r7, sp, #0
 80017d2:	6078      	str	r0, [r7, #4]
 80017d4:	460b      	mov	r3, r1
 80017d6:	70fb      	strb	r3, [r7, #3]
    if (state == ENABLE)
 80017d8:	78fb      	ldrb	r3, [r7, #3]
 80017da:	2b01      	cmp	r3, #1
 80017dc:	d106      	bne.n	80017ec <USART_PeripheralControl+0x20>
    {
        pUSARTx->CR1 |= (1 << USART_CR1_UE);  // Set the UE bit to enable the USART
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	68db      	ldr	r3, [r3, #12]
 80017e2:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	60da      	str	r2, [r3, #12]
    }
    else
    {
        pUSARTx->CR1 &= ~(1 << USART_CR1_UE); // Clear the UE bit to disable the USART
    }
}
 80017ea:	e005      	b.n	80017f8 <USART_PeripheralControl+0x2c>
        pUSARTx->CR1 &= ~(1 << USART_CR1_UE); // Clear the UE bit to disable the USART
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	68db      	ldr	r3, [r3, #12]
 80017f0:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	60da      	str	r2, [r3, #12]
}
 80017f8:	bf00      	nop
 80017fa:	370c      	adds	r7, #12
 80017fc:	46bd      	mov	sp, r7
 80017fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001802:	4770      	bx	lr

08001804 <USART_GetFlagStatus>:
  * @param  pUSARTx Pointer to the USART peripheral (USART1, USART2, USART3 and UART4).
  * @param  FlagName The flag to check
  * @retval FLAG_SET(1) or FLAG_RESET(0).
  */
uint8_t USART_GetFlagStatus(USART_RegDef_t *pUSARTx, uint8_t FlagName)
{
 8001804:	b480      	push	{r7}
 8001806:	b083      	sub	sp, #12
 8001808:	af00      	add	r7, sp, #0
 800180a:	6078      	str	r0, [r7, #4]
 800180c:	460b      	mov	r3, r1
 800180e:	70fb      	strb	r3, [r7, #3]
	return (pUSARTx->SR & FlagName) ? FLAG_SET : FLAG_RESET;
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	681a      	ldr	r2, [r3, #0]
 8001814:	78fb      	ldrb	r3, [r7, #3]
 8001816:	4013      	ands	r3, r2
 8001818:	2b00      	cmp	r3, #0
 800181a:	bf14      	ite	ne
 800181c:	2301      	movne	r3, #1
 800181e:	2300      	moveq	r3, #0
 8001820:	b2db      	uxtb	r3, r3
}
 8001822:	4618      	mov	r0, r3
 8001824:	370c      	adds	r7, #12
 8001826:	46bd      	mov	sp, r7
 8001828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800182c:	4770      	bx	lr

0800182e <USART_Receive>:
  * @param  ppTxBuffer Pointer to the data buffer containing data to be transmitted.
  * @param  Len The number of bytes to receive.
  * @retval None
  */
void  USART_Receive(USART_HandleTypeDef *husart, uint8_t *pRxBuffer, uint32_t Len)
{
 800182e:	b580      	push	{r7, lr}
 8001830:	b086      	sub	sp, #24
 8001832:	af00      	add	r7, sp, #0
 8001834:	60f8      	str	r0, [r7, #12]
 8001836:	60b9      	str	r1, [r7, #8]
 8001838:	607a      	str	r2, [r7, #4]
    // Loop over until "Len" number of bytes are transferred
    for (uint32_t i = 0; i < Len; i++)
 800183a:	2300      	movs	r3, #0
 800183c:	617b      	str	r3, [r7, #20]
 800183e:	e042      	b.n	80018c6 <USART_Receive+0x98>
    {
        // Wait until RXNE flag is set in the SR
        while (!USART_GetFlagStatus(husart->pUSARTx, USART_FLAG_RXNE));
 8001840:	bf00      	nop
 8001842:	68fb      	ldr	r3, [r7, #12]
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	2120      	movs	r1, #32
 8001848:	4618      	mov	r0, r3
 800184a:	f7ff ffdb 	bl	8001804 <USART_GetFlagStatus>
 800184e:	4603      	mov	r3, r0
 8001850:	2b00      	cmp	r3, #0
 8001852:	d0f6      	beq.n	8001842 <USART_Receive+0x14>

        // Check Word Length (9 bits or 8 bits)
        if (husart->Init.WordLength == USART_WORDLENGTH_9BITS)
 8001854:	68fb      	ldr	r3, [r7, #12]
 8001856:	7b1b      	ldrb	r3, [r3, #12]
 8001858:	2b01      	cmp	r3, #1
 800185a:	d11a      	bne.n	8001892 <USART_Receive+0x64>
        {
            // We are going to receive 9-bit data in a frame

            // Check for USART Parity control
            if (husart->Init.ParityControl == USART_PARITY_NONE)
 800185c:	68fb      	ldr	r3, [r7, #12]
 800185e:	7bdb      	ldrb	r3, [r3, #15]
 8001860:	2b00      	cmp	r3, #0
 8001862:	d10c      	bne.n	800187e <USART_Receive+0x50>
            {
                // No parity is used, so all 9 bits will be user data
                *((uint16_t*)pRxBuffer) = (husart->pUSARTx->DR & (uint16_t)0x01FF);
 8001864:	68fb      	ldr	r3, [r7, #12]
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	685b      	ldr	r3, [r3, #4]
 800186a:	b29b      	uxth	r3, r3
 800186c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001870:	b29a      	uxth	r2, r3
 8001872:	68bb      	ldr	r3, [r7, #8]
 8001874:	801a      	strh	r2, [r3, #0]
                pRxBuffer += 2; // Increment the pointer by 2 bytes
 8001876:	68bb      	ldr	r3, [r7, #8]
 8001878:	3302      	adds	r3, #2
 800187a:	60bb      	str	r3, [r7, #8]
 800187c:	e020      	b.n	80018c0 <USART_Receive+0x92>
            }
            else
            {
                // Parity is used, so 8 bits will be user data and 1 bit is for parity
                *pRxBuffer = (husart->pUSARTx->DR & (uint8_t)0xFF);
 800187e:	68fb      	ldr	r3, [r7, #12]
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	685b      	ldr	r3, [r3, #4]
 8001884:	b2da      	uxtb	r2, r3
 8001886:	68bb      	ldr	r3, [r7, #8]
 8001888:	701a      	strb	r2, [r3, #0]
                pRxBuffer++; // Increment the pointer by 1 byte
 800188a:	68bb      	ldr	r3, [r7, #8]
 800188c:	3301      	adds	r3, #1
 800188e:	60bb      	str	r3, [r7, #8]
 8001890:	e016      	b.n	80018c0 <USART_Receive+0x92>
        else
        {
            // We are going to receive 8-bit data in a frame

            // Check for USART Parity control
            if (husart->Init.ParityControl == USART_PARITY_NONE)
 8001892:	68fb      	ldr	r3, [r7, #12]
 8001894:	7bdb      	ldrb	r3, [r3, #15]
 8001896:	2b00      	cmp	r3, #0
 8001898:	d106      	bne.n	80018a8 <USART_Receive+0x7a>
            {
                // No parity is used, so all 8 bits will be user data
                *pRxBuffer = (husart->pUSARTx->DR & (uint8_t)0xFF);
 800189a:	68fb      	ldr	r3, [r7, #12]
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	685b      	ldr	r3, [r3, #4]
 80018a0:	b2da      	uxtb	r2, r3
 80018a2:	68bb      	ldr	r3, [r7, #8]
 80018a4:	701a      	strb	r2, [r3, #0]
 80018a6:	e008      	b.n	80018ba <USART_Receive+0x8c>
            }
            else
            {
                // Parity is used, so 7 bits will be user data and 1 bit is parity
                *pRxBuffer = (uint8_t)(husart->pUSARTx->DR & (uint8_t)0x7F);
 80018a8:	68fb      	ldr	r3, [r7, #12]
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	685b      	ldr	r3, [r3, #4]
 80018ae:	b2db      	uxtb	r3, r3
 80018b0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80018b4:	b2da      	uxtb	r2, r3
 80018b6:	68bb      	ldr	r3, [r7, #8]
 80018b8:	701a      	strb	r2, [r3, #0]
            }
            pRxBuffer++; // Increment the pointer by 1 byte
 80018ba:	68bb      	ldr	r3, [r7, #8]
 80018bc:	3301      	adds	r3, #1
 80018be:	60bb      	str	r3, [r7, #8]
    for (uint32_t i = 0; i < Len; i++)
 80018c0:	697b      	ldr	r3, [r7, #20]
 80018c2:	3301      	adds	r3, #1
 80018c4:	617b      	str	r3, [r7, #20]
 80018c6:	697a      	ldr	r2, [r7, #20]
 80018c8:	687b      	ldr	r3, [r7, #4]
 80018ca:	429a      	cmp	r2, r3
 80018cc:	d3b8      	bcc.n	8001840 <USART_Receive+0x12>
        }
    }
}
 80018ce:	bf00      	nop
 80018d0:	bf00      	nop
 80018d2:	3718      	adds	r7, #24
 80018d4:	46bd      	mov	sp, r7
 80018d6:	bd80      	pop	{r7, pc}

080018d8 <delay>:
/********************************************************************************/
USART_HandleTypeDef USART2_Handle;  //USART2 Handler for Asynchronous RX function
char rData[2]; //Array to store received data

void delay(void)
{
 80018d8:	b480      	push	{r7}
 80018da:	b083      	sub	sp, #12
 80018dc:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 80018de:	2300      	movs	r3, #0
 80018e0:	607b      	str	r3, [r7, #4]
 80018e2:	e002      	b.n	80018ea <delay+0x12>
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	3301      	adds	r3, #1
 80018e8:	607b      	str	r3, [r7, #4]
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	4a04      	ldr	r2, [pc, #16]	@ (8001900 <delay+0x28>)
 80018ee:	4293      	cmp	r3, r2
 80018f0:	d9f8      	bls.n	80018e4 <delay+0xc>
}
 80018f2:	bf00      	nop
 80018f4:	bf00      	nop
 80018f6:	370c      	adds	r7, #12
 80018f8:	46bd      	mov	sp, r7
 80018fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018fe:	4770      	bx	lr
 8001900:	0003d08f 	.word	0x0003d08f

08001904 <main>:


int main(void){
 8001904:	b580      	push	{r7, lr}
 8001906:	b084      	sub	sp, #16
 8001908:	af04      	add	r7, sp, #16
	//Init UART Parameters
	USART_SetParam(&USART2_Handle, USART2, USART_MODE_RX, USART_STOPBITS_1, USART_WORDLENGTH_8BITS, USART_PARITY_NONE, 9600);
 800190a:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 800190e:	9302      	str	r3, [sp, #8]
 8001910:	2300      	movs	r3, #0
 8001912:	9301      	str	r3, [sp, #4]
 8001914:	2300      	movs	r3, #0
 8001916:	9300      	str	r3, [sp, #0]
 8001918:	2300      	movs	r3, #0
 800191a:	2201      	movs	r2, #1
 800191c:	4906      	ldr	r1, [pc, #24]	@ (8001938 <main+0x34>)
 800191e:	4807      	ldr	r0, [pc, #28]	@ (800193c <main+0x38>)
 8001920:	f7ff fe84 	bl	800162c <USART_SetParam>


	while(1){
		USART_Receive(&USART2_Handle, (uint8_t*) rData, 2);
 8001924:	2202      	movs	r2, #2
 8001926:	4906      	ldr	r1, [pc, #24]	@ (8001940 <main+0x3c>)
 8001928:	4804      	ldr	r0, [pc, #16]	@ (800193c <main+0x38>)
 800192a:	f7ff ff80 	bl	800182e <USART_Receive>
		delay();
 800192e:	f7ff ffd3 	bl	80018d8 <delay>
		USART_Receive(&USART2_Handle, (uint8_t*) rData, 2);
 8001932:	bf00      	nop
 8001934:	e7f6      	b.n	8001924 <main+0x20>
 8001936:	bf00      	nop
 8001938:	40004400 	.word	0x40004400
 800193c:	200001f8 	.word	0x200001f8
 8001940:	20000220 	.word	0x20000220

08001944 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001944:	b480      	push	{r7}
 8001946:	af00      	add	r7, sp, #0
  return 1;
 8001948:	2301      	movs	r3, #1
}
 800194a:	4618      	mov	r0, r3
 800194c:	46bd      	mov	sp, r7
 800194e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001952:	4770      	bx	lr

08001954 <_kill>:

int _kill(int pid, int sig)
{
 8001954:	b580      	push	{r7, lr}
 8001956:	b082      	sub	sp, #8
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
 800195c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800195e:	f001 f8bd 	bl	8002adc <__errno>
 8001962:	4603      	mov	r3, r0
 8001964:	2216      	movs	r2, #22
 8001966:	601a      	str	r2, [r3, #0]
  return -1;
 8001968:	f04f 33ff 	mov.w	r3, #4294967295
}
 800196c:	4618      	mov	r0, r3
 800196e:	3708      	adds	r7, #8
 8001970:	46bd      	mov	sp, r7
 8001972:	bd80      	pop	{r7, pc}

08001974 <_exit>:

void _exit (int status)
{
 8001974:	b580      	push	{r7, lr}
 8001976:	b082      	sub	sp, #8
 8001978:	af00      	add	r7, sp, #0
 800197a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800197c:	f04f 31ff 	mov.w	r1, #4294967295
 8001980:	6878      	ldr	r0, [r7, #4]
 8001982:	f7ff ffe7 	bl	8001954 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001986:	bf00      	nop
 8001988:	e7fd      	b.n	8001986 <_exit+0x12>

0800198a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800198a:	b580      	push	{r7, lr}
 800198c:	b086      	sub	sp, #24
 800198e:	af00      	add	r7, sp, #0
 8001990:	60f8      	str	r0, [r7, #12]
 8001992:	60b9      	str	r1, [r7, #8]
 8001994:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001996:	2300      	movs	r3, #0
 8001998:	617b      	str	r3, [r7, #20]
 800199a:	e00a      	b.n	80019b2 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800199c:	f3af 8000 	nop.w
 80019a0:	4601      	mov	r1, r0
 80019a2:	68bb      	ldr	r3, [r7, #8]
 80019a4:	1c5a      	adds	r2, r3, #1
 80019a6:	60ba      	str	r2, [r7, #8]
 80019a8:	b2ca      	uxtb	r2, r1
 80019aa:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80019ac:	697b      	ldr	r3, [r7, #20]
 80019ae:	3301      	adds	r3, #1
 80019b0:	617b      	str	r3, [r7, #20]
 80019b2:	697a      	ldr	r2, [r7, #20]
 80019b4:	687b      	ldr	r3, [r7, #4]
 80019b6:	429a      	cmp	r2, r3
 80019b8:	dbf0      	blt.n	800199c <_read+0x12>
  }

  return len;
 80019ba:	687b      	ldr	r3, [r7, #4]
}
 80019bc:	4618      	mov	r0, r3
 80019be:	3718      	adds	r7, #24
 80019c0:	46bd      	mov	sp, r7
 80019c2:	bd80      	pop	{r7, pc}

080019c4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80019c4:	b580      	push	{r7, lr}
 80019c6:	b086      	sub	sp, #24
 80019c8:	af00      	add	r7, sp, #0
 80019ca:	60f8      	str	r0, [r7, #12]
 80019cc:	60b9      	str	r1, [r7, #8]
 80019ce:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80019d0:	2300      	movs	r3, #0
 80019d2:	617b      	str	r3, [r7, #20]
 80019d4:	e009      	b.n	80019ea <_write+0x26>
  {
    __io_putchar(*ptr++);
 80019d6:	68bb      	ldr	r3, [r7, #8]
 80019d8:	1c5a      	adds	r2, r3, #1
 80019da:	60ba      	str	r2, [r7, #8]
 80019dc:	781b      	ldrb	r3, [r3, #0]
 80019de:	4618      	mov	r0, r3
 80019e0:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80019e4:	697b      	ldr	r3, [r7, #20]
 80019e6:	3301      	adds	r3, #1
 80019e8:	617b      	str	r3, [r7, #20]
 80019ea:	697a      	ldr	r2, [r7, #20]
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	429a      	cmp	r2, r3
 80019f0:	dbf1      	blt.n	80019d6 <_write+0x12>
  }
  return len;
 80019f2:	687b      	ldr	r3, [r7, #4]
}
 80019f4:	4618      	mov	r0, r3
 80019f6:	3718      	adds	r7, #24
 80019f8:	46bd      	mov	sp, r7
 80019fa:	bd80      	pop	{r7, pc}

080019fc <_close>:

int _close(int file)
{
 80019fc:	b480      	push	{r7}
 80019fe:	b083      	sub	sp, #12
 8001a00:	af00      	add	r7, sp, #0
 8001a02:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001a04:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001a08:	4618      	mov	r0, r3
 8001a0a:	370c      	adds	r7, #12
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a12:	4770      	bx	lr

08001a14 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001a14:	b480      	push	{r7}
 8001a16:	b083      	sub	sp, #12
 8001a18:	af00      	add	r7, sp, #0
 8001a1a:	6078      	str	r0, [r7, #4]
 8001a1c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001a1e:	683b      	ldr	r3, [r7, #0]
 8001a20:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001a24:	605a      	str	r2, [r3, #4]
  return 0;
 8001a26:	2300      	movs	r3, #0
}
 8001a28:	4618      	mov	r0, r3
 8001a2a:	370c      	adds	r7, #12
 8001a2c:	46bd      	mov	sp, r7
 8001a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a32:	4770      	bx	lr

08001a34 <_isatty>:

int _isatty(int file)
{
 8001a34:	b480      	push	{r7}
 8001a36:	b083      	sub	sp, #12
 8001a38:	af00      	add	r7, sp, #0
 8001a3a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001a3c:	2301      	movs	r3, #1
}
 8001a3e:	4618      	mov	r0, r3
 8001a40:	370c      	adds	r7, #12
 8001a42:	46bd      	mov	sp, r7
 8001a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a48:	4770      	bx	lr

08001a4a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001a4a:	b480      	push	{r7}
 8001a4c:	b085      	sub	sp, #20
 8001a4e:	af00      	add	r7, sp, #0
 8001a50:	60f8      	str	r0, [r7, #12]
 8001a52:	60b9      	str	r1, [r7, #8]
 8001a54:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001a56:	2300      	movs	r3, #0
}
 8001a58:	4618      	mov	r0, r3
 8001a5a:	3714      	adds	r7, #20
 8001a5c:	46bd      	mov	sp, r7
 8001a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a62:	4770      	bx	lr

08001a64 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001a64:	b580      	push	{r7, lr}
 8001a66:	b086      	sub	sp, #24
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001a6c:	4a14      	ldr	r2, [pc, #80]	@ (8001ac0 <_sbrk+0x5c>)
 8001a6e:	4b15      	ldr	r3, [pc, #84]	@ (8001ac4 <_sbrk+0x60>)
 8001a70:	1ad3      	subs	r3, r2, r3
 8001a72:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001a74:	697b      	ldr	r3, [r7, #20]
 8001a76:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001a78:	4b13      	ldr	r3, [pc, #76]	@ (8001ac8 <_sbrk+0x64>)
 8001a7a:	681b      	ldr	r3, [r3, #0]
 8001a7c:	2b00      	cmp	r3, #0
 8001a7e:	d102      	bne.n	8001a86 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001a80:	4b11      	ldr	r3, [pc, #68]	@ (8001ac8 <_sbrk+0x64>)
 8001a82:	4a12      	ldr	r2, [pc, #72]	@ (8001acc <_sbrk+0x68>)
 8001a84:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001a86:	4b10      	ldr	r3, [pc, #64]	@ (8001ac8 <_sbrk+0x64>)
 8001a88:	681a      	ldr	r2, [r3, #0]
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	4413      	add	r3, r2
 8001a8e:	693a      	ldr	r2, [r7, #16]
 8001a90:	429a      	cmp	r2, r3
 8001a92:	d207      	bcs.n	8001aa4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001a94:	f001 f822 	bl	8002adc <__errno>
 8001a98:	4603      	mov	r3, r0
 8001a9a:	220c      	movs	r2, #12
 8001a9c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001a9e:	f04f 33ff 	mov.w	r3, #4294967295
 8001aa2:	e009      	b.n	8001ab8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001aa4:	4b08      	ldr	r3, [pc, #32]	@ (8001ac8 <_sbrk+0x64>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001aaa:	4b07      	ldr	r3, [pc, #28]	@ (8001ac8 <_sbrk+0x64>)
 8001aac:	681a      	ldr	r2, [r3, #0]
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	4413      	add	r3, r2
 8001ab2:	4a05      	ldr	r2, [pc, #20]	@ (8001ac8 <_sbrk+0x64>)
 8001ab4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001ab6:	68fb      	ldr	r3, [r7, #12]
}
 8001ab8:	4618      	mov	r0, r3
 8001aba:	3718      	adds	r7, #24
 8001abc:	46bd      	mov	sp, r7
 8001abe:	bd80      	pop	{r7, pc}
 8001ac0:	20020000 	.word	0x20020000
 8001ac4:	00000400 	.word	0x00000400
 8001ac8:	20000224 	.word	0x20000224
 8001acc:	20000378 	.word	0x20000378

08001ad0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001ad0:	480d      	ldr	r0, [pc, #52]	@ (8001b08 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001ad2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001ad4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001ad8:	480c      	ldr	r0, [pc, #48]	@ (8001b0c <LoopForever+0x6>)
  ldr r1, =_edata
 8001ada:	490d      	ldr	r1, [pc, #52]	@ (8001b10 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001adc:	4a0d      	ldr	r2, [pc, #52]	@ (8001b14 <LoopForever+0xe>)
  movs r3, #0
 8001ade:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001ae0:	e002      	b.n	8001ae8 <LoopCopyDataInit>

08001ae2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001ae2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001ae4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001ae6:	3304      	adds	r3, #4

08001ae8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001ae8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001aea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001aec:	d3f9      	bcc.n	8001ae2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001aee:	4a0a      	ldr	r2, [pc, #40]	@ (8001b18 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001af0:	4c0a      	ldr	r4, [pc, #40]	@ (8001b1c <LoopForever+0x16>)
  movs r3, #0
 8001af2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001af4:	e001      	b.n	8001afa <LoopFillZerobss>

08001af6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001af6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001af8:	3204      	adds	r2, #4

08001afa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001afa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001afc:	d3fb      	bcc.n	8001af6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001afe:	f000 fff3 	bl	8002ae8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001b02:	f7ff feff 	bl	8001904 <main>

08001b06 <LoopForever>:

LoopForever:
  b LoopForever
 8001b06:	e7fe      	b.n	8001b06 <LoopForever>
  ldr   r0, =_estack
 8001b08:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001b0c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001b10:	200001dc 	.word	0x200001dc
  ldr r2, =_sidata
 8001b14:	08006644 	.word	0x08006644
  ldr r2, =_sbss
 8001b18:	200001dc 	.word	0x200001dc
  ldr r4, =_ebss
 8001b1c:	20000374 	.word	0x20000374

08001b20 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001b20:	e7fe      	b.n	8001b20 <ADC_IRQHandler>

08001b22 <__cvt>:
 8001b22:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b26:	ec57 6b10 	vmov	r6, r7, d0
 8001b2a:	2f00      	cmp	r7, #0
 8001b2c:	460c      	mov	r4, r1
 8001b2e:	4619      	mov	r1, r3
 8001b30:	463b      	mov	r3, r7
 8001b32:	bfbb      	ittet	lt
 8001b34:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001b38:	461f      	movlt	r7, r3
 8001b3a:	2300      	movge	r3, #0
 8001b3c:	232d      	movlt	r3, #45	@ 0x2d
 8001b3e:	700b      	strb	r3, [r1, #0]
 8001b40:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001b42:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001b46:	4691      	mov	r9, r2
 8001b48:	f023 0820 	bic.w	r8, r3, #32
 8001b4c:	bfbc      	itt	lt
 8001b4e:	4632      	movlt	r2, r6
 8001b50:	4616      	movlt	r6, r2
 8001b52:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001b56:	d005      	beq.n	8001b64 <__cvt+0x42>
 8001b58:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001b5c:	d100      	bne.n	8001b60 <__cvt+0x3e>
 8001b5e:	3401      	adds	r4, #1
 8001b60:	2102      	movs	r1, #2
 8001b62:	e000      	b.n	8001b66 <__cvt+0x44>
 8001b64:	2103      	movs	r1, #3
 8001b66:	ab03      	add	r3, sp, #12
 8001b68:	9301      	str	r3, [sp, #4]
 8001b6a:	ab02      	add	r3, sp, #8
 8001b6c:	9300      	str	r3, [sp, #0]
 8001b6e:	ec47 6b10 	vmov	d0, r6, r7
 8001b72:	4653      	mov	r3, sl
 8001b74:	4622      	mov	r2, r4
 8001b76:	f001 f86f 	bl	8002c58 <_dtoa_r>
 8001b7a:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001b7e:	4605      	mov	r5, r0
 8001b80:	d119      	bne.n	8001bb6 <__cvt+0x94>
 8001b82:	f019 0f01 	tst.w	r9, #1
 8001b86:	d00e      	beq.n	8001ba6 <__cvt+0x84>
 8001b88:	eb00 0904 	add.w	r9, r0, r4
 8001b8c:	2200      	movs	r2, #0
 8001b8e:	2300      	movs	r3, #0
 8001b90:	4630      	mov	r0, r6
 8001b92:	4639      	mov	r1, r7
 8001b94:	f7fe ff98 	bl	8000ac8 <__aeabi_dcmpeq>
 8001b98:	b108      	cbz	r0, 8001b9e <__cvt+0x7c>
 8001b9a:	f8cd 900c 	str.w	r9, [sp, #12]
 8001b9e:	2230      	movs	r2, #48	@ 0x30
 8001ba0:	9b03      	ldr	r3, [sp, #12]
 8001ba2:	454b      	cmp	r3, r9
 8001ba4:	d31e      	bcc.n	8001be4 <__cvt+0xc2>
 8001ba6:	9b03      	ldr	r3, [sp, #12]
 8001ba8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001baa:	1b5b      	subs	r3, r3, r5
 8001bac:	4628      	mov	r0, r5
 8001bae:	6013      	str	r3, [r2, #0]
 8001bb0:	b004      	add	sp, #16
 8001bb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001bb6:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001bba:	eb00 0904 	add.w	r9, r0, r4
 8001bbe:	d1e5      	bne.n	8001b8c <__cvt+0x6a>
 8001bc0:	7803      	ldrb	r3, [r0, #0]
 8001bc2:	2b30      	cmp	r3, #48	@ 0x30
 8001bc4:	d10a      	bne.n	8001bdc <__cvt+0xba>
 8001bc6:	2200      	movs	r2, #0
 8001bc8:	2300      	movs	r3, #0
 8001bca:	4630      	mov	r0, r6
 8001bcc:	4639      	mov	r1, r7
 8001bce:	f7fe ff7b 	bl	8000ac8 <__aeabi_dcmpeq>
 8001bd2:	b918      	cbnz	r0, 8001bdc <__cvt+0xba>
 8001bd4:	f1c4 0401 	rsb	r4, r4, #1
 8001bd8:	f8ca 4000 	str.w	r4, [sl]
 8001bdc:	f8da 3000 	ldr.w	r3, [sl]
 8001be0:	4499      	add	r9, r3
 8001be2:	e7d3      	b.n	8001b8c <__cvt+0x6a>
 8001be4:	1c59      	adds	r1, r3, #1
 8001be6:	9103      	str	r1, [sp, #12]
 8001be8:	701a      	strb	r2, [r3, #0]
 8001bea:	e7d9      	b.n	8001ba0 <__cvt+0x7e>

08001bec <__exponent>:
 8001bec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001bee:	2900      	cmp	r1, #0
 8001bf0:	bfba      	itte	lt
 8001bf2:	4249      	neglt	r1, r1
 8001bf4:	232d      	movlt	r3, #45	@ 0x2d
 8001bf6:	232b      	movge	r3, #43	@ 0x2b
 8001bf8:	2909      	cmp	r1, #9
 8001bfa:	7002      	strb	r2, [r0, #0]
 8001bfc:	7043      	strb	r3, [r0, #1]
 8001bfe:	dd29      	ble.n	8001c54 <__exponent+0x68>
 8001c00:	f10d 0307 	add.w	r3, sp, #7
 8001c04:	461d      	mov	r5, r3
 8001c06:	270a      	movs	r7, #10
 8001c08:	461a      	mov	r2, r3
 8001c0a:	fbb1 f6f7 	udiv	r6, r1, r7
 8001c0e:	fb07 1416 	mls	r4, r7, r6, r1
 8001c12:	3430      	adds	r4, #48	@ 0x30
 8001c14:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001c18:	460c      	mov	r4, r1
 8001c1a:	2c63      	cmp	r4, #99	@ 0x63
 8001c1c:	f103 33ff 	add.w	r3, r3, #4294967295
 8001c20:	4631      	mov	r1, r6
 8001c22:	dcf1      	bgt.n	8001c08 <__exponent+0x1c>
 8001c24:	3130      	adds	r1, #48	@ 0x30
 8001c26:	1e94      	subs	r4, r2, #2
 8001c28:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001c2c:	1c41      	adds	r1, r0, #1
 8001c2e:	4623      	mov	r3, r4
 8001c30:	42ab      	cmp	r3, r5
 8001c32:	d30a      	bcc.n	8001c4a <__exponent+0x5e>
 8001c34:	f10d 0309 	add.w	r3, sp, #9
 8001c38:	1a9b      	subs	r3, r3, r2
 8001c3a:	42ac      	cmp	r4, r5
 8001c3c:	bf88      	it	hi
 8001c3e:	2300      	movhi	r3, #0
 8001c40:	3302      	adds	r3, #2
 8001c42:	4403      	add	r3, r0
 8001c44:	1a18      	subs	r0, r3, r0
 8001c46:	b003      	add	sp, #12
 8001c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c4a:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001c4e:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001c52:	e7ed      	b.n	8001c30 <__exponent+0x44>
 8001c54:	2330      	movs	r3, #48	@ 0x30
 8001c56:	3130      	adds	r1, #48	@ 0x30
 8001c58:	7083      	strb	r3, [r0, #2]
 8001c5a:	70c1      	strb	r1, [r0, #3]
 8001c5c:	1d03      	adds	r3, r0, #4
 8001c5e:	e7f1      	b.n	8001c44 <__exponent+0x58>

08001c60 <_printf_float>:
 8001c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c64:	b08d      	sub	sp, #52	@ 0x34
 8001c66:	460c      	mov	r4, r1
 8001c68:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001c6c:	4616      	mov	r6, r2
 8001c6e:	461f      	mov	r7, r3
 8001c70:	4605      	mov	r5, r0
 8001c72:	f000 fee9 	bl	8002a48 <_localeconv_r>
 8001c76:	6803      	ldr	r3, [r0, #0]
 8001c78:	9304      	str	r3, [sp, #16]
 8001c7a:	4618      	mov	r0, r3
 8001c7c:	f7fe faf8 	bl	8000270 <strlen>
 8001c80:	2300      	movs	r3, #0
 8001c82:	930a      	str	r3, [sp, #40]	@ 0x28
 8001c84:	f8d8 3000 	ldr.w	r3, [r8]
 8001c88:	9005      	str	r0, [sp, #20]
 8001c8a:	3307      	adds	r3, #7
 8001c8c:	f023 0307 	bic.w	r3, r3, #7
 8001c90:	f103 0208 	add.w	r2, r3, #8
 8001c94:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001c98:	f8d4 b000 	ldr.w	fp, [r4]
 8001c9c:	f8c8 2000 	str.w	r2, [r8]
 8001ca0:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001ca4:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001ca8:	9307      	str	r3, [sp, #28]
 8001caa:	f8cd 8018 	str.w	r8, [sp, #24]
 8001cae:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001cb2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001cb6:	4b9c      	ldr	r3, [pc, #624]	@ (8001f28 <_printf_float+0x2c8>)
 8001cb8:	f04f 32ff 	mov.w	r2, #4294967295
 8001cbc:	f7fe ff36 	bl	8000b2c <__aeabi_dcmpun>
 8001cc0:	bb70      	cbnz	r0, 8001d20 <_printf_float+0xc0>
 8001cc2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001cc6:	4b98      	ldr	r3, [pc, #608]	@ (8001f28 <_printf_float+0x2c8>)
 8001cc8:	f04f 32ff 	mov.w	r2, #4294967295
 8001ccc:	f7fe ff10 	bl	8000af0 <__aeabi_dcmple>
 8001cd0:	bb30      	cbnz	r0, 8001d20 <_printf_float+0xc0>
 8001cd2:	2200      	movs	r2, #0
 8001cd4:	2300      	movs	r3, #0
 8001cd6:	4640      	mov	r0, r8
 8001cd8:	4649      	mov	r1, r9
 8001cda:	f7fe feff 	bl	8000adc <__aeabi_dcmplt>
 8001cde:	b110      	cbz	r0, 8001ce6 <_printf_float+0x86>
 8001ce0:	232d      	movs	r3, #45	@ 0x2d
 8001ce2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001ce6:	4a91      	ldr	r2, [pc, #580]	@ (8001f2c <_printf_float+0x2cc>)
 8001ce8:	4b91      	ldr	r3, [pc, #580]	@ (8001f30 <_printf_float+0x2d0>)
 8001cea:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001cee:	bf8c      	ite	hi
 8001cf0:	4690      	movhi	r8, r2
 8001cf2:	4698      	movls	r8, r3
 8001cf4:	2303      	movs	r3, #3
 8001cf6:	6123      	str	r3, [r4, #16]
 8001cf8:	f02b 0304 	bic.w	r3, fp, #4
 8001cfc:	6023      	str	r3, [r4, #0]
 8001cfe:	f04f 0900 	mov.w	r9, #0
 8001d02:	9700      	str	r7, [sp, #0]
 8001d04:	4633      	mov	r3, r6
 8001d06:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001d08:	4621      	mov	r1, r4
 8001d0a:	4628      	mov	r0, r5
 8001d0c:	f000 f9d2 	bl	80020b4 <_printf_common>
 8001d10:	3001      	adds	r0, #1
 8001d12:	f040 808d 	bne.w	8001e30 <_printf_float+0x1d0>
 8001d16:	f04f 30ff 	mov.w	r0, #4294967295
 8001d1a:	b00d      	add	sp, #52	@ 0x34
 8001d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d20:	4642      	mov	r2, r8
 8001d22:	464b      	mov	r3, r9
 8001d24:	4640      	mov	r0, r8
 8001d26:	4649      	mov	r1, r9
 8001d28:	f7fe ff00 	bl	8000b2c <__aeabi_dcmpun>
 8001d2c:	b140      	cbz	r0, 8001d40 <_printf_float+0xe0>
 8001d2e:	464b      	mov	r3, r9
 8001d30:	2b00      	cmp	r3, #0
 8001d32:	bfbc      	itt	lt
 8001d34:	232d      	movlt	r3, #45	@ 0x2d
 8001d36:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001d3a:	4a7e      	ldr	r2, [pc, #504]	@ (8001f34 <_printf_float+0x2d4>)
 8001d3c:	4b7e      	ldr	r3, [pc, #504]	@ (8001f38 <_printf_float+0x2d8>)
 8001d3e:	e7d4      	b.n	8001cea <_printf_float+0x8a>
 8001d40:	6863      	ldr	r3, [r4, #4]
 8001d42:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001d46:	9206      	str	r2, [sp, #24]
 8001d48:	1c5a      	adds	r2, r3, #1
 8001d4a:	d13b      	bne.n	8001dc4 <_printf_float+0x164>
 8001d4c:	2306      	movs	r3, #6
 8001d4e:	6063      	str	r3, [r4, #4]
 8001d50:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001d54:	2300      	movs	r3, #0
 8001d56:	6022      	str	r2, [r4, #0]
 8001d58:	9303      	str	r3, [sp, #12]
 8001d5a:	ab0a      	add	r3, sp, #40	@ 0x28
 8001d5c:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001d60:	ab09      	add	r3, sp, #36	@ 0x24
 8001d62:	9300      	str	r3, [sp, #0]
 8001d64:	6861      	ldr	r1, [r4, #4]
 8001d66:	ec49 8b10 	vmov	d0, r8, r9
 8001d6a:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001d6e:	4628      	mov	r0, r5
 8001d70:	f7ff fed7 	bl	8001b22 <__cvt>
 8001d74:	9b06      	ldr	r3, [sp, #24]
 8001d76:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001d78:	2b47      	cmp	r3, #71	@ 0x47
 8001d7a:	4680      	mov	r8, r0
 8001d7c:	d129      	bne.n	8001dd2 <_printf_float+0x172>
 8001d7e:	1cc8      	adds	r0, r1, #3
 8001d80:	db02      	blt.n	8001d88 <_printf_float+0x128>
 8001d82:	6863      	ldr	r3, [r4, #4]
 8001d84:	4299      	cmp	r1, r3
 8001d86:	dd41      	ble.n	8001e0c <_printf_float+0x1ac>
 8001d88:	f1aa 0a02 	sub.w	sl, sl, #2
 8001d8c:	fa5f fa8a 	uxtb.w	sl, sl
 8001d90:	3901      	subs	r1, #1
 8001d92:	4652      	mov	r2, sl
 8001d94:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001d98:	9109      	str	r1, [sp, #36]	@ 0x24
 8001d9a:	f7ff ff27 	bl	8001bec <__exponent>
 8001d9e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001da0:	1813      	adds	r3, r2, r0
 8001da2:	2a01      	cmp	r2, #1
 8001da4:	4681      	mov	r9, r0
 8001da6:	6123      	str	r3, [r4, #16]
 8001da8:	dc02      	bgt.n	8001db0 <_printf_float+0x150>
 8001daa:	6822      	ldr	r2, [r4, #0]
 8001dac:	07d2      	lsls	r2, r2, #31
 8001dae:	d501      	bpl.n	8001db4 <_printf_float+0x154>
 8001db0:	3301      	adds	r3, #1
 8001db2:	6123      	str	r3, [r4, #16]
 8001db4:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	d0a2      	beq.n	8001d02 <_printf_float+0xa2>
 8001dbc:	232d      	movs	r3, #45	@ 0x2d
 8001dbe:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001dc2:	e79e      	b.n	8001d02 <_printf_float+0xa2>
 8001dc4:	9a06      	ldr	r2, [sp, #24]
 8001dc6:	2a47      	cmp	r2, #71	@ 0x47
 8001dc8:	d1c2      	bne.n	8001d50 <_printf_float+0xf0>
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d1c0      	bne.n	8001d50 <_printf_float+0xf0>
 8001dce:	2301      	movs	r3, #1
 8001dd0:	e7bd      	b.n	8001d4e <_printf_float+0xee>
 8001dd2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001dd6:	d9db      	bls.n	8001d90 <_printf_float+0x130>
 8001dd8:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001ddc:	d118      	bne.n	8001e10 <_printf_float+0x1b0>
 8001dde:	2900      	cmp	r1, #0
 8001de0:	6863      	ldr	r3, [r4, #4]
 8001de2:	dd0b      	ble.n	8001dfc <_printf_float+0x19c>
 8001de4:	6121      	str	r1, [r4, #16]
 8001de6:	b913      	cbnz	r3, 8001dee <_printf_float+0x18e>
 8001de8:	6822      	ldr	r2, [r4, #0]
 8001dea:	07d0      	lsls	r0, r2, #31
 8001dec:	d502      	bpl.n	8001df4 <_printf_float+0x194>
 8001dee:	3301      	adds	r3, #1
 8001df0:	440b      	add	r3, r1
 8001df2:	6123      	str	r3, [r4, #16]
 8001df4:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001df6:	f04f 0900 	mov.w	r9, #0
 8001dfa:	e7db      	b.n	8001db4 <_printf_float+0x154>
 8001dfc:	b913      	cbnz	r3, 8001e04 <_printf_float+0x1a4>
 8001dfe:	6822      	ldr	r2, [r4, #0]
 8001e00:	07d2      	lsls	r2, r2, #31
 8001e02:	d501      	bpl.n	8001e08 <_printf_float+0x1a8>
 8001e04:	3302      	adds	r3, #2
 8001e06:	e7f4      	b.n	8001df2 <_printf_float+0x192>
 8001e08:	2301      	movs	r3, #1
 8001e0a:	e7f2      	b.n	8001df2 <_printf_float+0x192>
 8001e0c:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001e10:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001e12:	4299      	cmp	r1, r3
 8001e14:	db05      	blt.n	8001e22 <_printf_float+0x1c2>
 8001e16:	6823      	ldr	r3, [r4, #0]
 8001e18:	6121      	str	r1, [r4, #16]
 8001e1a:	07d8      	lsls	r0, r3, #31
 8001e1c:	d5ea      	bpl.n	8001df4 <_printf_float+0x194>
 8001e1e:	1c4b      	adds	r3, r1, #1
 8001e20:	e7e7      	b.n	8001df2 <_printf_float+0x192>
 8001e22:	2900      	cmp	r1, #0
 8001e24:	bfd4      	ite	le
 8001e26:	f1c1 0202 	rsble	r2, r1, #2
 8001e2a:	2201      	movgt	r2, #1
 8001e2c:	4413      	add	r3, r2
 8001e2e:	e7e0      	b.n	8001df2 <_printf_float+0x192>
 8001e30:	6823      	ldr	r3, [r4, #0]
 8001e32:	055a      	lsls	r2, r3, #21
 8001e34:	d407      	bmi.n	8001e46 <_printf_float+0x1e6>
 8001e36:	6923      	ldr	r3, [r4, #16]
 8001e38:	4642      	mov	r2, r8
 8001e3a:	4631      	mov	r1, r6
 8001e3c:	4628      	mov	r0, r5
 8001e3e:	47b8      	blx	r7
 8001e40:	3001      	adds	r0, #1
 8001e42:	d12b      	bne.n	8001e9c <_printf_float+0x23c>
 8001e44:	e767      	b.n	8001d16 <_printf_float+0xb6>
 8001e46:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001e4a:	f240 80dd 	bls.w	8002008 <_printf_float+0x3a8>
 8001e4e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001e52:	2200      	movs	r2, #0
 8001e54:	2300      	movs	r3, #0
 8001e56:	f7fe fe37 	bl	8000ac8 <__aeabi_dcmpeq>
 8001e5a:	2800      	cmp	r0, #0
 8001e5c:	d033      	beq.n	8001ec6 <_printf_float+0x266>
 8001e5e:	4a37      	ldr	r2, [pc, #220]	@ (8001f3c <_printf_float+0x2dc>)
 8001e60:	2301      	movs	r3, #1
 8001e62:	4631      	mov	r1, r6
 8001e64:	4628      	mov	r0, r5
 8001e66:	47b8      	blx	r7
 8001e68:	3001      	adds	r0, #1
 8001e6a:	f43f af54 	beq.w	8001d16 <_printf_float+0xb6>
 8001e6e:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001e72:	4543      	cmp	r3, r8
 8001e74:	db02      	blt.n	8001e7c <_printf_float+0x21c>
 8001e76:	6823      	ldr	r3, [r4, #0]
 8001e78:	07d8      	lsls	r0, r3, #31
 8001e7a:	d50f      	bpl.n	8001e9c <_printf_float+0x23c>
 8001e7c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001e80:	4631      	mov	r1, r6
 8001e82:	4628      	mov	r0, r5
 8001e84:	47b8      	blx	r7
 8001e86:	3001      	adds	r0, #1
 8001e88:	f43f af45 	beq.w	8001d16 <_printf_float+0xb6>
 8001e8c:	f04f 0900 	mov.w	r9, #0
 8001e90:	f108 38ff 	add.w	r8, r8, #4294967295
 8001e94:	f104 0a1a 	add.w	sl, r4, #26
 8001e98:	45c8      	cmp	r8, r9
 8001e9a:	dc09      	bgt.n	8001eb0 <_printf_float+0x250>
 8001e9c:	6823      	ldr	r3, [r4, #0]
 8001e9e:	079b      	lsls	r3, r3, #30
 8001ea0:	f100 8103 	bmi.w	80020aa <_printf_float+0x44a>
 8001ea4:	68e0      	ldr	r0, [r4, #12]
 8001ea6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001ea8:	4298      	cmp	r0, r3
 8001eaa:	bfb8      	it	lt
 8001eac:	4618      	movlt	r0, r3
 8001eae:	e734      	b.n	8001d1a <_printf_float+0xba>
 8001eb0:	2301      	movs	r3, #1
 8001eb2:	4652      	mov	r2, sl
 8001eb4:	4631      	mov	r1, r6
 8001eb6:	4628      	mov	r0, r5
 8001eb8:	47b8      	blx	r7
 8001eba:	3001      	adds	r0, #1
 8001ebc:	f43f af2b 	beq.w	8001d16 <_printf_float+0xb6>
 8001ec0:	f109 0901 	add.w	r9, r9, #1
 8001ec4:	e7e8      	b.n	8001e98 <_printf_float+0x238>
 8001ec6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001ec8:	2b00      	cmp	r3, #0
 8001eca:	dc39      	bgt.n	8001f40 <_printf_float+0x2e0>
 8001ecc:	4a1b      	ldr	r2, [pc, #108]	@ (8001f3c <_printf_float+0x2dc>)
 8001ece:	2301      	movs	r3, #1
 8001ed0:	4631      	mov	r1, r6
 8001ed2:	4628      	mov	r0, r5
 8001ed4:	47b8      	blx	r7
 8001ed6:	3001      	adds	r0, #1
 8001ed8:	f43f af1d 	beq.w	8001d16 <_printf_float+0xb6>
 8001edc:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001ee0:	ea59 0303 	orrs.w	r3, r9, r3
 8001ee4:	d102      	bne.n	8001eec <_printf_float+0x28c>
 8001ee6:	6823      	ldr	r3, [r4, #0]
 8001ee8:	07d9      	lsls	r1, r3, #31
 8001eea:	d5d7      	bpl.n	8001e9c <_printf_float+0x23c>
 8001eec:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001ef0:	4631      	mov	r1, r6
 8001ef2:	4628      	mov	r0, r5
 8001ef4:	47b8      	blx	r7
 8001ef6:	3001      	adds	r0, #1
 8001ef8:	f43f af0d 	beq.w	8001d16 <_printf_float+0xb6>
 8001efc:	f04f 0a00 	mov.w	sl, #0
 8001f00:	f104 0b1a 	add.w	fp, r4, #26
 8001f04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001f06:	425b      	negs	r3, r3
 8001f08:	4553      	cmp	r3, sl
 8001f0a:	dc01      	bgt.n	8001f10 <_printf_float+0x2b0>
 8001f0c:	464b      	mov	r3, r9
 8001f0e:	e793      	b.n	8001e38 <_printf_float+0x1d8>
 8001f10:	2301      	movs	r3, #1
 8001f12:	465a      	mov	r2, fp
 8001f14:	4631      	mov	r1, r6
 8001f16:	4628      	mov	r0, r5
 8001f18:	47b8      	blx	r7
 8001f1a:	3001      	adds	r0, #1
 8001f1c:	f43f aefb 	beq.w	8001d16 <_printf_float+0xb6>
 8001f20:	f10a 0a01 	add.w	sl, sl, #1
 8001f24:	e7ee      	b.n	8001f04 <_printf_float+0x2a4>
 8001f26:	bf00      	nop
 8001f28:	7fefffff 	.word	0x7fefffff
 8001f2c:	0800620c 	.word	0x0800620c
 8001f30:	08006208 	.word	0x08006208
 8001f34:	08006214 	.word	0x08006214
 8001f38:	08006210 	.word	0x08006210
 8001f3c:	08006218 	.word	0x08006218
 8001f40:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001f42:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001f46:	4553      	cmp	r3, sl
 8001f48:	bfa8      	it	ge
 8001f4a:	4653      	movge	r3, sl
 8001f4c:	2b00      	cmp	r3, #0
 8001f4e:	4699      	mov	r9, r3
 8001f50:	dc36      	bgt.n	8001fc0 <_printf_float+0x360>
 8001f52:	f04f 0b00 	mov.w	fp, #0
 8001f56:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f5a:	f104 021a 	add.w	r2, r4, #26
 8001f5e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001f60:	9306      	str	r3, [sp, #24]
 8001f62:	eba3 0309 	sub.w	r3, r3, r9
 8001f66:	455b      	cmp	r3, fp
 8001f68:	dc31      	bgt.n	8001fce <_printf_float+0x36e>
 8001f6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001f6c:	459a      	cmp	sl, r3
 8001f6e:	dc3a      	bgt.n	8001fe6 <_printf_float+0x386>
 8001f70:	6823      	ldr	r3, [r4, #0]
 8001f72:	07da      	lsls	r2, r3, #31
 8001f74:	d437      	bmi.n	8001fe6 <_printf_float+0x386>
 8001f76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001f78:	ebaa 0903 	sub.w	r9, sl, r3
 8001f7c:	9b06      	ldr	r3, [sp, #24]
 8001f7e:	ebaa 0303 	sub.w	r3, sl, r3
 8001f82:	4599      	cmp	r9, r3
 8001f84:	bfa8      	it	ge
 8001f86:	4699      	movge	r9, r3
 8001f88:	f1b9 0f00 	cmp.w	r9, #0
 8001f8c:	dc33      	bgt.n	8001ff6 <_printf_float+0x396>
 8001f8e:	f04f 0800 	mov.w	r8, #0
 8001f92:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f96:	f104 0b1a 	add.w	fp, r4, #26
 8001f9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001f9c:	ebaa 0303 	sub.w	r3, sl, r3
 8001fa0:	eba3 0309 	sub.w	r3, r3, r9
 8001fa4:	4543      	cmp	r3, r8
 8001fa6:	f77f af79 	ble.w	8001e9c <_printf_float+0x23c>
 8001faa:	2301      	movs	r3, #1
 8001fac:	465a      	mov	r2, fp
 8001fae:	4631      	mov	r1, r6
 8001fb0:	4628      	mov	r0, r5
 8001fb2:	47b8      	blx	r7
 8001fb4:	3001      	adds	r0, #1
 8001fb6:	f43f aeae 	beq.w	8001d16 <_printf_float+0xb6>
 8001fba:	f108 0801 	add.w	r8, r8, #1
 8001fbe:	e7ec      	b.n	8001f9a <_printf_float+0x33a>
 8001fc0:	4642      	mov	r2, r8
 8001fc2:	4631      	mov	r1, r6
 8001fc4:	4628      	mov	r0, r5
 8001fc6:	47b8      	blx	r7
 8001fc8:	3001      	adds	r0, #1
 8001fca:	d1c2      	bne.n	8001f52 <_printf_float+0x2f2>
 8001fcc:	e6a3      	b.n	8001d16 <_printf_float+0xb6>
 8001fce:	2301      	movs	r3, #1
 8001fd0:	4631      	mov	r1, r6
 8001fd2:	4628      	mov	r0, r5
 8001fd4:	9206      	str	r2, [sp, #24]
 8001fd6:	47b8      	blx	r7
 8001fd8:	3001      	adds	r0, #1
 8001fda:	f43f ae9c 	beq.w	8001d16 <_printf_float+0xb6>
 8001fde:	9a06      	ldr	r2, [sp, #24]
 8001fe0:	f10b 0b01 	add.w	fp, fp, #1
 8001fe4:	e7bb      	b.n	8001f5e <_printf_float+0x2fe>
 8001fe6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001fea:	4631      	mov	r1, r6
 8001fec:	4628      	mov	r0, r5
 8001fee:	47b8      	blx	r7
 8001ff0:	3001      	adds	r0, #1
 8001ff2:	d1c0      	bne.n	8001f76 <_printf_float+0x316>
 8001ff4:	e68f      	b.n	8001d16 <_printf_float+0xb6>
 8001ff6:	9a06      	ldr	r2, [sp, #24]
 8001ff8:	464b      	mov	r3, r9
 8001ffa:	4442      	add	r2, r8
 8001ffc:	4631      	mov	r1, r6
 8001ffe:	4628      	mov	r0, r5
 8002000:	47b8      	blx	r7
 8002002:	3001      	adds	r0, #1
 8002004:	d1c3      	bne.n	8001f8e <_printf_float+0x32e>
 8002006:	e686      	b.n	8001d16 <_printf_float+0xb6>
 8002008:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800200c:	f1ba 0f01 	cmp.w	sl, #1
 8002010:	dc01      	bgt.n	8002016 <_printf_float+0x3b6>
 8002012:	07db      	lsls	r3, r3, #31
 8002014:	d536      	bpl.n	8002084 <_printf_float+0x424>
 8002016:	2301      	movs	r3, #1
 8002018:	4642      	mov	r2, r8
 800201a:	4631      	mov	r1, r6
 800201c:	4628      	mov	r0, r5
 800201e:	47b8      	blx	r7
 8002020:	3001      	adds	r0, #1
 8002022:	f43f ae78 	beq.w	8001d16 <_printf_float+0xb6>
 8002026:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800202a:	4631      	mov	r1, r6
 800202c:	4628      	mov	r0, r5
 800202e:	47b8      	blx	r7
 8002030:	3001      	adds	r0, #1
 8002032:	f43f ae70 	beq.w	8001d16 <_printf_float+0xb6>
 8002036:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800203a:	2200      	movs	r2, #0
 800203c:	2300      	movs	r3, #0
 800203e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002042:	f7fe fd41 	bl	8000ac8 <__aeabi_dcmpeq>
 8002046:	b9c0      	cbnz	r0, 800207a <_printf_float+0x41a>
 8002048:	4653      	mov	r3, sl
 800204a:	f108 0201 	add.w	r2, r8, #1
 800204e:	4631      	mov	r1, r6
 8002050:	4628      	mov	r0, r5
 8002052:	47b8      	blx	r7
 8002054:	3001      	adds	r0, #1
 8002056:	d10c      	bne.n	8002072 <_printf_float+0x412>
 8002058:	e65d      	b.n	8001d16 <_printf_float+0xb6>
 800205a:	2301      	movs	r3, #1
 800205c:	465a      	mov	r2, fp
 800205e:	4631      	mov	r1, r6
 8002060:	4628      	mov	r0, r5
 8002062:	47b8      	blx	r7
 8002064:	3001      	adds	r0, #1
 8002066:	f43f ae56 	beq.w	8001d16 <_printf_float+0xb6>
 800206a:	f108 0801 	add.w	r8, r8, #1
 800206e:	45d0      	cmp	r8, sl
 8002070:	dbf3      	blt.n	800205a <_printf_float+0x3fa>
 8002072:	464b      	mov	r3, r9
 8002074:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8002078:	e6df      	b.n	8001e3a <_printf_float+0x1da>
 800207a:	f04f 0800 	mov.w	r8, #0
 800207e:	f104 0b1a 	add.w	fp, r4, #26
 8002082:	e7f4      	b.n	800206e <_printf_float+0x40e>
 8002084:	2301      	movs	r3, #1
 8002086:	4642      	mov	r2, r8
 8002088:	e7e1      	b.n	800204e <_printf_float+0x3ee>
 800208a:	2301      	movs	r3, #1
 800208c:	464a      	mov	r2, r9
 800208e:	4631      	mov	r1, r6
 8002090:	4628      	mov	r0, r5
 8002092:	47b8      	blx	r7
 8002094:	3001      	adds	r0, #1
 8002096:	f43f ae3e 	beq.w	8001d16 <_printf_float+0xb6>
 800209a:	f108 0801 	add.w	r8, r8, #1
 800209e:	68e3      	ldr	r3, [r4, #12]
 80020a0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80020a2:	1a5b      	subs	r3, r3, r1
 80020a4:	4543      	cmp	r3, r8
 80020a6:	dcf0      	bgt.n	800208a <_printf_float+0x42a>
 80020a8:	e6fc      	b.n	8001ea4 <_printf_float+0x244>
 80020aa:	f04f 0800 	mov.w	r8, #0
 80020ae:	f104 0919 	add.w	r9, r4, #25
 80020b2:	e7f4      	b.n	800209e <_printf_float+0x43e>

080020b4 <_printf_common>:
 80020b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80020b8:	4616      	mov	r6, r2
 80020ba:	4698      	mov	r8, r3
 80020bc:	688a      	ldr	r2, [r1, #8]
 80020be:	690b      	ldr	r3, [r1, #16]
 80020c0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80020c4:	4293      	cmp	r3, r2
 80020c6:	bfb8      	it	lt
 80020c8:	4613      	movlt	r3, r2
 80020ca:	6033      	str	r3, [r6, #0]
 80020cc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80020d0:	4607      	mov	r7, r0
 80020d2:	460c      	mov	r4, r1
 80020d4:	b10a      	cbz	r2, 80020da <_printf_common+0x26>
 80020d6:	3301      	adds	r3, #1
 80020d8:	6033      	str	r3, [r6, #0]
 80020da:	6823      	ldr	r3, [r4, #0]
 80020dc:	0699      	lsls	r1, r3, #26
 80020de:	bf42      	ittt	mi
 80020e0:	6833      	ldrmi	r3, [r6, #0]
 80020e2:	3302      	addmi	r3, #2
 80020e4:	6033      	strmi	r3, [r6, #0]
 80020e6:	6825      	ldr	r5, [r4, #0]
 80020e8:	f015 0506 	ands.w	r5, r5, #6
 80020ec:	d106      	bne.n	80020fc <_printf_common+0x48>
 80020ee:	f104 0a19 	add.w	sl, r4, #25
 80020f2:	68e3      	ldr	r3, [r4, #12]
 80020f4:	6832      	ldr	r2, [r6, #0]
 80020f6:	1a9b      	subs	r3, r3, r2
 80020f8:	42ab      	cmp	r3, r5
 80020fa:	dc26      	bgt.n	800214a <_printf_common+0x96>
 80020fc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002100:	6822      	ldr	r2, [r4, #0]
 8002102:	3b00      	subs	r3, #0
 8002104:	bf18      	it	ne
 8002106:	2301      	movne	r3, #1
 8002108:	0692      	lsls	r2, r2, #26
 800210a:	d42b      	bmi.n	8002164 <_printf_common+0xb0>
 800210c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002110:	4641      	mov	r1, r8
 8002112:	4638      	mov	r0, r7
 8002114:	47c8      	blx	r9
 8002116:	3001      	adds	r0, #1
 8002118:	d01e      	beq.n	8002158 <_printf_common+0xa4>
 800211a:	6823      	ldr	r3, [r4, #0]
 800211c:	6922      	ldr	r2, [r4, #16]
 800211e:	f003 0306 	and.w	r3, r3, #6
 8002122:	2b04      	cmp	r3, #4
 8002124:	bf02      	ittt	eq
 8002126:	68e5      	ldreq	r5, [r4, #12]
 8002128:	6833      	ldreq	r3, [r6, #0]
 800212a:	1aed      	subeq	r5, r5, r3
 800212c:	68a3      	ldr	r3, [r4, #8]
 800212e:	bf0c      	ite	eq
 8002130:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002134:	2500      	movne	r5, #0
 8002136:	4293      	cmp	r3, r2
 8002138:	bfc4      	itt	gt
 800213a:	1a9b      	subgt	r3, r3, r2
 800213c:	18ed      	addgt	r5, r5, r3
 800213e:	2600      	movs	r6, #0
 8002140:	341a      	adds	r4, #26
 8002142:	42b5      	cmp	r5, r6
 8002144:	d11a      	bne.n	800217c <_printf_common+0xc8>
 8002146:	2000      	movs	r0, #0
 8002148:	e008      	b.n	800215c <_printf_common+0xa8>
 800214a:	2301      	movs	r3, #1
 800214c:	4652      	mov	r2, sl
 800214e:	4641      	mov	r1, r8
 8002150:	4638      	mov	r0, r7
 8002152:	47c8      	blx	r9
 8002154:	3001      	adds	r0, #1
 8002156:	d103      	bne.n	8002160 <_printf_common+0xac>
 8002158:	f04f 30ff 	mov.w	r0, #4294967295
 800215c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002160:	3501      	adds	r5, #1
 8002162:	e7c6      	b.n	80020f2 <_printf_common+0x3e>
 8002164:	18e1      	adds	r1, r4, r3
 8002166:	1c5a      	adds	r2, r3, #1
 8002168:	2030      	movs	r0, #48	@ 0x30
 800216a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800216e:	4422      	add	r2, r4
 8002170:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002174:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002178:	3302      	adds	r3, #2
 800217a:	e7c7      	b.n	800210c <_printf_common+0x58>
 800217c:	2301      	movs	r3, #1
 800217e:	4622      	mov	r2, r4
 8002180:	4641      	mov	r1, r8
 8002182:	4638      	mov	r0, r7
 8002184:	47c8      	blx	r9
 8002186:	3001      	adds	r0, #1
 8002188:	d0e6      	beq.n	8002158 <_printf_common+0xa4>
 800218a:	3601      	adds	r6, #1
 800218c:	e7d9      	b.n	8002142 <_printf_common+0x8e>
	...

08002190 <_printf_i>:
 8002190:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002194:	7e0f      	ldrb	r7, [r1, #24]
 8002196:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002198:	2f78      	cmp	r7, #120	@ 0x78
 800219a:	4691      	mov	r9, r2
 800219c:	4680      	mov	r8, r0
 800219e:	460c      	mov	r4, r1
 80021a0:	469a      	mov	sl, r3
 80021a2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80021a6:	d807      	bhi.n	80021b8 <_printf_i+0x28>
 80021a8:	2f62      	cmp	r7, #98	@ 0x62
 80021aa:	d80a      	bhi.n	80021c2 <_printf_i+0x32>
 80021ac:	2f00      	cmp	r7, #0
 80021ae:	f000 80d1 	beq.w	8002354 <_printf_i+0x1c4>
 80021b2:	2f58      	cmp	r7, #88	@ 0x58
 80021b4:	f000 80b8 	beq.w	8002328 <_printf_i+0x198>
 80021b8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80021bc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80021c0:	e03a      	b.n	8002238 <_printf_i+0xa8>
 80021c2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80021c6:	2b15      	cmp	r3, #21
 80021c8:	d8f6      	bhi.n	80021b8 <_printf_i+0x28>
 80021ca:	a101      	add	r1, pc, #4	@ (adr r1, 80021d0 <_printf_i+0x40>)
 80021cc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80021d0:	08002229 	.word	0x08002229
 80021d4:	0800223d 	.word	0x0800223d
 80021d8:	080021b9 	.word	0x080021b9
 80021dc:	080021b9 	.word	0x080021b9
 80021e0:	080021b9 	.word	0x080021b9
 80021e4:	080021b9 	.word	0x080021b9
 80021e8:	0800223d 	.word	0x0800223d
 80021ec:	080021b9 	.word	0x080021b9
 80021f0:	080021b9 	.word	0x080021b9
 80021f4:	080021b9 	.word	0x080021b9
 80021f8:	080021b9 	.word	0x080021b9
 80021fc:	0800233b 	.word	0x0800233b
 8002200:	08002267 	.word	0x08002267
 8002204:	080022f5 	.word	0x080022f5
 8002208:	080021b9 	.word	0x080021b9
 800220c:	080021b9 	.word	0x080021b9
 8002210:	0800235d 	.word	0x0800235d
 8002214:	080021b9 	.word	0x080021b9
 8002218:	08002267 	.word	0x08002267
 800221c:	080021b9 	.word	0x080021b9
 8002220:	080021b9 	.word	0x080021b9
 8002224:	080022fd 	.word	0x080022fd
 8002228:	6833      	ldr	r3, [r6, #0]
 800222a:	1d1a      	adds	r2, r3, #4
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	6032      	str	r2, [r6, #0]
 8002230:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002234:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002238:	2301      	movs	r3, #1
 800223a:	e09c      	b.n	8002376 <_printf_i+0x1e6>
 800223c:	6833      	ldr	r3, [r6, #0]
 800223e:	6820      	ldr	r0, [r4, #0]
 8002240:	1d19      	adds	r1, r3, #4
 8002242:	6031      	str	r1, [r6, #0]
 8002244:	0606      	lsls	r6, r0, #24
 8002246:	d501      	bpl.n	800224c <_printf_i+0xbc>
 8002248:	681d      	ldr	r5, [r3, #0]
 800224a:	e003      	b.n	8002254 <_printf_i+0xc4>
 800224c:	0645      	lsls	r5, r0, #25
 800224e:	d5fb      	bpl.n	8002248 <_printf_i+0xb8>
 8002250:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002254:	2d00      	cmp	r5, #0
 8002256:	da03      	bge.n	8002260 <_printf_i+0xd0>
 8002258:	232d      	movs	r3, #45	@ 0x2d
 800225a:	426d      	negs	r5, r5
 800225c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002260:	4858      	ldr	r0, [pc, #352]	@ (80023c4 <_printf_i+0x234>)
 8002262:	230a      	movs	r3, #10
 8002264:	e011      	b.n	800228a <_printf_i+0xfa>
 8002266:	6821      	ldr	r1, [r4, #0]
 8002268:	6833      	ldr	r3, [r6, #0]
 800226a:	0608      	lsls	r0, r1, #24
 800226c:	f853 5b04 	ldr.w	r5, [r3], #4
 8002270:	d402      	bmi.n	8002278 <_printf_i+0xe8>
 8002272:	0649      	lsls	r1, r1, #25
 8002274:	bf48      	it	mi
 8002276:	b2ad      	uxthmi	r5, r5
 8002278:	2f6f      	cmp	r7, #111	@ 0x6f
 800227a:	4852      	ldr	r0, [pc, #328]	@ (80023c4 <_printf_i+0x234>)
 800227c:	6033      	str	r3, [r6, #0]
 800227e:	bf14      	ite	ne
 8002280:	230a      	movne	r3, #10
 8002282:	2308      	moveq	r3, #8
 8002284:	2100      	movs	r1, #0
 8002286:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800228a:	6866      	ldr	r6, [r4, #4]
 800228c:	60a6      	str	r6, [r4, #8]
 800228e:	2e00      	cmp	r6, #0
 8002290:	db05      	blt.n	800229e <_printf_i+0x10e>
 8002292:	6821      	ldr	r1, [r4, #0]
 8002294:	432e      	orrs	r6, r5
 8002296:	f021 0104 	bic.w	r1, r1, #4
 800229a:	6021      	str	r1, [r4, #0]
 800229c:	d04b      	beq.n	8002336 <_printf_i+0x1a6>
 800229e:	4616      	mov	r6, r2
 80022a0:	fbb5 f1f3 	udiv	r1, r5, r3
 80022a4:	fb03 5711 	mls	r7, r3, r1, r5
 80022a8:	5dc7      	ldrb	r7, [r0, r7]
 80022aa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80022ae:	462f      	mov	r7, r5
 80022b0:	42bb      	cmp	r3, r7
 80022b2:	460d      	mov	r5, r1
 80022b4:	d9f4      	bls.n	80022a0 <_printf_i+0x110>
 80022b6:	2b08      	cmp	r3, #8
 80022b8:	d10b      	bne.n	80022d2 <_printf_i+0x142>
 80022ba:	6823      	ldr	r3, [r4, #0]
 80022bc:	07df      	lsls	r7, r3, #31
 80022be:	d508      	bpl.n	80022d2 <_printf_i+0x142>
 80022c0:	6923      	ldr	r3, [r4, #16]
 80022c2:	6861      	ldr	r1, [r4, #4]
 80022c4:	4299      	cmp	r1, r3
 80022c6:	bfde      	ittt	le
 80022c8:	2330      	movle	r3, #48	@ 0x30
 80022ca:	f806 3c01 	strble.w	r3, [r6, #-1]
 80022ce:	f106 36ff 	addle.w	r6, r6, #4294967295
 80022d2:	1b92      	subs	r2, r2, r6
 80022d4:	6122      	str	r2, [r4, #16]
 80022d6:	f8cd a000 	str.w	sl, [sp]
 80022da:	464b      	mov	r3, r9
 80022dc:	aa03      	add	r2, sp, #12
 80022de:	4621      	mov	r1, r4
 80022e0:	4640      	mov	r0, r8
 80022e2:	f7ff fee7 	bl	80020b4 <_printf_common>
 80022e6:	3001      	adds	r0, #1
 80022e8:	d14a      	bne.n	8002380 <_printf_i+0x1f0>
 80022ea:	f04f 30ff 	mov.w	r0, #4294967295
 80022ee:	b004      	add	sp, #16
 80022f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80022f4:	6823      	ldr	r3, [r4, #0]
 80022f6:	f043 0320 	orr.w	r3, r3, #32
 80022fa:	6023      	str	r3, [r4, #0]
 80022fc:	4832      	ldr	r0, [pc, #200]	@ (80023c8 <_printf_i+0x238>)
 80022fe:	2778      	movs	r7, #120	@ 0x78
 8002300:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002304:	6823      	ldr	r3, [r4, #0]
 8002306:	6831      	ldr	r1, [r6, #0]
 8002308:	061f      	lsls	r7, r3, #24
 800230a:	f851 5b04 	ldr.w	r5, [r1], #4
 800230e:	d402      	bmi.n	8002316 <_printf_i+0x186>
 8002310:	065f      	lsls	r7, r3, #25
 8002312:	bf48      	it	mi
 8002314:	b2ad      	uxthmi	r5, r5
 8002316:	6031      	str	r1, [r6, #0]
 8002318:	07d9      	lsls	r1, r3, #31
 800231a:	bf44      	itt	mi
 800231c:	f043 0320 	orrmi.w	r3, r3, #32
 8002320:	6023      	strmi	r3, [r4, #0]
 8002322:	b11d      	cbz	r5, 800232c <_printf_i+0x19c>
 8002324:	2310      	movs	r3, #16
 8002326:	e7ad      	b.n	8002284 <_printf_i+0xf4>
 8002328:	4826      	ldr	r0, [pc, #152]	@ (80023c4 <_printf_i+0x234>)
 800232a:	e7e9      	b.n	8002300 <_printf_i+0x170>
 800232c:	6823      	ldr	r3, [r4, #0]
 800232e:	f023 0320 	bic.w	r3, r3, #32
 8002332:	6023      	str	r3, [r4, #0]
 8002334:	e7f6      	b.n	8002324 <_printf_i+0x194>
 8002336:	4616      	mov	r6, r2
 8002338:	e7bd      	b.n	80022b6 <_printf_i+0x126>
 800233a:	6833      	ldr	r3, [r6, #0]
 800233c:	6825      	ldr	r5, [r4, #0]
 800233e:	6961      	ldr	r1, [r4, #20]
 8002340:	1d18      	adds	r0, r3, #4
 8002342:	6030      	str	r0, [r6, #0]
 8002344:	062e      	lsls	r6, r5, #24
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	d501      	bpl.n	800234e <_printf_i+0x1be>
 800234a:	6019      	str	r1, [r3, #0]
 800234c:	e002      	b.n	8002354 <_printf_i+0x1c4>
 800234e:	0668      	lsls	r0, r5, #25
 8002350:	d5fb      	bpl.n	800234a <_printf_i+0x1ba>
 8002352:	8019      	strh	r1, [r3, #0]
 8002354:	2300      	movs	r3, #0
 8002356:	6123      	str	r3, [r4, #16]
 8002358:	4616      	mov	r6, r2
 800235a:	e7bc      	b.n	80022d6 <_printf_i+0x146>
 800235c:	6833      	ldr	r3, [r6, #0]
 800235e:	1d1a      	adds	r2, r3, #4
 8002360:	6032      	str	r2, [r6, #0]
 8002362:	681e      	ldr	r6, [r3, #0]
 8002364:	6862      	ldr	r2, [r4, #4]
 8002366:	2100      	movs	r1, #0
 8002368:	4630      	mov	r0, r6
 800236a:	f7fd ff31 	bl	80001d0 <memchr>
 800236e:	b108      	cbz	r0, 8002374 <_printf_i+0x1e4>
 8002370:	1b80      	subs	r0, r0, r6
 8002372:	6060      	str	r0, [r4, #4]
 8002374:	6863      	ldr	r3, [r4, #4]
 8002376:	6123      	str	r3, [r4, #16]
 8002378:	2300      	movs	r3, #0
 800237a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800237e:	e7aa      	b.n	80022d6 <_printf_i+0x146>
 8002380:	6923      	ldr	r3, [r4, #16]
 8002382:	4632      	mov	r2, r6
 8002384:	4649      	mov	r1, r9
 8002386:	4640      	mov	r0, r8
 8002388:	47d0      	blx	sl
 800238a:	3001      	adds	r0, #1
 800238c:	d0ad      	beq.n	80022ea <_printf_i+0x15a>
 800238e:	6823      	ldr	r3, [r4, #0]
 8002390:	079b      	lsls	r3, r3, #30
 8002392:	d413      	bmi.n	80023bc <_printf_i+0x22c>
 8002394:	68e0      	ldr	r0, [r4, #12]
 8002396:	9b03      	ldr	r3, [sp, #12]
 8002398:	4298      	cmp	r0, r3
 800239a:	bfb8      	it	lt
 800239c:	4618      	movlt	r0, r3
 800239e:	e7a6      	b.n	80022ee <_printf_i+0x15e>
 80023a0:	2301      	movs	r3, #1
 80023a2:	4632      	mov	r2, r6
 80023a4:	4649      	mov	r1, r9
 80023a6:	4640      	mov	r0, r8
 80023a8:	47d0      	blx	sl
 80023aa:	3001      	adds	r0, #1
 80023ac:	d09d      	beq.n	80022ea <_printf_i+0x15a>
 80023ae:	3501      	adds	r5, #1
 80023b0:	68e3      	ldr	r3, [r4, #12]
 80023b2:	9903      	ldr	r1, [sp, #12]
 80023b4:	1a5b      	subs	r3, r3, r1
 80023b6:	42ab      	cmp	r3, r5
 80023b8:	dcf2      	bgt.n	80023a0 <_printf_i+0x210>
 80023ba:	e7eb      	b.n	8002394 <_printf_i+0x204>
 80023bc:	2500      	movs	r5, #0
 80023be:	f104 0619 	add.w	r6, r4, #25
 80023c2:	e7f5      	b.n	80023b0 <_printf_i+0x220>
 80023c4:	0800621a 	.word	0x0800621a
 80023c8:	0800622b 	.word	0x0800622b

080023cc <_scanf_float>:
 80023cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023d0:	b087      	sub	sp, #28
 80023d2:	4691      	mov	r9, r2
 80023d4:	9303      	str	r3, [sp, #12]
 80023d6:	688b      	ldr	r3, [r1, #8]
 80023d8:	1e5a      	subs	r2, r3, #1
 80023da:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 80023de:	bf81      	itttt	hi
 80023e0:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 80023e4:	eb03 0b05 	addhi.w	fp, r3, r5
 80023e8:	f240 135d 	movwhi	r3, #349	@ 0x15d
 80023ec:	608b      	strhi	r3, [r1, #8]
 80023ee:	680b      	ldr	r3, [r1, #0]
 80023f0:	460a      	mov	r2, r1
 80023f2:	f04f 0500 	mov.w	r5, #0
 80023f6:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 80023fa:	f842 3b1c 	str.w	r3, [r2], #28
 80023fe:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002402:	4680      	mov	r8, r0
 8002404:	460c      	mov	r4, r1
 8002406:	bf98      	it	ls
 8002408:	f04f 0b00 	movls.w	fp, #0
 800240c:	9201      	str	r2, [sp, #4]
 800240e:	4616      	mov	r6, r2
 8002410:	46aa      	mov	sl, r5
 8002412:	462f      	mov	r7, r5
 8002414:	9502      	str	r5, [sp, #8]
 8002416:	68a2      	ldr	r2, [r4, #8]
 8002418:	b15a      	cbz	r2, 8002432 <_scanf_float+0x66>
 800241a:	f8d9 3000 	ldr.w	r3, [r9]
 800241e:	781b      	ldrb	r3, [r3, #0]
 8002420:	2b4e      	cmp	r3, #78	@ 0x4e
 8002422:	d863      	bhi.n	80024ec <_scanf_float+0x120>
 8002424:	2b40      	cmp	r3, #64	@ 0x40
 8002426:	d83b      	bhi.n	80024a0 <_scanf_float+0xd4>
 8002428:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 800242c:	b2c8      	uxtb	r0, r1
 800242e:	280e      	cmp	r0, #14
 8002430:	d939      	bls.n	80024a6 <_scanf_float+0xda>
 8002432:	b11f      	cbz	r7, 800243c <_scanf_float+0x70>
 8002434:	6823      	ldr	r3, [r4, #0]
 8002436:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800243a:	6023      	str	r3, [r4, #0]
 800243c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002440:	f1ba 0f01 	cmp.w	sl, #1
 8002444:	f200 8114 	bhi.w	8002670 <_scanf_float+0x2a4>
 8002448:	9b01      	ldr	r3, [sp, #4]
 800244a:	429e      	cmp	r6, r3
 800244c:	f200 8105 	bhi.w	800265a <_scanf_float+0x28e>
 8002450:	2001      	movs	r0, #1
 8002452:	b007      	add	sp, #28
 8002454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002458:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 800245c:	2a0d      	cmp	r2, #13
 800245e:	d8e8      	bhi.n	8002432 <_scanf_float+0x66>
 8002460:	a101      	add	r1, pc, #4	@ (adr r1, 8002468 <_scanf_float+0x9c>)
 8002462:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002466:	bf00      	nop
 8002468:	080025b1 	.word	0x080025b1
 800246c:	08002433 	.word	0x08002433
 8002470:	08002433 	.word	0x08002433
 8002474:	08002433 	.word	0x08002433
 8002478:	0800260d 	.word	0x0800260d
 800247c:	080025e7 	.word	0x080025e7
 8002480:	08002433 	.word	0x08002433
 8002484:	08002433 	.word	0x08002433
 8002488:	080025bf 	.word	0x080025bf
 800248c:	08002433 	.word	0x08002433
 8002490:	08002433 	.word	0x08002433
 8002494:	08002433 	.word	0x08002433
 8002498:	08002433 	.word	0x08002433
 800249c:	0800257b 	.word	0x0800257b
 80024a0:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 80024a4:	e7da      	b.n	800245c <_scanf_float+0x90>
 80024a6:	290e      	cmp	r1, #14
 80024a8:	d8c3      	bhi.n	8002432 <_scanf_float+0x66>
 80024aa:	a001      	add	r0, pc, #4	@ (adr r0, 80024b0 <_scanf_float+0xe4>)
 80024ac:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 80024b0:	0800256b 	.word	0x0800256b
 80024b4:	08002433 	.word	0x08002433
 80024b8:	0800256b 	.word	0x0800256b
 80024bc:	080025fb 	.word	0x080025fb
 80024c0:	08002433 	.word	0x08002433
 80024c4:	0800250d 	.word	0x0800250d
 80024c8:	08002551 	.word	0x08002551
 80024cc:	08002551 	.word	0x08002551
 80024d0:	08002551 	.word	0x08002551
 80024d4:	08002551 	.word	0x08002551
 80024d8:	08002551 	.word	0x08002551
 80024dc:	08002551 	.word	0x08002551
 80024e0:	08002551 	.word	0x08002551
 80024e4:	08002551 	.word	0x08002551
 80024e8:	08002551 	.word	0x08002551
 80024ec:	2b6e      	cmp	r3, #110	@ 0x6e
 80024ee:	d809      	bhi.n	8002504 <_scanf_float+0x138>
 80024f0:	2b60      	cmp	r3, #96	@ 0x60
 80024f2:	d8b1      	bhi.n	8002458 <_scanf_float+0x8c>
 80024f4:	2b54      	cmp	r3, #84	@ 0x54
 80024f6:	d07b      	beq.n	80025f0 <_scanf_float+0x224>
 80024f8:	2b59      	cmp	r3, #89	@ 0x59
 80024fa:	d19a      	bne.n	8002432 <_scanf_float+0x66>
 80024fc:	2d07      	cmp	r5, #7
 80024fe:	d198      	bne.n	8002432 <_scanf_float+0x66>
 8002500:	2508      	movs	r5, #8
 8002502:	e02f      	b.n	8002564 <_scanf_float+0x198>
 8002504:	2b74      	cmp	r3, #116	@ 0x74
 8002506:	d073      	beq.n	80025f0 <_scanf_float+0x224>
 8002508:	2b79      	cmp	r3, #121	@ 0x79
 800250a:	e7f6      	b.n	80024fa <_scanf_float+0x12e>
 800250c:	6821      	ldr	r1, [r4, #0]
 800250e:	05c8      	lsls	r0, r1, #23
 8002510:	d51e      	bpl.n	8002550 <_scanf_float+0x184>
 8002512:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8002516:	6021      	str	r1, [r4, #0]
 8002518:	3701      	adds	r7, #1
 800251a:	f1bb 0f00 	cmp.w	fp, #0
 800251e:	d003      	beq.n	8002528 <_scanf_float+0x15c>
 8002520:	3201      	adds	r2, #1
 8002522:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002526:	60a2      	str	r2, [r4, #8]
 8002528:	68a3      	ldr	r3, [r4, #8]
 800252a:	3b01      	subs	r3, #1
 800252c:	60a3      	str	r3, [r4, #8]
 800252e:	6923      	ldr	r3, [r4, #16]
 8002530:	3301      	adds	r3, #1
 8002532:	6123      	str	r3, [r4, #16]
 8002534:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8002538:	3b01      	subs	r3, #1
 800253a:	2b00      	cmp	r3, #0
 800253c:	f8c9 3004 	str.w	r3, [r9, #4]
 8002540:	f340 8082 	ble.w	8002648 <_scanf_float+0x27c>
 8002544:	f8d9 3000 	ldr.w	r3, [r9]
 8002548:	3301      	adds	r3, #1
 800254a:	f8c9 3000 	str.w	r3, [r9]
 800254e:	e762      	b.n	8002416 <_scanf_float+0x4a>
 8002550:	eb1a 0105 	adds.w	r1, sl, r5
 8002554:	f47f af6d 	bne.w	8002432 <_scanf_float+0x66>
 8002558:	6822      	ldr	r2, [r4, #0]
 800255a:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 800255e:	6022      	str	r2, [r4, #0]
 8002560:	460d      	mov	r5, r1
 8002562:	468a      	mov	sl, r1
 8002564:	f806 3b01 	strb.w	r3, [r6], #1
 8002568:	e7de      	b.n	8002528 <_scanf_float+0x15c>
 800256a:	6822      	ldr	r2, [r4, #0]
 800256c:	0610      	lsls	r0, r2, #24
 800256e:	f57f af60 	bpl.w	8002432 <_scanf_float+0x66>
 8002572:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002576:	6022      	str	r2, [r4, #0]
 8002578:	e7f4      	b.n	8002564 <_scanf_float+0x198>
 800257a:	f1ba 0f00 	cmp.w	sl, #0
 800257e:	d10c      	bne.n	800259a <_scanf_float+0x1ce>
 8002580:	b977      	cbnz	r7, 80025a0 <_scanf_float+0x1d4>
 8002582:	6822      	ldr	r2, [r4, #0]
 8002584:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002588:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800258c:	d108      	bne.n	80025a0 <_scanf_float+0x1d4>
 800258e:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002592:	6022      	str	r2, [r4, #0]
 8002594:	f04f 0a01 	mov.w	sl, #1
 8002598:	e7e4      	b.n	8002564 <_scanf_float+0x198>
 800259a:	f1ba 0f02 	cmp.w	sl, #2
 800259e:	d050      	beq.n	8002642 <_scanf_float+0x276>
 80025a0:	2d01      	cmp	r5, #1
 80025a2:	d002      	beq.n	80025aa <_scanf_float+0x1de>
 80025a4:	2d04      	cmp	r5, #4
 80025a6:	f47f af44 	bne.w	8002432 <_scanf_float+0x66>
 80025aa:	3501      	adds	r5, #1
 80025ac:	b2ed      	uxtb	r5, r5
 80025ae:	e7d9      	b.n	8002564 <_scanf_float+0x198>
 80025b0:	f1ba 0f01 	cmp.w	sl, #1
 80025b4:	f47f af3d 	bne.w	8002432 <_scanf_float+0x66>
 80025b8:	f04f 0a02 	mov.w	sl, #2
 80025bc:	e7d2      	b.n	8002564 <_scanf_float+0x198>
 80025be:	b975      	cbnz	r5, 80025de <_scanf_float+0x212>
 80025c0:	2f00      	cmp	r7, #0
 80025c2:	f47f af37 	bne.w	8002434 <_scanf_float+0x68>
 80025c6:	6822      	ldr	r2, [r4, #0]
 80025c8:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80025cc:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80025d0:	f040 8103 	bne.w	80027da <_scanf_float+0x40e>
 80025d4:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80025d8:	6022      	str	r2, [r4, #0]
 80025da:	2501      	movs	r5, #1
 80025dc:	e7c2      	b.n	8002564 <_scanf_float+0x198>
 80025de:	2d03      	cmp	r5, #3
 80025e0:	d0e3      	beq.n	80025aa <_scanf_float+0x1de>
 80025e2:	2d05      	cmp	r5, #5
 80025e4:	e7df      	b.n	80025a6 <_scanf_float+0x1da>
 80025e6:	2d02      	cmp	r5, #2
 80025e8:	f47f af23 	bne.w	8002432 <_scanf_float+0x66>
 80025ec:	2503      	movs	r5, #3
 80025ee:	e7b9      	b.n	8002564 <_scanf_float+0x198>
 80025f0:	2d06      	cmp	r5, #6
 80025f2:	f47f af1e 	bne.w	8002432 <_scanf_float+0x66>
 80025f6:	2507      	movs	r5, #7
 80025f8:	e7b4      	b.n	8002564 <_scanf_float+0x198>
 80025fa:	6822      	ldr	r2, [r4, #0]
 80025fc:	0591      	lsls	r1, r2, #22
 80025fe:	f57f af18 	bpl.w	8002432 <_scanf_float+0x66>
 8002602:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8002606:	6022      	str	r2, [r4, #0]
 8002608:	9702      	str	r7, [sp, #8]
 800260a:	e7ab      	b.n	8002564 <_scanf_float+0x198>
 800260c:	6822      	ldr	r2, [r4, #0]
 800260e:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8002612:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8002616:	d005      	beq.n	8002624 <_scanf_float+0x258>
 8002618:	0550      	lsls	r0, r2, #21
 800261a:	f57f af0a 	bpl.w	8002432 <_scanf_float+0x66>
 800261e:	2f00      	cmp	r7, #0
 8002620:	f000 80db 	beq.w	80027da <_scanf_float+0x40e>
 8002624:	0591      	lsls	r1, r2, #22
 8002626:	bf58      	it	pl
 8002628:	9902      	ldrpl	r1, [sp, #8]
 800262a:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800262e:	bf58      	it	pl
 8002630:	1a79      	subpl	r1, r7, r1
 8002632:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8002636:	bf58      	it	pl
 8002638:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800263c:	6022      	str	r2, [r4, #0]
 800263e:	2700      	movs	r7, #0
 8002640:	e790      	b.n	8002564 <_scanf_float+0x198>
 8002642:	f04f 0a03 	mov.w	sl, #3
 8002646:	e78d      	b.n	8002564 <_scanf_float+0x198>
 8002648:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 800264c:	4649      	mov	r1, r9
 800264e:	4640      	mov	r0, r8
 8002650:	4798      	blx	r3
 8002652:	2800      	cmp	r0, #0
 8002654:	f43f aedf 	beq.w	8002416 <_scanf_float+0x4a>
 8002658:	e6eb      	b.n	8002432 <_scanf_float+0x66>
 800265a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800265e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002662:	464a      	mov	r2, r9
 8002664:	4640      	mov	r0, r8
 8002666:	4798      	blx	r3
 8002668:	6923      	ldr	r3, [r4, #16]
 800266a:	3b01      	subs	r3, #1
 800266c:	6123      	str	r3, [r4, #16]
 800266e:	e6eb      	b.n	8002448 <_scanf_float+0x7c>
 8002670:	1e6b      	subs	r3, r5, #1
 8002672:	2b06      	cmp	r3, #6
 8002674:	d824      	bhi.n	80026c0 <_scanf_float+0x2f4>
 8002676:	2d02      	cmp	r5, #2
 8002678:	d836      	bhi.n	80026e8 <_scanf_float+0x31c>
 800267a:	9b01      	ldr	r3, [sp, #4]
 800267c:	429e      	cmp	r6, r3
 800267e:	f67f aee7 	bls.w	8002450 <_scanf_float+0x84>
 8002682:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002686:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800268a:	464a      	mov	r2, r9
 800268c:	4640      	mov	r0, r8
 800268e:	4798      	blx	r3
 8002690:	6923      	ldr	r3, [r4, #16]
 8002692:	3b01      	subs	r3, #1
 8002694:	6123      	str	r3, [r4, #16]
 8002696:	e7f0      	b.n	800267a <_scanf_float+0x2ae>
 8002698:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800269c:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 80026a0:	464a      	mov	r2, r9
 80026a2:	4640      	mov	r0, r8
 80026a4:	4798      	blx	r3
 80026a6:	6923      	ldr	r3, [r4, #16]
 80026a8:	3b01      	subs	r3, #1
 80026aa:	6123      	str	r3, [r4, #16]
 80026ac:	f10a 3aff 	add.w	sl, sl, #4294967295
 80026b0:	fa5f fa8a 	uxtb.w	sl, sl
 80026b4:	f1ba 0f02 	cmp.w	sl, #2
 80026b8:	d1ee      	bne.n	8002698 <_scanf_float+0x2cc>
 80026ba:	3d03      	subs	r5, #3
 80026bc:	b2ed      	uxtb	r5, r5
 80026be:	1b76      	subs	r6, r6, r5
 80026c0:	6823      	ldr	r3, [r4, #0]
 80026c2:	05da      	lsls	r2, r3, #23
 80026c4:	d530      	bpl.n	8002728 <_scanf_float+0x35c>
 80026c6:	055b      	lsls	r3, r3, #21
 80026c8:	d511      	bpl.n	80026ee <_scanf_float+0x322>
 80026ca:	9b01      	ldr	r3, [sp, #4]
 80026cc:	429e      	cmp	r6, r3
 80026ce:	f67f aebf 	bls.w	8002450 <_scanf_float+0x84>
 80026d2:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80026d6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80026da:	464a      	mov	r2, r9
 80026dc:	4640      	mov	r0, r8
 80026de:	4798      	blx	r3
 80026e0:	6923      	ldr	r3, [r4, #16]
 80026e2:	3b01      	subs	r3, #1
 80026e4:	6123      	str	r3, [r4, #16]
 80026e6:	e7f0      	b.n	80026ca <_scanf_float+0x2fe>
 80026e8:	46aa      	mov	sl, r5
 80026ea:	46b3      	mov	fp, r6
 80026ec:	e7de      	b.n	80026ac <_scanf_float+0x2e0>
 80026ee:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80026f2:	6923      	ldr	r3, [r4, #16]
 80026f4:	2965      	cmp	r1, #101	@ 0x65
 80026f6:	f103 33ff 	add.w	r3, r3, #4294967295
 80026fa:	f106 35ff 	add.w	r5, r6, #4294967295
 80026fe:	6123      	str	r3, [r4, #16]
 8002700:	d00c      	beq.n	800271c <_scanf_float+0x350>
 8002702:	2945      	cmp	r1, #69	@ 0x45
 8002704:	d00a      	beq.n	800271c <_scanf_float+0x350>
 8002706:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800270a:	464a      	mov	r2, r9
 800270c:	4640      	mov	r0, r8
 800270e:	4798      	blx	r3
 8002710:	6923      	ldr	r3, [r4, #16]
 8002712:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002716:	3b01      	subs	r3, #1
 8002718:	1eb5      	subs	r5, r6, #2
 800271a:	6123      	str	r3, [r4, #16]
 800271c:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002720:	464a      	mov	r2, r9
 8002722:	4640      	mov	r0, r8
 8002724:	4798      	blx	r3
 8002726:	462e      	mov	r6, r5
 8002728:	6822      	ldr	r2, [r4, #0]
 800272a:	f012 0210 	ands.w	r2, r2, #16
 800272e:	d001      	beq.n	8002734 <_scanf_float+0x368>
 8002730:	2000      	movs	r0, #0
 8002732:	e68e      	b.n	8002452 <_scanf_float+0x86>
 8002734:	7032      	strb	r2, [r6, #0]
 8002736:	6823      	ldr	r3, [r4, #0]
 8002738:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800273c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002740:	d125      	bne.n	800278e <_scanf_float+0x3c2>
 8002742:	9b02      	ldr	r3, [sp, #8]
 8002744:	429f      	cmp	r7, r3
 8002746:	d00a      	beq.n	800275e <_scanf_float+0x392>
 8002748:	1bda      	subs	r2, r3, r7
 800274a:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 800274e:	429e      	cmp	r6, r3
 8002750:	bf28      	it	cs
 8002752:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8002756:	4922      	ldr	r1, [pc, #136]	@ (80027e0 <_scanf_float+0x414>)
 8002758:	4630      	mov	r0, r6
 800275a:	f000 f907 	bl	800296c <siprintf>
 800275e:	9901      	ldr	r1, [sp, #4]
 8002760:	2200      	movs	r2, #0
 8002762:	4640      	mov	r0, r8
 8002764:	f002 fbf4 	bl	8004f50 <_strtod_r>
 8002768:	9b03      	ldr	r3, [sp, #12]
 800276a:	6821      	ldr	r1, [r4, #0]
 800276c:	681b      	ldr	r3, [r3, #0]
 800276e:	f011 0f02 	tst.w	r1, #2
 8002772:	ec57 6b10 	vmov	r6, r7, d0
 8002776:	f103 0204 	add.w	r2, r3, #4
 800277a:	d015      	beq.n	80027a8 <_scanf_float+0x3dc>
 800277c:	9903      	ldr	r1, [sp, #12]
 800277e:	600a      	str	r2, [r1, #0]
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	e9c3 6700 	strd	r6, r7, [r3]
 8002786:	68e3      	ldr	r3, [r4, #12]
 8002788:	3301      	adds	r3, #1
 800278a:	60e3      	str	r3, [r4, #12]
 800278c:	e7d0      	b.n	8002730 <_scanf_float+0x364>
 800278e:	9b04      	ldr	r3, [sp, #16]
 8002790:	2b00      	cmp	r3, #0
 8002792:	d0e4      	beq.n	800275e <_scanf_float+0x392>
 8002794:	9905      	ldr	r1, [sp, #20]
 8002796:	230a      	movs	r3, #10
 8002798:	3101      	adds	r1, #1
 800279a:	4640      	mov	r0, r8
 800279c:	f002 fc58 	bl	8005050 <_strtol_r>
 80027a0:	9b04      	ldr	r3, [sp, #16]
 80027a2:	9e05      	ldr	r6, [sp, #20]
 80027a4:	1ac2      	subs	r2, r0, r3
 80027a6:	e7d0      	b.n	800274a <_scanf_float+0x37e>
 80027a8:	f011 0f04 	tst.w	r1, #4
 80027ac:	9903      	ldr	r1, [sp, #12]
 80027ae:	600a      	str	r2, [r1, #0]
 80027b0:	d1e6      	bne.n	8002780 <_scanf_float+0x3b4>
 80027b2:	681d      	ldr	r5, [r3, #0]
 80027b4:	4632      	mov	r2, r6
 80027b6:	463b      	mov	r3, r7
 80027b8:	4630      	mov	r0, r6
 80027ba:	4639      	mov	r1, r7
 80027bc:	f7fe f9b6 	bl	8000b2c <__aeabi_dcmpun>
 80027c0:	b128      	cbz	r0, 80027ce <_scanf_float+0x402>
 80027c2:	4808      	ldr	r0, [pc, #32]	@ (80027e4 <_scanf_float+0x418>)
 80027c4:	f000 f9b8 	bl	8002b38 <nanf>
 80027c8:	ed85 0a00 	vstr	s0, [r5]
 80027cc:	e7db      	b.n	8002786 <_scanf_float+0x3ba>
 80027ce:	4630      	mov	r0, r6
 80027d0:	4639      	mov	r1, r7
 80027d2:	f7fe fa09 	bl	8000be8 <__aeabi_d2f>
 80027d6:	6028      	str	r0, [r5, #0]
 80027d8:	e7d5      	b.n	8002786 <_scanf_float+0x3ba>
 80027da:	2700      	movs	r7, #0
 80027dc:	e62e      	b.n	800243c <_scanf_float+0x70>
 80027de:	bf00      	nop
 80027e0:	0800623c 	.word	0x0800623c
 80027e4:	0800637d 	.word	0x0800637d

080027e8 <std>:
 80027e8:	2300      	movs	r3, #0
 80027ea:	b510      	push	{r4, lr}
 80027ec:	4604      	mov	r4, r0
 80027ee:	e9c0 3300 	strd	r3, r3, [r0]
 80027f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80027f6:	6083      	str	r3, [r0, #8]
 80027f8:	8181      	strh	r1, [r0, #12]
 80027fa:	6643      	str	r3, [r0, #100]	@ 0x64
 80027fc:	81c2      	strh	r2, [r0, #14]
 80027fe:	6183      	str	r3, [r0, #24]
 8002800:	4619      	mov	r1, r3
 8002802:	2208      	movs	r2, #8
 8002804:	305c      	adds	r0, #92	@ 0x5c
 8002806:	f000 f916 	bl	8002a36 <memset>
 800280a:	4b0d      	ldr	r3, [pc, #52]	@ (8002840 <std+0x58>)
 800280c:	6263      	str	r3, [r4, #36]	@ 0x24
 800280e:	4b0d      	ldr	r3, [pc, #52]	@ (8002844 <std+0x5c>)
 8002810:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002812:	4b0d      	ldr	r3, [pc, #52]	@ (8002848 <std+0x60>)
 8002814:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002816:	4b0d      	ldr	r3, [pc, #52]	@ (800284c <std+0x64>)
 8002818:	6323      	str	r3, [r4, #48]	@ 0x30
 800281a:	4b0d      	ldr	r3, [pc, #52]	@ (8002850 <std+0x68>)
 800281c:	6224      	str	r4, [r4, #32]
 800281e:	429c      	cmp	r4, r3
 8002820:	d006      	beq.n	8002830 <std+0x48>
 8002822:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002826:	4294      	cmp	r4, r2
 8002828:	d002      	beq.n	8002830 <std+0x48>
 800282a:	33d0      	adds	r3, #208	@ 0xd0
 800282c:	429c      	cmp	r4, r3
 800282e:	d105      	bne.n	800283c <std+0x54>
 8002830:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002838:	f000 b97a 	b.w	8002b30 <__retarget_lock_init_recursive>
 800283c:	bd10      	pop	{r4, pc}
 800283e:	bf00      	nop
 8002840:	080029b1 	.word	0x080029b1
 8002844:	080029d3 	.word	0x080029d3
 8002848:	08002a0b 	.word	0x08002a0b
 800284c:	08002a2f 	.word	0x08002a2f
 8002850:	20000228 	.word	0x20000228

08002854 <stdio_exit_handler>:
 8002854:	4a02      	ldr	r2, [pc, #8]	@ (8002860 <stdio_exit_handler+0xc>)
 8002856:	4903      	ldr	r1, [pc, #12]	@ (8002864 <stdio_exit_handler+0x10>)
 8002858:	4803      	ldr	r0, [pc, #12]	@ (8002868 <stdio_exit_handler+0x14>)
 800285a:	f000 b869 	b.w	8002930 <_fwalk_sglue>
 800285e:	bf00      	nop
 8002860:	20000014 	.word	0x20000014
 8002864:	0800540d 	.word	0x0800540d
 8002868:	20000024 	.word	0x20000024

0800286c <cleanup_stdio>:
 800286c:	6841      	ldr	r1, [r0, #4]
 800286e:	4b0c      	ldr	r3, [pc, #48]	@ (80028a0 <cleanup_stdio+0x34>)
 8002870:	4299      	cmp	r1, r3
 8002872:	b510      	push	{r4, lr}
 8002874:	4604      	mov	r4, r0
 8002876:	d001      	beq.n	800287c <cleanup_stdio+0x10>
 8002878:	f002 fdc8 	bl	800540c <_fflush_r>
 800287c:	68a1      	ldr	r1, [r4, #8]
 800287e:	4b09      	ldr	r3, [pc, #36]	@ (80028a4 <cleanup_stdio+0x38>)
 8002880:	4299      	cmp	r1, r3
 8002882:	d002      	beq.n	800288a <cleanup_stdio+0x1e>
 8002884:	4620      	mov	r0, r4
 8002886:	f002 fdc1 	bl	800540c <_fflush_r>
 800288a:	68e1      	ldr	r1, [r4, #12]
 800288c:	4b06      	ldr	r3, [pc, #24]	@ (80028a8 <cleanup_stdio+0x3c>)
 800288e:	4299      	cmp	r1, r3
 8002890:	d004      	beq.n	800289c <cleanup_stdio+0x30>
 8002892:	4620      	mov	r0, r4
 8002894:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002898:	f002 bdb8 	b.w	800540c <_fflush_r>
 800289c:	bd10      	pop	{r4, pc}
 800289e:	bf00      	nop
 80028a0:	20000228 	.word	0x20000228
 80028a4:	20000290 	.word	0x20000290
 80028a8:	200002f8 	.word	0x200002f8

080028ac <global_stdio_init.part.0>:
 80028ac:	b510      	push	{r4, lr}
 80028ae:	4b0b      	ldr	r3, [pc, #44]	@ (80028dc <global_stdio_init.part.0+0x30>)
 80028b0:	4c0b      	ldr	r4, [pc, #44]	@ (80028e0 <global_stdio_init.part.0+0x34>)
 80028b2:	4a0c      	ldr	r2, [pc, #48]	@ (80028e4 <global_stdio_init.part.0+0x38>)
 80028b4:	601a      	str	r2, [r3, #0]
 80028b6:	4620      	mov	r0, r4
 80028b8:	2200      	movs	r2, #0
 80028ba:	2104      	movs	r1, #4
 80028bc:	f7ff ff94 	bl	80027e8 <std>
 80028c0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80028c4:	2201      	movs	r2, #1
 80028c6:	2109      	movs	r1, #9
 80028c8:	f7ff ff8e 	bl	80027e8 <std>
 80028cc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80028d0:	2202      	movs	r2, #2
 80028d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80028d6:	2112      	movs	r1, #18
 80028d8:	f7ff bf86 	b.w	80027e8 <std>
 80028dc:	20000360 	.word	0x20000360
 80028e0:	20000228 	.word	0x20000228
 80028e4:	08002855 	.word	0x08002855

080028e8 <__sfp_lock_acquire>:
 80028e8:	4801      	ldr	r0, [pc, #4]	@ (80028f0 <__sfp_lock_acquire+0x8>)
 80028ea:	f000 b922 	b.w	8002b32 <__retarget_lock_acquire_recursive>
 80028ee:	bf00      	nop
 80028f0:	20000369 	.word	0x20000369

080028f4 <__sfp_lock_release>:
 80028f4:	4801      	ldr	r0, [pc, #4]	@ (80028fc <__sfp_lock_release+0x8>)
 80028f6:	f000 b91d 	b.w	8002b34 <__retarget_lock_release_recursive>
 80028fa:	bf00      	nop
 80028fc:	20000369 	.word	0x20000369

08002900 <__sinit>:
 8002900:	b510      	push	{r4, lr}
 8002902:	4604      	mov	r4, r0
 8002904:	f7ff fff0 	bl	80028e8 <__sfp_lock_acquire>
 8002908:	6a23      	ldr	r3, [r4, #32]
 800290a:	b11b      	cbz	r3, 8002914 <__sinit+0x14>
 800290c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002910:	f7ff bff0 	b.w	80028f4 <__sfp_lock_release>
 8002914:	4b04      	ldr	r3, [pc, #16]	@ (8002928 <__sinit+0x28>)
 8002916:	6223      	str	r3, [r4, #32]
 8002918:	4b04      	ldr	r3, [pc, #16]	@ (800292c <__sinit+0x2c>)
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	2b00      	cmp	r3, #0
 800291e:	d1f5      	bne.n	800290c <__sinit+0xc>
 8002920:	f7ff ffc4 	bl	80028ac <global_stdio_init.part.0>
 8002924:	e7f2      	b.n	800290c <__sinit+0xc>
 8002926:	bf00      	nop
 8002928:	0800286d 	.word	0x0800286d
 800292c:	20000360 	.word	0x20000360

08002930 <_fwalk_sglue>:
 8002930:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002934:	4607      	mov	r7, r0
 8002936:	4688      	mov	r8, r1
 8002938:	4614      	mov	r4, r2
 800293a:	2600      	movs	r6, #0
 800293c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002940:	f1b9 0901 	subs.w	r9, r9, #1
 8002944:	d505      	bpl.n	8002952 <_fwalk_sglue+0x22>
 8002946:	6824      	ldr	r4, [r4, #0]
 8002948:	2c00      	cmp	r4, #0
 800294a:	d1f7      	bne.n	800293c <_fwalk_sglue+0xc>
 800294c:	4630      	mov	r0, r6
 800294e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002952:	89ab      	ldrh	r3, [r5, #12]
 8002954:	2b01      	cmp	r3, #1
 8002956:	d907      	bls.n	8002968 <_fwalk_sglue+0x38>
 8002958:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800295c:	3301      	adds	r3, #1
 800295e:	d003      	beq.n	8002968 <_fwalk_sglue+0x38>
 8002960:	4629      	mov	r1, r5
 8002962:	4638      	mov	r0, r7
 8002964:	47c0      	blx	r8
 8002966:	4306      	orrs	r6, r0
 8002968:	3568      	adds	r5, #104	@ 0x68
 800296a:	e7e9      	b.n	8002940 <_fwalk_sglue+0x10>

0800296c <siprintf>:
 800296c:	b40e      	push	{r1, r2, r3}
 800296e:	b510      	push	{r4, lr}
 8002970:	b09d      	sub	sp, #116	@ 0x74
 8002972:	ab1f      	add	r3, sp, #124	@ 0x7c
 8002974:	9002      	str	r0, [sp, #8]
 8002976:	9006      	str	r0, [sp, #24]
 8002978:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800297c:	480a      	ldr	r0, [pc, #40]	@ (80029a8 <siprintf+0x3c>)
 800297e:	9107      	str	r1, [sp, #28]
 8002980:	9104      	str	r1, [sp, #16]
 8002982:	490a      	ldr	r1, [pc, #40]	@ (80029ac <siprintf+0x40>)
 8002984:	f853 2b04 	ldr.w	r2, [r3], #4
 8002988:	9105      	str	r1, [sp, #20]
 800298a:	2400      	movs	r4, #0
 800298c:	a902      	add	r1, sp, #8
 800298e:	6800      	ldr	r0, [r0, #0]
 8002990:	9301      	str	r3, [sp, #4]
 8002992:	941b      	str	r4, [sp, #108]	@ 0x6c
 8002994:	f002 fbba 	bl	800510c <_svfiprintf_r>
 8002998:	9b02      	ldr	r3, [sp, #8]
 800299a:	701c      	strb	r4, [r3, #0]
 800299c:	b01d      	add	sp, #116	@ 0x74
 800299e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80029a2:	b003      	add	sp, #12
 80029a4:	4770      	bx	lr
 80029a6:	bf00      	nop
 80029a8:	20000020 	.word	0x20000020
 80029ac:	ffff0208 	.word	0xffff0208

080029b0 <__sread>:
 80029b0:	b510      	push	{r4, lr}
 80029b2:	460c      	mov	r4, r1
 80029b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80029b8:	f000 f86c 	bl	8002a94 <_read_r>
 80029bc:	2800      	cmp	r0, #0
 80029be:	bfab      	itete	ge
 80029c0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80029c2:	89a3      	ldrhlt	r3, [r4, #12]
 80029c4:	181b      	addge	r3, r3, r0
 80029c6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80029ca:	bfac      	ite	ge
 80029cc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80029ce:	81a3      	strhlt	r3, [r4, #12]
 80029d0:	bd10      	pop	{r4, pc}

080029d2 <__swrite>:
 80029d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80029d6:	461f      	mov	r7, r3
 80029d8:	898b      	ldrh	r3, [r1, #12]
 80029da:	05db      	lsls	r3, r3, #23
 80029dc:	4605      	mov	r5, r0
 80029de:	460c      	mov	r4, r1
 80029e0:	4616      	mov	r6, r2
 80029e2:	d505      	bpl.n	80029f0 <__swrite+0x1e>
 80029e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80029e8:	2302      	movs	r3, #2
 80029ea:	2200      	movs	r2, #0
 80029ec:	f000 f840 	bl	8002a70 <_lseek_r>
 80029f0:	89a3      	ldrh	r3, [r4, #12]
 80029f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80029f6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80029fa:	81a3      	strh	r3, [r4, #12]
 80029fc:	4632      	mov	r2, r6
 80029fe:	463b      	mov	r3, r7
 8002a00:	4628      	mov	r0, r5
 8002a02:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002a06:	f000 b857 	b.w	8002ab8 <_write_r>

08002a0a <__sseek>:
 8002a0a:	b510      	push	{r4, lr}
 8002a0c:	460c      	mov	r4, r1
 8002a0e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a12:	f000 f82d 	bl	8002a70 <_lseek_r>
 8002a16:	1c43      	adds	r3, r0, #1
 8002a18:	89a3      	ldrh	r3, [r4, #12]
 8002a1a:	bf15      	itete	ne
 8002a1c:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002a1e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002a22:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002a26:	81a3      	strheq	r3, [r4, #12]
 8002a28:	bf18      	it	ne
 8002a2a:	81a3      	strhne	r3, [r4, #12]
 8002a2c:	bd10      	pop	{r4, pc}

08002a2e <__sclose>:
 8002a2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a32:	f000 b80d 	b.w	8002a50 <_close_r>

08002a36 <memset>:
 8002a36:	4402      	add	r2, r0
 8002a38:	4603      	mov	r3, r0
 8002a3a:	4293      	cmp	r3, r2
 8002a3c:	d100      	bne.n	8002a40 <memset+0xa>
 8002a3e:	4770      	bx	lr
 8002a40:	f803 1b01 	strb.w	r1, [r3], #1
 8002a44:	e7f9      	b.n	8002a3a <memset+0x4>
	...

08002a48 <_localeconv_r>:
 8002a48:	4800      	ldr	r0, [pc, #0]	@ (8002a4c <_localeconv_r+0x4>)
 8002a4a:	4770      	bx	lr
 8002a4c:	20000160 	.word	0x20000160

08002a50 <_close_r>:
 8002a50:	b538      	push	{r3, r4, r5, lr}
 8002a52:	4d06      	ldr	r5, [pc, #24]	@ (8002a6c <_close_r+0x1c>)
 8002a54:	2300      	movs	r3, #0
 8002a56:	4604      	mov	r4, r0
 8002a58:	4608      	mov	r0, r1
 8002a5a:	602b      	str	r3, [r5, #0]
 8002a5c:	f7fe ffce 	bl	80019fc <_close>
 8002a60:	1c43      	adds	r3, r0, #1
 8002a62:	d102      	bne.n	8002a6a <_close_r+0x1a>
 8002a64:	682b      	ldr	r3, [r5, #0]
 8002a66:	b103      	cbz	r3, 8002a6a <_close_r+0x1a>
 8002a68:	6023      	str	r3, [r4, #0]
 8002a6a:	bd38      	pop	{r3, r4, r5, pc}
 8002a6c:	20000364 	.word	0x20000364

08002a70 <_lseek_r>:
 8002a70:	b538      	push	{r3, r4, r5, lr}
 8002a72:	4d07      	ldr	r5, [pc, #28]	@ (8002a90 <_lseek_r+0x20>)
 8002a74:	4604      	mov	r4, r0
 8002a76:	4608      	mov	r0, r1
 8002a78:	4611      	mov	r1, r2
 8002a7a:	2200      	movs	r2, #0
 8002a7c:	602a      	str	r2, [r5, #0]
 8002a7e:	461a      	mov	r2, r3
 8002a80:	f7fe ffe3 	bl	8001a4a <_lseek>
 8002a84:	1c43      	adds	r3, r0, #1
 8002a86:	d102      	bne.n	8002a8e <_lseek_r+0x1e>
 8002a88:	682b      	ldr	r3, [r5, #0]
 8002a8a:	b103      	cbz	r3, 8002a8e <_lseek_r+0x1e>
 8002a8c:	6023      	str	r3, [r4, #0]
 8002a8e:	bd38      	pop	{r3, r4, r5, pc}
 8002a90:	20000364 	.word	0x20000364

08002a94 <_read_r>:
 8002a94:	b538      	push	{r3, r4, r5, lr}
 8002a96:	4d07      	ldr	r5, [pc, #28]	@ (8002ab4 <_read_r+0x20>)
 8002a98:	4604      	mov	r4, r0
 8002a9a:	4608      	mov	r0, r1
 8002a9c:	4611      	mov	r1, r2
 8002a9e:	2200      	movs	r2, #0
 8002aa0:	602a      	str	r2, [r5, #0]
 8002aa2:	461a      	mov	r2, r3
 8002aa4:	f7fe ff71 	bl	800198a <_read>
 8002aa8:	1c43      	adds	r3, r0, #1
 8002aaa:	d102      	bne.n	8002ab2 <_read_r+0x1e>
 8002aac:	682b      	ldr	r3, [r5, #0]
 8002aae:	b103      	cbz	r3, 8002ab2 <_read_r+0x1e>
 8002ab0:	6023      	str	r3, [r4, #0]
 8002ab2:	bd38      	pop	{r3, r4, r5, pc}
 8002ab4:	20000364 	.word	0x20000364

08002ab8 <_write_r>:
 8002ab8:	b538      	push	{r3, r4, r5, lr}
 8002aba:	4d07      	ldr	r5, [pc, #28]	@ (8002ad8 <_write_r+0x20>)
 8002abc:	4604      	mov	r4, r0
 8002abe:	4608      	mov	r0, r1
 8002ac0:	4611      	mov	r1, r2
 8002ac2:	2200      	movs	r2, #0
 8002ac4:	602a      	str	r2, [r5, #0]
 8002ac6:	461a      	mov	r2, r3
 8002ac8:	f7fe ff7c 	bl	80019c4 <_write>
 8002acc:	1c43      	adds	r3, r0, #1
 8002ace:	d102      	bne.n	8002ad6 <_write_r+0x1e>
 8002ad0:	682b      	ldr	r3, [r5, #0]
 8002ad2:	b103      	cbz	r3, 8002ad6 <_write_r+0x1e>
 8002ad4:	6023      	str	r3, [r4, #0]
 8002ad6:	bd38      	pop	{r3, r4, r5, pc}
 8002ad8:	20000364 	.word	0x20000364

08002adc <__errno>:
 8002adc:	4b01      	ldr	r3, [pc, #4]	@ (8002ae4 <__errno+0x8>)
 8002ade:	6818      	ldr	r0, [r3, #0]
 8002ae0:	4770      	bx	lr
 8002ae2:	bf00      	nop
 8002ae4:	20000020 	.word	0x20000020

08002ae8 <__libc_init_array>:
 8002ae8:	b570      	push	{r4, r5, r6, lr}
 8002aea:	4d0d      	ldr	r5, [pc, #52]	@ (8002b20 <__libc_init_array+0x38>)
 8002aec:	4c0d      	ldr	r4, [pc, #52]	@ (8002b24 <__libc_init_array+0x3c>)
 8002aee:	1b64      	subs	r4, r4, r5
 8002af0:	10a4      	asrs	r4, r4, #2
 8002af2:	2600      	movs	r6, #0
 8002af4:	42a6      	cmp	r6, r4
 8002af6:	d109      	bne.n	8002b0c <__libc_init_array+0x24>
 8002af8:	4d0b      	ldr	r5, [pc, #44]	@ (8002b28 <__libc_init_array+0x40>)
 8002afa:	4c0c      	ldr	r4, [pc, #48]	@ (8002b2c <__libc_init_array+0x44>)
 8002afc:	f003 fb76 	bl	80061ec <_init>
 8002b00:	1b64      	subs	r4, r4, r5
 8002b02:	10a4      	asrs	r4, r4, #2
 8002b04:	2600      	movs	r6, #0
 8002b06:	42a6      	cmp	r6, r4
 8002b08:	d105      	bne.n	8002b16 <__libc_init_array+0x2e>
 8002b0a:	bd70      	pop	{r4, r5, r6, pc}
 8002b0c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002b10:	4798      	blx	r3
 8002b12:	3601      	adds	r6, #1
 8002b14:	e7ee      	b.n	8002af4 <__libc_init_array+0xc>
 8002b16:	f855 3b04 	ldr.w	r3, [r5], #4
 8002b1a:	4798      	blx	r3
 8002b1c:	3601      	adds	r6, #1
 8002b1e:	e7f2      	b.n	8002b06 <__libc_init_array+0x1e>
 8002b20:	0800663c 	.word	0x0800663c
 8002b24:	0800663c 	.word	0x0800663c
 8002b28:	0800663c 	.word	0x0800663c
 8002b2c:	08006640 	.word	0x08006640

08002b30 <__retarget_lock_init_recursive>:
 8002b30:	4770      	bx	lr

08002b32 <__retarget_lock_acquire_recursive>:
 8002b32:	4770      	bx	lr

08002b34 <__retarget_lock_release_recursive>:
 8002b34:	4770      	bx	lr
	...

08002b38 <nanf>:
 8002b38:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002b40 <nanf+0x8>
 8002b3c:	4770      	bx	lr
 8002b3e:	bf00      	nop
 8002b40:	7fc00000 	.word	0x7fc00000

08002b44 <quorem>:
 8002b44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b48:	6903      	ldr	r3, [r0, #16]
 8002b4a:	690c      	ldr	r4, [r1, #16]
 8002b4c:	42a3      	cmp	r3, r4
 8002b4e:	4607      	mov	r7, r0
 8002b50:	db7e      	blt.n	8002c50 <quorem+0x10c>
 8002b52:	3c01      	subs	r4, #1
 8002b54:	f101 0814 	add.w	r8, r1, #20
 8002b58:	00a3      	lsls	r3, r4, #2
 8002b5a:	f100 0514 	add.w	r5, r0, #20
 8002b5e:	9300      	str	r3, [sp, #0]
 8002b60:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002b64:	9301      	str	r3, [sp, #4]
 8002b66:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002b6a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002b6e:	3301      	adds	r3, #1
 8002b70:	429a      	cmp	r2, r3
 8002b72:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002b76:	fbb2 f6f3 	udiv	r6, r2, r3
 8002b7a:	d32e      	bcc.n	8002bda <quorem+0x96>
 8002b7c:	f04f 0a00 	mov.w	sl, #0
 8002b80:	46c4      	mov	ip, r8
 8002b82:	46ae      	mov	lr, r5
 8002b84:	46d3      	mov	fp, sl
 8002b86:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002b8a:	b298      	uxth	r0, r3
 8002b8c:	fb06 a000 	mla	r0, r6, r0, sl
 8002b90:	0c02      	lsrs	r2, r0, #16
 8002b92:	0c1b      	lsrs	r3, r3, #16
 8002b94:	fb06 2303 	mla	r3, r6, r3, r2
 8002b98:	f8de 2000 	ldr.w	r2, [lr]
 8002b9c:	b280      	uxth	r0, r0
 8002b9e:	b292      	uxth	r2, r2
 8002ba0:	1a12      	subs	r2, r2, r0
 8002ba2:	445a      	add	r2, fp
 8002ba4:	f8de 0000 	ldr.w	r0, [lr]
 8002ba8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002bac:	b29b      	uxth	r3, r3
 8002bae:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002bb2:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002bb6:	b292      	uxth	r2, r2
 8002bb8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002bbc:	45e1      	cmp	r9, ip
 8002bbe:	f84e 2b04 	str.w	r2, [lr], #4
 8002bc2:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002bc6:	d2de      	bcs.n	8002b86 <quorem+0x42>
 8002bc8:	9b00      	ldr	r3, [sp, #0]
 8002bca:	58eb      	ldr	r3, [r5, r3]
 8002bcc:	b92b      	cbnz	r3, 8002bda <quorem+0x96>
 8002bce:	9b01      	ldr	r3, [sp, #4]
 8002bd0:	3b04      	subs	r3, #4
 8002bd2:	429d      	cmp	r5, r3
 8002bd4:	461a      	mov	r2, r3
 8002bd6:	d32f      	bcc.n	8002c38 <quorem+0xf4>
 8002bd8:	613c      	str	r4, [r7, #16]
 8002bda:	4638      	mov	r0, r7
 8002bdc:	f001 f9c8 	bl	8003f70 <__mcmp>
 8002be0:	2800      	cmp	r0, #0
 8002be2:	db25      	blt.n	8002c30 <quorem+0xec>
 8002be4:	4629      	mov	r1, r5
 8002be6:	2000      	movs	r0, #0
 8002be8:	f858 2b04 	ldr.w	r2, [r8], #4
 8002bec:	f8d1 c000 	ldr.w	ip, [r1]
 8002bf0:	fa1f fe82 	uxth.w	lr, r2
 8002bf4:	fa1f f38c 	uxth.w	r3, ip
 8002bf8:	eba3 030e 	sub.w	r3, r3, lr
 8002bfc:	4403      	add	r3, r0
 8002bfe:	0c12      	lsrs	r2, r2, #16
 8002c00:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002c04:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002c08:	b29b      	uxth	r3, r3
 8002c0a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002c0e:	45c1      	cmp	r9, r8
 8002c10:	f841 3b04 	str.w	r3, [r1], #4
 8002c14:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002c18:	d2e6      	bcs.n	8002be8 <quorem+0xa4>
 8002c1a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002c1e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002c22:	b922      	cbnz	r2, 8002c2e <quorem+0xea>
 8002c24:	3b04      	subs	r3, #4
 8002c26:	429d      	cmp	r5, r3
 8002c28:	461a      	mov	r2, r3
 8002c2a:	d30b      	bcc.n	8002c44 <quorem+0x100>
 8002c2c:	613c      	str	r4, [r7, #16]
 8002c2e:	3601      	adds	r6, #1
 8002c30:	4630      	mov	r0, r6
 8002c32:	b003      	add	sp, #12
 8002c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c38:	6812      	ldr	r2, [r2, #0]
 8002c3a:	3b04      	subs	r3, #4
 8002c3c:	2a00      	cmp	r2, #0
 8002c3e:	d1cb      	bne.n	8002bd8 <quorem+0x94>
 8002c40:	3c01      	subs	r4, #1
 8002c42:	e7c6      	b.n	8002bd2 <quorem+0x8e>
 8002c44:	6812      	ldr	r2, [r2, #0]
 8002c46:	3b04      	subs	r3, #4
 8002c48:	2a00      	cmp	r2, #0
 8002c4a:	d1ef      	bne.n	8002c2c <quorem+0xe8>
 8002c4c:	3c01      	subs	r4, #1
 8002c4e:	e7ea      	b.n	8002c26 <quorem+0xe2>
 8002c50:	2000      	movs	r0, #0
 8002c52:	e7ee      	b.n	8002c32 <quorem+0xee>
 8002c54:	0000      	movs	r0, r0
	...

08002c58 <_dtoa_r>:
 8002c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c5c:	69c7      	ldr	r7, [r0, #28]
 8002c5e:	b097      	sub	sp, #92	@ 0x5c
 8002c60:	ed8d 0b04 	vstr	d0, [sp, #16]
 8002c64:	ec55 4b10 	vmov	r4, r5, d0
 8002c68:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8002c6a:	9107      	str	r1, [sp, #28]
 8002c6c:	4681      	mov	r9, r0
 8002c6e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002c70:	9311      	str	r3, [sp, #68]	@ 0x44
 8002c72:	b97f      	cbnz	r7, 8002c94 <_dtoa_r+0x3c>
 8002c74:	2010      	movs	r0, #16
 8002c76:	f000 fe09 	bl	800388c <malloc>
 8002c7a:	4602      	mov	r2, r0
 8002c7c:	f8c9 001c 	str.w	r0, [r9, #28]
 8002c80:	b920      	cbnz	r0, 8002c8c <_dtoa_r+0x34>
 8002c82:	4ba9      	ldr	r3, [pc, #676]	@ (8002f28 <_dtoa_r+0x2d0>)
 8002c84:	21ef      	movs	r1, #239	@ 0xef
 8002c86:	48a9      	ldr	r0, [pc, #676]	@ (8002f2c <_dtoa_r+0x2d4>)
 8002c88:	f002 fc3a 	bl	8005500 <__assert_func>
 8002c8c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002c90:	6007      	str	r7, [r0, #0]
 8002c92:	60c7      	str	r7, [r0, #12]
 8002c94:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002c98:	6819      	ldr	r1, [r3, #0]
 8002c9a:	b159      	cbz	r1, 8002cb4 <_dtoa_r+0x5c>
 8002c9c:	685a      	ldr	r2, [r3, #4]
 8002c9e:	604a      	str	r2, [r1, #4]
 8002ca0:	2301      	movs	r3, #1
 8002ca2:	4093      	lsls	r3, r2
 8002ca4:	608b      	str	r3, [r1, #8]
 8002ca6:	4648      	mov	r0, r9
 8002ca8:	f000 fee6 	bl	8003a78 <_Bfree>
 8002cac:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002cb0:	2200      	movs	r2, #0
 8002cb2:	601a      	str	r2, [r3, #0]
 8002cb4:	1e2b      	subs	r3, r5, #0
 8002cb6:	bfb9      	ittee	lt
 8002cb8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002cbc:	9305      	strlt	r3, [sp, #20]
 8002cbe:	2300      	movge	r3, #0
 8002cc0:	6033      	strge	r3, [r6, #0]
 8002cc2:	9f05      	ldr	r7, [sp, #20]
 8002cc4:	4b9a      	ldr	r3, [pc, #616]	@ (8002f30 <_dtoa_r+0x2d8>)
 8002cc6:	bfbc      	itt	lt
 8002cc8:	2201      	movlt	r2, #1
 8002cca:	6032      	strlt	r2, [r6, #0]
 8002ccc:	43bb      	bics	r3, r7
 8002cce:	d112      	bne.n	8002cf6 <_dtoa_r+0x9e>
 8002cd0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002cd2:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002cd6:	6013      	str	r3, [r2, #0]
 8002cd8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002cdc:	4323      	orrs	r3, r4
 8002cde:	f000 855a 	beq.w	8003796 <_dtoa_r+0xb3e>
 8002ce2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002ce4:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 8002f44 <_dtoa_r+0x2ec>
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	f000 855c 	beq.w	80037a6 <_dtoa_r+0xb4e>
 8002cee:	f10a 0303 	add.w	r3, sl, #3
 8002cf2:	f000 bd56 	b.w	80037a2 <_dtoa_r+0xb4a>
 8002cf6:	ed9d 7b04 	vldr	d7, [sp, #16]
 8002cfa:	2200      	movs	r2, #0
 8002cfc:	ec51 0b17 	vmov	r0, r1, d7
 8002d00:	2300      	movs	r3, #0
 8002d02:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 8002d06:	f7fd fedf 	bl	8000ac8 <__aeabi_dcmpeq>
 8002d0a:	4680      	mov	r8, r0
 8002d0c:	b158      	cbz	r0, 8002d26 <_dtoa_r+0xce>
 8002d0e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002d10:	2301      	movs	r3, #1
 8002d12:	6013      	str	r3, [r2, #0]
 8002d14:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002d16:	b113      	cbz	r3, 8002d1e <_dtoa_r+0xc6>
 8002d18:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8002d1a:	4b86      	ldr	r3, [pc, #536]	@ (8002f34 <_dtoa_r+0x2dc>)
 8002d1c:	6013      	str	r3, [r2, #0]
 8002d1e:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8002f48 <_dtoa_r+0x2f0>
 8002d22:	f000 bd40 	b.w	80037a6 <_dtoa_r+0xb4e>
 8002d26:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8002d2a:	aa14      	add	r2, sp, #80	@ 0x50
 8002d2c:	a915      	add	r1, sp, #84	@ 0x54
 8002d2e:	4648      	mov	r0, r9
 8002d30:	f001 fa3e 	bl	80041b0 <__d2b>
 8002d34:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002d38:	9002      	str	r0, [sp, #8]
 8002d3a:	2e00      	cmp	r6, #0
 8002d3c:	d078      	beq.n	8002e30 <_dtoa_r+0x1d8>
 8002d3e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002d40:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8002d44:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002d48:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002d4c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002d50:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002d54:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002d58:	4619      	mov	r1, r3
 8002d5a:	2200      	movs	r2, #0
 8002d5c:	4b76      	ldr	r3, [pc, #472]	@ (8002f38 <_dtoa_r+0x2e0>)
 8002d5e:	f7fd fa93 	bl	8000288 <__aeabi_dsub>
 8002d62:	a36b      	add	r3, pc, #428	@ (adr r3, 8002f10 <_dtoa_r+0x2b8>)
 8002d64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d68:	f7fd fc46 	bl	80005f8 <__aeabi_dmul>
 8002d6c:	a36a      	add	r3, pc, #424	@ (adr r3, 8002f18 <_dtoa_r+0x2c0>)
 8002d6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d72:	f7fd fa8b 	bl	800028c <__adddf3>
 8002d76:	4604      	mov	r4, r0
 8002d78:	4630      	mov	r0, r6
 8002d7a:	460d      	mov	r5, r1
 8002d7c:	f7fd fbd2 	bl	8000524 <__aeabi_i2d>
 8002d80:	a367      	add	r3, pc, #412	@ (adr r3, 8002f20 <_dtoa_r+0x2c8>)
 8002d82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d86:	f7fd fc37 	bl	80005f8 <__aeabi_dmul>
 8002d8a:	4602      	mov	r2, r0
 8002d8c:	460b      	mov	r3, r1
 8002d8e:	4620      	mov	r0, r4
 8002d90:	4629      	mov	r1, r5
 8002d92:	f7fd fa7b 	bl	800028c <__adddf3>
 8002d96:	4604      	mov	r4, r0
 8002d98:	460d      	mov	r5, r1
 8002d9a:	f7fd fedd 	bl	8000b58 <__aeabi_d2iz>
 8002d9e:	2200      	movs	r2, #0
 8002da0:	4607      	mov	r7, r0
 8002da2:	2300      	movs	r3, #0
 8002da4:	4620      	mov	r0, r4
 8002da6:	4629      	mov	r1, r5
 8002da8:	f7fd fe98 	bl	8000adc <__aeabi_dcmplt>
 8002dac:	b140      	cbz	r0, 8002dc0 <_dtoa_r+0x168>
 8002dae:	4638      	mov	r0, r7
 8002db0:	f7fd fbb8 	bl	8000524 <__aeabi_i2d>
 8002db4:	4622      	mov	r2, r4
 8002db6:	462b      	mov	r3, r5
 8002db8:	f7fd fe86 	bl	8000ac8 <__aeabi_dcmpeq>
 8002dbc:	b900      	cbnz	r0, 8002dc0 <_dtoa_r+0x168>
 8002dbe:	3f01      	subs	r7, #1
 8002dc0:	2f16      	cmp	r7, #22
 8002dc2:	d852      	bhi.n	8002e6a <_dtoa_r+0x212>
 8002dc4:	4b5d      	ldr	r3, [pc, #372]	@ (8002f3c <_dtoa_r+0x2e4>)
 8002dc6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002dca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dce:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002dd2:	f7fd fe83 	bl	8000adc <__aeabi_dcmplt>
 8002dd6:	2800      	cmp	r0, #0
 8002dd8:	d049      	beq.n	8002e6e <_dtoa_r+0x216>
 8002dda:	3f01      	subs	r7, #1
 8002ddc:	2300      	movs	r3, #0
 8002dde:	9310      	str	r3, [sp, #64]	@ 0x40
 8002de0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002de2:	1b9b      	subs	r3, r3, r6
 8002de4:	1e5a      	subs	r2, r3, #1
 8002de6:	bf45      	ittet	mi
 8002de8:	f1c3 0301 	rsbmi	r3, r3, #1
 8002dec:	9300      	strmi	r3, [sp, #0]
 8002dee:	2300      	movpl	r3, #0
 8002df0:	2300      	movmi	r3, #0
 8002df2:	9206      	str	r2, [sp, #24]
 8002df4:	bf54      	ite	pl
 8002df6:	9300      	strpl	r3, [sp, #0]
 8002df8:	9306      	strmi	r3, [sp, #24]
 8002dfa:	2f00      	cmp	r7, #0
 8002dfc:	db39      	blt.n	8002e72 <_dtoa_r+0x21a>
 8002dfe:	9b06      	ldr	r3, [sp, #24]
 8002e00:	970d      	str	r7, [sp, #52]	@ 0x34
 8002e02:	443b      	add	r3, r7
 8002e04:	9306      	str	r3, [sp, #24]
 8002e06:	2300      	movs	r3, #0
 8002e08:	9308      	str	r3, [sp, #32]
 8002e0a:	9b07      	ldr	r3, [sp, #28]
 8002e0c:	2b09      	cmp	r3, #9
 8002e0e:	d863      	bhi.n	8002ed8 <_dtoa_r+0x280>
 8002e10:	2b05      	cmp	r3, #5
 8002e12:	bfc4      	itt	gt
 8002e14:	3b04      	subgt	r3, #4
 8002e16:	9307      	strgt	r3, [sp, #28]
 8002e18:	9b07      	ldr	r3, [sp, #28]
 8002e1a:	f1a3 0302 	sub.w	r3, r3, #2
 8002e1e:	bfcc      	ite	gt
 8002e20:	2400      	movgt	r4, #0
 8002e22:	2401      	movle	r4, #1
 8002e24:	2b03      	cmp	r3, #3
 8002e26:	d863      	bhi.n	8002ef0 <_dtoa_r+0x298>
 8002e28:	e8df f003 	tbb	[pc, r3]
 8002e2c:	2b375452 	.word	0x2b375452
 8002e30:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8002e34:	441e      	add	r6, r3
 8002e36:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002e3a:	2b20      	cmp	r3, #32
 8002e3c:	bfc1      	itttt	gt
 8002e3e:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002e42:	409f      	lslgt	r7, r3
 8002e44:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002e48:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002e4c:	bfd6      	itet	le
 8002e4e:	f1c3 0320 	rsble	r3, r3, #32
 8002e52:	ea47 0003 	orrgt.w	r0, r7, r3
 8002e56:	fa04 f003 	lslle.w	r0, r4, r3
 8002e5a:	f7fd fb53 	bl	8000504 <__aeabi_ui2d>
 8002e5e:	2201      	movs	r2, #1
 8002e60:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002e64:	3e01      	subs	r6, #1
 8002e66:	9212      	str	r2, [sp, #72]	@ 0x48
 8002e68:	e776      	b.n	8002d58 <_dtoa_r+0x100>
 8002e6a:	2301      	movs	r3, #1
 8002e6c:	e7b7      	b.n	8002dde <_dtoa_r+0x186>
 8002e6e:	9010      	str	r0, [sp, #64]	@ 0x40
 8002e70:	e7b6      	b.n	8002de0 <_dtoa_r+0x188>
 8002e72:	9b00      	ldr	r3, [sp, #0]
 8002e74:	1bdb      	subs	r3, r3, r7
 8002e76:	9300      	str	r3, [sp, #0]
 8002e78:	427b      	negs	r3, r7
 8002e7a:	9308      	str	r3, [sp, #32]
 8002e7c:	2300      	movs	r3, #0
 8002e7e:	930d      	str	r3, [sp, #52]	@ 0x34
 8002e80:	e7c3      	b.n	8002e0a <_dtoa_r+0x1b2>
 8002e82:	2301      	movs	r3, #1
 8002e84:	9309      	str	r3, [sp, #36]	@ 0x24
 8002e86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002e88:	eb07 0b03 	add.w	fp, r7, r3
 8002e8c:	f10b 0301 	add.w	r3, fp, #1
 8002e90:	2b01      	cmp	r3, #1
 8002e92:	9303      	str	r3, [sp, #12]
 8002e94:	bfb8      	it	lt
 8002e96:	2301      	movlt	r3, #1
 8002e98:	e006      	b.n	8002ea8 <_dtoa_r+0x250>
 8002e9a:	2301      	movs	r3, #1
 8002e9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8002e9e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	dd28      	ble.n	8002ef6 <_dtoa_r+0x29e>
 8002ea4:	469b      	mov	fp, r3
 8002ea6:	9303      	str	r3, [sp, #12]
 8002ea8:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8002eac:	2100      	movs	r1, #0
 8002eae:	2204      	movs	r2, #4
 8002eb0:	f102 0514 	add.w	r5, r2, #20
 8002eb4:	429d      	cmp	r5, r3
 8002eb6:	d926      	bls.n	8002f06 <_dtoa_r+0x2ae>
 8002eb8:	6041      	str	r1, [r0, #4]
 8002eba:	4648      	mov	r0, r9
 8002ebc:	f000 fd9c 	bl	80039f8 <_Balloc>
 8002ec0:	4682      	mov	sl, r0
 8002ec2:	2800      	cmp	r0, #0
 8002ec4:	d142      	bne.n	8002f4c <_dtoa_r+0x2f4>
 8002ec6:	4b1e      	ldr	r3, [pc, #120]	@ (8002f40 <_dtoa_r+0x2e8>)
 8002ec8:	4602      	mov	r2, r0
 8002eca:	f240 11af 	movw	r1, #431	@ 0x1af
 8002ece:	e6da      	b.n	8002c86 <_dtoa_r+0x2e>
 8002ed0:	2300      	movs	r3, #0
 8002ed2:	e7e3      	b.n	8002e9c <_dtoa_r+0x244>
 8002ed4:	2300      	movs	r3, #0
 8002ed6:	e7d5      	b.n	8002e84 <_dtoa_r+0x22c>
 8002ed8:	2401      	movs	r4, #1
 8002eda:	2300      	movs	r3, #0
 8002edc:	9307      	str	r3, [sp, #28]
 8002ede:	9409      	str	r4, [sp, #36]	@ 0x24
 8002ee0:	f04f 3bff 	mov.w	fp, #4294967295
 8002ee4:	2200      	movs	r2, #0
 8002ee6:	f8cd b00c 	str.w	fp, [sp, #12]
 8002eea:	2312      	movs	r3, #18
 8002eec:	920c      	str	r2, [sp, #48]	@ 0x30
 8002eee:	e7db      	b.n	8002ea8 <_dtoa_r+0x250>
 8002ef0:	2301      	movs	r3, #1
 8002ef2:	9309      	str	r3, [sp, #36]	@ 0x24
 8002ef4:	e7f4      	b.n	8002ee0 <_dtoa_r+0x288>
 8002ef6:	f04f 0b01 	mov.w	fp, #1
 8002efa:	f8cd b00c 	str.w	fp, [sp, #12]
 8002efe:	465b      	mov	r3, fp
 8002f00:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8002f04:	e7d0      	b.n	8002ea8 <_dtoa_r+0x250>
 8002f06:	3101      	adds	r1, #1
 8002f08:	0052      	lsls	r2, r2, #1
 8002f0a:	e7d1      	b.n	8002eb0 <_dtoa_r+0x258>
 8002f0c:	f3af 8000 	nop.w
 8002f10:	636f4361 	.word	0x636f4361
 8002f14:	3fd287a7 	.word	0x3fd287a7
 8002f18:	8b60c8b3 	.word	0x8b60c8b3
 8002f1c:	3fc68a28 	.word	0x3fc68a28
 8002f20:	509f79fb 	.word	0x509f79fb
 8002f24:	3fd34413 	.word	0x3fd34413
 8002f28:	0800624e 	.word	0x0800624e
 8002f2c:	08006265 	.word	0x08006265
 8002f30:	7ff00000 	.word	0x7ff00000
 8002f34:	08006219 	.word	0x08006219
 8002f38:	3ff80000 	.word	0x3ff80000
 8002f3c:	08006418 	.word	0x08006418
 8002f40:	080062bd 	.word	0x080062bd
 8002f44:	0800624a 	.word	0x0800624a
 8002f48:	08006218 	.word	0x08006218
 8002f4c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002f50:	6018      	str	r0, [r3, #0]
 8002f52:	9b03      	ldr	r3, [sp, #12]
 8002f54:	2b0e      	cmp	r3, #14
 8002f56:	f200 80a1 	bhi.w	800309c <_dtoa_r+0x444>
 8002f5a:	2c00      	cmp	r4, #0
 8002f5c:	f000 809e 	beq.w	800309c <_dtoa_r+0x444>
 8002f60:	2f00      	cmp	r7, #0
 8002f62:	dd33      	ble.n	8002fcc <_dtoa_r+0x374>
 8002f64:	4b9c      	ldr	r3, [pc, #624]	@ (80031d8 <_dtoa_r+0x580>)
 8002f66:	f007 020f 	and.w	r2, r7, #15
 8002f6a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002f6e:	ed93 7b00 	vldr	d7, [r3]
 8002f72:	05f8      	lsls	r0, r7, #23
 8002f74:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8002f78:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002f7c:	d516      	bpl.n	8002fac <_dtoa_r+0x354>
 8002f7e:	4b97      	ldr	r3, [pc, #604]	@ (80031dc <_dtoa_r+0x584>)
 8002f80:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002f84:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002f88:	f7fd fc60 	bl	800084c <__aeabi_ddiv>
 8002f8c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002f90:	f004 040f 	and.w	r4, r4, #15
 8002f94:	2603      	movs	r6, #3
 8002f96:	4d91      	ldr	r5, [pc, #580]	@ (80031dc <_dtoa_r+0x584>)
 8002f98:	b954      	cbnz	r4, 8002fb0 <_dtoa_r+0x358>
 8002f9a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002f9e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002fa2:	f7fd fc53 	bl	800084c <__aeabi_ddiv>
 8002fa6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002faa:	e028      	b.n	8002ffe <_dtoa_r+0x3a6>
 8002fac:	2602      	movs	r6, #2
 8002fae:	e7f2      	b.n	8002f96 <_dtoa_r+0x33e>
 8002fb0:	07e1      	lsls	r1, r4, #31
 8002fb2:	d508      	bpl.n	8002fc6 <_dtoa_r+0x36e>
 8002fb4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002fb8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002fbc:	f7fd fb1c 	bl	80005f8 <__aeabi_dmul>
 8002fc0:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002fc4:	3601      	adds	r6, #1
 8002fc6:	1064      	asrs	r4, r4, #1
 8002fc8:	3508      	adds	r5, #8
 8002fca:	e7e5      	b.n	8002f98 <_dtoa_r+0x340>
 8002fcc:	f000 80af 	beq.w	800312e <_dtoa_r+0x4d6>
 8002fd0:	427c      	negs	r4, r7
 8002fd2:	4b81      	ldr	r3, [pc, #516]	@ (80031d8 <_dtoa_r+0x580>)
 8002fd4:	4d81      	ldr	r5, [pc, #516]	@ (80031dc <_dtoa_r+0x584>)
 8002fd6:	f004 020f 	and.w	r2, r4, #15
 8002fda:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002fde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002fe2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002fe6:	f7fd fb07 	bl	80005f8 <__aeabi_dmul>
 8002fea:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002fee:	1124      	asrs	r4, r4, #4
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	2602      	movs	r6, #2
 8002ff4:	2c00      	cmp	r4, #0
 8002ff6:	f040 808f 	bne.w	8003118 <_dtoa_r+0x4c0>
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d1d3      	bne.n	8002fa6 <_dtoa_r+0x34e>
 8002ffe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003000:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8003004:	2b00      	cmp	r3, #0
 8003006:	f000 8094 	beq.w	8003132 <_dtoa_r+0x4da>
 800300a:	4b75      	ldr	r3, [pc, #468]	@ (80031e0 <_dtoa_r+0x588>)
 800300c:	2200      	movs	r2, #0
 800300e:	4620      	mov	r0, r4
 8003010:	4629      	mov	r1, r5
 8003012:	f7fd fd63 	bl	8000adc <__aeabi_dcmplt>
 8003016:	2800      	cmp	r0, #0
 8003018:	f000 808b 	beq.w	8003132 <_dtoa_r+0x4da>
 800301c:	9b03      	ldr	r3, [sp, #12]
 800301e:	2b00      	cmp	r3, #0
 8003020:	f000 8087 	beq.w	8003132 <_dtoa_r+0x4da>
 8003024:	f1bb 0f00 	cmp.w	fp, #0
 8003028:	dd34      	ble.n	8003094 <_dtoa_r+0x43c>
 800302a:	4620      	mov	r0, r4
 800302c:	4b6d      	ldr	r3, [pc, #436]	@ (80031e4 <_dtoa_r+0x58c>)
 800302e:	2200      	movs	r2, #0
 8003030:	4629      	mov	r1, r5
 8003032:	f7fd fae1 	bl	80005f8 <__aeabi_dmul>
 8003036:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800303a:	f107 38ff 	add.w	r8, r7, #4294967295
 800303e:	3601      	adds	r6, #1
 8003040:	465c      	mov	r4, fp
 8003042:	4630      	mov	r0, r6
 8003044:	f7fd fa6e 	bl	8000524 <__aeabi_i2d>
 8003048:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800304c:	f7fd fad4 	bl	80005f8 <__aeabi_dmul>
 8003050:	4b65      	ldr	r3, [pc, #404]	@ (80031e8 <_dtoa_r+0x590>)
 8003052:	2200      	movs	r2, #0
 8003054:	f7fd f91a 	bl	800028c <__adddf3>
 8003058:	4605      	mov	r5, r0
 800305a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800305e:	2c00      	cmp	r4, #0
 8003060:	d16a      	bne.n	8003138 <_dtoa_r+0x4e0>
 8003062:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003066:	4b61      	ldr	r3, [pc, #388]	@ (80031ec <_dtoa_r+0x594>)
 8003068:	2200      	movs	r2, #0
 800306a:	f7fd f90d 	bl	8000288 <__aeabi_dsub>
 800306e:	4602      	mov	r2, r0
 8003070:	460b      	mov	r3, r1
 8003072:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003076:	462a      	mov	r2, r5
 8003078:	4633      	mov	r3, r6
 800307a:	f7fd fd4d 	bl	8000b18 <__aeabi_dcmpgt>
 800307e:	2800      	cmp	r0, #0
 8003080:	f040 8298 	bne.w	80035b4 <_dtoa_r+0x95c>
 8003084:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003088:	462a      	mov	r2, r5
 800308a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800308e:	f7fd fd25 	bl	8000adc <__aeabi_dcmplt>
 8003092:	bb38      	cbnz	r0, 80030e4 <_dtoa_r+0x48c>
 8003094:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8003098:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800309c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800309e:	2b00      	cmp	r3, #0
 80030a0:	f2c0 8157 	blt.w	8003352 <_dtoa_r+0x6fa>
 80030a4:	2f0e      	cmp	r7, #14
 80030a6:	f300 8154 	bgt.w	8003352 <_dtoa_r+0x6fa>
 80030aa:	4b4b      	ldr	r3, [pc, #300]	@ (80031d8 <_dtoa_r+0x580>)
 80030ac:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80030b0:	ed93 7b00 	vldr	d7, [r3]
 80030b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	ed8d 7b00 	vstr	d7, [sp]
 80030bc:	f280 80e5 	bge.w	800328a <_dtoa_r+0x632>
 80030c0:	9b03      	ldr	r3, [sp, #12]
 80030c2:	2b00      	cmp	r3, #0
 80030c4:	f300 80e1 	bgt.w	800328a <_dtoa_r+0x632>
 80030c8:	d10c      	bne.n	80030e4 <_dtoa_r+0x48c>
 80030ca:	4b48      	ldr	r3, [pc, #288]	@ (80031ec <_dtoa_r+0x594>)
 80030cc:	2200      	movs	r2, #0
 80030ce:	ec51 0b17 	vmov	r0, r1, d7
 80030d2:	f7fd fa91 	bl	80005f8 <__aeabi_dmul>
 80030d6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80030da:	f7fd fd13 	bl	8000b04 <__aeabi_dcmpge>
 80030de:	2800      	cmp	r0, #0
 80030e0:	f000 8266 	beq.w	80035b0 <_dtoa_r+0x958>
 80030e4:	2400      	movs	r4, #0
 80030e6:	4625      	mov	r5, r4
 80030e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80030ea:	4656      	mov	r6, sl
 80030ec:	ea6f 0803 	mvn.w	r8, r3
 80030f0:	2700      	movs	r7, #0
 80030f2:	4621      	mov	r1, r4
 80030f4:	4648      	mov	r0, r9
 80030f6:	f000 fcbf 	bl	8003a78 <_Bfree>
 80030fa:	2d00      	cmp	r5, #0
 80030fc:	f000 80bd 	beq.w	800327a <_dtoa_r+0x622>
 8003100:	b12f      	cbz	r7, 800310e <_dtoa_r+0x4b6>
 8003102:	42af      	cmp	r7, r5
 8003104:	d003      	beq.n	800310e <_dtoa_r+0x4b6>
 8003106:	4639      	mov	r1, r7
 8003108:	4648      	mov	r0, r9
 800310a:	f000 fcb5 	bl	8003a78 <_Bfree>
 800310e:	4629      	mov	r1, r5
 8003110:	4648      	mov	r0, r9
 8003112:	f000 fcb1 	bl	8003a78 <_Bfree>
 8003116:	e0b0      	b.n	800327a <_dtoa_r+0x622>
 8003118:	07e2      	lsls	r2, r4, #31
 800311a:	d505      	bpl.n	8003128 <_dtoa_r+0x4d0>
 800311c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003120:	f7fd fa6a 	bl	80005f8 <__aeabi_dmul>
 8003124:	3601      	adds	r6, #1
 8003126:	2301      	movs	r3, #1
 8003128:	1064      	asrs	r4, r4, #1
 800312a:	3508      	adds	r5, #8
 800312c:	e762      	b.n	8002ff4 <_dtoa_r+0x39c>
 800312e:	2602      	movs	r6, #2
 8003130:	e765      	b.n	8002ffe <_dtoa_r+0x3a6>
 8003132:	9c03      	ldr	r4, [sp, #12]
 8003134:	46b8      	mov	r8, r7
 8003136:	e784      	b.n	8003042 <_dtoa_r+0x3ea>
 8003138:	4b27      	ldr	r3, [pc, #156]	@ (80031d8 <_dtoa_r+0x580>)
 800313a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800313c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003140:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003144:	4454      	add	r4, sl
 8003146:	2900      	cmp	r1, #0
 8003148:	d054      	beq.n	80031f4 <_dtoa_r+0x59c>
 800314a:	4929      	ldr	r1, [pc, #164]	@ (80031f0 <_dtoa_r+0x598>)
 800314c:	2000      	movs	r0, #0
 800314e:	f7fd fb7d 	bl	800084c <__aeabi_ddiv>
 8003152:	4633      	mov	r3, r6
 8003154:	462a      	mov	r2, r5
 8003156:	f7fd f897 	bl	8000288 <__aeabi_dsub>
 800315a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800315e:	4656      	mov	r6, sl
 8003160:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003164:	f7fd fcf8 	bl	8000b58 <__aeabi_d2iz>
 8003168:	4605      	mov	r5, r0
 800316a:	f7fd f9db 	bl	8000524 <__aeabi_i2d>
 800316e:	4602      	mov	r2, r0
 8003170:	460b      	mov	r3, r1
 8003172:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003176:	f7fd f887 	bl	8000288 <__aeabi_dsub>
 800317a:	3530      	adds	r5, #48	@ 0x30
 800317c:	4602      	mov	r2, r0
 800317e:	460b      	mov	r3, r1
 8003180:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003184:	f806 5b01 	strb.w	r5, [r6], #1
 8003188:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800318c:	f7fd fca6 	bl	8000adc <__aeabi_dcmplt>
 8003190:	2800      	cmp	r0, #0
 8003192:	d172      	bne.n	800327a <_dtoa_r+0x622>
 8003194:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003198:	4911      	ldr	r1, [pc, #68]	@ (80031e0 <_dtoa_r+0x588>)
 800319a:	2000      	movs	r0, #0
 800319c:	f7fd f874 	bl	8000288 <__aeabi_dsub>
 80031a0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80031a4:	f7fd fc9a 	bl	8000adc <__aeabi_dcmplt>
 80031a8:	2800      	cmp	r0, #0
 80031aa:	f040 80b4 	bne.w	8003316 <_dtoa_r+0x6be>
 80031ae:	42a6      	cmp	r6, r4
 80031b0:	f43f af70 	beq.w	8003094 <_dtoa_r+0x43c>
 80031b4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80031b8:	4b0a      	ldr	r3, [pc, #40]	@ (80031e4 <_dtoa_r+0x58c>)
 80031ba:	2200      	movs	r2, #0
 80031bc:	f7fd fa1c 	bl	80005f8 <__aeabi_dmul>
 80031c0:	4b08      	ldr	r3, [pc, #32]	@ (80031e4 <_dtoa_r+0x58c>)
 80031c2:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80031c6:	2200      	movs	r2, #0
 80031c8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80031cc:	f7fd fa14 	bl	80005f8 <__aeabi_dmul>
 80031d0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80031d4:	e7c4      	b.n	8003160 <_dtoa_r+0x508>
 80031d6:	bf00      	nop
 80031d8:	08006418 	.word	0x08006418
 80031dc:	080063f0 	.word	0x080063f0
 80031e0:	3ff00000 	.word	0x3ff00000
 80031e4:	40240000 	.word	0x40240000
 80031e8:	401c0000 	.word	0x401c0000
 80031ec:	40140000 	.word	0x40140000
 80031f0:	3fe00000 	.word	0x3fe00000
 80031f4:	4631      	mov	r1, r6
 80031f6:	4628      	mov	r0, r5
 80031f8:	f7fd f9fe 	bl	80005f8 <__aeabi_dmul>
 80031fc:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8003200:	9413      	str	r4, [sp, #76]	@ 0x4c
 8003202:	4656      	mov	r6, sl
 8003204:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003208:	f7fd fca6 	bl	8000b58 <__aeabi_d2iz>
 800320c:	4605      	mov	r5, r0
 800320e:	f7fd f989 	bl	8000524 <__aeabi_i2d>
 8003212:	4602      	mov	r2, r0
 8003214:	460b      	mov	r3, r1
 8003216:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800321a:	f7fd f835 	bl	8000288 <__aeabi_dsub>
 800321e:	3530      	adds	r5, #48	@ 0x30
 8003220:	f806 5b01 	strb.w	r5, [r6], #1
 8003224:	4602      	mov	r2, r0
 8003226:	460b      	mov	r3, r1
 8003228:	42a6      	cmp	r6, r4
 800322a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800322e:	f04f 0200 	mov.w	r2, #0
 8003232:	d124      	bne.n	800327e <_dtoa_r+0x626>
 8003234:	4baf      	ldr	r3, [pc, #700]	@ (80034f4 <_dtoa_r+0x89c>)
 8003236:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800323a:	f7fd f827 	bl	800028c <__adddf3>
 800323e:	4602      	mov	r2, r0
 8003240:	460b      	mov	r3, r1
 8003242:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003246:	f7fd fc67 	bl	8000b18 <__aeabi_dcmpgt>
 800324a:	2800      	cmp	r0, #0
 800324c:	d163      	bne.n	8003316 <_dtoa_r+0x6be>
 800324e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8003252:	49a8      	ldr	r1, [pc, #672]	@ (80034f4 <_dtoa_r+0x89c>)
 8003254:	2000      	movs	r0, #0
 8003256:	f7fd f817 	bl	8000288 <__aeabi_dsub>
 800325a:	4602      	mov	r2, r0
 800325c:	460b      	mov	r3, r1
 800325e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003262:	f7fd fc3b 	bl	8000adc <__aeabi_dcmplt>
 8003266:	2800      	cmp	r0, #0
 8003268:	f43f af14 	beq.w	8003094 <_dtoa_r+0x43c>
 800326c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800326e:	1e73      	subs	r3, r6, #1
 8003270:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003272:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003276:	2b30      	cmp	r3, #48	@ 0x30
 8003278:	d0f8      	beq.n	800326c <_dtoa_r+0x614>
 800327a:	4647      	mov	r7, r8
 800327c:	e03b      	b.n	80032f6 <_dtoa_r+0x69e>
 800327e:	4b9e      	ldr	r3, [pc, #632]	@ (80034f8 <_dtoa_r+0x8a0>)
 8003280:	f7fd f9ba 	bl	80005f8 <__aeabi_dmul>
 8003284:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003288:	e7bc      	b.n	8003204 <_dtoa_r+0x5ac>
 800328a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800328e:	4656      	mov	r6, sl
 8003290:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003294:	4620      	mov	r0, r4
 8003296:	4629      	mov	r1, r5
 8003298:	f7fd fad8 	bl	800084c <__aeabi_ddiv>
 800329c:	f7fd fc5c 	bl	8000b58 <__aeabi_d2iz>
 80032a0:	4680      	mov	r8, r0
 80032a2:	f7fd f93f 	bl	8000524 <__aeabi_i2d>
 80032a6:	e9dd 2300 	ldrd	r2, r3, [sp]
 80032aa:	f7fd f9a5 	bl	80005f8 <__aeabi_dmul>
 80032ae:	4602      	mov	r2, r0
 80032b0:	460b      	mov	r3, r1
 80032b2:	4620      	mov	r0, r4
 80032b4:	4629      	mov	r1, r5
 80032b6:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80032ba:	f7fc ffe5 	bl	8000288 <__aeabi_dsub>
 80032be:	f806 4b01 	strb.w	r4, [r6], #1
 80032c2:	9d03      	ldr	r5, [sp, #12]
 80032c4:	eba6 040a 	sub.w	r4, r6, sl
 80032c8:	42a5      	cmp	r5, r4
 80032ca:	4602      	mov	r2, r0
 80032cc:	460b      	mov	r3, r1
 80032ce:	d133      	bne.n	8003338 <_dtoa_r+0x6e0>
 80032d0:	f7fc ffdc 	bl	800028c <__adddf3>
 80032d4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80032d8:	4604      	mov	r4, r0
 80032da:	460d      	mov	r5, r1
 80032dc:	f7fd fc1c 	bl	8000b18 <__aeabi_dcmpgt>
 80032e0:	b9c0      	cbnz	r0, 8003314 <_dtoa_r+0x6bc>
 80032e2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80032e6:	4620      	mov	r0, r4
 80032e8:	4629      	mov	r1, r5
 80032ea:	f7fd fbed 	bl	8000ac8 <__aeabi_dcmpeq>
 80032ee:	b110      	cbz	r0, 80032f6 <_dtoa_r+0x69e>
 80032f0:	f018 0f01 	tst.w	r8, #1
 80032f4:	d10e      	bne.n	8003314 <_dtoa_r+0x6bc>
 80032f6:	9902      	ldr	r1, [sp, #8]
 80032f8:	4648      	mov	r0, r9
 80032fa:	f000 fbbd 	bl	8003a78 <_Bfree>
 80032fe:	2300      	movs	r3, #0
 8003300:	7033      	strb	r3, [r6, #0]
 8003302:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8003304:	3701      	adds	r7, #1
 8003306:	601f      	str	r7, [r3, #0]
 8003308:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800330a:	2b00      	cmp	r3, #0
 800330c:	f000 824b 	beq.w	80037a6 <_dtoa_r+0xb4e>
 8003310:	601e      	str	r6, [r3, #0]
 8003312:	e248      	b.n	80037a6 <_dtoa_r+0xb4e>
 8003314:	46b8      	mov	r8, r7
 8003316:	4633      	mov	r3, r6
 8003318:	461e      	mov	r6, r3
 800331a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800331e:	2a39      	cmp	r2, #57	@ 0x39
 8003320:	d106      	bne.n	8003330 <_dtoa_r+0x6d8>
 8003322:	459a      	cmp	sl, r3
 8003324:	d1f8      	bne.n	8003318 <_dtoa_r+0x6c0>
 8003326:	2230      	movs	r2, #48	@ 0x30
 8003328:	f108 0801 	add.w	r8, r8, #1
 800332c:	f88a 2000 	strb.w	r2, [sl]
 8003330:	781a      	ldrb	r2, [r3, #0]
 8003332:	3201      	adds	r2, #1
 8003334:	701a      	strb	r2, [r3, #0]
 8003336:	e7a0      	b.n	800327a <_dtoa_r+0x622>
 8003338:	4b6f      	ldr	r3, [pc, #444]	@ (80034f8 <_dtoa_r+0x8a0>)
 800333a:	2200      	movs	r2, #0
 800333c:	f7fd f95c 	bl	80005f8 <__aeabi_dmul>
 8003340:	2200      	movs	r2, #0
 8003342:	2300      	movs	r3, #0
 8003344:	4604      	mov	r4, r0
 8003346:	460d      	mov	r5, r1
 8003348:	f7fd fbbe 	bl	8000ac8 <__aeabi_dcmpeq>
 800334c:	2800      	cmp	r0, #0
 800334e:	d09f      	beq.n	8003290 <_dtoa_r+0x638>
 8003350:	e7d1      	b.n	80032f6 <_dtoa_r+0x69e>
 8003352:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003354:	2a00      	cmp	r2, #0
 8003356:	f000 80ea 	beq.w	800352e <_dtoa_r+0x8d6>
 800335a:	9a07      	ldr	r2, [sp, #28]
 800335c:	2a01      	cmp	r2, #1
 800335e:	f300 80cd 	bgt.w	80034fc <_dtoa_r+0x8a4>
 8003362:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003364:	2a00      	cmp	r2, #0
 8003366:	f000 80c1 	beq.w	80034ec <_dtoa_r+0x894>
 800336a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800336e:	9c08      	ldr	r4, [sp, #32]
 8003370:	9e00      	ldr	r6, [sp, #0]
 8003372:	9a00      	ldr	r2, [sp, #0]
 8003374:	441a      	add	r2, r3
 8003376:	9200      	str	r2, [sp, #0]
 8003378:	9a06      	ldr	r2, [sp, #24]
 800337a:	2101      	movs	r1, #1
 800337c:	441a      	add	r2, r3
 800337e:	4648      	mov	r0, r9
 8003380:	9206      	str	r2, [sp, #24]
 8003382:	f000 fc77 	bl	8003c74 <__i2b>
 8003386:	4605      	mov	r5, r0
 8003388:	b166      	cbz	r6, 80033a4 <_dtoa_r+0x74c>
 800338a:	9b06      	ldr	r3, [sp, #24]
 800338c:	2b00      	cmp	r3, #0
 800338e:	dd09      	ble.n	80033a4 <_dtoa_r+0x74c>
 8003390:	42b3      	cmp	r3, r6
 8003392:	9a00      	ldr	r2, [sp, #0]
 8003394:	bfa8      	it	ge
 8003396:	4633      	movge	r3, r6
 8003398:	1ad2      	subs	r2, r2, r3
 800339a:	9200      	str	r2, [sp, #0]
 800339c:	9a06      	ldr	r2, [sp, #24]
 800339e:	1af6      	subs	r6, r6, r3
 80033a0:	1ad3      	subs	r3, r2, r3
 80033a2:	9306      	str	r3, [sp, #24]
 80033a4:	9b08      	ldr	r3, [sp, #32]
 80033a6:	b30b      	cbz	r3, 80033ec <_dtoa_r+0x794>
 80033a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80033aa:	2b00      	cmp	r3, #0
 80033ac:	f000 80c6 	beq.w	800353c <_dtoa_r+0x8e4>
 80033b0:	2c00      	cmp	r4, #0
 80033b2:	f000 80c0 	beq.w	8003536 <_dtoa_r+0x8de>
 80033b6:	4629      	mov	r1, r5
 80033b8:	4622      	mov	r2, r4
 80033ba:	4648      	mov	r0, r9
 80033bc:	f000 fd12 	bl	8003de4 <__pow5mult>
 80033c0:	9a02      	ldr	r2, [sp, #8]
 80033c2:	4601      	mov	r1, r0
 80033c4:	4605      	mov	r5, r0
 80033c6:	4648      	mov	r0, r9
 80033c8:	f000 fc6a 	bl	8003ca0 <__multiply>
 80033cc:	9902      	ldr	r1, [sp, #8]
 80033ce:	4680      	mov	r8, r0
 80033d0:	4648      	mov	r0, r9
 80033d2:	f000 fb51 	bl	8003a78 <_Bfree>
 80033d6:	9b08      	ldr	r3, [sp, #32]
 80033d8:	1b1b      	subs	r3, r3, r4
 80033da:	9308      	str	r3, [sp, #32]
 80033dc:	f000 80b1 	beq.w	8003542 <_dtoa_r+0x8ea>
 80033e0:	9a08      	ldr	r2, [sp, #32]
 80033e2:	4641      	mov	r1, r8
 80033e4:	4648      	mov	r0, r9
 80033e6:	f000 fcfd 	bl	8003de4 <__pow5mult>
 80033ea:	9002      	str	r0, [sp, #8]
 80033ec:	2101      	movs	r1, #1
 80033ee:	4648      	mov	r0, r9
 80033f0:	f000 fc40 	bl	8003c74 <__i2b>
 80033f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80033f6:	4604      	mov	r4, r0
 80033f8:	2b00      	cmp	r3, #0
 80033fa:	f000 81d8 	beq.w	80037ae <_dtoa_r+0xb56>
 80033fe:	461a      	mov	r2, r3
 8003400:	4601      	mov	r1, r0
 8003402:	4648      	mov	r0, r9
 8003404:	f000 fcee 	bl	8003de4 <__pow5mult>
 8003408:	9b07      	ldr	r3, [sp, #28]
 800340a:	2b01      	cmp	r3, #1
 800340c:	4604      	mov	r4, r0
 800340e:	f300 809f 	bgt.w	8003550 <_dtoa_r+0x8f8>
 8003412:	9b04      	ldr	r3, [sp, #16]
 8003414:	2b00      	cmp	r3, #0
 8003416:	f040 8097 	bne.w	8003548 <_dtoa_r+0x8f0>
 800341a:	9b05      	ldr	r3, [sp, #20]
 800341c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003420:	2b00      	cmp	r3, #0
 8003422:	f040 8093 	bne.w	800354c <_dtoa_r+0x8f4>
 8003426:	9b05      	ldr	r3, [sp, #20]
 8003428:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800342c:	0d1b      	lsrs	r3, r3, #20
 800342e:	051b      	lsls	r3, r3, #20
 8003430:	b133      	cbz	r3, 8003440 <_dtoa_r+0x7e8>
 8003432:	9b00      	ldr	r3, [sp, #0]
 8003434:	3301      	adds	r3, #1
 8003436:	9300      	str	r3, [sp, #0]
 8003438:	9b06      	ldr	r3, [sp, #24]
 800343a:	3301      	adds	r3, #1
 800343c:	9306      	str	r3, [sp, #24]
 800343e:	2301      	movs	r3, #1
 8003440:	9308      	str	r3, [sp, #32]
 8003442:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003444:	2b00      	cmp	r3, #0
 8003446:	f000 81b8 	beq.w	80037ba <_dtoa_r+0xb62>
 800344a:	6923      	ldr	r3, [r4, #16]
 800344c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003450:	6918      	ldr	r0, [r3, #16]
 8003452:	f000 fbc3 	bl	8003bdc <__hi0bits>
 8003456:	f1c0 0020 	rsb	r0, r0, #32
 800345a:	9b06      	ldr	r3, [sp, #24]
 800345c:	4418      	add	r0, r3
 800345e:	f010 001f 	ands.w	r0, r0, #31
 8003462:	f000 8082 	beq.w	800356a <_dtoa_r+0x912>
 8003466:	f1c0 0320 	rsb	r3, r0, #32
 800346a:	2b04      	cmp	r3, #4
 800346c:	dd73      	ble.n	8003556 <_dtoa_r+0x8fe>
 800346e:	9b00      	ldr	r3, [sp, #0]
 8003470:	f1c0 001c 	rsb	r0, r0, #28
 8003474:	4403      	add	r3, r0
 8003476:	9300      	str	r3, [sp, #0]
 8003478:	9b06      	ldr	r3, [sp, #24]
 800347a:	4403      	add	r3, r0
 800347c:	4406      	add	r6, r0
 800347e:	9306      	str	r3, [sp, #24]
 8003480:	9b00      	ldr	r3, [sp, #0]
 8003482:	2b00      	cmp	r3, #0
 8003484:	dd05      	ble.n	8003492 <_dtoa_r+0x83a>
 8003486:	9902      	ldr	r1, [sp, #8]
 8003488:	461a      	mov	r2, r3
 800348a:	4648      	mov	r0, r9
 800348c:	f000 fd04 	bl	8003e98 <__lshift>
 8003490:	9002      	str	r0, [sp, #8]
 8003492:	9b06      	ldr	r3, [sp, #24]
 8003494:	2b00      	cmp	r3, #0
 8003496:	dd05      	ble.n	80034a4 <_dtoa_r+0x84c>
 8003498:	4621      	mov	r1, r4
 800349a:	461a      	mov	r2, r3
 800349c:	4648      	mov	r0, r9
 800349e:	f000 fcfb 	bl	8003e98 <__lshift>
 80034a2:	4604      	mov	r4, r0
 80034a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	d061      	beq.n	800356e <_dtoa_r+0x916>
 80034aa:	9802      	ldr	r0, [sp, #8]
 80034ac:	4621      	mov	r1, r4
 80034ae:	f000 fd5f 	bl	8003f70 <__mcmp>
 80034b2:	2800      	cmp	r0, #0
 80034b4:	da5b      	bge.n	800356e <_dtoa_r+0x916>
 80034b6:	2300      	movs	r3, #0
 80034b8:	9902      	ldr	r1, [sp, #8]
 80034ba:	220a      	movs	r2, #10
 80034bc:	4648      	mov	r0, r9
 80034be:	f000 fafd 	bl	8003abc <__multadd>
 80034c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80034c4:	9002      	str	r0, [sp, #8]
 80034c6:	f107 38ff 	add.w	r8, r7, #4294967295
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	f000 8177 	beq.w	80037be <_dtoa_r+0xb66>
 80034d0:	4629      	mov	r1, r5
 80034d2:	2300      	movs	r3, #0
 80034d4:	220a      	movs	r2, #10
 80034d6:	4648      	mov	r0, r9
 80034d8:	f000 faf0 	bl	8003abc <__multadd>
 80034dc:	f1bb 0f00 	cmp.w	fp, #0
 80034e0:	4605      	mov	r5, r0
 80034e2:	dc6f      	bgt.n	80035c4 <_dtoa_r+0x96c>
 80034e4:	9b07      	ldr	r3, [sp, #28]
 80034e6:	2b02      	cmp	r3, #2
 80034e8:	dc49      	bgt.n	800357e <_dtoa_r+0x926>
 80034ea:	e06b      	b.n	80035c4 <_dtoa_r+0x96c>
 80034ec:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80034ee:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80034f2:	e73c      	b.n	800336e <_dtoa_r+0x716>
 80034f4:	3fe00000 	.word	0x3fe00000
 80034f8:	40240000 	.word	0x40240000
 80034fc:	9b03      	ldr	r3, [sp, #12]
 80034fe:	1e5c      	subs	r4, r3, #1
 8003500:	9b08      	ldr	r3, [sp, #32]
 8003502:	42a3      	cmp	r3, r4
 8003504:	db09      	blt.n	800351a <_dtoa_r+0x8c2>
 8003506:	1b1c      	subs	r4, r3, r4
 8003508:	9b03      	ldr	r3, [sp, #12]
 800350a:	2b00      	cmp	r3, #0
 800350c:	f6bf af30 	bge.w	8003370 <_dtoa_r+0x718>
 8003510:	9b00      	ldr	r3, [sp, #0]
 8003512:	9a03      	ldr	r2, [sp, #12]
 8003514:	1a9e      	subs	r6, r3, r2
 8003516:	2300      	movs	r3, #0
 8003518:	e72b      	b.n	8003372 <_dtoa_r+0x71a>
 800351a:	9b08      	ldr	r3, [sp, #32]
 800351c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800351e:	9408      	str	r4, [sp, #32]
 8003520:	1ae3      	subs	r3, r4, r3
 8003522:	441a      	add	r2, r3
 8003524:	9e00      	ldr	r6, [sp, #0]
 8003526:	9b03      	ldr	r3, [sp, #12]
 8003528:	920d      	str	r2, [sp, #52]	@ 0x34
 800352a:	2400      	movs	r4, #0
 800352c:	e721      	b.n	8003372 <_dtoa_r+0x71a>
 800352e:	9c08      	ldr	r4, [sp, #32]
 8003530:	9e00      	ldr	r6, [sp, #0]
 8003532:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8003534:	e728      	b.n	8003388 <_dtoa_r+0x730>
 8003536:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800353a:	e751      	b.n	80033e0 <_dtoa_r+0x788>
 800353c:	9a08      	ldr	r2, [sp, #32]
 800353e:	9902      	ldr	r1, [sp, #8]
 8003540:	e750      	b.n	80033e4 <_dtoa_r+0x78c>
 8003542:	f8cd 8008 	str.w	r8, [sp, #8]
 8003546:	e751      	b.n	80033ec <_dtoa_r+0x794>
 8003548:	2300      	movs	r3, #0
 800354a:	e779      	b.n	8003440 <_dtoa_r+0x7e8>
 800354c:	9b04      	ldr	r3, [sp, #16]
 800354e:	e777      	b.n	8003440 <_dtoa_r+0x7e8>
 8003550:	2300      	movs	r3, #0
 8003552:	9308      	str	r3, [sp, #32]
 8003554:	e779      	b.n	800344a <_dtoa_r+0x7f2>
 8003556:	d093      	beq.n	8003480 <_dtoa_r+0x828>
 8003558:	9a00      	ldr	r2, [sp, #0]
 800355a:	331c      	adds	r3, #28
 800355c:	441a      	add	r2, r3
 800355e:	9200      	str	r2, [sp, #0]
 8003560:	9a06      	ldr	r2, [sp, #24]
 8003562:	441a      	add	r2, r3
 8003564:	441e      	add	r6, r3
 8003566:	9206      	str	r2, [sp, #24]
 8003568:	e78a      	b.n	8003480 <_dtoa_r+0x828>
 800356a:	4603      	mov	r3, r0
 800356c:	e7f4      	b.n	8003558 <_dtoa_r+0x900>
 800356e:	9b03      	ldr	r3, [sp, #12]
 8003570:	2b00      	cmp	r3, #0
 8003572:	46b8      	mov	r8, r7
 8003574:	dc20      	bgt.n	80035b8 <_dtoa_r+0x960>
 8003576:	469b      	mov	fp, r3
 8003578:	9b07      	ldr	r3, [sp, #28]
 800357a:	2b02      	cmp	r3, #2
 800357c:	dd1e      	ble.n	80035bc <_dtoa_r+0x964>
 800357e:	f1bb 0f00 	cmp.w	fp, #0
 8003582:	f47f adb1 	bne.w	80030e8 <_dtoa_r+0x490>
 8003586:	4621      	mov	r1, r4
 8003588:	465b      	mov	r3, fp
 800358a:	2205      	movs	r2, #5
 800358c:	4648      	mov	r0, r9
 800358e:	f000 fa95 	bl	8003abc <__multadd>
 8003592:	4601      	mov	r1, r0
 8003594:	4604      	mov	r4, r0
 8003596:	9802      	ldr	r0, [sp, #8]
 8003598:	f000 fcea 	bl	8003f70 <__mcmp>
 800359c:	2800      	cmp	r0, #0
 800359e:	f77f ada3 	ble.w	80030e8 <_dtoa_r+0x490>
 80035a2:	4656      	mov	r6, sl
 80035a4:	2331      	movs	r3, #49	@ 0x31
 80035a6:	f806 3b01 	strb.w	r3, [r6], #1
 80035aa:	f108 0801 	add.w	r8, r8, #1
 80035ae:	e59f      	b.n	80030f0 <_dtoa_r+0x498>
 80035b0:	9c03      	ldr	r4, [sp, #12]
 80035b2:	46b8      	mov	r8, r7
 80035b4:	4625      	mov	r5, r4
 80035b6:	e7f4      	b.n	80035a2 <_dtoa_r+0x94a>
 80035b8:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80035bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80035be:	2b00      	cmp	r3, #0
 80035c0:	f000 8101 	beq.w	80037c6 <_dtoa_r+0xb6e>
 80035c4:	2e00      	cmp	r6, #0
 80035c6:	dd05      	ble.n	80035d4 <_dtoa_r+0x97c>
 80035c8:	4629      	mov	r1, r5
 80035ca:	4632      	mov	r2, r6
 80035cc:	4648      	mov	r0, r9
 80035ce:	f000 fc63 	bl	8003e98 <__lshift>
 80035d2:	4605      	mov	r5, r0
 80035d4:	9b08      	ldr	r3, [sp, #32]
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	d05c      	beq.n	8003694 <_dtoa_r+0xa3c>
 80035da:	6869      	ldr	r1, [r5, #4]
 80035dc:	4648      	mov	r0, r9
 80035de:	f000 fa0b 	bl	80039f8 <_Balloc>
 80035e2:	4606      	mov	r6, r0
 80035e4:	b928      	cbnz	r0, 80035f2 <_dtoa_r+0x99a>
 80035e6:	4b82      	ldr	r3, [pc, #520]	@ (80037f0 <_dtoa_r+0xb98>)
 80035e8:	4602      	mov	r2, r0
 80035ea:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80035ee:	f7ff bb4a 	b.w	8002c86 <_dtoa_r+0x2e>
 80035f2:	692a      	ldr	r2, [r5, #16]
 80035f4:	3202      	adds	r2, #2
 80035f6:	0092      	lsls	r2, r2, #2
 80035f8:	f105 010c 	add.w	r1, r5, #12
 80035fc:	300c      	adds	r0, #12
 80035fe:	f001 ff69 	bl	80054d4 <memcpy>
 8003602:	2201      	movs	r2, #1
 8003604:	4631      	mov	r1, r6
 8003606:	4648      	mov	r0, r9
 8003608:	f000 fc46 	bl	8003e98 <__lshift>
 800360c:	f10a 0301 	add.w	r3, sl, #1
 8003610:	9300      	str	r3, [sp, #0]
 8003612:	eb0a 030b 	add.w	r3, sl, fp
 8003616:	9308      	str	r3, [sp, #32]
 8003618:	9b04      	ldr	r3, [sp, #16]
 800361a:	f003 0301 	and.w	r3, r3, #1
 800361e:	462f      	mov	r7, r5
 8003620:	9306      	str	r3, [sp, #24]
 8003622:	4605      	mov	r5, r0
 8003624:	9b00      	ldr	r3, [sp, #0]
 8003626:	9802      	ldr	r0, [sp, #8]
 8003628:	4621      	mov	r1, r4
 800362a:	f103 3bff 	add.w	fp, r3, #4294967295
 800362e:	f7ff fa89 	bl	8002b44 <quorem>
 8003632:	4603      	mov	r3, r0
 8003634:	3330      	adds	r3, #48	@ 0x30
 8003636:	9003      	str	r0, [sp, #12]
 8003638:	4639      	mov	r1, r7
 800363a:	9802      	ldr	r0, [sp, #8]
 800363c:	9309      	str	r3, [sp, #36]	@ 0x24
 800363e:	f000 fc97 	bl	8003f70 <__mcmp>
 8003642:	462a      	mov	r2, r5
 8003644:	9004      	str	r0, [sp, #16]
 8003646:	4621      	mov	r1, r4
 8003648:	4648      	mov	r0, r9
 800364a:	f000 fcad 	bl	8003fa8 <__mdiff>
 800364e:	68c2      	ldr	r2, [r0, #12]
 8003650:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003652:	4606      	mov	r6, r0
 8003654:	bb02      	cbnz	r2, 8003698 <_dtoa_r+0xa40>
 8003656:	4601      	mov	r1, r0
 8003658:	9802      	ldr	r0, [sp, #8]
 800365a:	f000 fc89 	bl	8003f70 <__mcmp>
 800365e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003660:	4602      	mov	r2, r0
 8003662:	4631      	mov	r1, r6
 8003664:	4648      	mov	r0, r9
 8003666:	920c      	str	r2, [sp, #48]	@ 0x30
 8003668:	9309      	str	r3, [sp, #36]	@ 0x24
 800366a:	f000 fa05 	bl	8003a78 <_Bfree>
 800366e:	9b07      	ldr	r3, [sp, #28]
 8003670:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003672:	9e00      	ldr	r6, [sp, #0]
 8003674:	ea42 0103 	orr.w	r1, r2, r3
 8003678:	9b06      	ldr	r3, [sp, #24]
 800367a:	4319      	orrs	r1, r3
 800367c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800367e:	d10d      	bne.n	800369c <_dtoa_r+0xa44>
 8003680:	2b39      	cmp	r3, #57	@ 0x39
 8003682:	d027      	beq.n	80036d4 <_dtoa_r+0xa7c>
 8003684:	9a04      	ldr	r2, [sp, #16]
 8003686:	2a00      	cmp	r2, #0
 8003688:	dd01      	ble.n	800368e <_dtoa_r+0xa36>
 800368a:	9b03      	ldr	r3, [sp, #12]
 800368c:	3331      	adds	r3, #49	@ 0x31
 800368e:	f88b 3000 	strb.w	r3, [fp]
 8003692:	e52e      	b.n	80030f2 <_dtoa_r+0x49a>
 8003694:	4628      	mov	r0, r5
 8003696:	e7b9      	b.n	800360c <_dtoa_r+0x9b4>
 8003698:	2201      	movs	r2, #1
 800369a:	e7e2      	b.n	8003662 <_dtoa_r+0xa0a>
 800369c:	9904      	ldr	r1, [sp, #16]
 800369e:	2900      	cmp	r1, #0
 80036a0:	db04      	blt.n	80036ac <_dtoa_r+0xa54>
 80036a2:	9807      	ldr	r0, [sp, #28]
 80036a4:	4301      	orrs	r1, r0
 80036a6:	9806      	ldr	r0, [sp, #24]
 80036a8:	4301      	orrs	r1, r0
 80036aa:	d120      	bne.n	80036ee <_dtoa_r+0xa96>
 80036ac:	2a00      	cmp	r2, #0
 80036ae:	ddee      	ble.n	800368e <_dtoa_r+0xa36>
 80036b0:	9902      	ldr	r1, [sp, #8]
 80036b2:	9300      	str	r3, [sp, #0]
 80036b4:	2201      	movs	r2, #1
 80036b6:	4648      	mov	r0, r9
 80036b8:	f000 fbee 	bl	8003e98 <__lshift>
 80036bc:	4621      	mov	r1, r4
 80036be:	9002      	str	r0, [sp, #8]
 80036c0:	f000 fc56 	bl	8003f70 <__mcmp>
 80036c4:	2800      	cmp	r0, #0
 80036c6:	9b00      	ldr	r3, [sp, #0]
 80036c8:	dc02      	bgt.n	80036d0 <_dtoa_r+0xa78>
 80036ca:	d1e0      	bne.n	800368e <_dtoa_r+0xa36>
 80036cc:	07da      	lsls	r2, r3, #31
 80036ce:	d5de      	bpl.n	800368e <_dtoa_r+0xa36>
 80036d0:	2b39      	cmp	r3, #57	@ 0x39
 80036d2:	d1da      	bne.n	800368a <_dtoa_r+0xa32>
 80036d4:	2339      	movs	r3, #57	@ 0x39
 80036d6:	f88b 3000 	strb.w	r3, [fp]
 80036da:	4633      	mov	r3, r6
 80036dc:	461e      	mov	r6, r3
 80036de:	3b01      	subs	r3, #1
 80036e0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80036e4:	2a39      	cmp	r2, #57	@ 0x39
 80036e6:	d04e      	beq.n	8003786 <_dtoa_r+0xb2e>
 80036e8:	3201      	adds	r2, #1
 80036ea:	701a      	strb	r2, [r3, #0]
 80036ec:	e501      	b.n	80030f2 <_dtoa_r+0x49a>
 80036ee:	2a00      	cmp	r2, #0
 80036f0:	dd03      	ble.n	80036fa <_dtoa_r+0xaa2>
 80036f2:	2b39      	cmp	r3, #57	@ 0x39
 80036f4:	d0ee      	beq.n	80036d4 <_dtoa_r+0xa7c>
 80036f6:	3301      	adds	r3, #1
 80036f8:	e7c9      	b.n	800368e <_dtoa_r+0xa36>
 80036fa:	9a00      	ldr	r2, [sp, #0]
 80036fc:	9908      	ldr	r1, [sp, #32]
 80036fe:	f802 3c01 	strb.w	r3, [r2, #-1]
 8003702:	428a      	cmp	r2, r1
 8003704:	d028      	beq.n	8003758 <_dtoa_r+0xb00>
 8003706:	9902      	ldr	r1, [sp, #8]
 8003708:	2300      	movs	r3, #0
 800370a:	220a      	movs	r2, #10
 800370c:	4648      	mov	r0, r9
 800370e:	f000 f9d5 	bl	8003abc <__multadd>
 8003712:	42af      	cmp	r7, r5
 8003714:	9002      	str	r0, [sp, #8]
 8003716:	f04f 0300 	mov.w	r3, #0
 800371a:	f04f 020a 	mov.w	r2, #10
 800371e:	4639      	mov	r1, r7
 8003720:	4648      	mov	r0, r9
 8003722:	d107      	bne.n	8003734 <_dtoa_r+0xadc>
 8003724:	f000 f9ca 	bl	8003abc <__multadd>
 8003728:	4607      	mov	r7, r0
 800372a:	4605      	mov	r5, r0
 800372c:	9b00      	ldr	r3, [sp, #0]
 800372e:	3301      	adds	r3, #1
 8003730:	9300      	str	r3, [sp, #0]
 8003732:	e777      	b.n	8003624 <_dtoa_r+0x9cc>
 8003734:	f000 f9c2 	bl	8003abc <__multadd>
 8003738:	4629      	mov	r1, r5
 800373a:	4607      	mov	r7, r0
 800373c:	2300      	movs	r3, #0
 800373e:	220a      	movs	r2, #10
 8003740:	4648      	mov	r0, r9
 8003742:	f000 f9bb 	bl	8003abc <__multadd>
 8003746:	4605      	mov	r5, r0
 8003748:	e7f0      	b.n	800372c <_dtoa_r+0xad4>
 800374a:	f1bb 0f00 	cmp.w	fp, #0
 800374e:	bfcc      	ite	gt
 8003750:	465e      	movgt	r6, fp
 8003752:	2601      	movle	r6, #1
 8003754:	4456      	add	r6, sl
 8003756:	2700      	movs	r7, #0
 8003758:	9902      	ldr	r1, [sp, #8]
 800375a:	9300      	str	r3, [sp, #0]
 800375c:	2201      	movs	r2, #1
 800375e:	4648      	mov	r0, r9
 8003760:	f000 fb9a 	bl	8003e98 <__lshift>
 8003764:	4621      	mov	r1, r4
 8003766:	9002      	str	r0, [sp, #8]
 8003768:	f000 fc02 	bl	8003f70 <__mcmp>
 800376c:	2800      	cmp	r0, #0
 800376e:	dcb4      	bgt.n	80036da <_dtoa_r+0xa82>
 8003770:	d102      	bne.n	8003778 <_dtoa_r+0xb20>
 8003772:	9b00      	ldr	r3, [sp, #0]
 8003774:	07db      	lsls	r3, r3, #31
 8003776:	d4b0      	bmi.n	80036da <_dtoa_r+0xa82>
 8003778:	4633      	mov	r3, r6
 800377a:	461e      	mov	r6, r3
 800377c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003780:	2a30      	cmp	r2, #48	@ 0x30
 8003782:	d0fa      	beq.n	800377a <_dtoa_r+0xb22>
 8003784:	e4b5      	b.n	80030f2 <_dtoa_r+0x49a>
 8003786:	459a      	cmp	sl, r3
 8003788:	d1a8      	bne.n	80036dc <_dtoa_r+0xa84>
 800378a:	2331      	movs	r3, #49	@ 0x31
 800378c:	f108 0801 	add.w	r8, r8, #1
 8003790:	f88a 3000 	strb.w	r3, [sl]
 8003794:	e4ad      	b.n	80030f2 <_dtoa_r+0x49a>
 8003796:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003798:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80037f4 <_dtoa_r+0xb9c>
 800379c:	b11b      	cbz	r3, 80037a6 <_dtoa_r+0xb4e>
 800379e:	f10a 0308 	add.w	r3, sl, #8
 80037a2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80037a4:	6013      	str	r3, [r2, #0]
 80037a6:	4650      	mov	r0, sl
 80037a8:	b017      	add	sp, #92	@ 0x5c
 80037aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037ae:	9b07      	ldr	r3, [sp, #28]
 80037b0:	2b01      	cmp	r3, #1
 80037b2:	f77f ae2e 	ble.w	8003412 <_dtoa_r+0x7ba>
 80037b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80037b8:	9308      	str	r3, [sp, #32]
 80037ba:	2001      	movs	r0, #1
 80037bc:	e64d      	b.n	800345a <_dtoa_r+0x802>
 80037be:	f1bb 0f00 	cmp.w	fp, #0
 80037c2:	f77f aed9 	ble.w	8003578 <_dtoa_r+0x920>
 80037c6:	4656      	mov	r6, sl
 80037c8:	9802      	ldr	r0, [sp, #8]
 80037ca:	4621      	mov	r1, r4
 80037cc:	f7ff f9ba 	bl	8002b44 <quorem>
 80037d0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 80037d4:	f806 3b01 	strb.w	r3, [r6], #1
 80037d8:	eba6 020a 	sub.w	r2, r6, sl
 80037dc:	4593      	cmp	fp, r2
 80037de:	ddb4      	ble.n	800374a <_dtoa_r+0xaf2>
 80037e0:	9902      	ldr	r1, [sp, #8]
 80037e2:	2300      	movs	r3, #0
 80037e4:	220a      	movs	r2, #10
 80037e6:	4648      	mov	r0, r9
 80037e8:	f000 f968 	bl	8003abc <__multadd>
 80037ec:	9002      	str	r0, [sp, #8]
 80037ee:	e7eb      	b.n	80037c8 <_dtoa_r+0xb70>
 80037f0:	080062bd 	.word	0x080062bd
 80037f4:	08006241 	.word	0x08006241

080037f8 <_free_r>:
 80037f8:	b538      	push	{r3, r4, r5, lr}
 80037fa:	4605      	mov	r5, r0
 80037fc:	2900      	cmp	r1, #0
 80037fe:	d041      	beq.n	8003884 <_free_r+0x8c>
 8003800:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003804:	1f0c      	subs	r4, r1, #4
 8003806:	2b00      	cmp	r3, #0
 8003808:	bfb8      	it	lt
 800380a:	18e4      	addlt	r4, r4, r3
 800380c:	f000 f8e8 	bl	80039e0 <__malloc_lock>
 8003810:	4a1d      	ldr	r2, [pc, #116]	@ (8003888 <_free_r+0x90>)
 8003812:	6813      	ldr	r3, [r2, #0]
 8003814:	b933      	cbnz	r3, 8003824 <_free_r+0x2c>
 8003816:	6063      	str	r3, [r4, #4]
 8003818:	6014      	str	r4, [r2, #0]
 800381a:	4628      	mov	r0, r5
 800381c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003820:	f000 b8e4 	b.w	80039ec <__malloc_unlock>
 8003824:	42a3      	cmp	r3, r4
 8003826:	d908      	bls.n	800383a <_free_r+0x42>
 8003828:	6820      	ldr	r0, [r4, #0]
 800382a:	1821      	adds	r1, r4, r0
 800382c:	428b      	cmp	r3, r1
 800382e:	bf01      	itttt	eq
 8003830:	6819      	ldreq	r1, [r3, #0]
 8003832:	685b      	ldreq	r3, [r3, #4]
 8003834:	1809      	addeq	r1, r1, r0
 8003836:	6021      	streq	r1, [r4, #0]
 8003838:	e7ed      	b.n	8003816 <_free_r+0x1e>
 800383a:	461a      	mov	r2, r3
 800383c:	685b      	ldr	r3, [r3, #4]
 800383e:	b10b      	cbz	r3, 8003844 <_free_r+0x4c>
 8003840:	42a3      	cmp	r3, r4
 8003842:	d9fa      	bls.n	800383a <_free_r+0x42>
 8003844:	6811      	ldr	r1, [r2, #0]
 8003846:	1850      	adds	r0, r2, r1
 8003848:	42a0      	cmp	r0, r4
 800384a:	d10b      	bne.n	8003864 <_free_r+0x6c>
 800384c:	6820      	ldr	r0, [r4, #0]
 800384e:	4401      	add	r1, r0
 8003850:	1850      	adds	r0, r2, r1
 8003852:	4283      	cmp	r3, r0
 8003854:	6011      	str	r1, [r2, #0]
 8003856:	d1e0      	bne.n	800381a <_free_r+0x22>
 8003858:	6818      	ldr	r0, [r3, #0]
 800385a:	685b      	ldr	r3, [r3, #4]
 800385c:	6053      	str	r3, [r2, #4]
 800385e:	4408      	add	r0, r1
 8003860:	6010      	str	r0, [r2, #0]
 8003862:	e7da      	b.n	800381a <_free_r+0x22>
 8003864:	d902      	bls.n	800386c <_free_r+0x74>
 8003866:	230c      	movs	r3, #12
 8003868:	602b      	str	r3, [r5, #0]
 800386a:	e7d6      	b.n	800381a <_free_r+0x22>
 800386c:	6820      	ldr	r0, [r4, #0]
 800386e:	1821      	adds	r1, r4, r0
 8003870:	428b      	cmp	r3, r1
 8003872:	bf04      	itt	eq
 8003874:	6819      	ldreq	r1, [r3, #0]
 8003876:	685b      	ldreq	r3, [r3, #4]
 8003878:	6063      	str	r3, [r4, #4]
 800387a:	bf04      	itt	eq
 800387c:	1809      	addeq	r1, r1, r0
 800387e:	6021      	streq	r1, [r4, #0]
 8003880:	6054      	str	r4, [r2, #4]
 8003882:	e7ca      	b.n	800381a <_free_r+0x22>
 8003884:	bd38      	pop	{r3, r4, r5, pc}
 8003886:	bf00      	nop
 8003888:	20000370 	.word	0x20000370

0800388c <malloc>:
 800388c:	4b02      	ldr	r3, [pc, #8]	@ (8003898 <malloc+0xc>)
 800388e:	4601      	mov	r1, r0
 8003890:	6818      	ldr	r0, [r3, #0]
 8003892:	f000 b825 	b.w	80038e0 <_malloc_r>
 8003896:	bf00      	nop
 8003898:	20000020 	.word	0x20000020

0800389c <sbrk_aligned>:
 800389c:	b570      	push	{r4, r5, r6, lr}
 800389e:	4e0f      	ldr	r6, [pc, #60]	@ (80038dc <sbrk_aligned+0x40>)
 80038a0:	460c      	mov	r4, r1
 80038a2:	6831      	ldr	r1, [r6, #0]
 80038a4:	4605      	mov	r5, r0
 80038a6:	b911      	cbnz	r1, 80038ae <sbrk_aligned+0x12>
 80038a8:	f001 fe04 	bl	80054b4 <_sbrk_r>
 80038ac:	6030      	str	r0, [r6, #0]
 80038ae:	4621      	mov	r1, r4
 80038b0:	4628      	mov	r0, r5
 80038b2:	f001 fdff 	bl	80054b4 <_sbrk_r>
 80038b6:	1c43      	adds	r3, r0, #1
 80038b8:	d103      	bne.n	80038c2 <sbrk_aligned+0x26>
 80038ba:	f04f 34ff 	mov.w	r4, #4294967295
 80038be:	4620      	mov	r0, r4
 80038c0:	bd70      	pop	{r4, r5, r6, pc}
 80038c2:	1cc4      	adds	r4, r0, #3
 80038c4:	f024 0403 	bic.w	r4, r4, #3
 80038c8:	42a0      	cmp	r0, r4
 80038ca:	d0f8      	beq.n	80038be <sbrk_aligned+0x22>
 80038cc:	1a21      	subs	r1, r4, r0
 80038ce:	4628      	mov	r0, r5
 80038d0:	f001 fdf0 	bl	80054b4 <_sbrk_r>
 80038d4:	3001      	adds	r0, #1
 80038d6:	d1f2      	bne.n	80038be <sbrk_aligned+0x22>
 80038d8:	e7ef      	b.n	80038ba <sbrk_aligned+0x1e>
 80038da:	bf00      	nop
 80038dc:	2000036c 	.word	0x2000036c

080038e0 <_malloc_r>:
 80038e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80038e4:	1ccd      	adds	r5, r1, #3
 80038e6:	f025 0503 	bic.w	r5, r5, #3
 80038ea:	3508      	adds	r5, #8
 80038ec:	2d0c      	cmp	r5, #12
 80038ee:	bf38      	it	cc
 80038f0:	250c      	movcc	r5, #12
 80038f2:	2d00      	cmp	r5, #0
 80038f4:	4606      	mov	r6, r0
 80038f6:	db01      	blt.n	80038fc <_malloc_r+0x1c>
 80038f8:	42a9      	cmp	r1, r5
 80038fa:	d904      	bls.n	8003906 <_malloc_r+0x26>
 80038fc:	230c      	movs	r3, #12
 80038fe:	6033      	str	r3, [r6, #0]
 8003900:	2000      	movs	r0, #0
 8003902:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003906:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80039dc <_malloc_r+0xfc>
 800390a:	f000 f869 	bl	80039e0 <__malloc_lock>
 800390e:	f8d8 3000 	ldr.w	r3, [r8]
 8003912:	461c      	mov	r4, r3
 8003914:	bb44      	cbnz	r4, 8003968 <_malloc_r+0x88>
 8003916:	4629      	mov	r1, r5
 8003918:	4630      	mov	r0, r6
 800391a:	f7ff ffbf 	bl	800389c <sbrk_aligned>
 800391e:	1c43      	adds	r3, r0, #1
 8003920:	4604      	mov	r4, r0
 8003922:	d158      	bne.n	80039d6 <_malloc_r+0xf6>
 8003924:	f8d8 4000 	ldr.w	r4, [r8]
 8003928:	4627      	mov	r7, r4
 800392a:	2f00      	cmp	r7, #0
 800392c:	d143      	bne.n	80039b6 <_malloc_r+0xd6>
 800392e:	2c00      	cmp	r4, #0
 8003930:	d04b      	beq.n	80039ca <_malloc_r+0xea>
 8003932:	6823      	ldr	r3, [r4, #0]
 8003934:	4639      	mov	r1, r7
 8003936:	4630      	mov	r0, r6
 8003938:	eb04 0903 	add.w	r9, r4, r3
 800393c:	f001 fdba 	bl	80054b4 <_sbrk_r>
 8003940:	4581      	cmp	r9, r0
 8003942:	d142      	bne.n	80039ca <_malloc_r+0xea>
 8003944:	6821      	ldr	r1, [r4, #0]
 8003946:	1a6d      	subs	r5, r5, r1
 8003948:	4629      	mov	r1, r5
 800394a:	4630      	mov	r0, r6
 800394c:	f7ff ffa6 	bl	800389c <sbrk_aligned>
 8003950:	3001      	adds	r0, #1
 8003952:	d03a      	beq.n	80039ca <_malloc_r+0xea>
 8003954:	6823      	ldr	r3, [r4, #0]
 8003956:	442b      	add	r3, r5
 8003958:	6023      	str	r3, [r4, #0]
 800395a:	f8d8 3000 	ldr.w	r3, [r8]
 800395e:	685a      	ldr	r2, [r3, #4]
 8003960:	bb62      	cbnz	r2, 80039bc <_malloc_r+0xdc>
 8003962:	f8c8 7000 	str.w	r7, [r8]
 8003966:	e00f      	b.n	8003988 <_malloc_r+0xa8>
 8003968:	6822      	ldr	r2, [r4, #0]
 800396a:	1b52      	subs	r2, r2, r5
 800396c:	d420      	bmi.n	80039b0 <_malloc_r+0xd0>
 800396e:	2a0b      	cmp	r2, #11
 8003970:	d917      	bls.n	80039a2 <_malloc_r+0xc2>
 8003972:	1961      	adds	r1, r4, r5
 8003974:	42a3      	cmp	r3, r4
 8003976:	6025      	str	r5, [r4, #0]
 8003978:	bf18      	it	ne
 800397a:	6059      	strne	r1, [r3, #4]
 800397c:	6863      	ldr	r3, [r4, #4]
 800397e:	bf08      	it	eq
 8003980:	f8c8 1000 	streq.w	r1, [r8]
 8003984:	5162      	str	r2, [r4, r5]
 8003986:	604b      	str	r3, [r1, #4]
 8003988:	4630      	mov	r0, r6
 800398a:	f000 f82f 	bl	80039ec <__malloc_unlock>
 800398e:	f104 000b 	add.w	r0, r4, #11
 8003992:	1d23      	adds	r3, r4, #4
 8003994:	f020 0007 	bic.w	r0, r0, #7
 8003998:	1ac2      	subs	r2, r0, r3
 800399a:	bf1c      	itt	ne
 800399c:	1a1b      	subne	r3, r3, r0
 800399e:	50a3      	strne	r3, [r4, r2]
 80039a0:	e7af      	b.n	8003902 <_malloc_r+0x22>
 80039a2:	6862      	ldr	r2, [r4, #4]
 80039a4:	42a3      	cmp	r3, r4
 80039a6:	bf0c      	ite	eq
 80039a8:	f8c8 2000 	streq.w	r2, [r8]
 80039ac:	605a      	strne	r2, [r3, #4]
 80039ae:	e7eb      	b.n	8003988 <_malloc_r+0xa8>
 80039b0:	4623      	mov	r3, r4
 80039b2:	6864      	ldr	r4, [r4, #4]
 80039b4:	e7ae      	b.n	8003914 <_malloc_r+0x34>
 80039b6:	463c      	mov	r4, r7
 80039b8:	687f      	ldr	r7, [r7, #4]
 80039ba:	e7b6      	b.n	800392a <_malloc_r+0x4a>
 80039bc:	461a      	mov	r2, r3
 80039be:	685b      	ldr	r3, [r3, #4]
 80039c0:	42a3      	cmp	r3, r4
 80039c2:	d1fb      	bne.n	80039bc <_malloc_r+0xdc>
 80039c4:	2300      	movs	r3, #0
 80039c6:	6053      	str	r3, [r2, #4]
 80039c8:	e7de      	b.n	8003988 <_malloc_r+0xa8>
 80039ca:	230c      	movs	r3, #12
 80039cc:	6033      	str	r3, [r6, #0]
 80039ce:	4630      	mov	r0, r6
 80039d0:	f000 f80c 	bl	80039ec <__malloc_unlock>
 80039d4:	e794      	b.n	8003900 <_malloc_r+0x20>
 80039d6:	6005      	str	r5, [r0, #0]
 80039d8:	e7d6      	b.n	8003988 <_malloc_r+0xa8>
 80039da:	bf00      	nop
 80039dc:	20000370 	.word	0x20000370

080039e0 <__malloc_lock>:
 80039e0:	4801      	ldr	r0, [pc, #4]	@ (80039e8 <__malloc_lock+0x8>)
 80039e2:	f7ff b8a6 	b.w	8002b32 <__retarget_lock_acquire_recursive>
 80039e6:	bf00      	nop
 80039e8:	20000368 	.word	0x20000368

080039ec <__malloc_unlock>:
 80039ec:	4801      	ldr	r0, [pc, #4]	@ (80039f4 <__malloc_unlock+0x8>)
 80039ee:	f7ff b8a1 	b.w	8002b34 <__retarget_lock_release_recursive>
 80039f2:	bf00      	nop
 80039f4:	20000368 	.word	0x20000368

080039f8 <_Balloc>:
 80039f8:	b570      	push	{r4, r5, r6, lr}
 80039fa:	69c6      	ldr	r6, [r0, #28]
 80039fc:	4604      	mov	r4, r0
 80039fe:	460d      	mov	r5, r1
 8003a00:	b976      	cbnz	r6, 8003a20 <_Balloc+0x28>
 8003a02:	2010      	movs	r0, #16
 8003a04:	f7ff ff42 	bl	800388c <malloc>
 8003a08:	4602      	mov	r2, r0
 8003a0a:	61e0      	str	r0, [r4, #28]
 8003a0c:	b920      	cbnz	r0, 8003a18 <_Balloc+0x20>
 8003a0e:	4b18      	ldr	r3, [pc, #96]	@ (8003a70 <_Balloc+0x78>)
 8003a10:	4818      	ldr	r0, [pc, #96]	@ (8003a74 <_Balloc+0x7c>)
 8003a12:	216b      	movs	r1, #107	@ 0x6b
 8003a14:	f001 fd74 	bl	8005500 <__assert_func>
 8003a18:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003a1c:	6006      	str	r6, [r0, #0]
 8003a1e:	60c6      	str	r6, [r0, #12]
 8003a20:	69e6      	ldr	r6, [r4, #28]
 8003a22:	68f3      	ldr	r3, [r6, #12]
 8003a24:	b183      	cbz	r3, 8003a48 <_Balloc+0x50>
 8003a26:	69e3      	ldr	r3, [r4, #28]
 8003a28:	68db      	ldr	r3, [r3, #12]
 8003a2a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003a2e:	b9b8      	cbnz	r0, 8003a60 <_Balloc+0x68>
 8003a30:	2101      	movs	r1, #1
 8003a32:	fa01 f605 	lsl.w	r6, r1, r5
 8003a36:	1d72      	adds	r2, r6, #5
 8003a38:	0092      	lsls	r2, r2, #2
 8003a3a:	4620      	mov	r0, r4
 8003a3c:	f001 fd7e 	bl	800553c <_calloc_r>
 8003a40:	b160      	cbz	r0, 8003a5c <_Balloc+0x64>
 8003a42:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003a46:	e00e      	b.n	8003a66 <_Balloc+0x6e>
 8003a48:	2221      	movs	r2, #33	@ 0x21
 8003a4a:	2104      	movs	r1, #4
 8003a4c:	4620      	mov	r0, r4
 8003a4e:	f001 fd75 	bl	800553c <_calloc_r>
 8003a52:	69e3      	ldr	r3, [r4, #28]
 8003a54:	60f0      	str	r0, [r6, #12]
 8003a56:	68db      	ldr	r3, [r3, #12]
 8003a58:	2b00      	cmp	r3, #0
 8003a5a:	d1e4      	bne.n	8003a26 <_Balloc+0x2e>
 8003a5c:	2000      	movs	r0, #0
 8003a5e:	bd70      	pop	{r4, r5, r6, pc}
 8003a60:	6802      	ldr	r2, [r0, #0]
 8003a62:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003a66:	2300      	movs	r3, #0
 8003a68:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003a6c:	e7f7      	b.n	8003a5e <_Balloc+0x66>
 8003a6e:	bf00      	nop
 8003a70:	0800624e 	.word	0x0800624e
 8003a74:	080062ce 	.word	0x080062ce

08003a78 <_Bfree>:
 8003a78:	b570      	push	{r4, r5, r6, lr}
 8003a7a:	69c6      	ldr	r6, [r0, #28]
 8003a7c:	4605      	mov	r5, r0
 8003a7e:	460c      	mov	r4, r1
 8003a80:	b976      	cbnz	r6, 8003aa0 <_Bfree+0x28>
 8003a82:	2010      	movs	r0, #16
 8003a84:	f7ff ff02 	bl	800388c <malloc>
 8003a88:	4602      	mov	r2, r0
 8003a8a:	61e8      	str	r0, [r5, #28]
 8003a8c:	b920      	cbnz	r0, 8003a98 <_Bfree+0x20>
 8003a8e:	4b09      	ldr	r3, [pc, #36]	@ (8003ab4 <_Bfree+0x3c>)
 8003a90:	4809      	ldr	r0, [pc, #36]	@ (8003ab8 <_Bfree+0x40>)
 8003a92:	218f      	movs	r1, #143	@ 0x8f
 8003a94:	f001 fd34 	bl	8005500 <__assert_func>
 8003a98:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003a9c:	6006      	str	r6, [r0, #0]
 8003a9e:	60c6      	str	r6, [r0, #12]
 8003aa0:	b13c      	cbz	r4, 8003ab2 <_Bfree+0x3a>
 8003aa2:	69eb      	ldr	r3, [r5, #28]
 8003aa4:	6862      	ldr	r2, [r4, #4]
 8003aa6:	68db      	ldr	r3, [r3, #12]
 8003aa8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003aac:	6021      	str	r1, [r4, #0]
 8003aae:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003ab2:	bd70      	pop	{r4, r5, r6, pc}
 8003ab4:	0800624e 	.word	0x0800624e
 8003ab8:	080062ce 	.word	0x080062ce

08003abc <__multadd>:
 8003abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ac0:	690d      	ldr	r5, [r1, #16]
 8003ac2:	4607      	mov	r7, r0
 8003ac4:	460c      	mov	r4, r1
 8003ac6:	461e      	mov	r6, r3
 8003ac8:	f101 0c14 	add.w	ip, r1, #20
 8003acc:	2000      	movs	r0, #0
 8003ace:	f8dc 3000 	ldr.w	r3, [ip]
 8003ad2:	b299      	uxth	r1, r3
 8003ad4:	fb02 6101 	mla	r1, r2, r1, r6
 8003ad8:	0c1e      	lsrs	r6, r3, #16
 8003ada:	0c0b      	lsrs	r3, r1, #16
 8003adc:	fb02 3306 	mla	r3, r2, r6, r3
 8003ae0:	b289      	uxth	r1, r1
 8003ae2:	3001      	adds	r0, #1
 8003ae4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003ae8:	4285      	cmp	r5, r0
 8003aea:	f84c 1b04 	str.w	r1, [ip], #4
 8003aee:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003af2:	dcec      	bgt.n	8003ace <__multadd+0x12>
 8003af4:	b30e      	cbz	r6, 8003b3a <__multadd+0x7e>
 8003af6:	68a3      	ldr	r3, [r4, #8]
 8003af8:	42ab      	cmp	r3, r5
 8003afa:	dc19      	bgt.n	8003b30 <__multadd+0x74>
 8003afc:	6861      	ldr	r1, [r4, #4]
 8003afe:	4638      	mov	r0, r7
 8003b00:	3101      	adds	r1, #1
 8003b02:	f7ff ff79 	bl	80039f8 <_Balloc>
 8003b06:	4680      	mov	r8, r0
 8003b08:	b928      	cbnz	r0, 8003b16 <__multadd+0x5a>
 8003b0a:	4602      	mov	r2, r0
 8003b0c:	4b0c      	ldr	r3, [pc, #48]	@ (8003b40 <__multadd+0x84>)
 8003b0e:	480d      	ldr	r0, [pc, #52]	@ (8003b44 <__multadd+0x88>)
 8003b10:	21ba      	movs	r1, #186	@ 0xba
 8003b12:	f001 fcf5 	bl	8005500 <__assert_func>
 8003b16:	6922      	ldr	r2, [r4, #16]
 8003b18:	3202      	adds	r2, #2
 8003b1a:	f104 010c 	add.w	r1, r4, #12
 8003b1e:	0092      	lsls	r2, r2, #2
 8003b20:	300c      	adds	r0, #12
 8003b22:	f001 fcd7 	bl	80054d4 <memcpy>
 8003b26:	4621      	mov	r1, r4
 8003b28:	4638      	mov	r0, r7
 8003b2a:	f7ff ffa5 	bl	8003a78 <_Bfree>
 8003b2e:	4644      	mov	r4, r8
 8003b30:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003b34:	3501      	adds	r5, #1
 8003b36:	615e      	str	r6, [r3, #20]
 8003b38:	6125      	str	r5, [r4, #16]
 8003b3a:	4620      	mov	r0, r4
 8003b3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b40:	080062bd 	.word	0x080062bd
 8003b44:	080062ce 	.word	0x080062ce

08003b48 <__s2b>:
 8003b48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003b4c:	460c      	mov	r4, r1
 8003b4e:	4615      	mov	r5, r2
 8003b50:	461f      	mov	r7, r3
 8003b52:	2209      	movs	r2, #9
 8003b54:	3308      	adds	r3, #8
 8003b56:	4606      	mov	r6, r0
 8003b58:	fb93 f3f2 	sdiv	r3, r3, r2
 8003b5c:	2100      	movs	r1, #0
 8003b5e:	2201      	movs	r2, #1
 8003b60:	429a      	cmp	r2, r3
 8003b62:	db09      	blt.n	8003b78 <__s2b+0x30>
 8003b64:	4630      	mov	r0, r6
 8003b66:	f7ff ff47 	bl	80039f8 <_Balloc>
 8003b6a:	b940      	cbnz	r0, 8003b7e <__s2b+0x36>
 8003b6c:	4602      	mov	r2, r0
 8003b6e:	4b19      	ldr	r3, [pc, #100]	@ (8003bd4 <__s2b+0x8c>)
 8003b70:	4819      	ldr	r0, [pc, #100]	@ (8003bd8 <__s2b+0x90>)
 8003b72:	21d3      	movs	r1, #211	@ 0xd3
 8003b74:	f001 fcc4 	bl	8005500 <__assert_func>
 8003b78:	0052      	lsls	r2, r2, #1
 8003b7a:	3101      	adds	r1, #1
 8003b7c:	e7f0      	b.n	8003b60 <__s2b+0x18>
 8003b7e:	9b08      	ldr	r3, [sp, #32]
 8003b80:	6143      	str	r3, [r0, #20]
 8003b82:	2d09      	cmp	r5, #9
 8003b84:	f04f 0301 	mov.w	r3, #1
 8003b88:	6103      	str	r3, [r0, #16]
 8003b8a:	dd16      	ble.n	8003bba <__s2b+0x72>
 8003b8c:	f104 0909 	add.w	r9, r4, #9
 8003b90:	46c8      	mov	r8, r9
 8003b92:	442c      	add	r4, r5
 8003b94:	f818 3b01 	ldrb.w	r3, [r8], #1
 8003b98:	4601      	mov	r1, r0
 8003b9a:	3b30      	subs	r3, #48	@ 0x30
 8003b9c:	220a      	movs	r2, #10
 8003b9e:	4630      	mov	r0, r6
 8003ba0:	f7ff ff8c 	bl	8003abc <__multadd>
 8003ba4:	45a0      	cmp	r8, r4
 8003ba6:	d1f5      	bne.n	8003b94 <__s2b+0x4c>
 8003ba8:	f1a5 0408 	sub.w	r4, r5, #8
 8003bac:	444c      	add	r4, r9
 8003bae:	1b2d      	subs	r5, r5, r4
 8003bb0:	1963      	adds	r3, r4, r5
 8003bb2:	42bb      	cmp	r3, r7
 8003bb4:	db04      	blt.n	8003bc0 <__s2b+0x78>
 8003bb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003bba:	340a      	adds	r4, #10
 8003bbc:	2509      	movs	r5, #9
 8003bbe:	e7f6      	b.n	8003bae <__s2b+0x66>
 8003bc0:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003bc4:	4601      	mov	r1, r0
 8003bc6:	3b30      	subs	r3, #48	@ 0x30
 8003bc8:	220a      	movs	r2, #10
 8003bca:	4630      	mov	r0, r6
 8003bcc:	f7ff ff76 	bl	8003abc <__multadd>
 8003bd0:	e7ee      	b.n	8003bb0 <__s2b+0x68>
 8003bd2:	bf00      	nop
 8003bd4:	080062bd 	.word	0x080062bd
 8003bd8:	080062ce 	.word	0x080062ce

08003bdc <__hi0bits>:
 8003bdc:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003be0:	4603      	mov	r3, r0
 8003be2:	bf36      	itet	cc
 8003be4:	0403      	lslcc	r3, r0, #16
 8003be6:	2000      	movcs	r0, #0
 8003be8:	2010      	movcc	r0, #16
 8003bea:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003bee:	bf3c      	itt	cc
 8003bf0:	021b      	lslcc	r3, r3, #8
 8003bf2:	3008      	addcc	r0, #8
 8003bf4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003bf8:	bf3c      	itt	cc
 8003bfa:	011b      	lslcc	r3, r3, #4
 8003bfc:	3004      	addcc	r0, #4
 8003bfe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003c02:	bf3c      	itt	cc
 8003c04:	009b      	lslcc	r3, r3, #2
 8003c06:	3002      	addcc	r0, #2
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	db05      	blt.n	8003c18 <__hi0bits+0x3c>
 8003c0c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003c10:	f100 0001 	add.w	r0, r0, #1
 8003c14:	bf08      	it	eq
 8003c16:	2020      	moveq	r0, #32
 8003c18:	4770      	bx	lr

08003c1a <__lo0bits>:
 8003c1a:	6803      	ldr	r3, [r0, #0]
 8003c1c:	4602      	mov	r2, r0
 8003c1e:	f013 0007 	ands.w	r0, r3, #7
 8003c22:	d00b      	beq.n	8003c3c <__lo0bits+0x22>
 8003c24:	07d9      	lsls	r1, r3, #31
 8003c26:	d421      	bmi.n	8003c6c <__lo0bits+0x52>
 8003c28:	0798      	lsls	r0, r3, #30
 8003c2a:	bf49      	itett	mi
 8003c2c:	085b      	lsrmi	r3, r3, #1
 8003c2e:	089b      	lsrpl	r3, r3, #2
 8003c30:	2001      	movmi	r0, #1
 8003c32:	6013      	strmi	r3, [r2, #0]
 8003c34:	bf5c      	itt	pl
 8003c36:	6013      	strpl	r3, [r2, #0]
 8003c38:	2002      	movpl	r0, #2
 8003c3a:	4770      	bx	lr
 8003c3c:	b299      	uxth	r1, r3
 8003c3e:	b909      	cbnz	r1, 8003c44 <__lo0bits+0x2a>
 8003c40:	0c1b      	lsrs	r3, r3, #16
 8003c42:	2010      	movs	r0, #16
 8003c44:	b2d9      	uxtb	r1, r3
 8003c46:	b909      	cbnz	r1, 8003c4c <__lo0bits+0x32>
 8003c48:	3008      	adds	r0, #8
 8003c4a:	0a1b      	lsrs	r3, r3, #8
 8003c4c:	0719      	lsls	r1, r3, #28
 8003c4e:	bf04      	itt	eq
 8003c50:	091b      	lsreq	r3, r3, #4
 8003c52:	3004      	addeq	r0, #4
 8003c54:	0799      	lsls	r1, r3, #30
 8003c56:	bf04      	itt	eq
 8003c58:	089b      	lsreq	r3, r3, #2
 8003c5a:	3002      	addeq	r0, #2
 8003c5c:	07d9      	lsls	r1, r3, #31
 8003c5e:	d403      	bmi.n	8003c68 <__lo0bits+0x4e>
 8003c60:	085b      	lsrs	r3, r3, #1
 8003c62:	f100 0001 	add.w	r0, r0, #1
 8003c66:	d003      	beq.n	8003c70 <__lo0bits+0x56>
 8003c68:	6013      	str	r3, [r2, #0]
 8003c6a:	4770      	bx	lr
 8003c6c:	2000      	movs	r0, #0
 8003c6e:	4770      	bx	lr
 8003c70:	2020      	movs	r0, #32
 8003c72:	4770      	bx	lr

08003c74 <__i2b>:
 8003c74:	b510      	push	{r4, lr}
 8003c76:	460c      	mov	r4, r1
 8003c78:	2101      	movs	r1, #1
 8003c7a:	f7ff febd 	bl	80039f8 <_Balloc>
 8003c7e:	4602      	mov	r2, r0
 8003c80:	b928      	cbnz	r0, 8003c8e <__i2b+0x1a>
 8003c82:	4b05      	ldr	r3, [pc, #20]	@ (8003c98 <__i2b+0x24>)
 8003c84:	4805      	ldr	r0, [pc, #20]	@ (8003c9c <__i2b+0x28>)
 8003c86:	f240 1145 	movw	r1, #325	@ 0x145
 8003c8a:	f001 fc39 	bl	8005500 <__assert_func>
 8003c8e:	2301      	movs	r3, #1
 8003c90:	6144      	str	r4, [r0, #20]
 8003c92:	6103      	str	r3, [r0, #16]
 8003c94:	bd10      	pop	{r4, pc}
 8003c96:	bf00      	nop
 8003c98:	080062bd 	.word	0x080062bd
 8003c9c:	080062ce 	.word	0x080062ce

08003ca0 <__multiply>:
 8003ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ca4:	4617      	mov	r7, r2
 8003ca6:	690a      	ldr	r2, [r1, #16]
 8003ca8:	693b      	ldr	r3, [r7, #16]
 8003caa:	429a      	cmp	r2, r3
 8003cac:	bfa8      	it	ge
 8003cae:	463b      	movge	r3, r7
 8003cb0:	4689      	mov	r9, r1
 8003cb2:	bfa4      	itt	ge
 8003cb4:	460f      	movge	r7, r1
 8003cb6:	4699      	movge	r9, r3
 8003cb8:	693d      	ldr	r5, [r7, #16]
 8003cba:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003cbe:	68bb      	ldr	r3, [r7, #8]
 8003cc0:	6879      	ldr	r1, [r7, #4]
 8003cc2:	eb05 060a 	add.w	r6, r5, sl
 8003cc6:	42b3      	cmp	r3, r6
 8003cc8:	b085      	sub	sp, #20
 8003cca:	bfb8      	it	lt
 8003ccc:	3101      	addlt	r1, #1
 8003cce:	f7ff fe93 	bl	80039f8 <_Balloc>
 8003cd2:	b930      	cbnz	r0, 8003ce2 <__multiply+0x42>
 8003cd4:	4602      	mov	r2, r0
 8003cd6:	4b41      	ldr	r3, [pc, #260]	@ (8003ddc <__multiply+0x13c>)
 8003cd8:	4841      	ldr	r0, [pc, #260]	@ (8003de0 <__multiply+0x140>)
 8003cda:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003cde:	f001 fc0f 	bl	8005500 <__assert_func>
 8003ce2:	f100 0414 	add.w	r4, r0, #20
 8003ce6:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8003cea:	4623      	mov	r3, r4
 8003cec:	2200      	movs	r2, #0
 8003cee:	4573      	cmp	r3, lr
 8003cf0:	d320      	bcc.n	8003d34 <__multiply+0x94>
 8003cf2:	f107 0814 	add.w	r8, r7, #20
 8003cf6:	f109 0114 	add.w	r1, r9, #20
 8003cfa:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8003cfe:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8003d02:	9302      	str	r3, [sp, #8]
 8003d04:	1beb      	subs	r3, r5, r7
 8003d06:	3b15      	subs	r3, #21
 8003d08:	f023 0303 	bic.w	r3, r3, #3
 8003d0c:	3304      	adds	r3, #4
 8003d0e:	3715      	adds	r7, #21
 8003d10:	42bd      	cmp	r5, r7
 8003d12:	bf38      	it	cc
 8003d14:	2304      	movcc	r3, #4
 8003d16:	9301      	str	r3, [sp, #4]
 8003d18:	9b02      	ldr	r3, [sp, #8]
 8003d1a:	9103      	str	r1, [sp, #12]
 8003d1c:	428b      	cmp	r3, r1
 8003d1e:	d80c      	bhi.n	8003d3a <__multiply+0x9a>
 8003d20:	2e00      	cmp	r6, #0
 8003d22:	dd03      	ble.n	8003d2c <__multiply+0x8c>
 8003d24:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8003d28:	2b00      	cmp	r3, #0
 8003d2a:	d055      	beq.n	8003dd8 <__multiply+0x138>
 8003d2c:	6106      	str	r6, [r0, #16]
 8003d2e:	b005      	add	sp, #20
 8003d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d34:	f843 2b04 	str.w	r2, [r3], #4
 8003d38:	e7d9      	b.n	8003cee <__multiply+0x4e>
 8003d3a:	f8b1 a000 	ldrh.w	sl, [r1]
 8003d3e:	f1ba 0f00 	cmp.w	sl, #0
 8003d42:	d01f      	beq.n	8003d84 <__multiply+0xe4>
 8003d44:	46c4      	mov	ip, r8
 8003d46:	46a1      	mov	r9, r4
 8003d48:	2700      	movs	r7, #0
 8003d4a:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003d4e:	f8d9 3000 	ldr.w	r3, [r9]
 8003d52:	fa1f fb82 	uxth.w	fp, r2
 8003d56:	b29b      	uxth	r3, r3
 8003d58:	fb0a 330b 	mla	r3, sl, fp, r3
 8003d5c:	443b      	add	r3, r7
 8003d5e:	f8d9 7000 	ldr.w	r7, [r9]
 8003d62:	0c12      	lsrs	r2, r2, #16
 8003d64:	0c3f      	lsrs	r7, r7, #16
 8003d66:	fb0a 7202 	mla	r2, sl, r2, r7
 8003d6a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8003d6e:	b29b      	uxth	r3, r3
 8003d70:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003d74:	4565      	cmp	r5, ip
 8003d76:	f849 3b04 	str.w	r3, [r9], #4
 8003d7a:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8003d7e:	d8e4      	bhi.n	8003d4a <__multiply+0xaa>
 8003d80:	9b01      	ldr	r3, [sp, #4]
 8003d82:	50e7      	str	r7, [r4, r3]
 8003d84:	9b03      	ldr	r3, [sp, #12]
 8003d86:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003d8a:	3104      	adds	r1, #4
 8003d8c:	f1b9 0f00 	cmp.w	r9, #0
 8003d90:	d020      	beq.n	8003dd4 <__multiply+0x134>
 8003d92:	6823      	ldr	r3, [r4, #0]
 8003d94:	4647      	mov	r7, r8
 8003d96:	46a4      	mov	ip, r4
 8003d98:	f04f 0a00 	mov.w	sl, #0
 8003d9c:	f8b7 b000 	ldrh.w	fp, [r7]
 8003da0:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8003da4:	fb09 220b 	mla	r2, r9, fp, r2
 8003da8:	4452      	add	r2, sl
 8003daa:	b29b      	uxth	r3, r3
 8003dac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003db0:	f84c 3b04 	str.w	r3, [ip], #4
 8003db4:	f857 3b04 	ldr.w	r3, [r7], #4
 8003db8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003dbc:	f8bc 3000 	ldrh.w	r3, [ip]
 8003dc0:	fb09 330a 	mla	r3, r9, sl, r3
 8003dc4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8003dc8:	42bd      	cmp	r5, r7
 8003dca:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003dce:	d8e5      	bhi.n	8003d9c <__multiply+0xfc>
 8003dd0:	9a01      	ldr	r2, [sp, #4]
 8003dd2:	50a3      	str	r3, [r4, r2]
 8003dd4:	3404      	adds	r4, #4
 8003dd6:	e79f      	b.n	8003d18 <__multiply+0x78>
 8003dd8:	3e01      	subs	r6, #1
 8003dda:	e7a1      	b.n	8003d20 <__multiply+0x80>
 8003ddc:	080062bd 	.word	0x080062bd
 8003de0:	080062ce 	.word	0x080062ce

08003de4 <__pow5mult>:
 8003de4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003de8:	4615      	mov	r5, r2
 8003dea:	f012 0203 	ands.w	r2, r2, #3
 8003dee:	4607      	mov	r7, r0
 8003df0:	460e      	mov	r6, r1
 8003df2:	d007      	beq.n	8003e04 <__pow5mult+0x20>
 8003df4:	4c25      	ldr	r4, [pc, #148]	@ (8003e8c <__pow5mult+0xa8>)
 8003df6:	3a01      	subs	r2, #1
 8003df8:	2300      	movs	r3, #0
 8003dfa:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003dfe:	f7ff fe5d 	bl	8003abc <__multadd>
 8003e02:	4606      	mov	r6, r0
 8003e04:	10ad      	asrs	r5, r5, #2
 8003e06:	d03d      	beq.n	8003e84 <__pow5mult+0xa0>
 8003e08:	69fc      	ldr	r4, [r7, #28]
 8003e0a:	b97c      	cbnz	r4, 8003e2c <__pow5mult+0x48>
 8003e0c:	2010      	movs	r0, #16
 8003e0e:	f7ff fd3d 	bl	800388c <malloc>
 8003e12:	4602      	mov	r2, r0
 8003e14:	61f8      	str	r0, [r7, #28]
 8003e16:	b928      	cbnz	r0, 8003e24 <__pow5mult+0x40>
 8003e18:	4b1d      	ldr	r3, [pc, #116]	@ (8003e90 <__pow5mult+0xac>)
 8003e1a:	481e      	ldr	r0, [pc, #120]	@ (8003e94 <__pow5mult+0xb0>)
 8003e1c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003e20:	f001 fb6e 	bl	8005500 <__assert_func>
 8003e24:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003e28:	6004      	str	r4, [r0, #0]
 8003e2a:	60c4      	str	r4, [r0, #12]
 8003e2c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003e30:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003e34:	b94c      	cbnz	r4, 8003e4a <__pow5mult+0x66>
 8003e36:	f240 2171 	movw	r1, #625	@ 0x271
 8003e3a:	4638      	mov	r0, r7
 8003e3c:	f7ff ff1a 	bl	8003c74 <__i2b>
 8003e40:	2300      	movs	r3, #0
 8003e42:	f8c8 0008 	str.w	r0, [r8, #8]
 8003e46:	4604      	mov	r4, r0
 8003e48:	6003      	str	r3, [r0, #0]
 8003e4a:	f04f 0900 	mov.w	r9, #0
 8003e4e:	07eb      	lsls	r3, r5, #31
 8003e50:	d50a      	bpl.n	8003e68 <__pow5mult+0x84>
 8003e52:	4631      	mov	r1, r6
 8003e54:	4622      	mov	r2, r4
 8003e56:	4638      	mov	r0, r7
 8003e58:	f7ff ff22 	bl	8003ca0 <__multiply>
 8003e5c:	4631      	mov	r1, r6
 8003e5e:	4680      	mov	r8, r0
 8003e60:	4638      	mov	r0, r7
 8003e62:	f7ff fe09 	bl	8003a78 <_Bfree>
 8003e66:	4646      	mov	r6, r8
 8003e68:	106d      	asrs	r5, r5, #1
 8003e6a:	d00b      	beq.n	8003e84 <__pow5mult+0xa0>
 8003e6c:	6820      	ldr	r0, [r4, #0]
 8003e6e:	b938      	cbnz	r0, 8003e80 <__pow5mult+0x9c>
 8003e70:	4622      	mov	r2, r4
 8003e72:	4621      	mov	r1, r4
 8003e74:	4638      	mov	r0, r7
 8003e76:	f7ff ff13 	bl	8003ca0 <__multiply>
 8003e7a:	6020      	str	r0, [r4, #0]
 8003e7c:	f8c0 9000 	str.w	r9, [r0]
 8003e80:	4604      	mov	r4, r0
 8003e82:	e7e4      	b.n	8003e4e <__pow5mult+0x6a>
 8003e84:	4630      	mov	r0, r6
 8003e86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003e8a:	bf00      	nop
 8003e8c:	080063e0 	.word	0x080063e0
 8003e90:	0800624e 	.word	0x0800624e
 8003e94:	080062ce 	.word	0x080062ce

08003e98 <__lshift>:
 8003e98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e9c:	460c      	mov	r4, r1
 8003e9e:	6849      	ldr	r1, [r1, #4]
 8003ea0:	6923      	ldr	r3, [r4, #16]
 8003ea2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003ea6:	68a3      	ldr	r3, [r4, #8]
 8003ea8:	4607      	mov	r7, r0
 8003eaa:	4691      	mov	r9, r2
 8003eac:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003eb0:	f108 0601 	add.w	r6, r8, #1
 8003eb4:	42b3      	cmp	r3, r6
 8003eb6:	db0b      	blt.n	8003ed0 <__lshift+0x38>
 8003eb8:	4638      	mov	r0, r7
 8003eba:	f7ff fd9d 	bl	80039f8 <_Balloc>
 8003ebe:	4605      	mov	r5, r0
 8003ec0:	b948      	cbnz	r0, 8003ed6 <__lshift+0x3e>
 8003ec2:	4602      	mov	r2, r0
 8003ec4:	4b28      	ldr	r3, [pc, #160]	@ (8003f68 <__lshift+0xd0>)
 8003ec6:	4829      	ldr	r0, [pc, #164]	@ (8003f6c <__lshift+0xd4>)
 8003ec8:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003ecc:	f001 fb18 	bl	8005500 <__assert_func>
 8003ed0:	3101      	adds	r1, #1
 8003ed2:	005b      	lsls	r3, r3, #1
 8003ed4:	e7ee      	b.n	8003eb4 <__lshift+0x1c>
 8003ed6:	2300      	movs	r3, #0
 8003ed8:	f100 0114 	add.w	r1, r0, #20
 8003edc:	f100 0210 	add.w	r2, r0, #16
 8003ee0:	4618      	mov	r0, r3
 8003ee2:	4553      	cmp	r3, sl
 8003ee4:	db33      	blt.n	8003f4e <__lshift+0xb6>
 8003ee6:	6920      	ldr	r0, [r4, #16]
 8003ee8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003eec:	f104 0314 	add.w	r3, r4, #20
 8003ef0:	f019 091f 	ands.w	r9, r9, #31
 8003ef4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003ef8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003efc:	d02b      	beq.n	8003f56 <__lshift+0xbe>
 8003efe:	f1c9 0e20 	rsb	lr, r9, #32
 8003f02:	468a      	mov	sl, r1
 8003f04:	2200      	movs	r2, #0
 8003f06:	6818      	ldr	r0, [r3, #0]
 8003f08:	fa00 f009 	lsl.w	r0, r0, r9
 8003f0c:	4310      	orrs	r0, r2
 8003f0e:	f84a 0b04 	str.w	r0, [sl], #4
 8003f12:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f16:	459c      	cmp	ip, r3
 8003f18:	fa22 f20e 	lsr.w	r2, r2, lr
 8003f1c:	d8f3      	bhi.n	8003f06 <__lshift+0x6e>
 8003f1e:	ebac 0304 	sub.w	r3, ip, r4
 8003f22:	3b15      	subs	r3, #21
 8003f24:	f023 0303 	bic.w	r3, r3, #3
 8003f28:	3304      	adds	r3, #4
 8003f2a:	f104 0015 	add.w	r0, r4, #21
 8003f2e:	4560      	cmp	r0, ip
 8003f30:	bf88      	it	hi
 8003f32:	2304      	movhi	r3, #4
 8003f34:	50ca      	str	r2, [r1, r3]
 8003f36:	b10a      	cbz	r2, 8003f3c <__lshift+0xa4>
 8003f38:	f108 0602 	add.w	r6, r8, #2
 8003f3c:	3e01      	subs	r6, #1
 8003f3e:	4638      	mov	r0, r7
 8003f40:	612e      	str	r6, [r5, #16]
 8003f42:	4621      	mov	r1, r4
 8003f44:	f7ff fd98 	bl	8003a78 <_Bfree>
 8003f48:	4628      	mov	r0, r5
 8003f4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f4e:	f842 0f04 	str.w	r0, [r2, #4]!
 8003f52:	3301      	adds	r3, #1
 8003f54:	e7c5      	b.n	8003ee2 <__lshift+0x4a>
 8003f56:	3904      	subs	r1, #4
 8003f58:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f5c:	f841 2f04 	str.w	r2, [r1, #4]!
 8003f60:	459c      	cmp	ip, r3
 8003f62:	d8f9      	bhi.n	8003f58 <__lshift+0xc0>
 8003f64:	e7ea      	b.n	8003f3c <__lshift+0xa4>
 8003f66:	bf00      	nop
 8003f68:	080062bd 	.word	0x080062bd
 8003f6c:	080062ce 	.word	0x080062ce

08003f70 <__mcmp>:
 8003f70:	690a      	ldr	r2, [r1, #16]
 8003f72:	4603      	mov	r3, r0
 8003f74:	6900      	ldr	r0, [r0, #16]
 8003f76:	1a80      	subs	r0, r0, r2
 8003f78:	b530      	push	{r4, r5, lr}
 8003f7a:	d10e      	bne.n	8003f9a <__mcmp+0x2a>
 8003f7c:	3314      	adds	r3, #20
 8003f7e:	3114      	adds	r1, #20
 8003f80:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003f84:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003f88:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003f8c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003f90:	4295      	cmp	r5, r2
 8003f92:	d003      	beq.n	8003f9c <__mcmp+0x2c>
 8003f94:	d205      	bcs.n	8003fa2 <__mcmp+0x32>
 8003f96:	f04f 30ff 	mov.w	r0, #4294967295
 8003f9a:	bd30      	pop	{r4, r5, pc}
 8003f9c:	42a3      	cmp	r3, r4
 8003f9e:	d3f3      	bcc.n	8003f88 <__mcmp+0x18>
 8003fa0:	e7fb      	b.n	8003f9a <__mcmp+0x2a>
 8003fa2:	2001      	movs	r0, #1
 8003fa4:	e7f9      	b.n	8003f9a <__mcmp+0x2a>
	...

08003fa8 <__mdiff>:
 8003fa8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003fac:	4689      	mov	r9, r1
 8003fae:	4606      	mov	r6, r0
 8003fb0:	4611      	mov	r1, r2
 8003fb2:	4648      	mov	r0, r9
 8003fb4:	4614      	mov	r4, r2
 8003fb6:	f7ff ffdb 	bl	8003f70 <__mcmp>
 8003fba:	1e05      	subs	r5, r0, #0
 8003fbc:	d112      	bne.n	8003fe4 <__mdiff+0x3c>
 8003fbe:	4629      	mov	r1, r5
 8003fc0:	4630      	mov	r0, r6
 8003fc2:	f7ff fd19 	bl	80039f8 <_Balloc>
 8003fc6:	4602      	mov	r2, r0
 8003fc8:	b928      	cbnz	r0, 8003fd6 <__mdiff+0x2e>
 8003fca:	4b3f      	ldr	r3, [pc, #252]	@ (80040c8 <__mdiff+0x120>)
 8003fcc:	f240 2137 	movw	r1, #567	@ 0x237
 8003fd0:	483e      	ldr	r0, [pc, #248]	@ (80040cc <__mdiff+0x124>)
 8003fd2:	f001 fa95 	bl	8005500 <__assert_func>
 8003fd6:	2301      	movs	r3, #1
 8003fd8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003fdc:	4610      	mov	r0, r2
 8003fde:	b003      	add	sp, #12
 8003fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003fe4:	bfbc      	itt	lt
 8003fe6:	464b      	movlt	r3, r9
 8003fe8:	46a1      	movlt	r9, r4
 8003fea:	4630      	mov	r0, r6
 8003fec:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003ff0:	bfba      	itte	lt
 8003ff2:	461c      	movlt	r4, r3
 8003ff4:	2501      	movlt	r5, #1
 8003ff6:	2500      	movge	r5, #0
 8003ff8:	f7ff fcfe 	bl	80039f8 <_Balloc>
 8003ffc:	4602      	mov	r2, r0
 8003ffe:	b918      	cbnz	r0, 8004008 <__mdiff+0x60>
 8004000:	4b31      	ldr	r3, [pc, #196]	@ (80040c8 <__mdiff+0x120>)
 8004002:	f240 2145 	movw	r1, #581	@ 0x245
 8004006:	e7e3      	b.n	8003fd0 <__mdiff+0x28>
 8004008:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800400c:	6926      	ldr	r6, [r4, #16]
 800400e:	60c5      	str	r5, [r0, #12]
 8004010:	f109 0310 	add.w	r3, r9, #16
 8004014:	f109 0514 	add.w	r5, r9, #20
 8004018:	f104 0e14 	add.w	lr, r4, #20
 800401c:	f100 0b14 	add.w	fp, r0, #20
 8004020:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8004024:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8004028:	9301      	str	r3, [sp, #4]
 800402a:	46d9      	mov	r9, fp
 800402c:	f04f 0c00 	mov.w	ip, #0
 8004030:	9b01      	ldr	r3, [sp, #4]
 8004032:	f85e 0b04 	ldr.w	r0, [lr], #4
 8004036:	f853 af04 	ldr.w	sl, [r3, #4]!
 800403a:	9301      	str	r3, [sp, #4]
 800403c:	fa1f f38a 	uxth.w	r3, sl
 8004040:	4619      	mov	r1, r3
 8004042:	b283      	uxth	r3, r0
 8004044:	1acb      	subs	r3, r1, r3
 8004046:	0c00      	lsrs	r0, r0, #16
 8004048:	4463      	add	r3, ip
 800404a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800404e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8004052:	b29b      	uxth	r3, r3
 8004054:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004058:	4576      	cmp	r6, lr
 800405a:	f849 3b04 	str.w	r3, [r9], #4
 800405e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004062:	d8e5      	bhi.n	8004030 <__mdiff+0x88>
 8004064:	1b33      	subs	r3, r6, r4
 8004066:	3b15      	subs	r3, #21
 8004068:	f023 0303 	bic.w	r3, r3, #3
 800406c:	3415      	adds	r4, #21
 800406e:	3304      	adds	r3, #4
 8004070:	42a6      	cmp	r6, r4
 8004072:	bf38      	it	cc
 8004074:	2304      	movcc	r3, #4
 8004076:	441d      	add	r5, r3
 8004078:	445b      	add	r3, fp
 800407a:	461e      	mov	r6, r3
 800407c:	462c      	mov	r4, r5
 800407e:	4544      	cmp	r4, r8
 8004080:	d30e      	bcc.n	80040a0 <__mdiff+0xf8>
 8004082:	f108 0103 	add.w	r1, r8, #3
 8004086:	1b49      	subs	r1, r1, r5
 8004088:	f021 0103 	bic.w	r1, r1, #3
 800408c:	3d03      	subs	r5, #3
 800408e:	45a8      	cmp	r8, r5
 8004090:	bf38      	it	cc
 8004092:	2100      	movcc	r1, #0
 8004094:	440b      	add	r3, r1
 8004096:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800409a:	b191      	cbz	r1, 80040c2 <__mdiff+0x11a>
 800409c:	6117      	str	r7, [r2, #16]
 800409e:	e79d      	b.n	8003fdc <__mdiff+0x34>
 80040a0:	f854 1b04 	ldr.w	r1, [r4], #4
 80040a4:	46e6      	mov	lr, ip
 80040a6:	0c08      	lsrs	r0, r1, #16
 80040a8:	fa1c fc81 	uxtah	ip, ip, r1
 80040ac:	4471      	add	r1, lr
 80040ae:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80040b2:	b289      	uxth	r1, r1
 80040b4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80040b8:	f846 1b04 	str.w	r1, [r6], #4
 80040bc:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80040c0:	e7dd      	b.n	800407e <__mdiff+0xd6>
 80040c2:	3f01      	subs	r7, #1
 80040c4:	e7e7      	b.n	8004096 <__mdiff+0xee>
 80040c6:	bf00      	nop
 80040c8:	080062bd 	.word	0x080062bd
 80040cc:	080062ce 	.word	0x080062ce

080040d0 <__ulp>:
 80040d0:	b082      	sub	sp, #8
 80040d2:	ed8d 0b00 	vstr	d0, [sp]
 80040d6:	9a01      	ldr	r2, [sp, #4]
 80040d8:	4b0f      	ldr	r3, [pc, #60]	@ (8004118 <__ulp+0x48>)
 80040da:	4013      	ands	r3, r2
 80040dc:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 80040e0:	2b00      	cmp	r3, #0
 80040e2:	dc08      	bgt.n	80040f6 <__ulp+0x26>
 80040e4:	425b      	negs	r3, r3
 80040e6:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 80040ea:	ea4f 5223 	mov.w	r2, r3, asr #20
 80040ee:	da04      	bge.n	80040fa <__ulp+0x2a>
 80040f0:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 80040f4:	4113      	asrs	r3, r2
 80040f6:	2200      	movs	r2, #0
 80040f8:	e008      	b.n	800410c <__ulp+0x3c>
 80040fa:	f1a2 0314 	sub.w	r3, r2, #20
 80040fe:	2b1e      	cmp	r3, #30
 8004100:	bfda      	itte	le
 8004102:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8004106:	40da      	lsrle	r2, r3
 8004108:	2201      	movgt	r2, #1
 800410a:	2300      	movs	r3, #0
 800410c:	4619      	mov	r1, r3
 800410e:	4610      	mov	r0, r2
 8004110:	ec41 0b10 	vmov	d0, r0, r1
 8004114:	b002      	add	sp, #8
 8004116:	4770      	bx	lr
 8004118:	7ff00000 	.word	0x7ff00000

0800411c <__b2d>:
 800411c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004120:	6906      	ldr	r6, [r0, #16]
 8004122:	f100 0814 	add.w	r8, r0, #20
 8004126:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800412a:	1f37      	subs	r7, r6, #4
 800412c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004130:	4610      	mov	r0, r2
 8004132:	f7ff fd53 	bl	8003bdc <__hi0bits>
 8004136:	f1c0 0320 	rsb	r3, r0, #32
 800413a:	280a      	cmp	r0, #10
 800413c:	600b      	str	r3, [r1, #0]
 800413e:	491b      	ldr	r1, [pc, #108]	@ (80041ac <__b2d+0x90>)
 8004140:	dc15      	bgt.n	800416e <__b2d+0x52>
 8004142:	f1c0 0c0b 	rsb	ip, r0, #11
 8004146:	fa22 f30c 	lsr.w	r3, r2, ip
 800414a:	45b8      	cmp	r8, r7
 800414c:	ea43 0501 	orr.w	r5, r3, r1
 8004150:	bf34      	ite	cc
 8004152:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004156:	2300      	movcs	r3, #0
 8004158:	3015      	adds	r0, #21
 800415a:	fa02 f000 	lsl.w	r0, r2, r0
 800415e:	fa23 f30c 	lsr.w	r3, r3, ip
 8004162:	4303      	orrs	r3, r0
 8004164:	461c      	mov	r4, r3
 8004166:	ec45 4b10 	vmov	d0, r4, r5
 800416a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800416e:	45b8      	cmp	r8, r7
 8004170:	bf3a      	itte	cc
 8004172:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004176:	f1a6 0708 	subcc.w	r7, r6, #8
 800417a:	2300      	movcs	r3, #0
 800417c:	380b      	subs	r0, #11
 800417e:	d012      	beq.n	80041a6 <__b2d+0x8a>
 8004180:	f1c0 0120 	rsb	r1, r0, #32
 8004184:	fa23 f401 	lsr.w	r4, r3, r1
 8004188:	4082      	lsls	r2, r0
 800418a:	4322      	orrs	r2, r4
 800418c:	4547      	cmp	r7, r8
 800418e:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 8004192:	bf8c      	ite	hi
 8004194:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8004198:	2200      	movls	r2, #0
 800419a:	4083      	lsls	r3, r0
 800419c:	40ca      	lsrs	r2, r1
 800419e:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 80041a2:	4313      	orrs	r3, r2
 80041a4:	e7de      	b.n	8004164 <__b2d+0x48>
 80041a6:	ea42 0501 	orr.w	r5, r2, r1
 80041aa:	e7db      	b.n	8004164 <__b2d+0x48>
 80041ac:	3ff00000 	.word	0x3ff00000

080041b0 <__d2b>:
 80041b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80041b4:	460f      	mov	r7, r1
 80041b6:	2101      	movs	r1, #1
 80041b8:	ec59 8b10 	vmov	r8, r9, d0
 80041bc:	4616      	mov	r6, r2
 80041be:	f7ff fc1b 	bl	80039f8 <_Balloc>
 80041c2:	4604      	mov	r4, r0
 80041c4:	b930      	cbnz	r0, 80041d4 <__d2b+0x24>
 80041c6:	4602      	mov	r2, r0
 80041c8:	4b23      	ldr	r3, [pc, #140]	@ (8004258 <__d2b+0xa8>)
 80041ca:	4824      	ldr	r0, [pc, #144]	@ (800425c <__d2b+0xac>)
 80041cc:	f240 310f 	movw	r1, #783	@ 0x30f
 80041d0:	f001 f996 	bl	8005500 <__assert_func>
 80041d4:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80041d8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80041dc:	b10d      	cbz	r5, 80041e2 <__d2b+0x32>
 80041de:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80041e2:	9301      	str	r3, [sp, #4]
 80041e4:	f1b8 0300 	subs.w	r3, r8, #0
 80041e8:	d023      	beq.n	8004232 <__d2b+0x82>
 80041ea:	4668      	mov	r0, sp
 80041ec:	9300      	str	r3, [sp, #0]
 80041ee:	f7ff fd14 	bl	8003c1a <__lo0bits>
 80041f2:	e9dd 1200 	ldrd	r1, r2, [sp]
 80041f6:	b1d0      	cbz	r0, 800422e <__d2b+0x7e>
 80041f8:	f1c0 0320 	rsb	r3, r0, #32
 80041fc:	fa02 f303 	lsl.w	r3, r2, r3
 8004200:	430b      	orrs	r3, r1
 8004202:	40c2      	lsrs	r2, r0
 8004204:	6163      	str	r3, [r4, #20]
 8004206:	9201      	str	r2, [sp, #4]
 8004208:	9b01      	ldr	r3, [sp, #4]
 800420a:	61a3      	str	r3, [r4, #24]
 800420c:	2b00      	cmp	r3, #0
 800420e:	bf0c      	ite	eq
 8004210:	2201      	moveq	r2, #1
 8004212:	2202      	movne	r2, #2
 8004214:	6122      	str	r2, [r4, #16]
 8004216:	b1a5      	cbz	r5, 8004242 <__d2b+0x92>
 8004218:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800421c:	4405      	add	r5, r0
 800421e:	603d      	str	r5, [r7, #0]
 8004220:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8004224:	6030      	str	r0, [r6, #0]
 8004226:	4620      	mov	r0, r4
 8004228:	b003      	add	sp, #12
 800422a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800422e:	6161      	str	r1, [r4, #20]
 8004230:	e7ea      	b.n	8004208 <__d2b+0x58>
 8004232:	a801      	add	r0, sp, #4
 8004234:	f7ff fcf1 	bl	8003c1a <__lo0bits>
 8004238:	9b01      	ldr	r3, [sp, #4]
 800423a:	6163      	str	r3, [r4, #20]
 800423c:	3020      	adds	r0, #32
 800423e:	2201      	movs	r2, #1
 8004240:	e7e8      	b.n	8004214 <__d2b+0x64>
 8004242:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004246:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800424a:	6038      	str	r0, [r7, #0]
 800424c:	6918      	ldr	r0, [r3, #16]
 800424e:	f7ff fcc5 	bl	8003bdc <__hi0bits>
 8004252:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004256:	e7e5      	b.n	8004224 <__d2b+0x74>
 8004258:	080062bd 	.word	0x080062bd
 800425c:	080062ce 	.word	0x080062ce

08004260 <__ratio>:
 8004260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004264:	b085      	sub	sp, #20
 8004266:	e9cd 1000 	strd	r1, r0, [sp]
 800426a:	a902      	add	r1, sp, #8
 800426c:	f7ff ff56 	bl	800411c <__b2d>
 8004270:	9800      	ldr	r0, [sp, #0]
 8004272:	a903      	add	r1, sp, #12
 8004274:	ec55 4b10 	vmov	r4, r5, d0
 8004278:	f7ff ff50 	bl	800411c <__b2d>
 800427c:	9b01      	ldr	r3, [sp, #4]
 800427e:	6919      	ldr	r1, [r3, #16]
 8004280:	9b00      	ldr	r3, [sp, #0]
 8004282:	691b      	ldr	r3, [r3, #16]
 8004284:	1ac9      	subs	r1, r1, r3
 8004286:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800428a:	1a9b      	subs	r3, r3, r2
 800428c:	ec5b ab10 	vmov	sl, fp, d0
 8004290:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8004294:	2b00      	cmp	r3, #0
 8004296:	bfce      	itee	gt
 8004298:	462a      	movgt	r2, r5
 800429a:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800429e:	465a      	movle	r2, fp
 80042a0:	462f      	mov	r7, r5
 80042a2:	46d9      	mov	r9, fp
 80042a4:	bfcc      	ite	gt
 80042a6:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80042aa:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 80042ae:	464b      	mov	r3, r9
 80042b0:	4652      	mov	r2, sl
 80042b2:	4620      	mov	r0, r4
 80042b4:	4639      	mov	r1, r7
 80042b6:	f7fc fac9 	bl	800084c <__aeabi_ddiv>
 80042ba:	ec41 0b10 	vmov	d0, r0, r1
 80042be:	b005      	add	sp, #20
 80042c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080042c4 <__copybits>:
 80042c4:	3901      	subs	r1, #1
 80042c6:	b570      	push	{r4, r5, r6, lr}
 80042c8:	1149      	asrs	r1, r1, #5
 80042ca:	6914      	ldr	r4, [r2, #16]
 80042cc:	3101      	adds	r1, #1
 80042ce:	f102 0314 	add.w	r3, r2, #20
 80042d2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80042d6:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80042da:	1f05      	subs	r5, r0, #4
 80042dc:	42a3      	cmp	r3, r4
 80042de:	d30c      	bcc.n	80042fa <__copybits+0x36>
 80042e0:	1aa3      	subs	r3, r4, r2
 80042e2:	3b11      	subs	r3, #17
 80042e4:	f023 0303 	bic.w	r3, r3, #3
 80042e8:	3211      	adds	r2, #17
 80042ea:	42a2      	cmp	r2, r4
 80042ec:	bf88      	it	hi
 80042ee:	2300      	movhi	r3, #0
 80042f0:	4418      	add	r0, r3
 80042f2:	2300      	movs	r3, #0
 80042f4:	4288      	cmp	r0, r1
 80042f6:	d305      	bcc.n	8004304 <__copybits+0x40>
 80042f8:	bd70      	pop	{r4, r5, r6, pc}
 80042fa:	f853 6b04 	ldr.w	r6, [r3], #4
 80042fe:	f845 6f04 	str.w	r6, [r5, #4]!
 8004302:	e7eb      	b.n	80042dc <__copybits+0x18>
 8004304:	f840 3b04 	str.w	r3, [r0], #4
 8004308:	e7f4      	b.n	80042f4 <__copybits+0x30>

0800430a <__any_on>:
 800430a:	f100 0214 	add.w	r2, r0, #20
 800430e:	6900      	ldr	r0, [r0, #16]
 8004310:	114b      	asrs	r3, r1, #5
 8004312:	4298      	cmp	r0, r3
 8004314:	b510      	push	{r4, lr}
 8004316:	db11      	blt.n	800433c <__any_on+0x32>
 8004318:	dd0a      	ble.n	8004330 <__any_on+0x26>
 800431a:	f011 011f 	ands.w	r1, r1, #31
 800431e:	d007      	beq.n	8004330 <__any_on+0x26>
 8004320:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004324:	fa24 f001 	lsr.w	r0, r4, r1
 8004328:	fa00 f101 	lsl.w	r1, r0, r1
 800432c:	428c      	cmp	r4, r1
 800432e:	d10b      	bne.n	8004348 <__any_on+0x3e>
 8004330:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004334:	4293      	cmp	r3, r2
 8004336:	d803      	bhi.n	8004340 <__any_on+0x36>
 8004338:	2000      	movs	r0, #0
 800433a:	bd10      	pop	{r4, pc}
 800433c:	4603      	mov	r3, r0
 800433e:	e7f7      	b.n	8004330 <__any_on+0x26>
 8004340:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004344:	2900      	cmp	r1, #0
 8004346:	d0f5      	beq.n	8004334 <__any_on+0x2a>
 8004348:	2001      	movs	r0, #1
 800434a:	e7f6      	b.n	800433a <__any_on+0x30>

0800434c <sulp>:
 800434c:	b570      	push	{r4, r5, r6, lr}
 800434e:	4604      	mov	r4, r0
 8004350:	460d      	mov	r5, r1
 8004352:	ec45 4b10 	vmov	d0, r4, r5
 8004356:	4616      	mov	r6, r2
 8004358:	f7ff feba 	bl	80040d0 <__ulp>
 800435c:	ec51 0b10 	vmov	r0, r1, d0
 8004360:	b17e      	cbz	r6, 8004382 <sulp+0x36>
 8004362:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8004366:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800436a:	2b00      	cmp	r3, #0
 800436c:	dd09      	ble.n	8004382 <sulp+0x36>
 800436e:	051b      	lsls	r3, r3, #20
 8004370:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8004374:	2400      	movs	r4, #0
 8004376:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 800437a:	4622      	mov	r2, r4
 800437c:	462b      	mov	r3, r5
 800437e:	f7fc f93b 	bl	80005f8 <__aeabi_dmul>
 8004382:	ec41 0b10 	vmov	d0, r0, r1
 8004386:	bd70      	pop	{r4, r5, r6, pc}

08004388 <_strtod_l>:
 8004388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800438c:	b09f      	sub	sp, #124	@ 0x7c
 800438e:	460c      	mov	r4, r1
 8004390:	9217      	str	r2, [sp, #92]	@ 0x5c
 8004392:	2200      	movs	r2, #0
 8004394:	921a      	str	r2, [sp, #104]	@ 0x68
 8004396:	9005      	str	r0, [sp, #20]
 8004398:	f04f 0a00 	mov.w	sl, #0
 800439c:	f04f 0b00 	mov.w	fp, #0
 80043a0:	460a      	mov	r2, r1
 80043a2:	9219      	str	r2, [sp, #100]	@ 0x64
 80043a4:	7811      	ldrb	r1, [r2, #0]
 80043a6:	292b      	cmp	r1, #43	@ 0x2b
 80043a8:	d04a      	beq.n	8004440 <_strtod_l+0xb8>
 80043aa:	d838      	bhi.n	800441e <_strtod_l+0x96>
 80043ac:	290d      	cmp	r1, #13
 80043ae:	d832      	bhi.n	8004416 <_strtod_l+0x8e>
 80043b0:	2908      	cmp	r1, #8
 80043b2:	d832      	bhi.n	800441a <_strtod_l+0x92>
 80043b4:	2900      	cmp	r1, #0
 80043b6:	d03b      	beq.n	8004430 <_strtod_l+0xa8>
 80043b8:	2200      	movs	r2, #0
 80043ba:	920e      	str	r2, [sp, #56]	@ 0x38
 80043bc:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 80043be:	782a      	ldrb	r2, [r5, #0]
 80043c0:	2a30      	cmp	r2, #48	@ 0x30
 80043c2:	f040 80b2 	bne.w	800452a <_strtod_l+0x1a2>
 80043c6:	786a      	ldrb	r2, [r5, #1]
 80043c8:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80043cc:	2a58      	cmp	r2, #88	@ 0x58
 80043ce:	d16e      	bne.n	80044ae <_strtod_l+0x126>
 80043d0:	9302      	str	r3, [sp, #8]
 80043d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80043d4:	9301      	str	r3, [sp, #4]
 80043d6:	ab1a      	add	r3, sp, #104	@ 0x68
 80043d8:	9300      	str	r3, [sp, #0]
 80043da:	4a8f      	ldr	r2, [pc, #572]	@ (8004618 <_strtod_l+0x290>)
 80043dc:	9805      	ldr	r0, [sp, #20]
 80043de:	ab1b      	add	r3, sp, #108	@ 0x6c
 80043e0:	a919      	add	r1, sp, #100	@ 0x64
 80043e2:	f001 f927 	bl	8005634 <__gethex>
 80043e6:	f010 060f 	ands.w	r6, r0, #15
 80043ea:	4604      	mov	r4, r0
 80043ec:	d005      	beq.n	80043fa <_strtod_l+0x72>
 80043ee:	2e06      	cmp	r6, #6
 80043f0:	d128      	bne.n	8004444 <_strtod_l+0xbc>
 80043f2:	3501      	adds	r5, #1
 80043f4:	2300      	movs	r3, #0
 80043f6:	9519      	str	r5, [sp, #100]	@ 0x64
 80043f8:	930e      	str	r3, [sp, #56]	@ 0x38
 80043fa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80043fc:	2b00      	cmp	r3, #0
 80043fe:	f040 858e 	bne.w	8004f1e <_strtod_l+0xb96>
 8004402:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004404:	b1cb      	cbz	r3, 800443a <_strtod_l+0xb2>
 8004406:	4652      	mov	r2, sl
 8004408:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 800440c:	ec43 2b10 	vmov	d0, r2, r3
 8004410:	b01f      	add	sp, #124	@ 0x7c
 8004412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004416:	2920      	cmp	r1, #32
 8004418:	d1ce      	bne.n	80043b8 <_strtod_l+0x30>
 800441a:	3201      	adds	r2, #1
 800441c:	e7c1      	b.n	80043a2 <_strtod_l+0x1a>
 800441e:	292d      	cmp	r1, #45	@ 0x2d
 8004420:	d1ca      	bne.n	80043b8 <_strtod_l+0x30>
 8004422:	2101      	movs	r1, #1
 8004424:	910e      	str	r1, [sp, #56]	@ 0x38
 8004426:	1c51      	adds	r1, r2, #1
 8004428:	9119      	str	r1, [sp, #100]	@ 0x64
 800442a:	7852      	ldrb	r2, [r2, #1]
 800442c:	2a00      	cmp	r2, #0
 800442e:	d1c5      	bne.n	80043bc <_strtod_l+0x34>
 8004430:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004432:	9419      	str	r4, [sp, #100]	@ 0x64
 8004434:	2b00      	cmp	r3, #0
 8004436:	f040 8570 	bne.w	8004f1a <_strtod_l+0xb92>
 800443a:	4652      	mov	r2, sl
 800443c:	465b      	mov	r3, fp
 800443e:	e7e5      	b.n	800440c <_strtod_l+0x84>
 8004440:	2100      	movs	r1, #0
 8004442:	e7ef      	b.n	8004424 <_strtod_l+0x9c>
 8004444:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004446:	b13a      	cbz	r2, 8004458 <_strtod_l+0xd0>
 8004448:	2135      	movs	r1, #53	@ 0x35
 800444a:	a81c      	add	r0, sp, #112	@ 0x70
 800444c:	f7ff ff3a 	bl	80042c4 <__copybits>
 8004450:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004452:	9805      	ldr	r0, [sp, #20]
 8004454:	f7ff fb10 	bl	8003a78 <_Bfree>
 8004458:	3e01      	subs	r6, #1
 800445a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800445c:	2e04      	cmp	r6, #4
 800445e:	d806      	bhi.n	800446e <_strtod_l+0xe6>
 8004460:	e8df f006 	tbb	[pc, r6]
 8004464:	201d0314 	.word	0x201d0314
 8004468:	14          	.byte	0x14
 8004469:	00          	.byte	0x00
 800446a:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800446e:	05e1      	lsls	r1, r4, #23
 8004470:	bf48      	it	mi
 8004472:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8004476:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800447a:	0d1b      	lsrs	r3, r3, #20
 800447c:	051b      	lsls	r3, r3, #20
 800447e:	2b00      	cmp	r3, #0
 8004480:	d1bb      	bne.n	80043fa <_strtod_l+0x72>
 8004482:	f7fe fb2b 	bl	8002adc <__errno>
 8004486:	2322      	movs	r3, #34	@ 0x22
 8004488:	6003      	str	r3, [r0, #0]
 800448a:	e7b6      	b.n	80043fa <_strtod_l+0x72>
 800448c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004490:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8004494:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8004498:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800449c:	e7e7      	b.n	800446e <_strtod_l+0xe6>
 800449e:	f8df b180 	ldr.w	fp, [pc, #384]	@ 8004620 <_strtod_l+0x298>
 80044a2:	e7e4      	b.n	800446e <_strtod_l+0xe6>
 80044a4:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 80044a8:	f04f 3aff 	mov.w	sl, #4294967295
 80044ac:	e7df      	b.n	800446e <_strtod_l+0xe6>
 80044ae:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80044b0:	1c5a      	adds	r2, r3, #1
 80044b2:	9219      	str	r2, [sp, #100]	@ 0x64
 80044b4:	785b      	ldrb	r3, [r3, #1]
 80044b6:	2b30      	cmp	r3, #48	@ 0x30
 80044b8:	d0f9      	beq.n	80044ae <_strtod_l+0x126>
 80044ba:	2b00      	cmp	r3, #0
 80044bc:	d09d      	beq.n	80043fa <_strtod_l+0x72>
 80044be:	2301      	movs	r3, #1
 80044c0:	2700      	movs	r7, #0
 80044c2:	9308      	str	r3, [sp, #32]
 80044c4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80044c6:	930c      	str	r3, [sp, #48]	@ 0x30
 80044c8:	970b      	str	r7, [sp, #44]	@ 0x2c
 80044ca:	46b9      	mov	r9, r7
 80044cc:	220a      	movs	r2, #10
 80044ce:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80044d0:	7805      	ldrb	r5, [r0, #0]
 80044d2:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 80044d6:	b2d9      	uxtb	r1, r3
 80044d8:	2909      	cmp	r1, #9
 80044da:	d928      	bls.n	800452e <_strtod_l+0x1a6>
 80044dc:	494f      	ldr	r1, [pc, #316]	@ (800461c <_strtod_l+0x294>)
 80044de:	2201      	movs	r2, #1
 80044e0:	f000 ffd6 	bl	8005490 <strncmp>
 80044e4:	2800      	cmp	r0, #0
 80044e6:	d032      	beq.n	800454e <_strtod_l+0x1c6>
 80044e8:	2000      	movs	r0, #0
 80044ea:	462a      	mov	r2, r5
 80044ec:	900a      	str	r0, [sp, #40]	@ 0x28
 80044ee:	464d      	mov	r5, r9
 80044f0:	4603      	mov	r3, r0
 80044f2:	2a65      	cmp	r2, #101	@ 0x65
 80044f4:	d001      	beq.n	80044fa <_strtod_l+0x172>
 80044f6:	2a45      	cmp	r2, #69	@ 0x45
 80044f8:	d114      	bne.n	8004524 <_strtod_l+0x19c>
 80044fa:	b91d      	cbnz	r5, 8004504 <_strtod_l+0x17c>
 80044fc:	9a08      	ldr	r2, [sp, #32]
 80044fe:	4302      	orrs	r2, r0
 8004500:	d096      	beq.n	8004430 <_strtod_l+0xa8>
 8004502:	2500      	movs	r5, #0
 8004504:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8004506:	1c62      	adds	r2, r4, #1
 8004508:	9219      	str	r2, [sp, #100]	@ 0x64
 800450a:	7862      	ldrb	r2, [r4, #1]
 800450c:	2a2b      	cmp	r2, #43	@ 0x2b
 800450e:	d07a      	beq.n	8004606 <_strtod_l+0x27e>
 8004510:	2a2d      	cmp	r2, #45	@ 0x2d
 8004512:	d07e      	beq.n	8004612 <_strtod_l+0x28a>
 8004514:	f04f 0c00 	mov.w	ip, #0
 8004518:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800451c:	2909      	cmp	r1, #9
 800451e:	f240 8085 	bls.w	800462c <_strtod_l+0x2a4>
 8004522:	9419      	str	r4, [sp, #100]	@ 0x64
 8004524:	f04f 0800 	mov.w	r8, #0
 8004528:	e0a5      	b.n	8004676 <_strtod_l+0x2ee>
 800452a:	2300      	movs	r3, #0
 800452c:	e7c8      	b.n	80044c0 <_strtod_l+0x138>
 800452e:	f1b9 0f08 	cmp.w	r9, #8
 8004532:	bfd8      	it	le
 8004534:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8004536:	f100 0001 	add.w	r0, r0, #1
 800453a:	bfda      	itte	le
 800453c:	fb02 3301 	mlale	r3, r2, r1, r3
 8004540:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8004542:	fb02 3707 	mlagt	r7, r2, r7, r3
 8004546:	f109 0901 	add.w	r9, r9, #1
 800454a:	9019      	str	r0, [sp, #100]	@ 0x64
 800454c:	e7bf      	b.n	80044ce <_strtod_l+0x146>
 800454e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004550:	1c5a      	adds	r2, r3, #1
 8004552:	9219      	str	r2, [sp, #100]	@ 0x64
 8004554:	785a      	ldrb	r2, [r3, #1]
 8004556:	f1b9 0f00 	cmp.w	r9, #0
 800455a:	d03b      	beq.n	80045d4 <_strtod_l+0x24c>
 800455c:	900a      	str	r0, [sp, #40]	@ 0x28
 800455e:	464d      	mov	r5, r9
 8004560:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8004564:	2b09      	cmp	r3, #9
 8004566:	d912      	bls.n	800458e <_strtod_l+0x206>
 8004568:	2301      	movs	r3, #1
 800456a:	e7c2      	b.n	80044f2 <_strtod_l+0x16a>
 800456c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800456e:	1c5a      	adds	r2, r3, #1
 8004570:	9219      	str	r2, [sp, #100]	@ 0x64
 8004572:	785a      	ldrb	r2, [r3, #1]
 8004574:	3001      	adds	r0, #1
 8004576:	2a30      	cmp	r2, #48	@ 0x30
 8004578:	d0f8      	beq.n	800456c <_strtod_l+0x1e4>
 800457a:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 800457e:	2b08      	cmp	r3, #8
 8004580:	f200 84d2 	bhi.w	8004f28 <_strtod_l+0xba0>
 8004584:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004586:	900a      	str	r0, [sp, #40]	@ 0x28
 8004588:	2000      	movs	r0, #0
 800458a:	930c      	str	r3, [sp, #48]	@ 0x30
 800458c:	4605      	mov	r5, r0
 800458e:	3a30      	subs	r2, #48	@ 0x30
 8004590:	f100 0301 	add.w	r3, r0, #1
 8004594:	d018      	beq.n	80045c8 <_strtod_l+0x240>
 8004596:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004598:	4419      	add	r1, r3
 800459a:	910a      	str	r1, [sp, #40]	@ 0x28
 800459c:	462e      	mov	r6, r5
 800459e:	f04f 0e0a 	mov.w	lr, #10
 80045a2:	1c71      	adds	r1, r6, #1
 80045a4:	eba1 0c05 	sub.w	ip, r1, r5
 80045a8:	4563      	cmp	r3, ip
 80045aa:	dc15      	bgt.n	80045d8 <_strtod_l+0x250>
 80045ac:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 80045b0:	182b      	adds	r3, r5, r0
 80045b2:	2b08      	cmp	r3, #8
 80045b4:	f105 0501 	add.w	r5, r5, #1
 80045b8:	4405      	add	r5, r0
 80045ba:	dc1a      	bgt.n	80045f2 <_strtod_l+0x26a>
 80045bc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80045be:	230a      	movs	r3, #10
 80045c0:	fb03 2301 	mla	r3, r3, r1, r2
 80045c4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80045c6:	2300      	movs	r3, #0
 80045c8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80045ca:	1c51      	adds	r1, r2, #1
 80045cc:	9119      	str	r1, [sp, #100]	@ 0x64
 80045ce:	7852      	ldrb	r2, [r2, #1]
 80045d0:	4618      	mov	r0, r3
 80045d2:	e7c5      	b.n	8004560 <_strtod_l+0x1d8>
 80045d4:	4648      	mov	r0, r9
 80045d6:	e7ce      	b.n	8004576 <_strtod_l+0x1ee>
 80045d8:	2e08      	cmp	r6, #8
 80045da:	dc05      	bgt.n	80045e8 <_strtod_l+0x260>
 80045dc:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80045de:	fb0e f606 	mul.w	r6, lr, r6
 80045e2:	960b      	str	r6, [sp, #44]	@ 0x2c
 80045e4:	460e      	mov	r6, r1
 80045e6:	e7dc      	b.n	80045a2 <_strtod_l+0x21a>
 80045e8:	2910      	cmp	r1, #16
 80045ea:	bfd8      	it	le
 80045ec:	fb0e f707 	mulle.w	r7, lr, r7
 80045f0:	e7f8      	b.n	80045e4 <_strtod_l+0x25c>
 80045f2:	2b0f      	cmp	r3, #15
 80045f4:	bfdc      	itt	le
 80045f6:	230a      	movle	r3, #10
 80045f8:	fb03 2707 	mlale	r7, r3, r7, r2
 80045fc:	e7e3      	b.n	80045c6 <_strtod_l+0x23e>
 80045fe:	2300      	movs	r3, #0
 8004600:	930a      	str	r3, [sp, #40]	@ 0x28
 8004602:	2301      	movs	r3, #1
 8004604:	e77a      	b.n	80044fc <_strtod_l+0x174>
 8004606:	f04f 0c00 	mov.w	ip, #0
 800460a:	1ca2      	adds	r2, r4, #2
 800460c:	9219      	str	r2, [sp, #100]	@ 0x64
 800460e:	78a2      	ldrb	r2, [r4, #2]
 8004610:	e782      	b.n	8004518 <_strtod_l+0x190>
 8004612:	f04f 0c01 	mov.w	ip, #1
 8004616:	e7f8      	b.n	800460a <_strtod_l+0x282>
 8004618:	080064f4 	.word	0x080064f4
 800461c:	08006327 	.word	0x08006327
 8004620:	7ff00000 	.word	0x7ff00000
 8004624:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004626:	1c51      	adds	r1, r2, #1
 8004628:	9119      	str	r1, [sp, #100]	@ 0x64
 800462a:	7852      	ldrb	r2, [r2, #1]
 800462c:	2a30      	cmp	r2, #48	@ 0x30
 800462e:	d0f9      	beq.n	8004624 <_strtod_l+0x29c>
 8004630:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8004634:	2908      	cmp	r1, #8
 8004636:	f63f af75 	bhi.w	8004524 <_strtod_l+0x19c>
 800463a:	3a30      	subs	r2, #48	@ 0x30
 800463c:	9209      	str	r2, [sp, #36]	@ 0x24
 800463e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004640:	920f      	str	r2, [sp, #60]	@ 0x3c
 8004642:	f04f 080a 	mov.w	r8, #10
 8004646:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004648:	1c56      	adds	r6, r2, #1
 800464a:	9619      	str	r6, [sp, #100]	@ 0x64
 800464c:	7852      	ldrb	r2, [r2, #1]
 800464e:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8004652:	f1be 0f09 	cmp.w	lr, #9
 8004656:	d939      	bls.n	80046cc <_strtod_l+0x344>
 8004658:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800465a:	1a76      	subs	r6, r6, r1
 800465c:	2e08      	cmp	r6, #8
 800465e:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8004662:	dc03      	bgt.n	800466c <_strtod_l+0x2e4>
 8004664:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004666:	4588      	cmp	r8, r1
 8004668:	bfa8      	it	ge
 800466a:	4688      	movge	r8, r1
 800466c:	f1bc 0f00 	cmp.w	ip, #0
 8004670:	d001      	beq.n	8004676 <_strtod_l+0x2ee>
 8004672:	f1c8 0800 	rsb	r8, r8, #0
 8004676:	2d00      	cmp	r5, #0
 8004678:	d14e      	bne.n	8004718 <_strtod_l+0x390>
 800467a:	9908      	ldr	r1, [sp, #32]
 800467c:	4308      	orrs	r0, r1
 800467e:	f47f aebc 	bne.w	80043fa <_strtod_l+0x72>
 8004682:	2b00      	cmp	r3, #0
 8004684:	f47f aed4 	bne.w	8004430 <_strtod_l+0xa8>
 8004688:	2a69      	cmp	r2, #105	@ 0x69
 800468a:	d028      	beq.n	80046de <_strtod_l+0x356>
 800468c:	dc25      	bgt.n	80046da <_strtod_l+0x352>
 800468e:	2a49      	cmp	r2, #73	@ 0x49
 8004690:	d025      	beq.n	80046de <_strtod_l+0x356>
 8004692:	2a4e      	cmp	r2, #78	@ 0x4e
 8004694:	f47f aecc 	bne.w	8004430 <_strtod_l+0xa8>
 8004698:	499a      	ldr	r1, [pc, #616]	@ (8004904 <_strtod_l+0x57c>)
 800469a:	a819      	add	r0, sp, #100	@ 0x64
 800469c:	f001 f9ec 	bl	8005a78 <__match>
 80046a0:	2800      	cmp	r0, #0
 80046a2:	f43f aec5 	beq.w	8004430 <_strtod_l+0xa8>
 80046a6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80046a8:	781b      	ldrb	r3, [r3, #0]
 80046aa:	2b28      	cmp	r3, #40	@ 0x28
 80046ac:	d12e      	bne.n	800470c <_strtod_l+0x384>
 80046ae:	4996      	ldr	r1, [pc, #600]	@ (8004908 <_strtod_l+0x580>)
 80046b0:	aa1c      	add	r2, sp, #112	@ 0x70
 80046b2:	a819      	add	r0, sp, #100	@ 0x64
 80046b4:	f001 f9f4 	bl	8005aa0 <__hexnan>
 80046b8:	2805      	cmp	r0, #5
 80046ba:	d127      	bne.n	800470c <_strtod_l+0x384>
 80046bc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80046be:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 80046c2:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 80046c6:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 80046ca:	e696      	b.n	80043fa <_strtod_l+0x72>
 80046cc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80046ce:	fb08 2101 	mla	r1, r8, r1, r2
 80046d2:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 80046d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80046d8:	e7b5      	b.n	8004646 <_strtod_l+0x2be>
 80046da:	2a6e      	cmp	r2, #110	@ 0x6e
 80046dc:	e7da      	b.n	8004694 <_strtod_l+0x30c>
 80046de:	498b      	ldr	r1, [pc, #556]	@ (800490c <_strtod_l+0x584>)
 80046e0:	a819      	add	r0, sp, #100	@ 0x64
 80046e2:	f001 f9c9 	bl	8005a78 <__match>
 80046e6:	2800      	cmp	r0, #0
 80046e8:	f43f aea2 	beq.w	8004430 <_strtod_l+0xa8>
 80046ec:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80046ee:	4988      	ldr	r1, [pc, #544]	@ (8004910 <_strtod_l+0x588>)
 80046f0:	3b01      	subs	r3, #1
 80046f2:	a819      	add	r0, sp, #100	@ 0x64
 80046f4:	9319      	str	r3, [sp, #100]	@ 0x64
 80046f6:	f001 f9bf 	bl	8005a78 <__match>
 80046fa:	b910      	cbnz	r0, 8004702 <_strtod_l+0x37a>
 80046fc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80046fe:	3301      	adds	r3, #1
 8004700:	9319      	str	r3, [sp, #100]	@ 0x64
 8004702:	f8df b21c 	ldr.w	fp, [pc, #540]	@ 8004920 <_strtod_l+0x598>
 8004706:	f04f 0a00 	mov.w	sl, #0
 800470a:	e676      	b.n	80043fa <_strtod_l+0x72>
 800470c:	4881      	ldr	r0, [pc, #516]	@ (8004914 <_strtod_l+0x58c>)
 800470e:	f000 feef 	bl	80054f0 <nan>
 8004712:	ec5b ab10 	vmov	sl, fp, d0
 8004716:	e670      	b.n	80043fa <_strtod_l+0x72>
 8004718:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800471a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800471c:	eba8 0303 	sub.w	r3, r8, r3
 8004720:	f1b9 0f00 	cmp.w	r9, #0
 8004724:	bf08      	it	eq
 8004726:	46a9      	moveq	r9, r5
 8004728:	2d10      	cmp	r5, #16
 800472a:	9309      	str	r3, [sp, #36]	@ 0x24
 800472c:	462c      	mov	r4, r5
 800472e:	bfa8      	it	ge
 8004730:	2410      	movge	r4, #16
 8004732:	f7fb fee7 	bl	8000504 <__aeabi_ui2d>
 8004736:	2d09      	cmp	r5, #9
 8004738:	4682      	mov	sl, r0
 800473a:	468b      	mov	fp, r1
 800473c:	dc13      	bgt.n	8004766 <_strtod_l+0x3de>
 800473e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004740:	2b00      	cmp	r3, #0
 8004742:	f43f ae5a 	beq.w	80043fa <_strtod_l+0x72>
 8004746:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004748:	dd78      	ble.n	800483c <_strtod_l+0x4b4>
 800474a:	2b16      	cmp	r3, #22
 800474c:	dc5f      	bgt.n	800480e <_strtod_l+0x486>
 800474e:	4972      	ldr	r1, [pc, #456]	@ (8004918 <_strtod_l+0x590>)
 8004750:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004754:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004758:	4652      	mov	r2, sl
 800475a:	465b      	mov	r3, fp
 800475c:	f7fb ff4c 	bl	80005f8 <__aeabi_dmul>
 8004760:	4682      	mov	sl, r0
 8004762:	468b      	mov	fp, r1
 8004764:	e649      	b.n	80043fa <_strtod_l+0x72>
 8004766:	4b6c      	ldr	r3, [pc, #432]	@ (8004918 <_strtod_l+0x590>)
 8004768:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800476c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8004770:	f7fb ff42 	bl	80005f8 <__aeabi_dmul>
 8004774:	4682      	mov	sl, r0
 8004776:	4638      	mov	r0, r7
 8004778:	468b      	mov	fp, r1
 800477a:	f7fb fec3 	bl	8000504 <__aeabi_ui2d>
 800477e:	4602      	mov	r2, r0
 8004780:	460b      	mov	r3, r1
 8004782:	4650      	mov	r0, sl
 8004784:	4659      	mov	r1, fp
 8004786:	f7fb fd81 	bl	800028c <__adddf3>
 800478a:	2d0f      	cmp	r5, #15
 800478c:	4682      	mov	sl, r0
 800478e:	468b      	mov	fp, r1
 8004790:	ddd5      	ble.n	800473e <_strtod_l+0x3b6>
 8004792:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004794:	1b2c      	subs	r4, r5, r4
 8004796:	441c      	add	r4, r3
 8004798:	2c00      	cmp	r4, #0
 800479a:	f340 8093 	ble.w	80048c4 <_strtod_l+0x53c>
 800479e:	f014 030f 	ands.w	r3, r4, #15
 80047a2:	d00a      	beq.n	80047ba <_strtod_l+0x432>
 80047a4:	495c      	ldr	r1, [pc, #368]	@ (8004918 <_strtod_l+0x590>)
 80047a6:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80047aa:	4652      	mov	r2, sl
 80047ac:	465b      	mov	r3, fp
 80047ae:	e9d1 0100 	ldrd	r0, r1, [r1]
 80047b2:	f7fb ff21 	bl	80005f8 <__aeabi_dmul>
 80047b6:	4682      	mov	sl, r0
 80047b8:	468b      	mov	fp, r1
 80047ba:	f034 040f 	bics.w	r4, r4, #15
 80047be:	d073      	beq.n	80048a8 <_strtod_l+0x520>
 80047c0:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 80047c4:	dd49      	ble.n	800485a <_strtod_l+0x4d2>
 80047c6:	2400      	movs	r4, #0
 80047c8:	46a0      	mov	r8, r4
 80047ca:	940b      	str	r4, [sp, #44]	@ 0x2c
 80047cc:	46a1      	mov	r9, r4
 80047ce:	9a05      	ldr	r2, [sp, #20]
 80047d0:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 8004920 <_strtod_l+0x598>
 80047d4:	2322      	movs	r3, #34	@ 0x22
 80047d6:	6013      	str	r3, [r2, #0]
 80047d8:	f04f 0a00 	mov.w	sl, #0
 80047dc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80047de:	2b00      	cmp	r3, #0
 80047e0:	f43f ae0b 	beq.w	80043fa <_strtod_l+0x72>
 80047e4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80047e6:	9805      	ldr	r0, [sp, #20]
 80047e8:	f7ff f946 	bl	8003a78 <_Bfree>
 80047ec:	9805      	ldr	r0, [sp, #20]
 80047ee:	4649      	mov	r1, r9
 80047f0:	f7ff f942 	bl	8003a78 <_Bfree>
 80047f4:	9805      	ldr	r0, [sp, #20]
 80047f6:	4641      	mov	r1, r8
 80047f8:	f7ff f93e 	bl	8003a78 <_Bfree>
 80047fc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80047fe:	9805      	ldr	r0, [sp, #20]
 8004800:	f7ff f93a 	bl	8003a78 <_Bfree>
 8004804:	9805      	ldr	r0, [sp, #20]
 8004806:	4621      	mov	r1, r4
 8004808:	f7ff f936 	bl	8003a78 <_Bfree>
 800480c:	e5f5      	b.n	80043fa <_strtod_l+0x72>
 800480e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004810:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8004814:	4293      	cmp	r3, r2
 8004816:	dbbc      	blt.n	8004792 <_strtod_l+0x40a>
 8004818:	4c3f      	ldr	r4, [pc, #252]	@ (8004918 <_strtod_l+0x590>)
 800481a:	f1c5 050f 	rsb	r5, r5, #15
 800481e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004822:	4652      	mov	r2, sl
 8004824:	465b      	mov	r3, fp
 8004826:	e9d1 0100 	ldrd	r0, r1, [r1]
 800482a:	f7fb fee5 	bl	80005f8 <__aeabi_dmul>
 800482e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004830:	1b5d      	subs	r5, r3, r5
 8004832:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004836:	e9d4 2300 	ldrd	r2, r3, [r4]
 800483a:	e78f      	b.n	800475c <_strtod_l+0x3d4>
 800483c:	3316      	adds	r3, #22
 800483e:	dba8      	blt.n	8004792 <_strtod_l+0x40a>
 8004840:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004842:	eba3 0808 	sub.w	r8, r3, r8
 8004846:	4b34      	ldr	r3, [pc, #208]	@ (8004918 <_strtod_l+0x590>)
 8004848:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800484c:	e9d8 2300 	ldrd	r2, r3, [r8]
 8004850:	4650      	mov	r0, sl
 8004852:	4659      	mov	r1, fp
 8004854:	f7fb fffa 	bl	800084c <__aeabi_ddiv>
 8004858:	e782      	b.n	8004760 <_strtod_l+0x3d8>
 800485a:	2300      	movs	r3, #0
 800485c:	4f2f      	ldr	r7, [pc, #188]	@ (800491c <_strtod_l+0x594>)
 800485e:	1124      	asrs	r4, r4, #4
 8004860:	4650      	mov	r0, sl
 8004862:	4659      	mov	r1, fp
 8004864:	461e      	mov	r6, r3
 8004866:	2c01      	cmp	r4, #1
 8004868:	dc21      	bgt.n	80048ae <_strtod_l+0x526>
 800486a:	b10b      	cbz	r3, 8004870 <_strtod_l+0x4e8>
 800486c:	4682      	mov	sl, r0
 800486e:	468b      	mov	fp, r1
 8004870:	492a      	ldr	r1, [pc, #168]	@ (800491c <_strtod_l+0x594>)
 8004872:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8004876:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800487a:	4652      	mov	r2, sl
 800487c:	465b      	mov	r3, fp
 800487e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004882:	f7fb feb9 	bl	80005f8 <__aeabi_dmul>
 8004886:	4b26      	ldr	r3, [pc, #152]	@ (8004920 <_strtod_l+0x598>)
 8004888:	460a      	mov	r2, r1
 800488a:	400b      	ands	r3, r1
 800488c:	4925      	ldr	r1, [pc, #148]	@ (8004924 <_strtod_l+0x59c>)
 800488e:	428b      	cmp	r3, r1
 8004890:	4682      	mov	sl, r0
 8004892:	d898      	bhi.n	80047c6 <_strtod_l+0x43e>
 8004894:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8004898:	428b      	cmp	r3, r1
 800489a:	bf86      	itte	hi
 800489c:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 8004928 <_strtod_l+0x5a0>
 80048a0:	f04f 3aff 	movhi.w	sl, #4294967295
 80048a4:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 80048a8:	2300      	movs	r3, #0
 80048aa:	9308      	str	r3, [sp, #32]
 80048ac:	e076      	b.n	800499c <_strtod_l+0x614>
 80048ae:	07e2      	lsls	r2, r4, #31
 80048b0:	d504      	bpl.n	80048bc <_strtod_l+0x534>
 80048b2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80048b6:	f7fb fe9f 	bl	80005f8 <__aeabi_dmul>
 80048ba:	2301      	movs	r3, #1
 80048bc:	3601      	adds	r6, #1
 80048be:	1064      	asrs	r4, r4, #1
 80048c0:	3708      	adds	r7, #8
 80048c2:	e7d0      	b.n	8004866 <_strtod_l+0x4de>
 80048c4:	d0f0      	beq.n	80048a8 <_strtod_l+0x520>
 80048c6:	4264      	negs	r4, r4
 80048c8:	f014 020f 	ands.w	r2, r4, #15
 80048cc:	d00a      	beq.n	80048e4 <_strtod_l+0x55c>
 80048ce:	4b12      	ldr	r3, [pc, #72]	@ (8004918 <_strtod_l+0x590>)
 80048d0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80048d4:	4650      	mov	r0, sl
 80048d6:	4659      	mov	r1, fp
 80048d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80048dc:	f7fb ffb6 	bl	800084c <__aeabi_ddiv>
 80048e0:	4682      	mov	sl, r0
 80048e2:	468b      	mov	fp, r1
 80048e4:	1124      	asrs	r4, r4, #4
 80048e6:	d0df      	beq.n	80048a8 <_strtod_l+0x520>
 80048e8:	2c1f      	cmp	r4, #31
 80048ea:	dd1f      	ble.n	800492c <_strtod_l+0x5a4>
 80048ec:	2400      	movs	r4, #0
 80048ee:	46a0      	mov	r8, r4
 80048f0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80048f2:	46a1      	mov	r9, r4
 80048f4:	9a05      	ldr	r2, [sp, #20]
 80048f6:	2322      	movs	r3, #34	@ 0x22
 80048f8:	f04f 0a00 	mov.w	sl, #0
 80048fc:	f04f 0b00 	mov.w	fp, #0
 8004900:	6013      	str	r3, [r2, #0]
 8004902:	e76b      	b.n	80047dc <_strtod_l+0x454>
 8004904:	08006215 	.word	0x08006215
 8004908:	080064e0 	.word	0x080064e0
 800490c:	0800620d 	.word	0x0800620d
 8004910:	08006244 	.word	0x08006244
 8004914:	0800637d 	.word	0x0800637d
 8004918:	08006418 	.word	0x08006418
 800491c:	080063f0 	.word	0x080063f0
 8004920:	7ff00000 	.word	0x7ff00000
 8004924:	7ca00000 	.word	0x7ca00000
 8004928:	7fefffff 	.word	0x7fefffff
 800492c:	f014 0310 	ands.w	r3, r4, #16
 8004930:	bf18      	it	ne
 8004932:	236a      	movne	r3, #106	@ 0x6a
 8004934:	4ea9      	ldr	r6, [pc, #676]	@ (8004bdc <_strtod_l+0x854>)
 8004936:	9308      	str	r3, [sp, #32]
 8004938:	4650      	mov	r0, sl
 800493a:	4659      	mov	r1, fp
 800493c:	2300      	movs	r3, #0
 800493e:	07e7      	lsls	r7, r4, #31
 8004940:	d504      	bpl.n	800494c <_strtod_l+0x5c4>
 8004942:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004946:	f7fb fe57 	bl	80005f8 <__aeabi_dmul>
 800494a:	2301      	movs	r3, #1
 800494c:	1064      	asrs	r4, r4, #1
 800494e:	f106 0608 	add.w	r6, r6, #8
 8004952:	d1f4      	bne.n	800493e <_strtod_l+0x5b6>
 8004954:	b10b      	cbz	r3, 800495a <_strtod_l+0x5d2>
 8004956:	4682      	mov	sl, r0
 8004958:	468b      	mov	fp, r1
 800495a:	9b08      	ldr	r3, [sp, #32]
 800495c:	b1b3      	cbz	r3, 800498c <_strtod_l+0x604>
 800495e:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004962:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8004966:	2b00      	cmp	r3, #0
 8004968:	4659      	mov	r1, fp
 800496a:	dd0f      	ble.n	800498c <_strtod_l+0x604>
 800496c:	2b1f      	cmp	r3, #31
 800496e:	dd56      	ble.n	8004a1e <_strtod_l+0x696>
 8004970:	2b34      	cmp	r3, #52	@ 0x34
 8004972:	bfde      	ittt	le
 8004974:	f04f 33ff 	movle.w	r3, #4294967295
 8004978:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800497c:	4093      	lslle	r3, r2
 800497e:	f04f 0a00 	mov.w	sl, #0
 8004982:	bfcc      	ite	gt
 8004984:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8004988:	ea03 0b01 	andle.w	fp, r3, r1
 800498c:	2200      	movs	r2, #0
 800498e:	2300      	movs	r3, #0
 8004990:	4650      	mov	r0, sl
 8004992:	4659      	mov	r1, fp
 8004994:	f7fc f898 	bl	8000ac8 <__aeabi_dcmpeq>
 8004998:	2800      	cmp	r0, #0
 800499a:	d1a7      	bne.n	80048ec <_strtod_l+0x564>
 800499c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800499e:	9300      	str	r3, [sp, #0]
 80049a0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80049a2:	9805      	ldr	r0, [sp, #20]
 80049a4:	462b      	mov	r3, r5
 80049a6:	464a      	mov	r2, r9
 80049a8:	f7ff f8ce 	bl	8003b48 <__s2b>
 80049ac:	900b      	str	r0, [sp, #44]	@ 0x2c
 80049ae:	2800      	cmp	r0, #0
 80049b0:	f43f af09 	beq.w	80047c6 <_strtod_l+0x43e>
 80049b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80049b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80049b8:	2a00      	cmp	r2, #0
 80049ba:	eba3 0308 	sub.w	r3, r3, r8
 80049be:	bfa8      	it	ge
 80049c0:	2300      	movge	r3, #0
 80049c2:	9312      	str	r3, [sp, #72]	@ 0x48
 80049c4:	2400      	movs	r4, #0
 80049c6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80049ca:	9316      	str	r3, [sp, #88]	@ 0x58
 80049cc:	46a0      	mov	r8, r4
 80049ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80049d0:	9805      	ldr	r0, [sp, #20]
 80049d2:	6859      	ldr	r1, [r3, #4]
 80049d4:	f7ff f810 	bl	80039f8 <_Balloc>
 80049d8:	4681      	mov	r9, r0
 80049da:	2800      	cmp	r0, #0
 80049dc:	f43f aef7 	beq.w	80047ce <_strtod_l+0x446>
 80049e0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80049e2:	691a      	ldr	r2, [r3, #16]
 80049e4:	3202      	adds	r2, #2
 80049e6:	f103 010c 	add.w	r1, r3, #12
 80049ea:	0092      	lsls	r2, r2, #2
 80049ec:	300c      	adds	r0, #12
 80049ee:	f000 fd71 	bl	80054d4 <memcpy>
 80049f2:	ec4b ab10 	vmov	d0, sl, fp
 80049f6:	9805      	ldr	r0, [sp, #20]
 80049f8:	aa1c      	add	r2, sp, #112	@ 0x70
 80049fa:	a91b      	add	r1, sp, #108	@ 0x6c
 80049fc:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8004a00:	f7ff fbd6 	bl	80041b0 <__d2b>
 8004a04:	901a      	str	r0, [sp, #104]	@ 0x68
 8004a06:	2800      	cmp	r0, #0
 8004a08:	f43f aee1 	beq.w	80047ce <_strtod_l+0x446>
 8004a0c:	9805      	ldr	r0, [sp, #20]
 8004a0e:	2101      	movs	r1, #1
 8004a10:	f7ff f930 	bl	8003c74 <__i2b>
 8004a14:	4680      	mov	r8, r0
 8004a16:	b948      	cbnz	r0, 8004a2c <_strtod_l+0x6a4>
 8004a18:	f04f 0800 	mov.w	r8, #0
 8004a1c:	e6d7      	b.n	80047ce <_strtod_l+0x446>
 8004a1e:	f04f 32ff 	mov.w	r2, #4294967295
 8004a22:	fa02 f303 	lsl.w	r3, r2, r3
 8004a26:	ea03 0a0a 	and.w	sl, r3, sl
 8004a2a:	e7af      	b.n	800498c <_strtod_l+0x604>
 8004a2c:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8004a2e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8004a30:	2d00      	cmp	r5, #0
 8004a32:	bfab      	itete	ge
 8004a34:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8004a36:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8004a38:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8004a3a:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8004a3c:	bfac      	ite	ge
 8004a3e:	18ef      	addge	r7, r5, r3
 8004a40:	1b5e      	sublt	r6, r3, r5
 8004a42:	9b08      	ldr	r3, [sp, #32]
 8004a44:	1aed      	subs	r5, r5, r3
 8004a46:	4415      	add	r5, r2
 8004a48:	4b65      	ldr	r3, [pc, #404]	@ (8004be0 <_strtod_l+0x858>)
 8004a4a:	3d01      	subs	r5, #1
 8004a4c:	429d      	cmp	r5, r3
 8004a4e:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8004a52:	da50      	bge.n	8004af6 <_strtod_l+0x76e>
 8004a54:	1b5b      	subs	r3, r3, r5
 8004a56:	2b1f      	cmp	r3, #31
 8004a58:	eba2 0203 	sub.w	r2, r2, r3
 8004a5c:	f04f 0101 	mov.w	r1, #1
 8004a60:	dc3d      	bgt.n	8004ade <_strtod_l+0x756>
 8004a62:	fa01 f303 	lsl.w	r3, r1, r3
 8004a66:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004a68:	2300      	movs	r3, #0
 8004a6a:	9310      	str	r3, [sp, #64]	@ 0x40
 8004a6c:	18bd      	adds	r5, r7, r2
 8004a6e:	9b08      	ldr	r3, [sp, #32]
 8004a70:	42af      	cmp	r7, r5
 8004a72:	4416      	add	r6, r2
 8004a74:	441e      	add	r6, r3
 8004a76:	463b      	mov	r3, r7
 8004a78:	bfa8      	it	ge
 8004a7a:	462b      	movge	r3, r5
 8004a7c:	42b3      	cmp	r3, r6
 8004a7e:	bfa8      	it	ge
 8004a80:	4633      	movge	r3, r6
 8004a82:	2b00      	cmp	r3, #0
 8004a84:	bfc2      	ittt	gt
 8004a86:	1aed      	subgt	r5, r5, r3
 8004a88:	1af6      	subgt	r6, r6, r3
 8004a8a:	1aff      	subgt	r7, r7, r3
 8004a8c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004a8e:	2b00      	cmp	r3, #0
 8004a90:	dd16      	ble.n	8004ac0 <_strtod_l+0x738>
 8004a92:	4641      	mov	r1, r8
 8004a94:	9805      	ldr	r0, [sp, #20]
 8004a96:	461a      	mov	r2, r3
 8004a98:	f7ff f9a4 	bl	8003de4 <__pow5mult>
 8004a9c:	4680      	mov	r8, r0
 8004a9e:	2800      	cmp	r0, #0
 8004aa0:	d0ba      	beq.n	8004a18 <_strtod_l+0x690>
 8004aa2:	4601      	mov	r1, r0
 8004aa4:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004aa6:	9805      	ldr	r0, [sp, #20]
 8004aa8:	f7ff f8fa 	bl	8003ca0 <__multiply>
 8004aac:	900a      	str	r0, [sp, #40]	@ 0x28
 8004aae:	2800      	cmp	r0, #0
 8004ab0:	f43f ae8d 	beq.w	80047ce <_strtod_l+0x446>
 8004ab4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004ab6:	9805      	ldr	r0, [sp, #20]
 8004ab8:	f7fe ffde 	bl	8003a78 <_Bfree>
 8004abc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004abe:	931a      	str	r3, [sp, #104]	@ 0x68
 8004ac0:	2d00      	cmp	r5, #0
 8004ac2:	dc1d      	bgt.n	8004b00 <_strtod_l+0x778>
 8004ac4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	dd23      	ble.n	8004b12 <_strtod_l+0x78a>
 8004aca:	4649      	mov	r1, r9
 8004acc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8004ace:	9805      	ldr	r0, [sp, #20]
 8004ad0:	f7ff f988 	bl	8003de4 <__pow5mult>
 8004ad4:	4681      	mov	r9, r0
 8004ad6:	b9e0      	cbnz	r0, 8004b12 <_strtod_l+0x78a>
 8004ad8:	f04f 0900 	mov.w	r9, #0
 8004adc:	e677      	b.n	80047ce <_strtod_l+0x446>
 8004ade:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8004ae2:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8004ae6:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8004aea:	35e2      	adds	r5, #226	@ 0xe2
 8004aec:	fa01 f305 	lsl.w	r3, r1, r5
 8004af0:	9310      	str	r3, [sp, #64]	@ 0x40
 8004af2:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004af4:	e7ba      	b.n	8004a6c <_strtod_l+0x6e4>
 8004af6:	2300      	movs	r3, #0
 8004af8:	9310      	str	r3, [sp, #64]	@ 0x40
 8004afa:	2301      	movs	r3, #1
 8004afc:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004afe:	e7b5      	b.n	8004a6c <_strtod_l+0x6e4>
 8004b00:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004b02:	9805      	ldr	r0, [sp, #20]
 8004b04:	462a      	mov	r2, r5
 8004b06:	f7ff f9c7 	bl	8003e98 <__lshift>
 8004b0a:	901a      	str	r0, [sp, #104]	@ 0x68
 8004b0c:	2800      	cmp	r0, #0
 8004b0e:	d1d9      	bne.n	8004ac4 <_strtod_l+0x73c>
 8004b10:	e65d      	b.n	80047ce <_strtod_l+0x446>
 8004b12:	2e00      	cmp	r6, #0
 8004b14:	dd07      	ble.n	8004b26 <_strtod_l+0x79e>
 8004b16:	4649      	mov	r1, r9
 8004b18:	9805      	ldr	r0, [sp, #20]
 8004b1a:	4632      	mov	r2, r6
 8004b1c:	f7ff f9bc 	bl	8003e98 <__lshift>
 8004b20:	4681      	mov	r9, r0
 8004b22:	2800      	cmp	r0, #0
 8004b24:	d0d8      	beq.n	8004ad8 <_strtod_l+0x750>
 8004b26:	2f00      	cmp	r7, #0
 8004b28:	dd08      	ble.n	8004b3c <_strtod_l+0x7b4>
 8004b2a:	4641      	mov	r1, r8
 8004b2c:	9805      	ldr	r0, [sp, #20]
 8004b2e:	463a      	mov	r2, r7
 8004b30:	f7ff f9b2 	bl	8003e98 <__lshift>
 8004b34:	4680      	mov	r8, r0
 8004b36:	2800      	cmp	r0, #0
 8004b38:	f43f ae49 	beq.w	80047ce <_strtod_l+0x446>
 8004b3c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004b3e:	9805      	ldr	r0, [sp, #20]
 8004b40:	464a      	mov	r2, r9
 8004b42:	f7ff fa31 	bl	8003fa8 <__mdiff>
 8004b46:	4604      	mov	r4, r0
 8004b48:	2800      	cmp	r0, #0
 8004b4a:	f43f ae40 	beq.w	80047ce <_strtod_l+0x446>
 8004b4e:	68c3      	ldr	r3, [r0, #12]
 8004b50:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004b52:	2300      	movs	r3, #0
 8004b54:	60c3      	str	r3, [r0, #12]
 8004b56:	4641      	mov	r1, r8
 8004b58:	f7ff fa0a 	bl	8003f70 <__mcmp>
 8004b5c:	2800      	cmp	r0, #0
 8004b5e:	da45      	bge.n	8004bec <_strtod_l+0x864>
 8004b60:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004b62:	ea53 030a 	orrs.w	r3, r3, sl
 8004b66:	d16b      	bne.n	8004c40 <_strtod_l+0x8b8>
 8004b68:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004b6c:	2b00      	cmp	r3, #0
 8004b6e:	d167      	bne.n	8004c40 <_strtod_l+0x8b8>
 8004b70:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004b74:	0d1b      	lsrs	r3, r3, #20
 8004b76:	051b      	lsls	r3, r3, #20
 8004b78:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004b7c:	d960      	bls.n	8004c40 <_strtod_l+0x8b8>
 8004b7e:	6963      	ldr	r3, [r4, #20]
 8004b80:	b913      	cbnz	r3, 8004b88 <_strtod_l+0x800>
 8004b82:	6923      	ldr	r3, [r4, #16]
 8004b84:	2b01      	cmp	r3, #1
 8004b86:	dd5b      	ble.n	8004c40 <_strtod_l+0x8b8>
 8004b88:	4621      	mov	r1, r4
 8004b8a:	2201      	movs	r2, #1
 8004b8c:	9805      	ldr	r0, [sp, #20]
 8004b8e:	f7ff f983 	bl	8003e98 <__lshift>
 8004b92:	4641      	mov	r1, r8
 8004b94:	4604      	mov	r4, r0
 8004b96:	f7ff f9eb 	bl	8003f70 <__mcmp>
 8004b9a:	2800      	cmp	r0, #0
 8004b9c:	dd50      	ble.n	8004c40 <_strtod_l+0x8b8>
 8004b9e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004ba2:	9a08      	ldr	r2, [sp, #32]
 8004ba4:	0d1b      	lsrs	r3, r3, #20
 8004ba6:	051b      	lsls	r3, r3, #20
 8004ba8:	2a00      	cmp	r2, #0
 8004baa:	d06a      	beq.n	8004c82 <_strtod_l+0x8fa>
 8004bac:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004bb0:	d867      	bhi.n	8004c82 <_strtod_l+0x8fa>
 8004bb2:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8004bb6:	f67f ae9d 	bls.w	80048f4 <_strtod_l+0x56c>
 8004bba:	4b0a      	ldr	r3, [pc, #40]	@ (8004be4 <_strtod_l+0x85c>)
 8004bbc:	4650      	mov	r0, sl
 8004bbe:	4659      	mov	r1, fp
 8004bc0:	2200      	movs	r2, #0
 8004bc2:	f7fb fd19 	bl	80005f8 <__aeabi_dmul>
 8004bc6:	4b08      	ldr	r3, [pc, #32]	@ (8004be8 <_strtod_l+0x860>)
 8004bc8:	400b      	ands	r3, r1
 8004bca:	4682      	mov	sl, r0
 8004bcc:	468b      	mov	fp, r1
 8004bce:	2b00      	cmp	r3, #0
 8004bd0:	f47f ae08 	bne.w	80047e4 <_strtod_l+0x45c>
 8004bd4:	9a05      	ldr	r2, [sp, #20]
 8004bd6:	2322      	movs	r3, #34	@ 0x22
 8004bd8:	6013      	str	r3, [r2, #0]
 8004bda:	e603      	b.n	80047e4 <_strtod_l+0x45c>
 8004bdc:	08006508 	.word	0x08006508
 8004be0:	fffffc02 	.word	0xfffffc02
 8004be4:	39500000 	.word	0x39500000
 8004be8:	7ff00000 	.word	0x7ff00000
 8004bec:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8004bf0:	d165      	bne.n	8004cbe <_strtod_l+0x936>
 8004bf2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8004bf4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004bf8:	b35a      	cbz	r2, 8004c52 <_strtod_l+0x8ca>
 8004bfa:	4a9f      	ldr	r2, [pc, #636]	@ (8004e78 <_strtod_l+0xaf0>)
 8004bfc:	4293      	cmp	r3, r2
 8004bfe:	d12b      	bne.n	8004c58 <_strtod_l+0x8d0>
 8004c00:	9b08      	ldr	r3, [sp, #32]
 8004c02:	4651      	mov	r1, sl
 8004c04:	b303      	cbz	r3, 8004c48 <_strtod_l+0x8c0>
 8004c06:	4b9d      	ldr	r3, [pc, #628]	@ (8004e7c <_strtod_l+0xaf4>)
 8004c08:	465a      	mov	r2, fp
 8004c0a:	4013      	ands	r3, r2
 8004c0c:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8004c10:	f04f 32ff 	mov.w	r2, #4294967295
 8004c14:	d81b      	bhi.n	8004c4e <_strtod_l+0x8c6>
 8004c16:	0d1b      	lsrs	r3, r3, #20
 8004c18:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004c1c:	fa02 f303 	lsl.w	r3, r2, r3
 8004c20:	4299      	cmp	r1, r3
 8004c22:	d119      	bne.n	8004c58 <_strtod_l+0x8d0>
 8004c24:	4b96      	ldr	r3, [pc, #600]	@ (8004e80 <_strtod_l+0xaf8>)
 8004c26:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004c28:	429a      	cmp	r2, r3
 8004c2a:	d102      	bne.n	8004c32 <_strtod_l+0x8aa>
 8004c2c:	3101      	adds	r1, #1
 8004c2e:	f43f adce 	beq.w	80047ce <_strtod_l+0x446>
 8004c32:	4b92      	ldr	r3, [pc, #584]	@ (8004e7c <_strtod_l+0xaf4>)
 8004c34:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004c36:	401a      	ands	r2, r3
 8004c38:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8004c3c:	f04f 0a00 	mov.w	sl, #0
 8004c40:	9b08      	ldr	r3, [sp, #32]
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	d1b9      	bne.n	8004bba <_strtod_l+0x832>
 8004c46:	e5cd      	b.n	80047e4 <_strtod_l+0x45c>
 8004c48:	f04f 33ff 	mov.w	r3, #4294967295
 8004c4c:	e7e8      	b.n	8004c20 <_strtod_l+0x898>
 8004c4e:	4613      	mov	r3, r2
 8004c50:	e7e6      	b.n	8004c20 <_strtod_l+0x898>
 8004c52:	ea53 030a 	orrs.w	r3, r3, sl
 8004c56:	d0a2      	beq.n	8004b9e <_strtod_l+0x816>
 8004c58:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004c5a:	b1db      	cbz	r3, 8004c94 <_strtod_l+0x90c>
 8004c5c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004c5e:	4213      	tst	r3, r2
 8004c60:	d0ee      	beq.n	8004c40 <_strtod_l+0x8b8>
 8004c62:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004c64:	9a08      	ldr	r2, [sp, #32]
 8004c66:	4650      	mov	r0, sl
 8004c68:	4659      	mov	r1, fp
 8004c6a:	b1bb      	cbz	r3, 8004c9c <_strtod_l+0x914>
 8004c6c:	f7ff fb6e 	bl	800434c <sulp>
 8004c70:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004c74:	ec53 2b10 	vmov	r2, r3, d0
 8004c78:	f7fb fb08 	bl	800028c <__adddf3>
 8004c7c:	4682      	mov	sl, r0
 8004c7e:	468b      	mov	fp, r1
 8004c80:	e7de      	b.n	8004c40 <_strtod_l+0x8b8>
 8004c82:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8004c86:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8004c8a:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8004c8e:	f04f 3aff 	mov.w	sl, #4294967295
 8004c92:	e7d5      	b.n	8004c40 <_strtod_l+0x8b8>
 8004c94:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004c96:	ea13 0f0a 	tst.w	r3, sl
 8004c9a:	e7e1      	b.n	8004c60 <_strtod_l+0x8d8>
 8004c9c:	f7ff fb56 	bl	800434c <sulp>
 8004ca0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004ca4:	ec53 2b10 	vmov	r2, r3, d0
 8004ca8:	f7fb faee 	bl	8000288 <__aeabi_dsub>
 8004cac:	2200      	movs	r2, #0
 8004cae:	2300      	movs	r3, #0
 8004cb0:	4682      	mov	sl, r0
 8004cb2:	468b      	mov	fp, r1
 8004cb4:	f7fb ff08 	bl	8000ac8 <__aeabi_dcmpeq>
 8004cb8:	2800      	cmp	r0, #0
 8004cba:	d0c1      	beq.n	8004c40 <_strtod_l+0x8b8>
 8004cbc:	e61a      	b.n	80048f4 <_strtod_l+0x56c>
 8004cbe:	4641      	mov	r1, r8
 8004cc0:	4620      	mov	r0, r4
 8004cc2:	f7ff facd 	bl	8004260 <__ratio>
 8004cc6:	ec57 6b10 	vmov	r6, r7, d0
 8004cca:	2200      	movs	r2, #0
 8004ccc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8004cd0:	4630      	mov	r0, r6
 8004cd2:	4639      	mov	r1, r7
 8004cd4:	f7fb ff0c 	bl	8000af0 <__aeabi_dcmple>
 8004cd8:	2800      	cmp	r0, #0
 8004cda:	d06f      	beq.n	8004dbc <_strtod_l+0xa34>
 8004cdc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004cde:	2b00      	cmp	r3, #0
 8004ce0:	d17a      	bne.n	8004dd8 <_strtod_l+0xa50>
 8004ce2:	f1ba 0f00 	cmp.w	sl, #0
 8004ce6:	d158      	bne.n	8004d9a <_strtod_l+0xa12>
 8004ce8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004cea:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004cee:	2b00      	cmp	r3, #0
 8004cf0:	d15a      	bne.n	8004da8 <_strtod_l+0xa20>
 8004cf2:	4b64      	ldr	r3, [pc, #400]	@ (8004e84 <_strtod_l+0xafc>)
 8004cf4:	2200      	movs	r2, #0
 8004cf6:	4630      	mov	r0, r6
 8004cf8:	4639      	mov	r1, r7
 8004cfa:	f7fb feef 	bl	8000adc <__aeabi_dcmplt>
 8004cfe:	2800      	cmp	r0, #0
 8004d00:	d159      	bne.n	8004db6 <_strtod_l+0xa2e>
 8004d02:	4630      	mov	r0, r6
 8004d04:	4639      	mov	r1, r7
 8004d06:	4b60      	ldr	r3, [pc, #384]	@ (8004e88 <_strtod_l+0xb00>)
 8004d08:	2200      	movs	r2, #0
 8004d0a:	f7fb fc75 	bl	80005f8 <__aeabi_dmul>
 8004d0e:	4606      	mov	r6, r0
 8004d10:	460f      	mov	r7, r1
 8004d12:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8004d16:	9606      	str	r6, [sp, #24]
 8004d18:	9307      	str	r3, [sp, #28]
 8004d1a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004d1e:	4d57      	ldr	r5, [pc, #348]	@ (8004e7c <_strtod_l+0xaf4>)
 8004d20:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8004d24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004d26:	401d      	ands	r5, r3
 8004d28:	4b58      	ldr	r3, [pc, #352]	@ (8004e8c <_strtod_l+0xb04>)
 8004d2a:	429d      	cmp	r5, r3
 8004d2c:	f040 80b2 	bne.w	8004e94 <_strtod_l+0xb0c>
 8004d30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004d32:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 8004d36:	ec4b ab10 	vmov	d0, sl, fp
 8004d3a:	f7ff f9c9 	bl	80040d0 <__ulp>
 8004d3e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004d42:	ec51 0b10 	vmov	r0, r1, d0
 8004d46:	f7fb fc57 	bl	80005f8 <__aeabi_dmul>
 8004d4a:	4652      	mov	r2, sl
 8004d4c:	465b      	mov	r3, fp
 8004d4e:	f7fb fa9d 	bl	800028c <__adddf3>
 8004d52:	460b      	mov	r3, r1
 8004d54:	4949      	ldr	r1, [pc, #292]	@ (8004e7c <_strtod_l+0xaf4>)
 8004d56:	4a4e      	ldr	r2, [pc, #312]	@ (8004e90 <_strtod_l+0xb08>)
 8004d58:	4019      	ands	r1, r3
 8004d5a:	4291      	cmp	r1, r2
 8004d5c:	4682      	mov	sl, r0
 8004d5e:	d942      	bls.n	8004de6 <_strtod_l+0xa5e>
 8004d60:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004d62:	4b47      	ldr	r3, [pc, #284]	@ (8004e80 <_strtod_l+0xaf8>)
 8004d64:	429a      	cmp	r2, r3
 8004d66:	d103      	bne.n	8004d70 <_strtod_l+0x9e8>
 8004d68:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004d6a:	3301      	adds	r3, #1
 8004d6c:	f43f ad2f 	beq.w	80047ce <_strtod_l+0x446>
 8004d70:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 8004e80 <_strtod_l+0xaf8>
 8004d74:	f04f 3aff 	mov.w	sl, #4294967295
 8004d78:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004d7a:	9805      	ldr	r0, [sp, #20]
 8004d7c:	f7fe fe7c 	bl	8003a78 <_Bfree>
 8004d80:	9805      	ldr	r0, [sp, #20]
 8004d82:	4649      	mov	r1, r9
 8004d84:	f7fe fe78 	bl	8003a78 <_Bfree>
 8004d88:	9805      	ldr	r0, [sp, #20]
 8004d8a:	4641      	mov	r1, r8
 8004d8c:	f7fe fe74 	bl	8003a78 <_Bfree>
 8004d90:	9805      	ldr	r0, [sp, #20]
 8004d92:	4621      	mov	r1, r4
 8004d94:	f7fe fe70 	bl	8003a78 <_Bfree>
 8004d98:	e619      	b.n	80049ce <_strtod_l+0x646>
 8004d9a:	f1ba 0f01 	cmp.w	sl, #1
 8004d9e:	d103      	bne.n	8004da8 <_strtod_l+0xa20>
 8004da0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004da2:	2b00      	cmp	r3, #0
 8004da4:	f43f ada6 	beq.w	80048f4 <_strtod_l+0x56c>
 8004da8:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 8004e58 <_strtod_l+0xad0>
 8004dac:	4f35      	ldr	r7, [pc, #212]	@ (8004e84 <_strtod_l+0xafc>)
 8004dae:	ed8d 7b06 	vstr	d7, [sp, #24]
 8004db2:	2600      	movs	r6, #0
 8004db4:	e7b1      	b.n	8004d1a <_strtod_l+0x992>
 8004db6:	4f34      	ldr	r7, [pc, #208]	@ (8004e88 <_strtod_l+0xb00>)
 8004db8:	2600      	movs	r6, #0
 8004dba:	e7aa      	b.n	8004d12 <_strtod_l+0x98a>
 8004dbc:	4b32      	ldr	r3, [pc, #200]	@ (8004e88 <_strtod_l+0xb00>)
 8004dbe:	4630      	mov	r0, r6
 8004dc0:	4639      	mov	r1, r7
 8004dc2:	2200      	movs	r2, #0
 8004dc4:	f7fb fc18 	bl	80005f8 <__aeabi_dmul>
 8004dc8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004dca:	4606      	mov	r6, r0
 8004dcc:	460f      	mov	r7, r1
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d09f      	beq.n	8004d12 <_strtod_l+0x98a>
 8004dd2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8004dd6:	e7a0      	b.n	8004d1a <_strtod_l+0x992>
 8004dd8:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8004e60 <_strtod_l+0xad8>
 8004ddc:	ed8d 7b06 	vstr	d7, [sp, #24]
 8004de0:	ec57 6b17 	vmov	r6, r7, d7
 8004de4:	e799      	b.n	8004d1a <_strtod_l+0x992>
 8004de6:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 8004dea:	9b08      	ldr	r3, [sp, #32]
 8004dec:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	d1c1      	bne.n	8004d78 <_strtod_l+0x9f0>
 8004df4:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004df8:	0d1b      	lsrs	r3, r3, #20
 8004dfa:	051b      	lsls	r3, r3, #20
 8004dfc:	429d      	cmp	r5, r3
 8004dfe:	d1bb      	bne.n	8004d78 <_strtod_l+0x9f0>
 8004e00:	4630      	mov	r0, r6
 8004e02:	4639      	mov	r1, r7
 8004e04:	f7fb ff40 	bl	8000c88 <__aeabi_d2lz>
 8004e08:	f7fb fbc8 	bl	800059c <__aeabi_l2d>
 8004e0c:	4602      	mov	r2, r0
 8004e0e:	460b      	mov	r3, r1
 8004e10:	4630      	mov	r0, r6
 8004e12:	4639      	mov	r1, r7
 8004e14:	f7fb fa38 	bl	8000288 <__aeabi_dsub>
 8004e18:	460b      	mov	r3, r1
 8004e1a:	4602      	mov	r2, r0
 8004e1c:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8004e20:	f3cb 0613 	ubfx	r6, fp, #0, #20
 8004e24:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004e26:	ea46 060a 	orr.w	r6, r6, sl
 8004e2a:	431e      	orrs	r6, r3
 8004e2c:	d06f      	beq.n	8004f0e <_strtod_l+0xb86>
 8004e2e:	a30e      	add	r3, pc, #56	@ (adr r3, 8004e68 <_strtod_l+0xae0>)
 8004e30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e34:	f7fb fe52 	bl	8000adc <__aeabi_dcmplt>
 8004e38:	2800      	cmp	r0, #0
 8004e3a:	f47f acd3 	bne.w	80047e4 <_strtod_l+0x45c>
 8004e3e:	a30c      	add	r3, pc, #48	@ (adr r3, 8004e70 <_strtod_l+0xae8>)
 8004e40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e44:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004e48:	f7fb fe66 	bl	8000b18 <__aeabi_dcmpgt>
 8004e4c:	2800      	cmp	r0, #0
 8004e4e:	d093      	beq.n	8004d78 <_strtod_l+0x9f0>
 8004e50:	e4c8      	b.n	80047e4 <_strtod_l+0x45c>
 8004e52:	bf00      	nop
 8004e54:	f3af 8000 	nop.w
 8004e58:	00000000 	.word	0x00000000
 8004e5c:	bff00000 	.word	0xbff00000
 8004e60:	00000000 	.word	0x00000000
 8004e64:	3ff00000 	.word	0x3ff00000
 8004e68:	94a03595 	.word	0x94a03595
 8004e6c:	3fdfffff 	.word	0x3fdfffff
 8004e70:	35afe535 	.word	0x35afe535
 8004e74:	3fe00000 	.word	0x3fe00000
 8004e78:	000fffff 	.word	0x000fffff
 8004e7c:	7ff00000 	.word	0x7ff00000
 8004e80:	7fefffff 	.word	0x7fefffff
 8004e84:	3ff00000 	.word	0x3ff00000
 8004e88:	3fe00000 	.word	0x3fe00000
 8004e8c:	7fe00000 	.word	0x7fe00000
 8004e90:	7c9fffff 	.word	0x7c9fffff
 8004e94:	9b08      	ldr	r3, [sp, #32]
 8004e96:	b323      	cbz	r3, 8004ee2 <_strtod_l+0xb5a>
 8004e98:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8004e9c:	d821      	bhi.n	8004ee2 <_strtod_l+0xb5a>
 8004e9e:	a328      	add	r3, pc, #160	@ (adr r3, 8004f40 <_strtod_l+0xbb8>)
 8004ea0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ea4:	4630      	mov	r0, r6
 8004ea6:	4639      	mov	r1, r7
 8004ea8:	f7fb fe22 	bl	8000af0 <__aeabi_dcmple>
 8004eac:	b1a0      	cbz	r0, 8004ed8 <_strtod_l+0xb50>
 8004eae:	4639      	mov	r1, r7
 8004eb0:	4630      	mov	r0, r6
 8004eb2:	f7fb fe79 	bl	8000ba8 <__aeabi_d2uiz>
 8004eb6:	2801      	cmp	r0, #1
 8004eb8:	bf38      	it	cc
 8004eba:	2001      	movcc	r0, #1
 8004ebc:	f7fb fb22 	bl	8000504 <__aeabi_ui2d>
 8004ec0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004ec2:	4606      	mov	r6, r0
 8004ec4:	460f      	mov	r7, r1
 8004ec6:	b9fb      	cbnz	r3, 8004f08 <_strtod_l+0xb80>
 8004ec8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8004ecc:	9014      	str	r0, [sp, #80]	@ 0x50
 8004ece:	9315      	str	r3, [sp, #84]	@ 0x54
 8004ed0:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8004ed4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8004ed8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8004eda:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8004ede:	1b5b      	subs	r3, r3, r5
 8004ee0:	9311      	str	r3, [sp, #68]	@ 0x44
 8004ee2:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8004ee6:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8004eea:	f7ff f8f1 	bl	80040d0 <__ulp>
 8004eee:	4650      	mov	r0, sl
 8004ef0:	ec53 2b10 	vmov	r2, r3, d0
 8004ef4:	4659      	mov	r1, fp
 8004ef6:	f7fb fb7f 	bl	80005f8 <__aeabi_dmul>
 8004efa:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8004efe:	f7fb f9c5 	bl	800028c <__adddf3>
 8004f02:	4682      	mov	sl, r0
 8004f04:	468b      	mov	fp, r1
 8004f06:	e770      	b.n	8004dea <_strtod_l+0xa62>
 8004f08:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8004f0c:	e7e0      	b.n	8004ed0 <_strtod_l+0xb48>
 8004f0e:	a30e      	add	r3, pc, #56	@ (adr r3, 8004f48 <_strtod_l+0xbc0>)
 8004f10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f14:	f7fb fde2 	bl	8000adc <__aeabi_dcmplt>
 8004f18:	e798      	b.n	8004e4c <_strtod_l+0xac4>
 8004f1a:	2300      	movs	r3, #0
 8004f1c:	930e      	str	r3, [sp, #56]	@ 0x38
 8004f1e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8004f20:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004f22:	6013      	str	r3, [r2, #0]
 8004f24:	f7ff ba6d 	b.w	8004402 <_strtod_l+0x7a>
 8004f28:	2a65      	cmp	r2, #101	@ 0x65
 8004f2a:	f43f ab68 	beq.w	80045fe <_strtod_l+0x276>
 8004f2e:	2a45      	cmp	r2, #69	@ 0x45
 8004f30:	f43f ab65 	beq.w	80045fe <_strtod_l+0x276>
 8004f34:	2301      	movs	r3, #1
 8004f36:	f7ff bba0 	b.w	800467a <_strtod_l+0x2f2>
 8004f3a:	bf00      	nop
 8004f3c:	f3af 8000 	nop.w
 8004f40:	ffc00000 	.word	0xffc00000
 8004f44:	41dfffff 	.word	0x41dfffff
 8004f48:	94a03595 	.word	0x94a03595
 8004f4c:	3fcfffff 	.word	0x3fcfffff

08004f50 <_strtod_r>:
 8004f50:	4b01      	ldr	r3, [pc, #4]	@ (8004f58 <_strtod_r+0x8>)
 8004f52:	f7ff ba19 	b.w	8004388 <_strtod_l>
 8004f56:	bf00      	nop
 8004f58:	20000070 	.word	0x20000070

08004f5c <_strtol_l.isra.0>:
 8004f5c:	2b24      	cmp	r3, #36	@ 0x24
 8004f5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f62:	4686      	mov	lr, r0
 8004f64:	4690      	mov	r8, r2
 8004f66:	d801      	bhi.n	8004f6c <_strtol_l.isra.0+0x10>
 8004f68:	2b01      	cmp	r3, #1
 8004f6a:	d106      	bne.n	8004f7a <_strtol_l.isra.0+0x1e>
 8004f6c:	f7fd fdb6 	bl	8002adc <__errno>
 8004f70:	2316      	movs	r3, #22
 8004f72:	6003      	str	r3, [r0, #0]
 8004f74:	2000      	movs	r0, #0
 8004f76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f7a:	4834      	ldr	r0, [pc, #208]	@ (800504c <_strtol_l.isra.0+0xf0>)
 8004f7c:	460d      	mov	r5, r1
 8004f7e:	462a      	mov	r2, r5
 8004f80:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004f84:	5d06      	ldrb	r6, [r0, r4]
 8004f86:	f016 0608 	ands.w	r6, r6, #8
 8004f8a:	d1f8      	bne.n	8004f7e <_strtol_l.isra.0+0x22>
 8004f8c:	2c2d      	cmp	r4, #45	@ 0x2d
 8004f8e:	d110      	bne.n	8004fb2 <_strtol_l.isra.0+0x56>
 8004f90:	782c      	ldrb	r4, [r5, #0]
 8004f92:	2601      	movs	r6, #1
 8004f94:	1c95      	adds	r5, r2, #2
 8004f96:	f033 0210 	bics.w	r2, r3, #16
 8004f9a:	d115      	bne.n	8004fc8 <_strtol_l.isra.0+0x6c>
 8004f9c:	2c30      	cmp	r4, #48	@ 0x30
 8004f9e:	d10d      	bne.n	8004fbc <_strtol_l.isra.0+0x60>
 8004fa0:	782a      	ldrb	r2, [r5, #0]
 8004fa2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004fa6:	2a58      	cmp	r2, #88	@ 0x58
 8004fa8:	d108      	bne.n	8004fbc <_strtol_l.isra.0+0x60>
 8004faa:	786c      	ldrb	r4, [r5, #1]
 8004fac:	3502      	adds	r5, #2
 8004fae:	2310      	movs	r3, #16
 8004fb0:	e00a      	b.n	8004fc8 <_strtol_l.isra.0+0x6c>
 8004fb2:	2c2b      	cmp	r4, #43	@ 0x2b
 8004fb4:	bf04      	itt	eq
 8004fb6:	782c      	ldrbeq	r4, [r5, #0]
 8004fb8:	1c95      	addeq	r5, r2, #2
 8004fba:	e7ec      	b.n	8004f96 <_strtol_l.isra.0+0x3a>
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	d1f6      	bne.n	8004fae <_strtol_l.isra.0+0x52>
 8004fc0:	2c30      	cmp	r4, #48	@ 0x30
 8004fc2:	bf14      	ite	ne
 8004fc4:	230a      	movne	r3, #10
 8004fc6:	2308      	moveq	r3, #8
 8004fc8:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8004fcc:	f10c 3cff 	add.w	ip, ip, #4294967295
 8004fd0:	2200      	movs	r2, #0
 8004fd2:	fbbc f9f3 	udiv	r9, ip, r3
 8004fd6:	4610      	mov	r0, r2
 8004fd8:	fb03 ca19 	mls	sl, r3, r9, ip
 8004fdc:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8004fe0:	2f09      	cmp	r7, #9
 8004fe2:	d80f      	bhi.n	8005004 <_strtol_l.isra.0+0xa8>
 8004fe4:	463c      	mov	r4, r7
 8004fe6:	42a3      	cmp	r3, r4
 8004fe8:	dd1b      	ble.n	8005022 <_strtol_l.isra.0+0xc6>
 8004fea:	1c57      	adds	r7, r2, #1
 8004fec:	d007      	beq.n	8004ffe <_strtol_l.isra.0+0xa2>
 8004fee:	4581      	cmp	r9, r0
 8004ff0:	d314      	bcc.n	800501c <_strtol_l.isra.0+0xc0>
 8004ff2:	d101      	bne.n	8004ff8 <_strtol_l.isra.0+0x9c>
 8004ff4:	45a2      	cmp	sl, r4
 8004ff6:	db11      	blt.n	800501c <_strtol_l.isra.0+0xc0>
 8004ff8:	fb00 4003 	mla	r0, r0, r3, r4
 8004ffc:	2201      	movs	r2, #1
 8004ffe:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005002:	e7eb      	b.n	8004fdc <_strtol_l.isra.0+0x80>
 8005004:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005008:	2f19      	cmp	r7, #25
 800500a:	d801      	bhi.n	8005010 <_strtol_l.isra.0+0xb4>
 800500c:	3c37      	subs	r4, #55	@ 0x37
 800500e:	e7ea      	b.n	8004fe6 <_strtol_l.isra.0+0x8a>
 8005010:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8005014:	2f19      	cmp	r7, #25
 8005016:	d804      	bhi.n	8005022 <_strtol_l.isra.0+0xc6>
 8005018:	3c57      	subs	r4, #87	@ 0x57
 800501a:	e7e4      	b.n	8004fe6 <_strtol_l.isra.0+0x8a>
 800501c:	f04f 32ff 	mov.w	r2, #4294967295
 8005020:	e7ed      	b.n	8004ffe <_strtol_l.isra.0+0xa2>
 8005022:	1c53      	adds	r3, r2, #1
 8005024:	d108      	bne.n	8005038 <_strtol_l.isra.0+0xdc>
 8005026:	2322      	movs	r3, #34	@ 0x22
 8005028:	f8ce 3000 	str.w	r3, [lr]
 800502c:	4660      	mov	r0, ip
 800502e:	f1b8 0f00 	cmp.w	r8, #0
 8005032:	d0a0      	beq.n	8004f76 <_strtol_l.isra.0+0x1a>
 8005034:	1e69      	subs	r1, r5, #1
 8005036:	e006      	b.n	8005046 <_strtol_l.isra.0+0xea>
 8005038:	b106      	cbz	r6, 800503c <_strtol_l.isra.0+0xe0>
 800503a:	4240      	negs	r0, r0
 800503c:	f1b8 0f00 	cmp.w	r8, #0
 8005040:	d099      	beq.n	8004f76 <_strtol_l.isra.0+0x1a>
 8005042:	2a00      	cmp	r2, #0
 8005044:	d1f6      	bne.n	8005034 <_strtol_l.isra.0+0xd8>
 8005046:	f8c8 1000 	str.w	r1, [r8]
 800504a:	e794      	b.n	8004f76 <_strtol_l.isra.0+0x1a>
 800504c:	08006531 	.word	0x08006531

08005050 <_strtol_r>:
 8005050:	f7ff bf84 	b.w	8004f5c <_strtol_l.isra.0>

08005054 <__ssputs_r>:
 8005054:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005058:	688e      	ldr	r6, [r1, #8]
 800505a:	461f      	mov	r7, r3
 800505c:	42be      	cmp	r6, r7
 800505e:	680b      	ldr	r3, [r1, #0]
 8005060:	4682      	mov	sl, r0
 8005062:	460c      	mov	r4, r1
 8005064:	4690      	mov	r8, r2
 8005066:	d82d      	bhi.n	80050c4 <__ssputs_r+0x70>
 8005068:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800506c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005070:	d026      	beq.n	80050c0 <__ssputs_r+0x6c>
 8005072:	6965      	ldr	r5, [r4, #20]
 8005074:	6909      	ldr	r1, [r1, #16]
 8005076:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800507a:	eba3 0901 	sub.w	r9, r3, r1
 800507e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005082:	1c7b      	adds	r3, r7, #1
 8005084:	444b      	add	r3, r9
 8005086:	106d      	asrs	r5, r5, #1
 8005088:	429d      	cmp	r5, r3
 800508a:	bf38      	it	cc
 800508c:	461d      	movcc	r5, r3
 800508e:	0553      	lsls	r3, r2, #21
 8005090:	d527      	bpl.n	80050e2 <__ssputs_r+0x8e>
 8005092:	4629      	mov	r1, r5
 8005094:	f7fe fc24 	bl	80038e0 <_malloc_r>
 8005098:	4606      	mov	r6, r0
 800509a:	b360      	cbz	r0, 80050f6 <__ssputs_r+0xa2>
 800509c:	6921      	ldr	r1, [r4, #16]
 800509e:	464a      	mov	r2, r9
 80050a0:	f000 fa18 	bl	80054d4 <memcpy>
 80050a4:	89a3      	ldrh	r3, [r4, #12]
 80050a6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80050aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80050ae:	81a3      	strh	r3, [r4, #12]
 80050b0:	6126      	str	r6, [r4, #16]
 80050b2:	6165      	str	r5, [r4, #20]
 80050b4:	444e      	add	r6, r9
 80050b6:	eba5 0509 	sub.w	r5, r5, r9
 80050ba:	6026      	str	r6, [r4, #0]
 80050bc:	60a5      	str	r5, [r4, #8]
 80050be:	463e      	mov	r6, r7
 80050c0:	42be      	cmp	r6, r7
 80050c2:	d900      	bls.n	80050c6 <__ssputs_r+0x72>
 80050c4:	463e      	mov	r6, r7
 80050c6:	6820      	ldr	r0, [r4, #0]
 80050c8:	4632      	mov	r2, r6
 80050ca:	4641      	mov	r1, r8
 80050cc:	f000 f9c6 	bl	800545c <memmove>
 80050d0:	68a3      	ldr	r3, [r4, #8]
 80050d2:	1b9b      	subs	r3, r3, r6
 80050d4:	60a3      	str	r3, [r4, #8]
 80050d6:	6823      	ldr	r3, [r4, #0]
 80050d8:	4433      	add	r3, r6
 80050da:	6023      	str	r3, [r4, #0]
 80050dc:	2000      	movs	r0, #0
 80050de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80050e2:	462a      	mov	r2, r5
 80050e4:	f000 fd89 	bl	8005bfa <_realloc_r>
 80050e8:	4606      	mov	r6, r0
 80050ea:	2800      	cmp	r0, #0
 80050ec:	d1e0      	bne.n	80050b0 <__ssputs_r+0x5c>
 80050ee:	6921      	ldr	r1, [r4, #16]
 80050f0:	4650      	mov	r0, sl
 80050f2:	f7fe fb81 	bl	80037f8 <_free_r>
 80050f6:	230c      	movs	r3, #12
 80050f8:	f8ca 3000 	str.w	r3, [sl]
 80050fc:	89a3      	ldrh	r3, [r4, #12]
 80050fe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005102:	81a3      	strh	r3, [r4, #12]
 8005104:	f04f 30ff 	mov.w	r0, #4294967295
 8005108:	e7e9      	b.n	80050de <__ssputs_r+0x8a>
	...

0800510c <_svfiprintf_r>:
 800510c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005110:	4698      	mov	r8, r3
 8005112:	898b      	ldrh	r3, [r1, #12]
 8005114:	061b      	lsls	r3, r3, #24
 8005116:	b09d      	sub	sp, #116	@ 0x74
 8005118:	4607      	mov	r7, r0
 800511a:	460d      	mov	r5, r1
 800511c:	4614      	mov	r4, r2
 800511e:	d510      	bpl.n	8005142 <_svfiprintf_r+0x36>
 8005120:	690b      	ldr	r3, [r1, #16]
 8005122:	b973      	cbnz	r3, 8005142 <_svfiprintf_r+0x36>
 8005124:	2140      	movs	r1, #64	@ 0x40
 8005126:	f7fe fbdb 	bl	80038e0 <_malloc_r>
 800512a:	6028      	str	r0, [r5, #0]
 800512c:	6128      	str	r0, [r5, #16]
 800512e:	b930      	cbnz	r0, 800513e <_svfiprintf_r+0x32>
 8005130:	230c      	movs	r3, #12
 8005132:	603b      	str	r3, [r7, #0]
 8005134:	f04f 30ff 	mov.w	r0, #4294967295
 8005138:	b01d      	add	sp, #116	@ 0x74
 800513a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800513e:	2340      	movs	r3, #64	@ 0x40
 8005140:	616b      	str	r3, [r5, #20]
 8005142:	2300      	movs	r3, #0
 8005144:	9309      	str	r3, [sp, #36]	@ 0x24
 8005146:	2320      	movs	r3, #32
 8005148:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800514c:	f8cd 800c 	str.w	r8, [sp, #12]
 8005150:	2330      	movs	r3, #48	@ 0x30
 8005152:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80052f0 <_svfiprintf_r+0x1e4>
 8005156:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800515a:	f04f 0901 	mov.w	r9, #1
 800515e:	4623      	mov	r3, r4
 8005160:	469a      	mov	sl, r3
 8005162:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005166:	b10a      	cbz	r2, 800516c <_svfiprintf_r+0x60>
 8005168:	2a25      	cmp	r2, #37	@ 0x25
 800516a:	d1f9      	bne.n	8005160 <_svfiprintf_r+0x54>
 800516c:	ebba 0b04 	subs.w	fp, sl, r4
 8005170:	d00b      	beq.n	800518a <_svfiprintf_r+0x7e>
 8005172:	465b      	mov	r3, fp
 8005174:	4622      	mov	r2, r4
 8005176:	4629      	mov	r1, r5
 8005178:	4638      	mov	r0, r7
 800517a:	f7ff ff6b 	bl	8005054 <__ssputs_r>
 800517e:	3001      	adds	r0, #1
 8005180:	f000 80a7 	beq.w	80052d2 <_svfiprintf_r+0x1c6>
 8005184:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005186:	445a      	add	r2, fp
 8005188:	9209      	str	r2, [sp, #36]	@ 0x24
 800518a:	f89a 3000 	ldrb.w	r3, [sl]
 800518e:	2b00      	cmp	r3, #0
 8005190:	f000 809f 	beq.w	80052d2 <_svfiprintf_r+0x1c6>
 8005194:	2300      	movs	r3, #0
 8005196:	f04f 32ff 	mov.w	r2, #4294967295
 800519a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800519e:	f10a 0a01 	add.w	sl, sl, #1
 80051a2:	9304      	str	r3, [sp, #16]
 80051a4:	9307      	str	r3, [sp, #28]
 80051a6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80051aa:	931a      	str	r3, [sp, #104]	@ 0x68
 80051ac:	4654      	mov	r4, sl
 80051ae:	2205      	movs	r2, #5
 80051b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80051b4:	484e      	ldr	r0, [pc, #312]	@ (80052f0 <_svfiprintf_r+0x1e4>)
 80051b6:	f7fb f80b 	bl	80001d0 <memchr>
 80051ba:	9a04      	ldr	r2, [sp, #16]
 80051bc:	b9d8      	cbnz	r0, 80051f6 <_svfiprintf_r+0xea>
 80051be:	06d0      	lsls	r0, r2, #27
 80051c0:	bf44      	itt	mi
 80051c2:	2320      	movmi	r3, #32
 80051c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80051c8:	0711      	lsls	r1, r2, #28
 80051ca:	bf44      	itt	mi
 80051cc:	232b      	movmi	r3, #43	@ 0x2b
 80051ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80051d2:	f89a 3000 	ldrb.w	r3, [sl]
 80051d6:	2b2a      	cmp	r3, #42	@ 0x2a
 80051d8:	d015      	beq.n	8005206 <_svfiprintf_r+0xfa>
 80051da:	9a07      	ldr	r2, [sp, #28]
 80051dc:	4654      	mov	r4, sl
 80051de:	2000      	movs	r0, #0
 80051e0:	f04f 0c0a 	mov.w	ip, #10
 80051e4:	4621      	mov	r1, r4
 80051e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80051ea:	3b30      	subs	r3, #48	@ 0x30
 80051ec:	2b09      	cmp	r3, #9
 80051ee:	d94b      	bls.n	8005288 <_svfiprintf_r+0x17c>
 80051f0:	b1b0      	cbz	r0, 8005220 <_svfiprintf_r+0x114>
 80051f2:	9207      	str	r2, [sp, #28]
 80051f4:	e014      	b.n	8005220 <_svfiprintf_r+0x114>
 80051f6:	eba0 0308 	sub.w	r3, r0, r8
 80051fa:	fa09 f303 	lsl.w	r3, r9, r3
 80051fe:	4313      	orrs	r3, r2
 8005200:	9304      	str	r3, [sp, #16]
 8005202:	46a2      	mov	sl, r4
 8005204:	e7d2      	b.n	80051ac <_svfiprintf_r+0xa0>
 8005206:	9b03      	ldr	r3, [sp, #12]
 8005208:	1d19      	adds	r1, r3, #4
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	9103      	str	r1, [sp, #12]
 800520e:	2b00      	cmp	r3, #0
 8005210:	bfbb      	ittet	lt
 8005212:	425b      	neglt	r3, r3
 8005214:	f042 0202 	orrlt.w	r2, r2, #2
 8005218:	9307      	strge	r3, [sp, #28]
 800521a:	9307      	strlt	r3, [sp, #28]
 800521c:	bfb8      	it	lt
 800521e:	9204      	strlt	r2, [sp, #16]
 8005220:	7823      	ldrb	r3, [r4, #0]
 8005222:	2b2e      	cmp	r3, #46	@ 0x2e
 8005224:	d10a      	bne.n	800523c <_svfiprintf_r+0x130>
 8005226:	7863      	ldrb	r3, [r4, #1]
 8005228:	2b2a      	cmp	r3, #42	@ 0x2a
 800522a:	d132      	bne.n	8005292 <_svfiprintf_r+0x186>
 800522c:	9b03      	ldr	r3, [sp, #12]
 800522e:	1d1a      	adds	r2, r3, #4
 8005230:	681b      	ldr	r3, [r3, #0]
 8005232:	9203      	str	r2, [sp, #12]
 8005234:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005238:	3402      	adds	r4, #2
 800523a:	9305      	str	r3, [sp, #20]
 800523c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005300 <_svfiprintf_r+0x1f4>
 8005240:	7821      	ldrb	r1, [r4, #0]
 8005242:	2203      	movs	r2, #3
 8005244:	4650      	mov	r0, sl
 8005246:	f7fa ffc3 	bl	80001d0 <memchr>
 800524a:	b138      	cbz	r0, 800525c <_svfiprintf_r+0x150>
 800524c:	9b04      	ldr	r3, [sp, #16]
 800524e:	eba0 000a 	sub.w	r0, r0, sl
 8005252:	2240      	movs	r2, #64	@ 0x40
 8005254:	4082      	lsls	r2, r0
 8005256:	4313      	orrs	r3, r2
 8005258:	3401      	adds	r4, #1
 800525a:	9304      	str	r3, [sp, #16]
 800525c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005260:	4824      	ldr	r0, [pc, #144]	@ (80052f4 <_svfiprintf_r+0x1e8>)
 8005262:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005266:	2206      	movs	r2, #6
 8005268:	f7fa ffb2 	bl	80001d0 <memchr>
 800526c:	2800      	cmp	r0, #0
 800526e:	d036      	beq.n	80052de <_svfiprintf_r+0x1d2>
 8005270:	4b21      	ldr	r3, [pc, #132]	@ (80052f8 <_svfiprintf_r+0x1ec>)
 8005272:	bb1b      	cbnz	r3, 80052bc <_svfiprintf_r+0x1b0>
 8005274:	9b03      	ldr	r3, [sp, #12]
 8005276:	3307      	adds	r3, #7
 8005278:	f023 0307 	bic.w	r3, r3, #7
 800527c:	3308      	adds	r3, #8
 800527e:	9303      	str	r3, [sp, #12]
 8005280:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005282:	4433      	add	r3, r6
 8005284:	9309      	str	r3, [sp, #36]	@ 0x24
 8005286:	e76a      	b.n	800515e <_svfiprintf_r+0x52>
 8005288:	fb0c 3202 	mla	r2, ip, r2, r3
 800528c:	460c      	mov	r4, r1
 800528e:	2001      	movs	r0, #1
 8005290:	e7a8      	b.n	80051e4 <_svfiprintf_r+0xd8>
 8005292:	2300      	movs	r3, #0
 8005294:	3401      	adds	r4, #1
 8005296:	9305      	str	r3, [sp, #20]
 8005298:	4619      	mov	r1, r3
 800529a:	f04f 0c0a 	mov.w	ip, #10
 800529e:	4620      	mov	r0, r4
 80052a0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80052a4:	3a30      	subs	r2, #48	@ 0x30
 80052a6:	2a09      	cmp	r2, #9
 80052a8:	d903      	bls.n	80052b2 <_svfiprintf_r+0x1a6>
 80052aa:	2b00      	cmp	r3, #0
 80052ac:	d0c6      	beq.n	800523c <_svfiprintf_r+0x130>
 80052ae:	9105      	str	r1, [sp, #20]
 80052b0:	e7c4      	b.n	800523c <_svfiprintf_r+0x130>
 80052b2:	fb0c 2101 	mla	r1, ip, r1, r2
 80052b6:	4604      	mov	r4, r0
 80052b8:	2301      	movs	r3, #1
 80052ba:	e7f0      	b.n	800529e <_svfiprintf_r+0x192>
 80052bc:	ab03      	add	r3, sp, #12
 80052be:	9300      	str	r3, [sp, #0]
 80052c0:	462a      	mov	r2, r5
 80052c2:	4b0e      	ldr	r3, [pc, #56]	@ (80052fc <_svfiprintf_r+0x1f0>)
 80052c4:	a904      	add	r1, sp, #16
 80052c6:	4638      	mov	r0, r7
 80052c8:	f7fc fcca 	bl	8001c60 <_printf_float>
 80052cc:	1c42      	adds	r2, r0, #1
 80052ce:	4606      	mov	r6, r0
 80052d0:	d1d6      	bne.n	8005280 <_svfiprintf_r+0x174>
 80052d2:	89ab      	ldrh	r3, [r5, #12]
 80052d4:	065b      	lsls	r3, r3, #25
 80052d6:	f53f af2d 	bmi.w	8005134 <_svfiprintf_r+0x28>
 80052da:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80052dc:	e72c      	b.n	8005138 <_svfiprintf_r+0x2c>
 80052de:	ab03      	add	r3, sp, #12
 80052e0:	9300      	str	r3, [sp, #0]
 80052e2:	462a      	mov	r2, r5
 80052e4:	4b05      	ldr	r3, [pc, #20]	@ (80052fc <_svfiprintf_r+0x1f0>)
 80052e6:	a904      	add	r1, sp, #16
 80052e8:	4638      	mov	r0, r7
 80052ea:	f7fc ff51 	bl	8002190 <_printf_i>
 80052ee:	e7ed      	b.n	80052cc <_svfiprintf_r+0x1c0>
 80052f0:	08006329 	.word	0x08006329
 80052f4:	08006333 	.word	0x08006333
 80052f8:	08001c61 	.word	0x08001c61
 80052fc:	08005055 	.word	0x08005055
 8005300:	0800632f 	.word	0x0800632f

08005304 <__sflush_r>:
 8005304:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005308:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800530c:	0716      	lsls	r6, r2, #28
 800530e:	4605      	mov	r5, r0
 8005310:	460c      	mov	r4, r1
 8005312:	d454      	bmi.n	80053be <__sflush_r+0xba>
 8005314:	684b      	ldr	r3, [r1, #4]
 8005316:	2b00      	cmp	r3, #0
 8005318:	dc02      	bgt.n	8005320 <__sflush_r+0x1c>
 800531a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800531c:	2b00      	cmp	r3, #0
 800531e:	dd48      	ble.n	80053b2 <__sflush_r+0xae>
 8005320:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005322:	2e00      	cmp	r6, #0
 8005324:	d045      	beq.n	80053b2 <__sflush_r+0xae>
 8005326:	2300      	movs	r3, #0
 8005328:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800532c:	682f      	ldr	r7, [r5, #0]
 800532e:	6a21      	ldr	r1, [r4, #32]
 8005330:	602b      	str	r3, [r5, #0]
 8005332:	d030      	beq.n	8005396 <__sflush_r+0x92>
 8005334:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005336:	89a3      	ldrh	r3, [r4, #12]
 8005338:	0759      	lsls	r1, r3, #29
 800533a:	d505      	bpl.n	8005348 <__sflush_r+0x44>
 800533c:	6863      	ldr	r3, [r4, #4]
 800533e:	1ad2      	subs	r2, r2, r3
 8005340:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005342:	b10b      	cbz	r3, 8005348 <__sflush_r+0x44>
 8005344:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005346:	1ad2      	subs	r2, r2, r3
 8005348:	2300      	movs	r3, #0
 800534a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800534c:	6a21      	ldr	r1, [r4, #32]
 800534e:	4628      	mov	r0, r5
 8005350:	47b0      	blx	r6
 8005352:	1c43      	adds	r3, r0, #1
 8005354:	89a3      	ldrh	r3, [r4, #12]
 8005356:	d106      	bne.n	8005366 <__sflush_r+0x62>
 8005358:	6829      	ldr	r1, [r5, #0]
 800535a:	291d      	cmp	r1, #29
 800535c:	d82b      	bhi.n	80053b6 <__sflush_r+0xb2>
 800535e:	4a2a      	ldr	r2, [pc, #168]	@ (8005408 <__sflush_r+0x104>)
 8005360:	40ca      	lsrs	r2, r1
 8005362:	07d6      	lsls	r6, r2, #31
 8005364:	d527      	bpl.n	80053b6 <__sflush_r+0xb2>
 8005366:	2200      	movs	r2, #0
 8005368:	6062      	str	r2, [r4, #4]
 800536a:	04d9      	lsls	r1, r3, #19
 800536c:	6922      	ldr	r2, [r4, #16]
 800536e:	6022      	str	r2, [r4, #0]
 8005370:	d504      	bpl.n	800537c <__sflush_r+0x78>
 8005372:	1c42      	adds	r2, r0, #1
 8005374:	d101      	bne.n	800537a <__sflush_r+0x76>
 8005376:	682b      	ldr	r3, [r5, #0]
 8005378:	b903      	cbnz	r3, 800537c <__sflush_r+0x78>
 800537a:	6560      	str	r0, [r4, #84]	@ 0x54
 800537c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800537e:	602f      	str	r7, [r5, #0]
 8005380:	b1b9      	cbz	r1, 80053b2 <__sflush_r+0xae>
 8005382:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005386:	4299      	cmp	r1, r3
 8005388:	d002      	beq.n	8005390 <__sflush_r+0x8c>
 800538a:	4628      	mov	r0, r5
 800538c:	f7fe fa34 	bl	80037f8 <_free_r>
 8005390:	2300      	movs	r3, #0
 8005392:	6363      	str	r3, [r4, #52]	@ 0x34
 8005394:	e00d      	b.n	80053b2 <__sflush_r+0xae>
 8005396:	2301      	movs	r3, #1
 8005398:	4628      	mov	r0, r5
 800539a:	47b0      	blx	r6
 800539c:	4602      	mov	r2, r0
 800539e:	1c50      	adds	r0, r2, #1
 80053a0:	d1c9      	bne.n	8005336 <__sflush_r+0x32>
 80053a2:	682b      	ldr	r3, [r5, #0]
 80053a4:	2b00      	cmp	r3, #0
 80053a6:	d0c6      	beq.n	8005336 <__sflush_r+0x32>
 80053a8:	2b1d      	cmp	r3, #29
 80053aa:	d001      	beq.n	80053b0 <__sflush_r+0xac>
 80053ac:	2b16      	cmp	r3, #22
 80053ae:	d11e      	bne.n	80053ee <__sflush_r+0xea>
 80053b0:	602f      	str	r7, [r5, #0]
 80053b2:	2000      	movs	r0, #0
 80053b4:	e022      	b.n	80053fc <__sflush_r+0xf8>
 80053b6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80053ba:	b21b      	sxth	r3, r3
 80053bc:	e01b      	b.n	80053f6 <__sflush_r+0xf2>
 80053be:	690f      	ldr	r7, [r1, #16]
 80053c0:	2f00      	cmp	r7, #0
 80053c2:	d0f6      	beq.n	80053b2 <__sflush_r+0xae>
 80053c4:	0793      	lsls	r3, r2, #30
 80053c6:	680e      	ldr	r6, [r1, #0]
 80053c8:	bf08      	it	eq
 80053ca:	694b      	ldreq	r3, [r1, #20]
 80053cc:	600f      	str	r7, [r1, #0]
 80053ce:	bf18      	it	ne
 80053d0:	2300      	movne	r3, #0
 80053d2:	eba6 0807 	sub.w	r8, r6, r7
 80053d6:	608b      	str	r3, [r1, #8]
 80053d8:	f1b8 0f00 	cmp.w	r8, #0
 80053dc:	dde9      	ble.n	80053b2 <__sflush_r+0xae>
 80053de:	6a21      	ldr	r1, [r4, #32]
 80053e0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80053e2:	4643      	mov	r3, r8
 80053e4:	463a      	mov	r2, r7
 80053e6:	4628      	mov	r0, r5
 80053e8:	47b0      	blx	r6
 80053ea:	2800      	cmp	r0, #0
 80053ec:	dc08      	bgt.n	8005400 <__sflush_r+0xfc>
 80053ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80053f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80053f6:	81a3      	strh	r3, [r4, #12]
 80053f8:	f04f 30ff 	mov.w	r0, #4294967295
 80053fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005400:	4407      	add	r7, r0
 8005402:	eba8 0800 	sub.w	r8, r8, r0
 8005406:	e7e7      	b.n	80053d8 <__sflush_r+0xd4>
 8005408:	20400001 	.word	0x20400001

0800540c <_fflush_r>:
 800540c:	b538      	push	{r3, r4, r5, lr}
 800540e:	690b      	ldr	r3, [r1, #16]
 8005410:	4605      	mov	r5, r0
 8005412:	460c      	mov	r4, r1
 8005414:	b913      	cbnz	r3, 800541c <_fflush_r+0x10>
 8005416:	2500      	movs	r5, #0
 8005418:	4628      	mov	r0, r5
 800541a:	bd38      	pop	{r3, r4, r5, pc}
 800541c:	b118      	cbz	r0, 8005426 <_fflush_r+0x1a>
 800541e:	6a03      	ldr	r3, [r0, #32]
 8005420:	b90b      	cbnz	r3, 8005426 <_fflush_r+0x1a>
 8005422:	f7fd fa6d 	bl	8002900 <__sinit>
 8005426:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800542a:	2b00      	cmp	r3, #0
 800542c:	d0f3      	beq.n	8005416 <_fflush_r+0xa>
 800542e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005430:	07d0      	lsls	r0, r2, #31
 8005432:	d404      	bmi.n	800543e <_fflush_r+0x32>
 8005434:	0599      	lsls	r1, r3, #22
 8005436:	d402      	bmi.n	800543e <_fflush_r+0x32>
 8005438:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800543a:	f7fd fb7a 	bl	8002b32 <__retarget_lock_acquire_recursive>
 800543e:	4628      	mov	r0, r5
 8005440:	4621      	mov	r1, r4
 8005442:	f7ff ff5f 	bl	8005304 <__sflush_r>
 8005446:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005448:	07da      	lsls	r2, r3, #31
 800544a:	4605      	mov	r5, r0
 800544c:	d4e4      	bmi.n	8005418 <_fflush_r+0xc>
 800544e:	89a3      	ldrh	r3, [r4, #12]
 8005450:	059b      	lsls	r3, r3, #22
 8005452:	d4e1      	bmi.n	8005418 <_fflush_r+0xc>
 8005454:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005456:	f7fd fb6d 	bl	8002b34 <__retarget_lock_release_recursive>
 800545a:	e7dd      	b.n	8005418 <_fflush_r+0xc>

0800545c <memmove>:
 800545c:	4288      	cmp	r0, r1
 800545e:	b510      	push	{r4, lr}
 8005460:	eb01 0402 	add.w	r4, r1, r2
 8005464:	d902      	bls.n	800546c <memmove+0x10>
 8005466:	4284      	cmp	r4, r0
 8005468:	4623      	mov	r3, r4
 800546a:	d807      	bhi.n	800547c <memmove+0x20>
 800546c:	1e43      	subs	r3, r0, #1
 800546e:	42a1      	cmp	r1, r4
 8005470:	d008      	beq.n	8005484 <memmove+0x28>
 8005472:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005476:	f803 2f01 	strb.w	r2, [r3, #1]!
 800547a:	e7f8      	b.n	800546e <memmove+0x12>
 800547c:	4402      	add	r2, r0
 800547e:	4601      	mov	r1, r0
 8005480:	428a      	cmp	r2, r1
 8005482:	d100      	bne.n	8005486 <memmove+0x2a>
 8005484:	bd10      	pop	{r4, pc}
 8005486:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800548a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800548e:	e7f7      	b.n	8005480 <memmove+0x24>

08005490 <strncmp>:
 8005490:	b510      	push	{r4, lr}
 8005492:	b16a      	cbz	r2, 80054b0 <strncmp+0x20>
 8005494:	3901      	subs	r1, #1
 8005496:	1884      	adds	r4, r0, r2
 8005498:	f810 2b01 	ldrb.w	r2, [r0], #1
 800549c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80054a0:	429a      	cmp	r2, r3
 80054a2:	d103      	bne.n	80054ac <strncmp+0x1c>
 80054a4:	42a0      	cmp	r0, r4
 80054a6:	d001      	beq.n	80054ac <strncmp+0x1c>
 80054a8:	2a00      	cmp	r2, #0
 80054aa:	d1f5      	bne.n	8005498 <strncmp+0x8>
 80054ac:	1ad0      	subs	r0, r2, r3
 80054ae:	bd10      	pop	{r4, pc}
 80054b0:	4610      	mov	r0, r2
 80054b2:	e7fc      	b.n	80054ae <strncmp+0x1e>

080054b4 <_sbrk_r>:
 80054b4:	b538      	push	{r3, r4, r5, lr}
 80054b6:	4d06      	ldr	r5, [pc, #24]	@ (80054d0 <_sbrk_r+0x1c>)
 80054b8:	2300      	movs	r3, #0
 80054ba:	4604      	mov	r4, r0
 80054bc:	4608      	mov	r0, r1
 80054be:	602b      	str	r3, [r5, #0]
 80054c0:	f7fc fad0 	bl	8001a64 <_sbrk>
 80054c4:	1c43      	adds	r3, r0, #1
 80054c6:	d102      	bne.n	80054ce <_sbrk_r+0x1a>
 80054c8:	682b      	ldr	r3, [r5, #0]
 80054ca:	b103      	cbz	r3, 80054ce <_sbrk_r+0x1a>
 80054cc:	6023      	str	r3, [r4, #0]
 80054ce:	bd38      	pop	{r3, r4, r5, pc}
 80054d0:	20000364 	.word	0x20000364

080054d4 <memcpy>:
 80054d4:	440a      	add	r2, r1
 80054d6:	4291      	cmp	r1, r2
 80054d8:	f100 33ff 	add.w	r3, r0, #4294967295
 80054dc:	d100      	bne.n	80054e0 <memcpy+0xc>
 80054de:	4770      	bx	lr
 80054e0:	b510      	push	{r4, lr}
 80054e2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80054e6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80054ea:	4291      	cmp	r1, r2
 80054ec:	d1f9      	bne.n	80054e2 <memcpy+0xe>
 80054ee:	bd10      	pop	{r4, pc}

080054f0 <nan>:
 80054f0:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 80054f8 <nan+0x8>
 80054f4:	4770      	bx	lr
 80054f6:	bf00      	nop
 80054f8:	00000000 	.word	0x00000000
 80054fc:	7ff80000 	.word	0x7ff80000

08005500 <__assert_func>:
 8005500:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005502:	4614      	mov	r4, r2
 8005504:	461a      	mov	r2, r3
 8005506:	4b09      	ldr	r3, [pc, #36]	@ (800552c <__assert_func+0x2c>)
 8005508:	681b      	ldr	r3, [r3, #0]
 800550a:	4605      	mov	r5, r0
 800550c:	68d8      	ldr	r0, [r3, #12]
 800550e:	b14c      	cbz	r4, 8005524 <__assert_func+0x24>
 8005510:	4b07      	ldr	r3, [pc, #28]	@ (8005530 <__assert_func+0x30>)
 8005512:	9100      	str	r1, [sp, #0]
 8005514:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005518:	4906      	ldr	r1, [pc, #24]	@ (8005534 <__assert_func+0x34>)
 800551a:	462b      	mov	r3, r5
 800551c:	f000 fba8 	bl	8005c70 <fiprintf>
 8005520:	f000 fbb8 	bl	8005c94 <abort>
 8005524:	4b04      	ldr	r3, [pc, #16]	@ (8005538 <__assert_func+0x38>)
 8005526:	461c      	mov	r4, r3
 8005528:	e7f3      	b.n	8005512 <__assert_func+0x12>
 800552a:	bf00      	nop
 800552c:	20000020 	.word	0x20000020
 8005530:	08006342 	.word	0x08006342
 8005534:	0800634f 	.word	0x0800634f
 8005538:	0800637d 	.word	0x0800637d

0800553c <_calloc_r>:
 800553c:	b570      	push	{r4, r5, r6, lr}
 800553e:	fba1 5402 	umull	r5, r4, r1, r2
 8005542:	b934      	cbnz	r4, 8005552 <_calloc_r+0x16>
 8005544:	4629      	mov	r1, r5
 8005546:	f7fe f9cb 	bl	80038e0 <_malloc_r>
 800554a:	4606      	mov	r6, r0
 800554c:	b928      	cbnz	r0, 800555a <_calloc_r+0x1e>
 800554e:	4630      	mov	r0, r6
 8005550:	bd70      	pop	{r4, r5, r6, pc}
 8005552:	220c      	movs	r2, #12
 8005554:	6002      	str	r2, [r0, #0]
 8005556:	2600      	movs	r6, #0
 8005558:	e7f9      	b.n	800554e <_calloc_r+0x12>
 800555a:	462a      	mov	r2, r5
 800555c:	4621      	mov	r1, r4
 800555e:	f7fd fa6a 	bl	8002a36 <memset>
 8005562:	e7f4      	b.n	800554e <_calloc_r+0x12>

08005564 <rshift>:
 8005564:	6903      	ldr	r3, [r0, #16]
 8005566:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800556a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800556e:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005572:	f100 0414 	add.w	r4, r0, #20
 8005576:	dd45      	ble.n	8005604 <rshift+0xa0>
 8005578:	f011 011f 	ands.w	r1, r1, #31
 800557c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005580:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005584:	d10c      	bne.n	80055a0 <rshift+0x3c>
 8005586:	f100 0710 	add.w	r7, r0, #16
 800558a:	4629      	mov	r1, r5
 800558c:	42b1      	cmp	r1, r6
 800558e:	d334      	bcc.n	80055fa <rshift+0x96>
 8005590:	1a9b      	subs	r3, r3, r2
 8005592:	009b      	lsls	r3, r3, #2
 8005594:	1eea      	subs	r2, r5, #3
 8005596:	4296      	cmp	r6, r2
 8005598:	bf38      	it	cc
 800559a:	2300      	movcc	r3, #0
 800559c:	4423      	add	r3, r4
 800559e:	e015      	b.n	80055cc <rshift+0x68>
 80055a0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80055a4:	f1c1 0820 	rsb	r8, r1, #32
 80055a8:	40cf      	lsrs	r7, r1
 80055aa:	f105 0e04 	add.w	lr, r5, #4
 80055ae:	46a1      	mov	r9, r4
 80055b0:	4576      	cmp	r6, lr
 80055b2:	46f4      	mov	ip, lr
 80055b4:	d815      	bhi.n	80055e2 <rshift+0x7e>
 80055b6:	1a9a      	subs	r2, r3, r2
 80055b8:	0092      	lsls	r2, r2, #2
 80055ba:	3a04      	subs	r2, #4
 80055bc:	3501      	adds	r5, #1
 80055be:	42ae      	cmp	r6, r5
 80055c0:	bf38      	it	cc
 80055c2:	2200      	movcc	r2, #0
 80055c4:	18a3      	adds	r3, r4, r2
 80055c6:	50a7      	str	r7, [r4, r2]
 80055c8:	b107      	cbz	r7, 80055cc <rshift+0x68>
 80055ca:	3304      	adds	r3, #4
 80055cc:	1b1a      	subs	r2, r3, r4
 80055ce:	42a3      	cmp	r3, r4
 80055d0:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80055d4:	bf08      	it	eq
 80055d6:	2300      	moveq	r3, #0
 80055d8:	6102      	str	r2, [r0, #16]
 80055da:	bf08      	it	eq
 80055dc:	6143      	streq	r3, [r0, #20]
 80055de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80055e2:	f8dc c000 	ldr.w	ip, [ip]
 80055e6:	fa0c fc08 	lsl.w	ip, ip, r8
 80055ea:	ea4c 0707 	orr.w	r7, ip, r7
 80055ee:	f849 7b04 	str.w	r7, [r9], #4
 80055f2:	f85e 7b04 	ldr.w	r7, [lr], #4
 80055f6:	40cf      	lsrs	r7, r1
 80055f8:	e7da      	b.n	80055b0 <rshift+0x4c>
 80055fa:	f851 cb04 	ldr.w	ip, [r1], #4
 80055fe:	f847 cf04 	str.w	ip, [r7, #4]!
 8005602:	e7c3      	b.n	800558c <rshift+0x28>
 8005604:	4623      	mov	r3, r4
 8005606:	e7e1      	b.n	80055cc <rshift+0x68>

08005608 <__hexdig_fun>:
 8005608:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800560c:	2b09      	cmp	r3, #9
 800560e:	d802      	bhi.n	8005616 <__hexdig_fun+0xe>
 8005610:	3820      	subs	r0, #32
 8005612:	b2c0      	uxtb	r0, r0
 8005614:	4770      	bx	lr
 8005616:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800561a:	2b05      	cmp	r3, #5
 800561c:	d801      	bhi.n	8005622 <__hexdig_fun+0x1a>
 800561e:	3847      	subs	r0, #71	@ 0x47
 8005620:	e7f7      	b.n	8005612 <__hexdig_fun+0xa>
 8005622:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005626:	2b05      	cmp	r3, #5
 8005628:	d801      	bhi.n	800562e <__hexdig_fun+0x26>
 800562a:	3827      	subs	r0, #39	@ 0x27
 800562c:	e7f1      	b.n	8005612 <__hexdig_fun+0xa>
 800562e:	2000      	movs	r0, #0
 8005630:	4770      	bx	lr
	...

08005634 <__gethex>:
 8005634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005638:	b085      	sub	sp, #20
 800563a:	468a      	mov	sl, r1
 800563c:	9302      	str	r3, [sp, #8]
 800563e:	680b      	ldr	r3, [r1, #0]
 8005640:	9001      	str	r0, [sp, #4]
 8005642:	4690      	mov	r8, r2
 8005644:	1c9c      	adds	r4, r3, #2
 8005646:	46a1      	mov	r9, r4
 8005648:	f814 0b01 	ldrb.w	r0, [r4], #1
 800564c:	2830      	cmp	r0, #48	@ 0x30
 800564e:	d0fa      	beq.n	8005646 <__gethex+0x12>
 8005650:	eba9 0303 	sub.w	r3, r9, r3
 8005654:	f1a3 0b02 	sub.w	fp, r3, #2
 8005658:	f7ff ffd6 	bl	8005608 <__hexdig_fun>
 800565c:	4605      	mov	r5, r0
 800565e:	2800      	cmp	r0, #0
 8005660:	d168      	bne.n	8005734 <__gethex+0x100>
 8005662:	49a0      	ldr	r1, [pc, #640]	@ (80058e4 <__gethex+0x2b0>)
 8005664:	2201      	movs	r2, #1
 8005666:	4648      	mov	r0, r9
 8005668:	f7ff ff12 	bl	8005490 <strncmp>
 800566c:	4607      	mov	r7, r0
 800566e:	2800      	cmp	r0, #0
 8005670:	d167      	bne.n	8005742 <__gethex+0x10e>
 8005672:	f899 0001 	ldrb.w	r0, [r9, #1]
 8005676:	4626      	mov	r6, r4
 8005678:	f7ff ffc6 	bl	8005608 <__hexdig_fun>
 800567c:	2800      	cmp	r0, #0
 800567e:	d062      	beq.n	8005746 <__gethex+0x112>
 8005680:	4623      	mov	r3, r4
 8005682:	7818      	ldrb	r0, [r3, #0]
 8005684:	2830      	cmp	r0, #48	@ 0x30
 8005686:	4699      	mov	r9, r3
 8005688:	f103 0301 	add.w	r3, r3, #1
 800568c:	d0f9      	beq.n	8005682 <__gethex+0x4e>
 800568e:	f7ff ffbb 	bl	8005608 <__hexdig_fun>
 8005692:	fab0 f580 	clz	r5, r0
 8005696:	096d      	lsrs	r5, r5, #5
 8005698:	f04f 0b01 	mov.w	fp, #1
 800569c:	464a      	mov	r2, r9
 800569e:	4616      	mov	r6, r2
 80056a0:	3201      	adds	r2, #1
 80056a2:	7830      	ldrb	r0, [r6, #0]
 80056a4:	f7ff ffb0 	bl	8005608 <__hexdig_fun>
 80056a8:	2800      	cmp	r0, #0
 80056aa:	d1f8      	bne.n	800569e <__gethex+0x6a>
 80056ac:	498d      	ldr	r1, [pc, #564]	@ (80058e4 <__gethex+0x2b0>)
 80056ae:	2201      	movs	r2, #1
 80056b0:	4630      	mov	r0, r6
 80056b2:	f7ff feed 	bl	8005490 <strncmp>
 80056b6:	2800      	cmp	r0, #0
 80056b8:	d13f      	bne.n	800573a <__gethex+0x106>
 80056ba:	b944      	cbnz	r4, 80056ce <__gethex+0x9a>
 80056bc:	1c74      	adds	r4, r6, #1
 80056be:	4622      	mov	r2, r4
 80056c0:	4616      	mov	r6, r2
 80056c2:	3201      	adds	r2, #1
 80056c4:	7830      	ldrb	r0, [r6, #0]
 80056c6:	f7ff ff9f 	bl	8005608 <__hexdig_fun>
 80056ca:	2800      	cmp	r0, #0
 80056cc:	d1f8      	bne.n	80056c0 <__gethex+0x8c>
 80056ce:	1ba4      	subs	r4, r4, r6
 80056d0:	00a7      	lsls	r7, r4, #2
 80056d2:	7833      	ldrb	r3, [r6, #0]
 80056d4:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 80056d8:	2b50      	cmp	r3, #80	@ 0x50
 80056da:	d13e      	bne.n	800575a <__gethex+0x126>
 80056dc:	7873      	ldrb	r3, [r6, #1]
 80056de:	2b2b      	cmp	r3, #43	@ 0x2b
 80056e0:	d033      	beq.n	800574a <__gethex+0x116>
 80056e2:	2b2d      	cmp	r3, #45	@ 0x2d
 80056e4:	d034      	beq.n	8005750 <__gethex+0x11c>
 80056e6:	1c71      	adds	r1, r6, #1
 80056e8:	2400      	movs	r4, #0
 80056ea:	7808      	ldrb	r0, [r1, #0]
 80056ec:	f7ff ff8c 	bl	8005608 <__hexdig_fun>
 80056f0:	1e43      	subs	r3, r0, #1
 80056f2:	b2db      	uxtb	r3, r3
 80056f4:	2b18      	cmp	r3, #24
 80056f6:	d830      	bhi.n	800575a <__gethex+0x126>
 80056f8:	f1a0 0210 	sub.w	r2, r0, #16
 80056fc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005700:	f7ff ff82 	bl	8005608 <__hexdig_fun>
 8005704:	f100 3cff 	add.w	ip, r0, #4294967295
 8005708:	fa5f fc8c 	uxtb.w	ip, ip
 800570c:	f1bc 0f18 	cmp.w	ip, #24
 8005710:	f04f 030a 	mov.w	r3, #10
 8005714:	d91e      	bls.n	8005754 <__gethex+0x120>
 8005716:	b104      	cbz	r4, 800571a <__gethex+0xe6>
 8005718:	4252      	negs	r2, r2
 800571a:	4417      	add	r7, r2
 800571c:	f8ca 1000 	str.w	r1, [sl]
 8005720:	b1ed      	cbz	r5, 800575e <__gethex+0x12a>
 8005722:	f1bb 0f00 	cmp.w	fp, #0
 8005726:	bf0c      	ite	eq
 8005728:	2506      	moveq	r5, #6
 800572a:	2500      	movne	r5, #0
 800572c:	4628      	mov	r0, r5
 800572e:	b005      	add	sp, #20
 8005730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005734:	2500      	movs	r5, #0
 8005736:	462c      	mov	r4, r5
 8005738:	e7b0      	b.n	800569c <__gethex+0x68>
 800573a:	2c00      	cmp	r4, #0
 800573c:	d1c7      	bne.n	80056ce <__gethex+0x9a>
 800573e:	4627      	mov	r7, r4
 8005740:	e7c7      	b.n	80056d2 <__gethex+0x9e>
 8005742:	464e      	mov	r6, r9
 8005744:	462f      	mov	r7, r5
 8005746:	2501      	movs	r5, #1
 8005748:	e7c3      	b.n	80056d2 <__gethex+0x9e>
 800574a:	2400      	movs	r4, #0
 800574c:	1cb1      	adds	r1, r6, #2
 800574e:	e7cc      	b.n	80056ea <__gethex+0xb6>
 8005750:	2401      	movs	r4, #1
 8005752:	e7fb      	b.n	800574c <__gethex+0x118>
 8005754:	fb03 0002 	mla	r0, r3, r2, r0
 8005758:	e7ce      	b.n	80056f8 <__gethex+0xc4>
 800575a:	4631      	mov	r1, r6
 800575c:	e7de      	b.n	800571c <__gethex+0xe8>
 800575e:	eba6 0309 	sub.w	r3, r6, r9
 8005762:	3b01      	subs	r3, #1
 8005764:	4629      	mov	r1, r5
 8005766:	2b07      	cmp	r3, #7
 8005768:	dc0a      	bgt.n	8005780 <__gethex+0x14c>
 800576a:	9801      	ldr	r0, [sp, #4]
 800576c:	f7fe f944 	bl	80039f8 <_Balloc>
 8005770:	4604      	mov	r4, r0
 8005772:	b940      	cbnz	r0, 8005786 <__gethex+0x152>
 8005774:	4b5c      	ldr	r3, [pc, #368]	@ (80058e8 <__gethex+0x2b4>)
 8005776:	4602      	mov	r2, r0
 8005778:	21e4      	movs	r1, #228	@ 0xe4
 800577a:	485c      	ldr	r0, [pc, #368]	@ (80058ec <__gethex+0x2b8>)
 800577c:	f7ff fec0 	bl	8005500 <__assert_func>
 8005780:	3101      	adds	r1, #1
 8005782:	105b      	asrs	r3, r3, #1
 8005784:	e7ef      	b.n	8005766 <__gethex+0x132>
 8005786:	f100 0a14 	add.w	sl, r0, #20
 800578a:	2300      	movs	r3, #0
 800578c:	4655      	mov	r5, sl
 800578e:	469b      	mov	fp, r3
 8005790:	45b1      	cmp	r9, r6
 8005792:	d337      	bcc.n	8005804 <__gethex+0x1d0>
 8005794:	f845 bb04 	str.w	fp, [r5], #4
 8005798:	eba5 050a 	sub.w	r5, r5, sl
 800579c:	10ad      	asrs	r5, r5, #2
 800579e:	6125      	str	r5, [r4, #16]
 80057a0:	4658      	mov	r0, fp
 80057a2:	f7fe fa1b 	bl	8003bdc <__hi0bits>
 80057a6:	016d      	lsls	r5, r5, #5
 80057a8:	f8d8 6000 	ldr.w	r6, [r8]
 80057ac:	1a2d      	subs	r5, r5, r0
 80057ae:	42b5      	cmp	r5, r6
 80057b0:	dd54      	ble.n	800585c <__gethex+0x228>
 80057b2:	1bad      	subs	r5, r5, r6
 80057b4:	4629      	mov	r1, r5
 80057b6:	4620      	mov	r0, r4
 80057b8:	f7fe fda7 	bl	800430a <__any_on>
 80057bc:	4681      	mov	r9, r0
 80057be:	b178      	cbz	r0, 80057e0 <__gethex+0x1ac>
 80057c0:	1e6b      	subs	r3, r5, #1
 80057c2:	1159      	asrs	r1, r3, #5
 80057c4:	f003 021f 	and.w	r2, r3, #31
 80057c8:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80057cc:	f04f 0901 	mov.w	r9, #1
 80057d0:	fa09 f202 	lsl.w	r2, r9, r2
 80057d4:	420a      	tst	r2, r1
 80057d6:	d003      	beq.n	80057e0 <__gethex+0x1ac>
 80057d8:	454b      	cmp	r3, r9
 80057da:	dc36      	bgt.n	800584a <__gethex+0x216>
 80057dc:	f04f 0902 	mov.w	r9, #2
 80057e0:	4629      	mov	r1, r5
 80057e2:	4620      	mov	r0, r4
 80057e4:	f7ff febe 	bl	8005564 <rshift>
 80057e8:	442f      	add	r7, r5
 80057ea:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80057ee:	42bb      	cmp	r3, r7
 80057f0:	da42      	bge.n	8005878 <__gethex+0x244>
 80057f2:	9801      	ldr	r0, [sp, #4]
 80057f4:	4621      	mov	r1, r4
 80057f6:	f7fe f93f 	bl	8003a78 <_Bfree>
 80057fa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80057fc:	2300      	movs	r3, #0
 80057fe:	6013      	str	r3, [r2, #0]
 8005800:	25a3      	movs	r5, #163	@ 0xa3
 8005802:	e793      	b.n	800572c <__gethex+0xf8>
 8005804:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005808:	2a2e      	cmp	r2, #46	@ 0x2e
 800580a:	d012      	beq.n	8005832 <__gethex+0x1fe>
 800580c:	2b20      	cmp	r3, #32
 800580e:	d104      	bne.n	800581a <__gethex+0x1e6>
 8005810:	f845 bb04 	str.w	fp, [r5], #4
 8005814:	f04f 0b00 	mov.w	fp, #0
 8005818:	465b      	mov	r3, fp
 800581a:	7830      	ldrb	r0, [r6, #0]
 800581c:	9303      	str	r3, [sp, #12]
 800581e:	f7ff fef3 	bl	8005608 <__hexdig_fun>
 8005822:	9b03      	ldr	r3, [sp, #12]
 8005824:	f000 000f 	and.w	r0, r0, #15
 8005828:	4098      	lsls	r0, r3
 800582a:	ea4b 0b00 	orr.w	fp, fp, r0
 800582e:	3304      	adds	r3, #4
 8005830:	e7ae      	b.n	8005790 <__gethex+0x15c>
 8005832:	45b1      	cmp	r9, r6
 8005834:	d8ea      	bhi.n	800580c <__gethex+0x1d8>
 8005836:	492b      	ldr	r1, [pc, #172]	@ (80058e4 <__gethex+0x2b0>)
 8005838:	9303      	str	r3, [sp, #12]
 800583a:	2201      	movs	r2, #1
 800583c:	4630      	mov	r0, r6
 800583e:	f7ff fe27 	bl	8005490 <strncmp>
 8005842:	9b03      	ldr	r3, [sp, #12]
 8005844:	2800      	cmp	r0, #0
 8005846:	d1e1      	bne.n	800580c <__gethex+0x1d8>
 8005848:	e7a2      	b.n	8005790 <__gethex+0x15c>
 800584a:	1ea9      	subs	r1, r5, #2
 800584c:	4620      	mov	r0, r4
 800584e:	f7fe fd5c 	bl	800430a <__any_on>
 8005852:	2800      	cmp	r0, #0
 8005854:	d0c2      	beq.n	80057dc <__gethex+0x1a8>
 8005856:	f04f 0903 	mov.w	r9, #3
 800585a:	e7c1      	b.n	80057e0 <__gethex+0x1ac>
 800585c:	da09      	bge.n	8005872 <__gethex+0x23e>
 800585e:	1b75      	subs	r5, r6, r5
 8005860:	4621      	mov	r1, r4
 8005862:	9801      	ldr	r0, [sp, #4]
 8005864:	462a      	mov	r2, r5
 8005866:	f7fe fb17 	bl	8003e98 <__lshift>
 800586a:	1b7f      	subs	r7, r7, r5
 800586c:	4604      	mov	r4, r0
 800586e:	f100 0a14 	add.w	sl, r0, #20
 8005872:	f04f 0900 	mov.w	r9, #0
 8005876:	e7b8      	b.n	80057ea <__gethex+0x1b6>
 8005878:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800587c:	42bd      	cmp	r5, r7
 800587e:	dd6f      	ble.n	8005960 <__gethex+0x32c>
 8005880:	1bed      	subs	r5, r5, r7
 8005882:	42ae      	cmp	r6, r5
 8005884:	dc34      	bgt.n	80058f0 <__gethex+0x2bc>
 8005886:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800588a:	2b02      	cmp	r3, #2
 800588c:	d022      	beq.n	80058d4 <__gethex+0x2a0>
 800588e:	2b03      	cmp	r3, #3
 8005890:	d024      	beq.n	80058dc <__gethex+0x2a8>
 8005892:	2b01      	cmp	r3, #1
 8005894:	d115      	bne.n	80058c2 <__gethex+0x28e>
 8005896:	42ae      	cmp	r6, r5
 8005898:	d113      	bne.n	80058c2 <__gethex+0x28e>
 800589a:	2e01      	cmp	r6, #1
 800589c:	d10b      	bne.n	80058b6 <__gethex+0x282>
 800589e:	9a02      	ldr	r2, [sp, #8]
 80058a0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80058a4:	6013      	str	r3, [r2, #0]
 80058a6:	2301      	movs	r3, #1
 80058a8:	6123      	str	r3, [r4, #16]
 80058aa:	f8ca 3000 	str.w	r3, [sl]
 80058ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80058b0:	2562      	movs	r5, #98	@ 0x62
 80058b2:	601c      	str	r4, [r3, #0]
 80058b4:	e73a      	b.n	800572c <__gethex+0xf8>
 80058b6:	1e71      	subs	r1, r6, #1
 80058b8:	4620      	mov	r0, r4
 80058ba:	f7fe fd26 	bl	800430a <__any_on>
 80058be:	2800      	cmp	r0, #0
 80058c0:	d1ed      	bne.n	800589e <__gethex+0x26a>
 80058c2:	9801      	ldr	r0, [sp, #4]
 80058c4:	4621      	mov	r1, r4
 80058c6:	f7fe f8d7 	bl	8003a78 <_Bfree>
 80058ca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80058cc:	2300      	movs	r3, #0
 80058ce:	6013      	str	r3, [r2, #0]
 80058d0:	2550      	movs	r5, #80	@ 0x50
 80058d2:	e72b      	b.n	800572c <__gethex+0xf8>
 80058d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	d1f3      	bne.n	80058c2 <__gethex+0x28e>
 80058da:	e7e0      	b.n	800589e <__gethex+0x26a>
 80058dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d1dd      	bne.n	800589e <__gethex+0x26a>
 80058e2:	e7ee      	b.n	80058c2 <__gethex+0x28e>
 80058e4:	08006327 	.word	0x08006327
 80058e8:	080062bd 	.word	0x080062bd
 80058ec:	0800637e 	.word	0x0800637e
 80058f0:	1e6f      	subs	r7, r5, #1
 80058f2:	f1b9 0f00 	cmp.w	r9, #0
 80058f6:	d130      	bne.n	800595a <__gethex+0x326>
 80058f8:	b127      	cbz	r7, 8005904 <__gethex+0x2d0>
 80058fa:	4639      	mov	r1, r7
 80058fc:	4620      	mov	r0, r4
 80058fe:	f7fe fd04 	bl	800430a <__any_on>
 8005902:	4681      	mov	r9, r0
 8005904:	117a      	asrs	r2, r7, #5
 8005906:	2301      	movs	r3, #1
 8005908:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800590c:	f007 071f 	and.w	r7, r7, #31
 8005910:	40bb      	lsls	r3, r7
 8005912:	4213      	tst	r3, r2
 8005914:	4629      	mov	r1, r5
 8005916:	4620      	mov	r0, r4
 8005918:	bf18      	it	ne
 800591a:	f049 0902 	orrne.w	r9, r9, #2
 800591e:	f7ff fe21 	bl	8005564 <rshift>
 8005922:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8005926:	1b76      	subs	r6, r6, r5
 8005928:	2502      	movs	r5, #2
 800592a:	f1b9 0f00 	cmp.w	r9, #0
 800592e:	d047      	beq.n	80059c0 <__gethex+0x38c>
 8005930:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005934:	2b02      	cmp	r3, #2
 8005936:	d015      	beq.n	8005964 <__gethex+0x330>
 8005938:	2b03      	cmp	r3, #3
 800593a:	d017      	beq.n	800596c <__gethex+0x338>
 800593c:	2b01      	cmp	r3, #1
 800593e:	d109      	bne.n	8005954 <__gethex+0x320>
 8005940:	f019 0f02 	tst.w	r9, #2
 8005944:	d006      	beq.n	8005954 <__gethex+0x320>
 8005946:	f8da 3000 	ldr.w	r3, [sl]
 800594a:	ea49 0903 	orr.w	r9, r9, r3
 800594e:	f019 0f01 	tst.w	r9, #1
 8005952:	d10e      	bne.n	8005972 <__gethex+0x33e>
 8005954:	f045 0510 	orr.w	r5, r5, #16
 8005958:	e032      	b.n	80059c0 <__gethex+0x38c>
 800595a:	f04f 0901 	mov.w	r9, #1
 800595e:	e7d1      	b.n	8005904 <__gethex+0x2d0>
 8005960:	2501      	movs	r5, #1
 8005962:	e7e2      	b.n	800592a <__gethex+0x2f6>
 8005964:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005966:	f1c3 0301 	rsb	r3, r3, #1
 800596a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800596c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800596e:	2b00      	cmp	r3, #0
 8005970:	d0f0      	beq.n	8005954 <__gethex+0x320>
 8005972:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005976:	f104 0314 	add.w	r3, r4, #20
 800597a:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800597e:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8005982:	f04f 0c00 	mov.w	ip, #0
 8005986:	4618      	mov	r0, r3
 8005988:	f853 2b04 	ldr.w	r2, [r3], #4
 800598c:	f1b2 3fff 	cmp.w	r2, #4294967295
 8005990:	d01b      	beq.n	80059ca <__gethex+0x396>
 8005992:	3201      	adds	r2, #1
 8005994:	6002      	str	r2, [r0, #0]
 8005996:	2d02      	cmp	r5, #2
 8005998:	f104 0314 	add.w	r3, r4, #20
 800599c:	d13c      	bne.n	8005a18 <__gethex+0x3e4>
 800599e:	f8d8 2000 	ldr.w	r2, [r8]
 80059a2:	3a01      	subs	r2, #1
 80059a4:	42b2      	cmp	r2, r6
 80059a6:	d109      	bne.n	80059bc <__gethex+0x388>
 80059a8:	1171      	asrs	r1, r6, #5
 80059aa:	2201      	movs	r2, #1
 80059ac:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80059b0:	f006 061f 	and.w	r6, r6, #31
 80059b4:	fa02 f606 	lsl.w	r6, r2, r6
 80059b8:	421e      	tst	r6, r3
 80059ba:	d13a      	bne.n	8005a32 <__gethex+0x3fe>
 80059bc:	f045 0520 	orr.w	r5, r5, #32
 80059c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80059c2:	601c      	str	r4, [r3, #0]
 80059c4:	9b02      	ldr	r3, [sp, #8]
 80059c6:	601f      	str	r7, [r3, #0]
 80059c8:	e6b0      	b.n	800572c <__gethex+0xf8>
 80059ca:	4299      	cmp	r1, r3
 80059cc:	f843 cc04 	str.w	ip, [r3, #-4]
 80059d0:	d8d9      	bhi.n	8005986 <__gethex+0x352>
 80059d2:	68a3      	ldr	r3, [r4, #8]
 80059d4:	459b      	cmp	fp, r3
 80059d6:	db17      	blt.n	8005a08 <__gethex+0x3d4>
 80059d8:	6861      	ldr	r1, [r4, #4]
 80059da:	9801      	ldr	r0, [sp, #4]
 80059dc:	3101      	adds	r1, #1
 80059de:	f7fe f80b 	bl	80039f8 <_Balloc>
 80059e2:	4681      	mov	r9, r0
 80059e4:	b918      	cbnz	r0, 80059ee <__gethex+0x3ba>
 80059e6:	4b1a      	ldr	r3, [pc, #104]	@ (8005a50 <__gethex+0x41c>)
 80059e8:	4602      	mov	r2, r0
 80059ea:	2184      	movs	r1, #132	@ 0x84
 80059ec:	e6c5      	b.n	800577a <__gethex+0x146>
 80059ee:	6922      	ldr	r2, [r4, #16]
 80059f0:	3202      	adds	r2, #2
 80059f2:	f104 010c 	add.w	r1, r4, #12
 80059f6:	0092      	lsls	r2, r2, #2
 80059f8:	300c      	adds	r0, #12
 80059fa:	f7ff fd6b 	bl	80054d4 <memcpy>
 80059fe:	4621      	mov	r1, r4
 8005a00:	9801      	ldr	r0, [sp, #4]
 8005a02:	f7fe f839 	bl	8003a78 <_Bfree>
 8005a06:	464c      	mov	r4, r9
 8005a08:	6923      	ldr	r3, [r4, #16]
 8005a0a:	1c5a      	adds	r2, r3, #1
 8005a0c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005a10:	6122      	str	r2, [r4, #16]
 8005a12:	2201      	movs	r2, #1
 8005a14:	615a      	str	r2, [r3, #20]
 8005a16:	e7be      	b.n	8005996 <__gethex+0x362>
 8005a18:	6922      	ldr	r2, [r4, #16]
 8005a1a:	455a      	cmp	r2, fp
 8005a1c:	dd0b      	ble.n	8005a36 <__gethex+0x402>
 8005a1e:	2101      	movs	r1, #1
 8005a20:	4620      	mov	r0, r4
 8005a22:	f7ff fd9f 	bl	8005564 <rshift>
 8005a26:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005a2a:	3701      	adds	r7, #1
 8005a2c:	42bb      	cmp	r3, r7
 8005a2e:	f6ff aee0 	blt.w	80057f2 <__gethex+0x1be>
 8005a32:	2501      	movs	r5, #1
 8005a34:	e7c2      	b.n	80059bc <__gethex+0x388>
 8005a36:	f016 061f 	ands.w	r6, r6, #31
 8005a3a:	d0fa      	beq.n	8005a32 <__gethex+0x3fe>
 8005a3c:	4453      	add	r3, sl
 8005a3e:	f1c6 0620 	rsb	r6, r6, #32
 8005a42:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8005a46:	f7fe f8c9 	bl	8003bdc <__hi0bits>
 8005a4a:	42b0      	cmp	r0, r6
 8005a4c:	dbe7      	blt.n	8005a1e <__gethex+0x3ea>
 8005a4e:	e7f0      	b.n	8005a32 <__gethex+0x3fe>
 8005a50:	080062bd 	.word	0x080062bd

08005a54 <L_shift>:
 8005a54:	f1c2 0208 	rsb	r2, r2, #8
 8005a58:	0092      	lsls	r2, r2, #2
 8005a5a:	b570      	push	{r4, r5, r6, lr}
 8005a5c:	f1c2 0620 	rsb	r6, r2, #32
 8005a60:	6843      	ldr	r3, [r0, #4]
 8005a62:	6804      	ldr	r4, [r0, #0]
 8005a64:	fa03 f506 	lsl.w	r5, r3, r6
 8005a68:	432c      	orrs	r4, r5
 8005a6a:	40d3      	lsrs	r3, r2
 8005a6c:	6004      	str	r4, [r0, #0]
 8005a6e:	f840 3f04 	str.w	r3, [r0, #4]!
 8005a72:	4288      	cmp	r0, r1
 8005a74:	d3f4      	bcc.n	8005a60 <L_shift+0xc>
 8005a76:	bd70      	pop	{r4, r5, r6, pc}

08005a78 <__match>:
 8005a78:	b530      	push	{r4, r5, lr}
 8005a7a:	6803      	ldr	r3, [r0, #0]
 8005a7c:	3301      	adds	r3, #1
 8005a7e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005a82:	b914      	cbnz	r4, 8005a8a <__match+0x12>
 8005a84:	6003      	str	r3, [r0, #0]
 8005a86:	2001      	movs	r0, #1
 8005a88:	bd30      	pop	{r4, r5, pc}
 8005a8a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005a8e:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 8005a92:	2d19      	cmp	r5, #25
 8005a94:	bf98      	it	ls
 8005a96:	3220      	addls	r2, #32
 8005a98:	42a2      	cmp	r2, r4
 8005a9a:	d0f0      	beq.n	8005a7e <__match+0x6>
 8005a9c:	2000      	movs	r0, #0
 8005a9e:	e7f3      	b.n	8005a88 <__match+0x10>

08005aa0 <__hexnan>:
 8005aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005aa4:	680b      	ldr	r3, [r1, #0]
 8005aa6:	6801      	ldr	r1, [r0, #0]
 8005aa8:	115e      	asrs	r6, r3, #5
 8005aaa:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005aae:	f013 031f 	ands.w	r3, r3, #31
 8005ab2:	b087      	sub	sp, #28
 8005ab4:	bf18      	it	ne
 8005ab6:	3604      	addne	r6, #4
 8005ab8:	2500      	movs	r5, #0
 8005aba:	1f37      	subs	r7, r6, #4
 8005abc:	4682      	mov	sl, r0
 8005abe:	4690      	mov	r8, r2
 8005ac0:	9301      	str	r3, [sp, #4]
 8005ac2:	f846 5c04 	str.w	r5, [r6, #-4]
 8005ac6:	46b9      	mov	r9, r7
 8005ac8:	463c      	mov	r4, r7
 8005aca:	9502      	str	r5, [sp, #8]
 8005acc:	46ab      	mov	fp, r5
 8005ace:	784a      	ldrb	r2, [r1, #1]
 8005ad0:	1c4b      	adds	r3, r1, #1
 8005ad2:	9303      	str	r3, [sp, #12]
 8005ad4:	b342      	cbz	r2, 8005b28 <__hexnan+0x88>
 8005ad6:	4610      	mov	r0, r2
 8005ad8:	9105      	str	r1, [sp, #20]
 8005ada:	9204      	str	r2, [sp, #16]
 8005adc:	f7ff fd94 	bl	8005608 <__hexdig_fun>
 8005ae0:	2800      	cmp	r0, #0
 8005ae2:	d151      	bne.n	8005b88 <__hexnan+0xe8>
 8005ae4:	9a04      	ldr	r2, [sp, #16]
 8005ae6:	9905      	ldr	r1, [sp, #20]
 8005ae8:	2a20      	cmp	r2, #32
 8005aea:	d818      	bhi.n	8005b1e <__hexnan+0x7e>
 8005aec:	9b02      	ldr	r3, [sp, #8]
 8005aee:	459b      	cmp	fp, r3
 8005af0:	dd13      	ble.n	8005b1a <__hexnan+0x7a>
 8005af2:	454c      	cmp	r4, r9
 8005af4:	d206      	bcs.n	8005b04 <__hexnan+0x64>
 8005af6:	2d07      	cmp	r5, #7
 8005af8:	dc04      	bgt.n	8005b04 <__hexnan+0x64>
 8005afa:	462a      	mov	r2, r5
 8005afc:	4649      	mov	r1, r9
 8005afe:	4620      	mov	r0, r4
 8005b00:	f7ff ffa8 	bl	8005a54 <L_shift>
 8005b04:	4544      	cmp	r4, r8
 8005b06:	d952      	bls.n	8005bae <__hexnan+0x10e>
 8005b08:	2300      	movs	r3, #0
 8005b0a:	f1a4 0904 	sub.w	r9, r4, #4
 8005b0e:	f844 3c04 	str.w	r3, [r4, #-4]
 8005b12:	f8cd b008 	str.w	fp, [sp, #8]
 8005b16:	464c      	mov	r4, r9
 8005b18:	461d      	mov	r5, r3
 8005b1a:	9903      	ldr	r1, [sp, #12]
 8005b1c:	e7d7      	b.n	8005ace <__hexnan+0x2e>
 8005b1e:	2a29      	cmp	r2, #41	@ 0x29
 8005b20:	d157      	bne.n	8005bd2 <__hexnan+0x132>
 8005b22:	3102      	adds	r1, #2
 8005b24:	f8ca 1000 	str.w	r1, [sl]
 8005b28:	f1bb 0f00 	cmp.w	fp, #0
 8005b2c:	d051      	beq.n	8005bd2 <__hexnan+0x132>
 8005b2e:	454c      	cmp	r4, r9
 8005b30:	d206      	bcs.n	8005b40 <__hexnan+0xa0>
 8005b32:	2d07      	cmp	r5, #7
 8005b34:	dc04      	bgt.n	8005b40 <__hexnan+0xa0>
 8005b36:	462a      	mov	r2, r5
 8005b38:	4649      	mov	r1, r9
 8005b3a:	4620      	mov	r0, r4
 8005b3c:	f7ff ff8a 	bl	8005a54 <L_shift>
 8005b40:	4544      	cmp	r4, r8
 8005b42:	d936      	bls.n	8005bb2 <__hexnan+0x112>
 8005b44:	f1a8 0204 	sub.w	r2, r8, #4
 8005b48:	4623      	mov	r3, r4
 8005b4a:	f853 1b04 	ldr.w	r1, [r3], #4
 8005b4e:	f842 1f04 	str.w	r1, [r2, #4]!
 8005b52:	429f      	cmp	r7, r3
 8005b54:	d2f9      	bcs.n	8005b4a <__hexnan+0xaa>
 8005b56:	1b3b      	subs	r3, r7, r4
 8005b58:	f023 0303 	bic.w	r3, r3, #3
 8005b5c:	3304      	adds	r3, #4
 8005b5e:	3401      	adds	r4, #1
 8005b60:	3e03      	subs	r6, #3
 8005b62:	42b4      	cmp	r4, r6
 8005b64:	bf88      	it	hi
 8005b66:	2304      	movhi	r3, #4
 8005b68:	4443      	add	r3, r8
 8005b6a:	2200      	movs	r2, #0
 8005b6c:	f843 2b04 	str.w	r2, [r3], #4
 8005b70:	429f      	cmp	r7, r3
 8005b72:	d2fb      	bcs.n	8005b6c <__hexnan+0xcc>
 8005b74:	683b      	ldr	r3, [r7, #0]
 8005b76:	b91b      	cbnz	r3, 8005b80 <__hexnan+0xe0>
 8005b78:	4547      	cmp	r7, r8
 8005b7a:	d128      	bne.n	8005bce <__hexnan+0x12e>
 8005b7c:	2301      	movs	r3, #1
 8005b7e:	603b      	str	r3, [r7, #0]
 8005b80:	2005      	movs	r0, #5
 8005b82:	b007      	add	sp, #28
 8005b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b88:	3501      	adds	r5, #1
 8005b8a:	2d08      	cmp	r5, #8
 8005b8c:	f10b 0b01 	add.w	fp, fp, #1
 8005b90:	dd06      	ble.n	8005ba0 <__hexnan+0x100>
 8005b92:	4544      	cmp	r4, r8
 8005b94:	d9c1      	bls.n	8005b1a <__hexnan+0x7a>
 8005b96:	2300      	movs	r3, #0
 8005b98:	f844 3c04 	str.w	r3, [r4, #-4]
 8005b9c:	2501      	movs	r5, #1
 8005b9e:	3c04      	subs	r4, #4
 8005ba0:	6822      	ldr	r2, [r4, #0]
 8005ba2:	f000 000f 	and.w	r0, r0, #15
 8005ba6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005baa:	6020      	str	r0, [r4, #0]
 8005bac:	e7b5      	b.n	8005b1a <__hexnan+0x7a>
 8005bae:	2508      	movs	r5, #8
 8005bb0:	e7b3      	b.n	8005b1a <__hexnan+0x7a>
 8005bb2:	9b01      	ldr	r3, [sp, #4]
 8005bb4:	2b00      	cmp	r3, #0
 8005bb6:	d0dd      	beq.n	8005b74 <__hexnan+0xd4>
 8005bb8:	f1c3 0320 	rsb	r3, r3, #32
 8005bbc:	f04f 32ff 	mov.w	r2, #4294967295
 8005bc0:	40da      	lsrs	r2, r3
 8005bc2:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8005bc6:	4013      	ands	r3, r2
 8005bc8:	f846 3c04 	str.w	r3, [r6, #-4]
 8005bcc:	e7d2      	b.n	8005b74 <__hexnan+0xd4>
 8005bce:	3f04      	subs	r7, #4
 8005bd0:	e7d0      	b.n	8005b74 <__hexnan+0xd4>
 8005bd2:	2004      	movs	r0, #4
 8005bd4:	e7d5      	b.n	8005b82 <__hexnan+0xe2>

08005bd6 <__ascii_mbtowc>:
 8005bd6:	b082      	sub	sp, #8
 8005bd8:	b901      	cbnz	r1, 8005bdc <__ascii_mbtowc+0x6>
 8005bda:	a901      	add	r1, sp, #4
 8005bdc:	b142      	cbz	r2, 8005bf0 <__ascii_mbtowc+0x1a>
 8005bde:	b14b      	cbz	r3, 8005bf4 <__ascii_mbtowc+0x1e>
 8005be0:	7813      	ldrb	r3, [r2, #0]
 8005be2:	600b      	str	r3, [r1, #0]
 8005be4:	7812      	ldrb	r2, [r2, #0]
 8005be6:	1e10      	subs	r0, r2, #0
 8005be8:	bf18      	it	ne
 8005bea:	2001      	movne	r0, #1
 8005bec:	b002      	add	sp, #8
 8005bee:	4770      	bx	lr
 8005bf0:	4610      	mov	r0, r2
 8005bf2:	e7fb      	b.n	8005bec <__ascii_mbtowc+0x16>
 8005bf4:	f06f 0001 	mvn.w	r0, #1
 8005bf8:	e7f8      	b.n	8005bec <__ascii_mbtowc+0x16>

08005bfa <_realloc_r>:
 8005bfa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005bfe:	4607      	mov	r7, r0
 8005c00:	4614      	mov	r4, r2
 8005c02:	460d      	mov	r5, r1
 8005c04:	b921      	cbnz	r1, 8005c10 <_realloc_r+0x16>
 8005c06:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005c0a:	4611      	mov	r1, r2
 8005c0c:	f7fd be68 	b.w	80038e0 <_malloc_r>
 8005c10:	b92a      	cbnz	r2, 8005c1e <_realloc_r+0x24>
 8005c12:	f7fd fdf1 	bl	80037f8 <_free_r>
 8005c16:	4625      	mov	r5, r4
 8005c18:	4628      	mov	r0, r5
 8005c1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005c1e:	f000 f840 	bl	8005ca2 <_malloc_usable_size_r>
 8005c22:	4284      	cmp	r4, r0
 8005c24:	4606      	mov	r6, r0
 8005c26:	d802      	bhi.n	8005c2e <_realloc_r+0x34>
 8005c28:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8005c2c:	d8f4      	bhi.n	8005c18 <_realloc_r+0x1e>
 8005c2e:	4621      	mov	r1, r4
 8005c30:	4638      	mov	r0, r7
 8005c32:	f7fd fe55 	bl	80038e0 <_malloc_r>
 8005c36:	4680      	mov	r8, r0
 8005c38:	b908      	cbnz	r0, 8005c3e <_realloc_r+0x44>
 8005c3a:	4645      	mov	r5, r8
 8005c3c:	e7ec      	b.n	8005c18 <_realloc_r+0x1e>
 8005c3e:	42b4      	cmp	r4, r6
 8005c40:	4622      	mov	r2, r4
 8005c42:	4629      	mov	r1, r5
 8005c44:	bf28      	it	cs
 8005c46:	4632      	movcs	r2, r6
 8005c48:	f7ff fc44 	bl	80054d4 <memcpy>
 8005c4c:	4629      	mov	r1, r5
 8005c4e:	4638      	mov	r0, r7
 8005c50:	f7fd fdd2 	bl	80037f8 <_free_r>
 8005c54:	e7f1      	b.n	8005c3a <_realloc_r+0x40>

08005c56 <__ascii_wctomb>:
 8005c56:	4603      	mov	r3, r0
 8005c58:	4608      	mov	r0, r1
 8005c5a:	b141      	cbz	r1, 8005c6e <__ascii_wctomb+0x18>
 8005c5c:	2aff      	cmp	r2, #255	@ 0xff
 8005c5e:	d904      	bls.n	8005c6a <__ascii_wctomb+0x14>
 8005c60:	228a      	movs	r2, #138	@ 0x8a
 8005c62:	601a      	str	r2, [r3, #0]
 8005c64:	f04f 30ff 	mov.w	r0, #4294967295
 8005c68:	4770      	bx	lr
 8005c6a:	700a      	strb	r2, [r1, #0]
 8005c6c:	2001      	movs	r0, #1
 8005c6e:	4770      	bx	lr

08005c70 <fiprintf>:
 8005c70:	b40e      	push	{r1, r2, r3}
 8005c72:	b503      	push	{r0, r1, lr}
 8005c74:	4601      	mov	r1, r0
 8005c76:	ab03      	add	r3, sp, #12
 8005c78:	4805      	ldr	r0, [pc, #20]	@ (8005c90 <fiprintf+0x20>)
 8005c7a:	f853 2b04 	ldr.w	r2, [r3], #4
 8005c7e:	6800      	ldr	r0, [r0, #0]
 8005c80:	9301      	str	r3, [sp, #4]
 8005c82:	f000 f83f 	bl	8005d04 <_vfiprintf_r>
 8005c86:	b002      	add	sp, #8
 8005c88:	f85d eb04 	ldr.w	lr, [sp], #4
 8005c8c:	b003      	add	sp, #12
 8005c8e:	4770      	bx	lr
 8005c90:	20000020 	.word	0x20000020

08005c94 <abort>:
 8005c94:	b508      	push	{r3, lr}
 8005c96:	2006      	movs	r0, #6
 8005c98:	f000 fa08 	bl	80060ac <raise>
 8005c9c:	2001      	movs	r0, #1
 8005c9e:	f7fb fe69 	bl	8001974 <_exit>

08005ca2 <_malloc_usable_size_r>:
 8005ca2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005ca6:	1f18      	subs	r0, r3, #4
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	bfbc      	itt	lt
 8005cac:	580b      	ldrlt	r3, [r1, r0]
 8005cae:	18c0      	addlt	r0, r0, r3
 8005cb0:	4770      	bx	lr

08005cb2 <__sfputc_r>:
 8005cb2:	6893      	ldr	r3, [r2, #8]
 8005cb4:	3b01      	subs	r3, #1
 8005cb6:	2b00      	cmp	r3, #0
 8005cb8:	b410      	push	{r4}
 8005cba:	6093      	str	r3, [r2, #8]
 8005cbc:	da08      	bge.n	8005cd0 <__sfputc_r+0x1e>
 8005cbe:	6994      	ldr	r4, [r2, #24]
 8005cc0:	42a3      	cmp	r3, r4
 8005cc2:	db01      	blt.n	8005cc8 <__sfputc_r+0x16>
 8005cc4:	290a      	cmp	r1, #10
 8005cc6:	d103      	bne.n	8005cd0 <__sfputc_r+0x1e>
 8005cc8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005ccc:	f000 b932 	b.w	8005f34 <__swbuf_r>
 8005cd0:	6813      	ldr	r3, [r2, #0]
 8005cd2:	1c58      	adds	r0, r3, #1
 8005cd4:	6010      	str	r0, [r2, #0]
 8005cd6:	7019      	strb	r1, [r3, #0]
 8005cd8:	4608      	mov	r0, r1
 8005cda:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005cde:	4770      	bx	lr

08005ce0 <__sfputs_r>:
 8005ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ce2:	4606      	mov	r6, r0
 8005ce4:	460f      	mov	r7, r1
 8005ce6:	4614      	mov	r4, r2
 8005ce8:	18d5      	adds	r5, r2, r3
 8005cea:	42ac      	cmp	r4, r5
 8005cec:	d101      	bne.n	8005cf2 <__sfputs_r+0x12>
 8005cee:	2000      	movs	r0, #0
 8005cf0:	e007      	b.n	8005d02 <__sfputs_r+0x22>
 8005cf2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005cf6:	463a      	mov	r2, r7
 8005cf8:	4630      	mov	r0, r6
 8005cfa:	f7ff ffda 	bl	8005cb2 <__sfputc_r>
 8005cfe:	1c43      	adds	r3, r0, #1
 8005d00:	d1f3      	bne.n	8005cea <__sfputs_r+0xa>
 8005d02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005d04 <_vfiprintf_r>:
 8005d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d08:	460d      	mov	r5, r1
 8005d0a:	b09d      	sub	sp, #116	@ 0x74
 8005d0c:	4614      	mov	r4, r2
 8005d0e:	4698      	mov	r8, r3
 8005d10:	4606      	mov	r6, r0
 8005d12:	b118      	cbz	r0, 8005d1c <_vfiprintf_r+0x18>
 8005d14:	6a03      	ldr	r3, [r0, #32]
 8005d16:	b90b      	cbnz	r3, 8005d1c <_vfiprintf_r+0x18>
 8005d18:	f7fc fdf2 	bl	8002900 <__sinit>
 8005d1c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005d1e:	07d9      	lsls	r1, r3, #31
 8005d20:	d405      	bmi.n	8005d2e <_vfiprintf_r+0x2a>
 8005d22:	89ab      	ldrh	r3, [r5, #12]
 8005d24:	059a      	lsls	r2, r3, #22
 8005d26:	d402      	bmi.n	8005d2e <_vfiprintf_r+0x2a>
 8005d28:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005d2a:	f7fc ff02 	bl	8002b32 <__retarget_lock_acquire_recursive>
 8005d2e:	89ab      	ldrh	r3, [r5, #12]
 8005d30:	071b      	lsls	r3, r3, #28
 8005d32:	d501      	bpl.n	8005d38 <_vfiprintf_r+0x34>
 8005d34:	692b      	ldr	r3, [r5, #16]
 8005d36:	b99b      	cbnz	r3, 8005d60 <_vfiprintf_r+0x5c>
 8005d38:	4629      	mov	r1, r5
 8005d3a:	4630      	mov	r0, r6
 8005d3c:	f000 f938 	bl	8005fb0 <__swsetup_r>
 8005d40:	b170      	cbz	r0, 8005d60 <_vfiprintf_r+0x5c>
 8005d42:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005d44:	07dc      	lsls	r4, r3, #31
 8005d46:	d504      	bpl.n	8005d52 <_vfiprintf_r+0x4e>
 8005d48:	f04f 30ff 	mov.w	r0, #4294967295
 8005d4c:	b01d      	add	sp, #116	@ 0x74
 8005d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d52:	89ab      	ldrh	r3, [r5, #12]
 8005d54:	0598      	lsls	r0, r3, #22
 8005d56:	d4f7      	bmi.n	8005d48 <_vfiprintf_r+0x44>
 8005d58:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005d5a:	f7fc feeb 	bl	8002b34 <__retarget_lock_release_recursive>
 8005d5e:	e7f3      	b.n	8005d48 <_vfiprintf_r+0x44>
 8005d60:	2300      	movs	r3, #0
 8005d62:	9309      	str	r3, [sp, #36]	@ 0x24
 8005d64:	2320      	movs	r3, #32
 8005d66:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005d6a:	f8cd 800c 	str.w	r8, [sp, #12]
 8005d6e:	2330      	movs	r3, #48	@ 0x30
 8005d70:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8005f20 <_vfiprintf_r+0x21c>
 8005d74:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005d78:	f04f 0901 	mov.w	r9, #1
 8005d7c:	4623      	mov	r3, r4
 8005d7e:	469a      	mov	sl, r3
 8005d80:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005d84:	b10a      	cbz	r2, 8005d8a <_vfiprintf_r+0x86>
 8005d86:	2a25      	cmp	r2, #37	@ 0x25
 8005d88:	d1f9      	bne.n	8005d7e <_vfiprintf_r+0x7a>
 8005d8a:	ebba 0b04 	subs.w	fp, sl, r4
 8005d8e:	d00b      	beq.n	8005da8 <_vfiprintf_r+0xa4>
 8005d90:	465b      	mov	r3, fp
 8005d92:	4622      	mov	r2, r4
 8005d94:	4629      	mov	r1, r5
 8005d96:	4630      	mov	r0, r6
 8005d98:	f7ff ffa2 	bl	8005ce0 <__sfputs_r>
 8005d9c:	3001      	adds	r0, #1
 8005d9e:	f000 80a7 	beq.w	8005ef0 <_vfiprintf_r+0x1ec>
 8005da2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005da4:	445a      	add	r2, fp
 8005da6:	9209      	str	r2, [sp, #36]	@ 0x24
 8005da8:	f89a 3000 	ldrb.w	r3, [sl]
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	f000 809f 	beq.w	8005ef0 <_vfiprintf_r+0x1ec>
 8005db2:	2300      	movs	r3, #0
 8005db4:	f04f 32ff 	mov.w	r2, #4294967295
 8005db8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005dbc:	f10a 0a01 	add.w	sl, sl, #1
 8005dc0:	9304      	str	r3, [sp, #16]
 8005dc2:	9307      	str	r3, [sp, #28]
 8005dc4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005dc8:	931a      	str	r3, [sp, #104]	@ 0x68
 8005dca:	4654      	mov	r4, sl
 8005dcc:	2205      	movs	r2, #5
 8005dce:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005dd2:	4853      	ldr	r0, [pc, #332]	@ (8005f20 <_vfiprintf_r+0x21c>)
 8005dd4:	f7fa f9fc 	bl	80001d0 <memchr>
 8005dd8:	9a04      	ldr	r2, [sp, #16]
 8005dda:	b9d8      	cbnz	r0, 8005e14 <_vfiprintf_r+0x110>
 8005ddc:	06d1      	lsls	r1, r2, #27
 8005dde:	bf44      	itt	mi
 8005de0:	2320      	movmi	r3, #32
 8005de2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005de6:	0713      	lsls	r3, r2, #28
 8005de8:	bf44      	itt	mi
 8005dea:	232b      	movmi	r3, #43	@ 0x2b
 8005dec:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005df0:	f89a 3000 	ldrb.w	r3, [sl]
 8005df4:	2b2a      	cmp	r3, #42	@ 0x2a
 8005df6:	d015      	beq.n	8005e24 <_vfiprintf_r+0x120>
 8005df8:	9a07      	ldr	r2, [sp, #28]
 8005dfa:	4654      	mov	r4, sl
 8005dfc:	2000      	movs	r0, #0
 8005dfe:	f04f 0c0a 	mov.w	ip, #10
 8005e02:	4621      	mov	r1, r4
 8005e04:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005e08:	3b30      	subs	r3, #48	@ 0x30
 8005e0a:	2b09      	cmp	r3, #9
 8005e0c:	d94b      	bls.n	8005ea6 <_vfiprintf_r+0x1a2>
 8005e0e:	b1b0      	cbz	r0, 8005e3e <_vfiprintf_r+0x13a>
 8005e10:	9207      	str	r2, [sp, #28]
 8005e12:	e014      	b.n	8005e3e <_vfiprintf_r+0x13a>
 8005e14:	eba0 0308 	sub.w	r3, r0, r8
 8005e18:	fa09 f303 	lsl.w	r3, r9, r3
 8005e1c:	4313      	orrs	r3, r2
 8005e1e:	9304      	str	r3, [sp, #16]
 8005e20:	46a2      	mov	sl, r4
 8005e22:	e7d2      	b.n	8005dca <_vfiprintf_r+0xc6>
 8005e24:	9b03      	ldr	r3, [sp, #12]
 8005e26:	1d19      	adds	r1, r3, #4
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	9103      	str	r1, [sp, #12]
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	bfbb      	ittet	lt
 8005e30:	425b      	neglt	r3, r3
 8005e32:	f042 0202 	orrlt.w	r2, r2, #2
 8005e36:	9307      	strge	r3, [sp, #28]
 8005e38:	9307      	strlt	r3, [sp, #28]
 8005e3a:	bfb8      	it	lt
 8005e3c:	9204      	strlt	r2, [sp, #16]
 8005e3e:	7823      	ldrb	r3, [r4, #0]
 8005e40:	2b2e      	cmp	r3, #46	@ 0x2e
 8005e42:	d10a      	bne.n	8005e5a <_vfiprintf_r+0x156>
 8005e44:	7863      	ldrb	r3, [r4, #1]
 8005e46:	2b2a      	cmp	r3, #42	@ 0x2a
 8005e48:	d132      	bne.n	8005eb0 <_vfiprintf_r+0x1ac>
 8005e4a:	9b03      	ldr	r3, [sp, #12]
 8005e4c:	1d1a      	adds	r2, r3, #4
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	9203      	str	r2, [sp, #12]
 8005e52:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005e56:	3402      	adds	r4, #2
 8005e58:	9305      	str	r3, [sp, #20]
 8005e5a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8005f30 <_vfiprintf_r+0x22c>
 8005e5e:	7821      	ldrb	r1, [r4, #0]
 8005e60:	2203      	movs	r2, #3
 8005e62:	4650      	mov	r0, sl
 8005e64:	f7fa f9b4 	bl	80001d0 <memchr>
 8005e68:	b138      	cbz	r0, 8005e7a <_vfiprintf_r+0x176>
 8005e6a:	9b04      	ldr	r3, [sp, #16]
 8005e6c:	eba0 000a 	sub.w	r0, r0, sl
 8005e70:	2240      	movs	r2, #64	@ 0x40
 8005e72:	4082      	lsls	r2, r0
 8005e74:	4313      	orrs	r3, r2
 8005e76:	3401      	adds	r4, #1
 8005e78:	9304      	str	r3, [sp, #16]
 8005e7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005e7e:	4829      	ldr	r0, [pc, #164]	@ (8005f24 <_vfiprintf_r+0x220>)
 8005e80:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005e84:	2206      	movs	r2, #6
 8005e86:	f7fa f9a3 	bl	80001d0 <memchr>
 8005e8a:	2800      	cmp	r0, #0
 8005e8c:	d03f      	beq.n	8005f0e <_vfiprintf_r+0x20a>
 8005e8e:	4b26      	ldr	r3, [pc, #152]	@ (8005f28 <_vfiprintf_r+0x224>)
 8005e90:	bb1b      	cbnz	r3, 8005eda <_vfiprintf_r+0x1d6>
 8005e92:	9b03      	ldr	r3, [sp, #12]
 8005e94:	3307      	adds	r3, #7
 8005e96:	f023 0307 	bic.w	r3, r3, #7
 8005e9a:	3308      	adds	r3, #8
 8005e9c:	9303      	str	r3, [sp, #12]
 8005e9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005ea0:	443b      	add	r3, r7
 8005ea2:	9309      	str	r3, [sp, #36]	@ 0x24
 8005ea4:	e76a      	b.n	8005d7c <_vfiprintf_r+0x78>
 8005ea6:	fb0c 3202 	mla	r2, ip, r2, r3
 8005eaa:	460c      	mov	r4, r1
 8005eac:	2001      	movs	r0, #1
 8005eae:	e7a8      	b.n	8005e02 <_vfiprintf_r+0xfe>
 8005eb0:	2300      	movs	r3, #0
 8005eb2:	3401      	adds	r4, #1
 8005eb4:	9305      	str	r3, [sp, #20]
 8005eb6:	4619      	mov	r1, r3
 8005eb8:	f04f 0c0a 	mov.w	ip, #10
 8005ebc:	4620      	mov	r0, r4
 8005ebe:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005ec2:	3a30      	subs	r2, #48	@ 0x30
 8005ec4:	2a09      	cmp	r2, #9
 8005ec6:	d903      	bls.n	8005ed0 <_vfiprintf_r+0x1cc>
 8005ec8:	2b00      	cmp	r3, #0
 8005eca:	d0c6      	beq.n	8005e5a <_vfiprintf_r+0x156>
 8005ecc:	9105      	str	r1, [sp, #20]
 8005ece:	e7c4      	b.n	8005e5a <_vfiprintf_r+0x156>
 8005ed0:	fb0c 2101 	mla	r1, ip, r1, r2
 8005ed4:	4604      	mov	r4, r0
 8005ed6:	2301      	movs	r3, #1
 8005ed8:	e7f0      	b.n	8005ebc <_vfiprintf_r+0x1b8>
 8005eda:	ab03      	add	r3, sp, #12
 8005edc:	9300      	str	r3, [sp, #0]
 8005ede:	462a      	mov	r2, r5
 8005ee0:	4b12      	ldr	r3, [pc, #72]	@ (8005f2c <_vfiprintf_r+0x228>)
 8005ee2:	a904      	add	r1, sp, #16
 8005ee4:	4630      	mov	r0, r6
 8005ee6:	f7fb febb 	bl	8001c60 <_printf_float>
 8005eea:	4607      	mov	r7, r0
 8005eec:	1c78      	adds	r0, r7, #1
 8005eee:	d1d6      	bne.n	8005e9e <_vfiprintf_r+0x19a>
 8005ef0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005ef2:	07d9      	lsls	r1, r3, #31
 8005ef4:	d405      	bmi.n	8005f02 <_vfiprintf_r+0x1fe>
 8005ef6:	89ab      	ldrh	r3, [r5, #12]
 8005ef8:	059a      	lsls	r2, r3, #22
 8005efa:	d402      	bmi.n	8005f02 <_vfiprintf_r+0x1fe>
 8005efc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005efe:	f7fc fe19 	bl	8002b34 <__retarget_lock_release_recursive>
 8005f02:	89ab      	ldrh	r3, [r5, #12]
 8005f04:	065b      	lsls	r3, r3, #25
 8005f06:	f53f af1f 	bmi.w	8005d48 <_vfiprintf_r+0x44>
 8005f0a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005f0c:	e71e      	b.n	8005d4c <_vfiprintf_r+0x48>
 8005f0e:	ab03      	add	r3, sp, #12
 8005f10:	9300      	str	r3, [sp, #0]
 8005f12:	462a      	mov	r2, r5
 8005f14:	4b05      	ldr	r3, [pc, #20]	@ (8005f2c <_vfiprintf_r+0x228>)
 8005f16:	a904      	add	r1, sp, #16
 8005f18:	4630      	mov	r0, r6
 8005f1a:	f7fc f939 	bl	8002190 <_printf_i>
 8005f1e:	e7e4      	b.n	8005eea <_vfiprintf_r+0x1e6>
 8005f20:	08006329 	.word	0x08006329
 8005f24:	08006333 	.word	0x08006333
 8005f28:	08001c61 	.word	0x08001c61
 8005f2c:	08005ce1 	.word	0x08005ce1
 8005f30:	0800632f 	.word	0x0800632f

08005f34 <__swbuf_r>:
 8005f34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f36:	460e      	mov	r6, r1
 8005f38:	4614      	mov	r4, r2
 8005f3a:	4605      	mov	r5, r0
 8005f3c:	b118      	cbz	r0, 8005f46 <__swbuf_r+0x12>
 8005f3e:	6a03      	ldr	r3, [r0, #32]
 8005f40:	b90b      	cbnz	r3, 8005f46 <__swbuf_r+0x12>
 8005f42:	f7fc fcdd 	bl	8002900 <__sinit>
 8005f46:	69a3      	ldr	r3, [r4, #24]
 8005f48:	60a3      	str	r3, [r4, #8]
 8005f4a:	89a3      	ldrh	r3, [r4, #12]
 8005f4c:	071a      	lsls	r2, r3, #28
 8005f4e:	d501      	bpl.n	8005f54 <__swbuf_r+0x20>
 8005f50:	6923      	ldr	r3, [r4, #16]
 8005f52:	b943      	cbnz	r3, 8005f66 <__swbuf_r+0x32>
 8005f54:	4621      	mov	r1, r4
 8005f56:	4628      	mov	r0, r5
 8005f58:	f000 f82a 	bl	8005fb0 <__swsetup_r>
 8005f5c:	b118      	cbz	r0, 8005f66 <__swbuf_r+0x32>
 8005f5e:	f04f 37ff 	mov.w	r7, #4294967295
 8005f62:	4638      	mov	r0, r7
 8005f64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f66:	6823      	ldr	r3, [r4, #0]
 8005f68:	6922      	ldr	r2, [r4, #16]
 8005f6a:	1a98      	subs	r0, r3, r2
 8005f6c:	6963      	ldr	r3, [r4, #20]
 8005f6e:	b2f6      	uxtb	r6, r6
 8005f70:	4283      	cmp	r3, r0
 8005f72:	4637      	mov	r7, r6
 8005f74:	dc05      	bgt.n	8005f82 <__swbuf_r+0x4e>
 8005f76:	4621      	mov	r1, r4
 8005f78:	4628      	mov	r0, r5
 8005f7a:	f7ff fa47 	bl	800540c <_fflush_r>
 8005f7e:	2800      	cmp	r0, #0
 8005f80:	d1ed      	bne.n	8005f5e <__swbuf_r+0x2a>
 8005f82:	68a3      	ldr	r3, [r4, #8]
 8005f84:	3b01      	subs	r3, #1
 8005f86:	60a3      	str	r3, [r4, #8]
 8005f88:	6823      	ldr	r3, [r4, #0]
 8005f8a:	1c5a      	adds	r2, r3, #1
 8005f8c:	6022      	str	r2, [r4, #0]
 8005f8e:	701e      	strb	r6, [r3, #0]
 8005f90:	6962      	ldr	r2, [r4, #20]
 8005f92:	1c43      	adds	r3, r0, #1
 8005f94:	429a      	cmp	r2, r3
 8005f96:	d004      	beq.n	8005fa2 <__swbuf_r+0x6e>
 8005f98:	89a3      	ldrh	r3, [r4, #12]
 8005f9a:	07db      	lsls	r3, r3, #31
 8005f9c:	d5e1      	bpl.n	8005f62 <__swbuf_r+0x2e>
 8005f9e:	2e0a      	cmp	r6, #10
 8005fa0:	d1df      	bne.n	8005f62 <__swbuf_r+0x2e>
 8005fa2:	4621      	mov	r1, r4
 8005fa4:	4628      	mov	r0, r5
 8005fa6:	f7ff fa31 	bl	800540c <_fflush_r>
 8005faa:	2800      	cmp	r0, #0
 8005fac:	d0d9      	beq.n	8005f62 <__swbuf_r+0x2e>
 8005fae:	e7d6      	b.n	8005f5e <__swbuf_r+0x2a>

08005fb0 <__swsetup_r>:
 8005fb0:	b538      	push	{r3, r4, r5, lr}
 8005fb2:	4b29      	ldr	r3, [pc, #164]	@ (8006058 <__swsetup_r+0xa8>)
 8005fb4:	4605      	mov	r5, r0
 8005fb6:	6818      	ldr	r0, [r3, #0]
 8005fb8:	460c      	mov	r4, r1
 8005fba:	b118      	cbz	r0, 8005fc4 <__swsetup_r+0x14>
 8005fbc:	6a03      	ldr	r3, [r0, #32]
 8005fbe:	b90b      	cbnz	r3, 8005fc4 <__swsetup_r+0x14>
 8005fc0:	f7fc fc9e 	bl	8002900 <__sinit>
 8005fc4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005fc8:	0719      	lsls	r1, r3, #28
 8005fca:	d422      	bmi.n	8006012 <__swsetup_r+0x62>
 8005fcc:	06da      	lsls	r2, r3, #27
 8005fce:	d407      	bmi.n	8005fe0 <__swsetup_r+0x30>
 8005fd0:	2209      	movs	r2, #9
 8005fd2:	602a      	str	r2, [r5, #0]
 8005fd4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005fd8:	81a3      	strh	r3, [r4, #12]
 8005fda:	f04f 30ff 	mov.w	r0, #4294967295
 8005fde:	e033      	b.n	8006048 <__swsetup_r+0x98>
 8005fe0:	0758      	lsls	r0, r3, #29
 8005fe2:	d512      	bpl.n	800600a <__swsetup_r+0x5a>
 8005fe4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005fe6:	b141      	cbz	r1, 8005ffa <__swsetup_r+0x4a>
 8005fe8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005fec:	4299      	cmp	r1, r3
 8005fee:	d002      	beq.n	8005ff6 <__swsetup_r+0x46>
 8005ff0:	4628      	mov	r0, r5
 8005ff2:	f7fd fc01 	bl	80037f8 <_free_r>
 8005ff6:	2300      	movs	r3, #0
 8005ff8:	6363      	str	r3, [r4, #52]	@ 0x34
 8005ffa:	89a3      	ldrh	r3, [r4, #12]
 8005ffc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006000:	81a3      	strh	r3, [r4, #12]
 8006002:	2300      	movs	r3, #0
 8006004:	6063      	str	r3, [r4, #4]
 8006006:	6923      	ldr	r3, [r4, #16]
 8006008:	6023      	str	r3, [r4, #0]
 800600a:	89a3      	ldrh	r3, [r4, #12]
 800600c:	f043 0308 	orr.w	r3, r3, #8
 8006010:	81a3      	strh	r3, [r4, #12]
 8006012:	6923      	ldr	r3, [r4, #16]
 8006014:	b94b      	cbnz	r3, 800602a <__swsetup_r+0x7a>
 8006016:	89a3      	ldrh	r3, [r4, #12]
 8006018:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800601c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006020:	d003      	beq.n	800602a <__swsetup_r+0x7a>
 8006022:	4621      	mov	r1, r4
 8006024:	4628      	mov	r0, r5
 8006026:	f000 f883 	bl	8006130 <__smakebuf_r>
 800602a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800602e:	f013 0201 	ands.w	r2, r3, #1
 8006032:	d00a      	beq.n	800604a <__swsetup_r+0x9a>
 8006034:	2200      	movs	r2, #0
 8006036:	60a2      	str	r2, [r4, #8]
 8006038:	6962      	ldr	r2, [r4, #20]
 800603a:	4252      	negs	r2, r2
 800603c:	61a2      	str	r2, [r4, #24]
 800603e:	6922      	ldr	r2, [r4, #16]
 8006040:	b942      	cbnz	r2, 8006054 <__swsetup_r+0xa4>
 8006042:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006046:	d1c5      	bne.n	8005fd4 <__swsetup_r+0x24>
 8006048:	bd38      	pop	{r3, r4, r5, pc}
 800604a:	0799      	lsls	r1, r3, #30
 800604c:	bf58      	it	pl
 800604e:	6962      	ldrpl	r2, [r4, #20]
 8006050:	60a2      	str	r2, [r4, #8]
 8006052:	e7f4      	b.n	800603e <__swsetup_r+0x8e>
 8006054:	2000      	movs	r0, #0
 8006056:	e7f7      	b.n	8006048 <__swsetup_r+0x98>
 8006058:	20000020 	.word	0x20000020

0800605c <_raise_r>:
 800605c:	291f      	cmp	r1, #31
 800605e:	b538      	push	{r3, r4, r5, lr}
 8006060:	4605      	mov	r5, r0
 8006062:	460c      	mov	r4, r1
 8006064:	d904      	bls.n	8006070 <_raise_r+0x14>
 8006066:	2316      	movs	r3, #22
 8006068:	6003      	str	r3, [r0, #0]
 800606a:	f04f 30ff 	mov.w	r0, #4294967295
 800606e:	bd38      	pop	{r3, r4, r5, pc}
 8006070:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006072:	b112      	cbz	r2, 800607a <_raise_r+0x1e>
 8006074:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006078:	b94b      	cbnz	r3, 800608e <_raise_r+0x32>
 800607a:	4628      	mov	r0, r5
 800607c:	f000 f830 	bl	80060e0 <_getpid_r>
 8006080:	4622      	mov	r2, r4
 8006082:	4601      	mov	r1, r0
 8006084:	4628      	mov	r0, r5
 8006086:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800608a:	f000 b817 	b.w	80060bc <_kill_r>
 800608e:	2b01      	cmp	r3, #1
 8006090:	d00a      	beq.n	80060a8 <_raise_r+0x4c>
 8006092:	1c59      	adds	r1, r3, #1
 8006094:	d103      	bne.n	800609e <_raise_r+0x42>
 8006096:	2316      	movs	r3, #22
 8006098:	6003      	str	r3, [r0, #0]
 800609a:	2001      	movs	r0, #1
 800609c:	e7e7      	b.n	800606e <_raise_r+0x12>
 800609e:	2100      	movs	r1, #0
 80060a0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80060a4:	4620      	mov	r0, r4
 80060a6:	4798      	blx	r3
 80060a8:	2000      	movs	r0, #0
 80060aa:	e7e0      	b.n	800606e <_raise_r+0x12>

080060ac <raise>:
 80060ac:	4b02      	ldr	r3, [pc, #8]	@ (80060b8 <raise+0xc>)
 80060ae:	4601      	mov	r1, r0
 80060b0:	6818      	ldr	r0, [r3, #0]
 80060b2:	f7ff bfd3 	b.w	800605c <_raise_r>
 80060b6:	bf00      	nop
 80060b8:	20000020 	.word	0x20000020

080060bc <_kill_r>:
 80060bc:	b538      	push	{r3, r4, r5, lr}
 80060be:	4d07      	ldr	r5, [pc, #28]	@ (80060dc <_kill_r+0x20>)
 80060c0:	2300      	movs	r3, #0
 80060c2:	4604      	mov	r4, r0
 80060c4:	4608      	mov	r0, r1
 80060c6:	4611      	mov	r1, r2
 80060c8:	602b      	str	r3, [r5, #0]
 80060ca:	f7fb fc43 	bl	8001954 <_kill>
 80060ce:	1c43      	adds	r3, r0, #1
 80060d0:	d102      	bne.n	80060d8 <_kill_r+0x1c>
 80060d2:	682b      	ldr	r3, [r5, #0]
 80060d4:	b103      	cbz	r3, 80060d8 <_kill_r+0x1c>
 80060d6:	6023      	str	r3, [r4, #0]
 80060d8:	bd38      	pop	{r3, r4, r5, pc}
 80060da:	bf00      	nop
 80060dc:	20000364 	.word	0x20000364

080060e0 <_getpid_r>:
 80060e0:	f7fb bc30 	b.w	8001944 <_getpid>

080060e4 <__swhatbuf_r>:
 80060e4:	b570      	push	{r4, r5, r6, lr}
 80060e6:	460c      	mov	r4, r1
 80060e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80060ec:	2900      	cmp	r1, #0
 80060ee:	b096      	sub	sp, #88	@ 0x58
 80060f0:	4615      	mov	r5, r2
 80060f2:	461e      	mov	r6, r3
 80060f4:	da0d      	bge.n	8006112 <__swhatbuf_r+0x2e>
 80060f6:	89a3      	ldrh	r3, [r4, #12]
 80060f8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80060fc:	f04f 0100 	mov.w	r1, #0
 8006100:	bf14      	ite	ne
 8006102:	2340      	movne	r3, #64	@ 0x40
 8006104:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006108:	2000      	movs	r0, #0
 800610a:	6031      	str	r1, [r6, #0]
 800610c:	602b      	str	r3, [r5, #0]
 800610e:	b016      	add	sp, #88	@ 0x58
 8006110:	bd70      	pop	{r4, r5, r6, pc}
 8006112:	466a      	mov	r2, sp
 8006114:	f000 f848 	bl	80061a8 <_fstat_r>
 8006118:	2800      	cmp	r0, #0
 800611a:	dbec      	blt.n	80060f6 <__swhatbuf_r+0x12>
 800611c:	9901      	ldr	r1, [sp, #4]
 800611e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006122:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006126:	4259      	negs	r1, r3
 8006128:	4159      	adcs	r1, r3
 800612a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800612e:	e7eb      	b.n	8006108 <__swhatbuf_r+0x24>

08006130 <__smakebuf_r>:
 8006130:	898b      	ldrh	r3, [r1, #12]
 8006132:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006134:	079d      	lsls	r5, r3, #30
 8006136:	4606      	mov	r6, r0
 8006138:	460c      	mov	r4, r1
 800613a:	d507      	bpl.n	800614c <__smakebuf_r+0x1c>
 800613c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006140:	6023      	str	r3, [r4, #0]
 8006142:	6123      	str	r3, [r4, #16]
 8006144:	2301      	movs	r3, #1
 8006146:	6163      	str	r3, [r4, #20]
 8006148:	b003      	add	sp, #12
 800614a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800614c:	ab01      	add	r3, sp, #4
 800614e:	466a      	mov	r2, sp
 8006150:	f7ff ffc8 	bl	80060e4 <__swhatbuf_r>
 8006154:	9f00      	ldr	r7, [sp, #0]
 8006156:	4605      	mov	r5, r0
 8006158:	4639      	mov	r1, r7
 800615a:	4630      	mov	r0, r6
 800615c:	f7fd fbc0 	bl	80038e0 <_malloc_r>
 8006160:	b948      	cbnz	r0, 8006176 <__smakebuf_r+0x46>
 8006162:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006166:	059a      	lsls	r2, r3, #22
 8006168:	d4ee      	bmi.n	8006148 <__smakebuf_r+0x18>
 800616a:	f023 0303 	bic.w	r3, r3, #3
 800616e:	f043 0302 	orr.w	r3, r3, #2
 8006172:	81a3      	strh	r3, [r4, #12]
 8006174:	e7e2      	b.n	800613c <__smakebuf_r+0xc>
 8006176:	89a3      	ldrh	r3, [r4, #12]
 8006178:	6020      	str	r0, [r4, #0]
 800617a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800617e:	81a3      	strh	r3, [r4, #12]
 8006180:	9b01      	ldr	r3, [sp, #4]
 8006182:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8006186:	b15b      	cbz	r3, 80061a0 <__smakebuf_r+0x70>
 8006188:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800618c:	4630      	mov	r0, r6
 800618e:	f000 f81d 	bl	80061cc <_isatty_r>
 8006192:	b128      	cbz	r0, 80061a0 <__smakebuf_r+0x70>
 8006194:	89a3      	ldrh	r3, [r4, #12]
 8006196:	f023 0303 	bic.w	r3, r3, #3
 800619a:	f043 0301 	orr.w	r3, r3, #1
 800619e:	81a3      	strh	r3, [r4, #12]
 80061a0:	89a3      	ldrh	r3, [r4, #12]
 80061a2:	431d      	orrs	r5, r3
 80061a4:	81a5      	strh	r5, [r4, #12]
 80061a6:	e7cf      	b.n	8006148 <__smakebuf_r+0x18>

080061a8 <_fstat_r>:
 80061a8:	b538      	push	{r3, r4, r5, lr}
 80061aa:	4d07      	ldr	r5, [pc, #28]	@ (80061c8 <_fstat_r+0x20>)
 80061ac:	2300      	movs	r3, #0
 80061ae:	4604      	mov	r4, r0
 80061b0:	4608      	mov	r0, r1
 80061b2:	4611      	mov	r1, r2
 80061b4:	602b      	str	r3, [r5, #0]
 80061b6:	f7fb fc2d 	bl	8001a14 <_fstat>
 80061ba:	1c43      	adds	r3, r0, #1
 80061bc:	d102      	bne.n	80061c4 <_fstat_r+0x1c>
 80061be:	682b      	ldr	r3, [r5, #0]
 80061c0:	b103      	cbz	r3, 80061c4 <_fstat_r+0x1c>
 80061c2:	6023      	str	r3, [r4, #0]
 80061c4:	bd38      	pop	{r3, r4, r5, pc}
 80061c6:	bf00      	nop
 80061c8:	20000364 	.word	0x20000364

080061cc <_isatty_r>:
 80061cc:	b538      	push	{r3, r4, r5, lr}
 80061ce:	4d06      	ldr	r5, [pc, #24]	@ (80061e8 <_isatty_r+0x1c>)
 80061d0:	2300      	movs	r3, #0
 80061d2:	4604      	mov	r4, r0
 80061d4:	4608      	mov	r0, r1
 80061d6:	602b      	str	r3, [r5, #0]
 80061d8:	f7fb fc2c 	bl	8001a34 <_isatty>
 80061dc:	1c43      	adds	r3, r0, #1
 80061de:	d102      	bne.n	80061e6 <_isatty_r+0x1a>
 80061e0:	682b      	ldr	r3, [r5, #0]
 80061e2:	b103      	cbz	r3, 80061e6 <_isatty_r+0x1a>
 80061e4:	6023      	str	r3, [r4, #0]
 80061e6:	bd38      	pop	{r3, r4, r5, pc}
 80061e8:	20000364 	.word	0x20000364

080061ec <_init>:
 80061ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061ee:	bf00      	nop
 80061f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80061f2:	bc08      	pop	{r3}
 80061f4:	469e      	mov	lr, r3
 80061f6:	4770      	bx	lr

080061f8 <_fini>:
 80061f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061fa:	bf00      	nop
 80061fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80061fe:	bc08      	pop	{r3}
 8006200:	469e      	mov	lr, r3
 8006202:	4770      	bx	lr
