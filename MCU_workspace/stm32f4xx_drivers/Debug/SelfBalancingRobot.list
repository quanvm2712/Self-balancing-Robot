
SelfBalancingRobot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006694  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000042c  08006828  08006828  00007828  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006c54  08006c54  000081cc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08006c54  08006c54  00007c54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006c5c  08006c5c  000081cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006c5c  08006c5c  00007c5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08006c60  08006c60  00007c60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001cc  20000000  08006c64  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000081cc  2**0
                  CONTENTS
 10 .bss          00000170  200001cc  200001cc  000081cc  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000033c  2000033c  000081cc  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000081cc  2**0
                  CONTENTS, READONLY
 13 .debug_info   000024a2  00000000  00000000  000081f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000099d  00000000  00000000  0000a698  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000002f8  00000000  00000000  0000b038  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000221  00000000  00000000  0000b330  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000042eb  00000000  00000000  0000b551  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000437e  00000000  00000000  0000f83c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000f457  00000000  00000000  00013bba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00023011  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001fb8  00000000  00000000  00023054  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000069  00000000  00000000  0002500c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001cc 	.word	0x200001cc
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800680c 	.word	0x0800680c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001d0 	.word	0x200001d0
 80001cc:	0800680c 	.word	0x0800680c

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_d2lz>:
 8000c88:	b538      	push	{r3, r4, r5, lr}
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	4604      	mov	r4, r0
 8000c90:	460d      	mov	r5, r1
 8000c92:	f7ff ff23 	bl	8000adc <__aeabi_dcmplt>
 8000c96:	b928      	cbnz	r0, 8000ca4 <__aeabi_d2lz+0x1c>
 8000c98:	4620      	mov	r0, r4
 8000c9a:	4629      	mov	r1, r5
 8000c9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ca0:	f000 b80a 	b.w	8000cb8 <__aeabi_d2ulz>
 8000ca4:	4620      	mov	r0, r4
 8000ca6:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000caa:	f000 f805 	bl	8000cb8 <__aeabi_d2ulz>
 8000cae:	4240      	negs	r0, r0
 8000cb0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cb4:	bd38      	pop	{r3, r4, r5, pc}
 8000cb6:	bf00      	nop

08000cb8 <__aeabi_d2ulz>:
 8000cb8:	b5d0      	push	{r4, r6, r7, lr}
 8000cba:	4b0c      	ldr	r3, [pc, #48]	@ (8000cec <__aeabi_d2ulz+0x34>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	4606      	mov	r6, r0
 8000cc0:	460f      	mov	r7, r1
 8000cc2:	f7ff fc99 	bl	80005f8 <__aeabi_dmul>
 8000cc6:	f7ff ff6f 	bl	8000ba8 <__aeabi_d2uiz>
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f7ff fc1a 	bl	8000504 <__aeabi_ui2d>
 8000cd0:	4b07      	ldr	r3, [pc, #28]	@ (8000cf0 <__aeabi_d2ulz+0x38>)
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	f7ff fc90 	bl	80005f8 <__aeabi_dmul>
 8000cd8:	4602      	mov	r2, r0
 8000cda:	460b      	mov	r3, r1
 8000cdc:	4630      	mov	r0, r6
 8000cde:	4639      	mov	r1, r7
 8000ce0:	f7ff fad2 	bl	8000288 <__aeabi_dsub>
 8000ce4:	f7ff ff60 	bl	8000ba8 <__aeabi_d2uiz>
 8000ce8:	4621      	mov	r1, r4
 8000cea:	bdd0      	pop	{r4, r6, r7, pc}
 8000cec:	3df00000 	.word	0x3df00000
 8000cf0:	41f00000 	.word	0x41f00000

08000cf4 <main>:
//
//
//  return 0;
//}

int main(void){
 8000cf4:	b580      	push	{r7, lr}
 8000cf6:	af00      	add	r7, sp, #0
  SysTick_Init();
 8000cf8:	f000 f91e 	bl	8000f38 <SysTick_Init>

//  Motor_ConfigDirectionGPIO();
  Motor_Init();
 8000cfc:	f001 f98d 	bl	800201a <Motor_Init>
//      Motor_Move(MOTOR_LEFT, MOTOR_DIR_STOP);
//      Delay_ms(5000);
//      Motor_Move(MOTOR_LEFT, MOTOR_DIR_BACKWARD);
//      Delay_ms(3000);

      Motor_Control(MOTOR_LEFT, 999);
 8000d00:	f240 31e7 	movw	r1, #999	@ 0x3e7
 8000d04:	2000      	movs	r0, #0
 8000d06:	f001 f9e9 	bl	80020dc <Motor_Control>
      Delay_ms(2000);
 8000d0a:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8000d0e:	f000 f945 	bl	8000f9c <Delay_ms>
      Motor_Control(MOTOR_LEFT, 999);
 8000d12:	bf00      	nop
 8000d14:	e7f4      	b.n	8000d00 <main+0xc>

08000d16 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000d16:	b480      	push	{r7}
 8000d18:	af00      	add	r7, sp, #0
  return 1;
 8000d1a:	2301      	movs	r3, #1
}
 8000d1c:	4618      	mov	r0, r3
 8000d1e:	46bd      	mov	sp, r7
 8000d20:	bc80      	pop	{r7}
 8000d22:	4770      	bx	lr

08000d24 <_kill>:

int _kill(int pid, int sig)
{
 8000d24:	b580      	push	{r7, lr}
 8000d26:	b082      	sub	sp, #8
 8000d28:	af00      	add	r7, sp, #0
 8000d2a:	6078      	str	r0, [r7, #4]
 8000d2c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000d2e:	f002 fa05 	bl	800313c <__errno>
 8000d32:	4603      	mov	r3, r0
 8000d34:	2216      	movs	r2, #22
 8000d36:	601a      	str	r2, [r3, #0]
  return -1;
 8000d38:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	3708      	adds	r7, #8
 8000d40:	46bd      	mov	sp, r7
 8000d42:	bd80      	pop	{r7, pc}

08000d44 <_exit>:

void _exit (int status)
{
 8000d44:	b580      	push	{r7, lr}
 8000d46:	b082      	sub	sp, #8
 8000d48:	af00      	add	r7, sp, #0
 8000d4a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000d4c:	f04f 31ff 	mov.w	r1, #4294967295
 8000d50:	6878      	ldr	r0, [r7, #4]
 8000d52:	f7ff ffe7 	bl	8000d24 <_kill>
  while (1) {}    /* Make sure we hang here */
 8000d56:	bf00      	nop
 8000d58:	e7fd      	b.n	8000d56 <_exit+0x12>

08000d5a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000d5a:	b580      	push	{r7, lr}
 8000d5c:	b086      	sub	sp, #24
 8000d5e:	af00      	add	r7, sp, #0
 8000d60:	60f8      	str	r0, [r7, #12]
 8000d62:	60b9      	str	r1, [r7, #8]
 8000d64:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000d66:	2300      	movs	r3, #0
 8000d68:	617b      	str	r3, [r7, #20]
 8000d6a:	e00a      	b.n	8000d82 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000d6c:	f3af 8000 	nop.w
 8000d70:	4601      	mov	r1, r0
 8000d72:	68bb      	ldr	r3, [r7, #8]
 8000d74:	1c5a      	adds	r2, r3, #1
 8000d76:	60ba      	str	r2, [r7, #8]
 8000d78:	b2ca      	uxtb	r2, r1
 8000d7a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000d7c:	697b      	ldr	r3, [r7, #20]
 8000d7e:	3301      	adds	r3, #1
 8000d80:	617b      	str	r3, [r7, #20]
 8000d82:	697a      	ldr	r2, [r7, #20]
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	429a      	cmp	r2, r3
 8000d88:	dbf0      	blt.n	8000d6c <_read+0x12>
  }

  return len;
 8000d8a:	687b      	ldr	r3, [r7, #4]
}
 8000d8c:	4618      	mov	r0, r3
 8000d8e:	3718      	adds	r7, #24
 8000d90:	46bd      	mov	sp, r7
 8000d92:	bd80      	pop	{r7, pc}

08000d94 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000d94:	b580      	push	{r7, lr}
 8000d96:	b086      	sub	sp, #24
 8000d98:	af00      	add	r7, sp, #0
 8000d9a:	60f8      	str	r0, [r7, #12]
 8000d9c:	60b9      	str	r1, [r7, #8]
 8000d9e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000da0:	2300      	movs	r3, #0
 8000da2:	617b      	str	r3, [r7, #20]
 8000da4:	e009      	b.n	8000dba <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000da6:	68bb      	ldr	r3, [r7, #8]
 8000da8:	1c5a      	adds	r2, r3, #1
 8000daa:	60ba      	str	r2, [r7, #8]
 8000dac:	781b      	ldrb	r3, [r3, #0]
 8000dae:	4618      	mov	r0, r3
 8000db0:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000db4:	697b      	ldr	r3, [r7, #20]
 8000db6:	3301      	adds	r3, #1
 8000db8:	617b      	str	r3, [r7, #20]
 8000dba:	697a      	ldr	r2, [r7, #20]
 8000dbc:	687b      	ldr	r3, [r7, #4]
 8000dbe:	429a      	cmp	r2, r3
 8000dc0:	dbf1      	blt.n	8000da6 <_write+0x12>
  }
  return len;
 8000dc2:	687b      	ldr	r3, [r7, #4]
}
 8000dc4:	4618      	mov	r0, r3
 8000dc6:	3718      	adds	r7, #24
 8000dc8:	46bd      	mov	sp, r7
 8000dca:	bd80      	pop	{r7, pc}

08000dcc <_close>:

int _close(int file)
{
 8000dcc:	b480      	push	{r7}
 8000dce:	b083      	sub	sp, #12
 8000dd0:	af00      	add	r7, sp, #0
 8000dd2:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000dd4:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000dd8:	4618      	mov	r0, r3
 8000dda:	370c      	adds	r7, #12
 8000ddc:	46bd      	mov	sp, r7
 8000dde:	bc80      	pop	{r7}
 8000de0:	4770      	bx	lr

08000de2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000de2:	b480      	push	{r7}
 8000de4:	b083      	sub	sp, #12
 8000de6:	af00      	add	r7, sp, #0
 8000de8:	6078      	str	r0, [r7, #4]
 8000dea:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000dec:	683b      	ldr	r3, [r7, #0]
 8000dee:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000df2:	605a      	str	r2, [r3, #4]
  return 0;
 8000df4:	2300      	movs	r3, #0
}
 8000df6:	4618      	mov	r0, r3
 8000df8:	370c      	adds	r7, #12
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	bc80      	pop	{r7}
 8000dfe:	4770      	bx	lr

08000e00 <_isatty>:

int _isatty(int file)
{
 8000e00:	b480      	push	{r7}
 8000e02:	b083      	sub	sp, #12
 8000e04:	af00      	add	r7, sp, #0
 8000e06:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000e08:	2301      	movs	r3, #1
}
 8000e0a:	4618      	mov	r0, r3
 8000e0c:	370c      	adds	r7, #12
 8000e0e:	46bd      	mov	sp, r7
 8000e10:	bc80      	pop	{r7}
 8000e12:	4770      	bx	lr

08000e14 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000e14:	b480      	push	{r7}
 8000e16:	b085      	sub	sp, #20
 8000e18:	af00      	add	r7, sp, #0
 8000e1a:	60f8      	str	r0, [r7, #12]
 8000e1c:	60b9      	str	r1, [r7, #8]
 8000e1e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000e20:	2300      	movs	r3, #0
}
 8000e22:	4618      	mov	r0, r3
 8000e24:	3714      	adds	r7, #20
 8000e26:	46bd      	mov	sp, r7
 8000e28:	bc80      	pop	{r7}
 8000e2a:	4770      	bx	lr

08000e2c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000e2c:	b580      	push	{r7, lr}
 8000e2e:	b086      	sub	sp, #24
 8000e30:	af00      	add	r7, sp, #0
 8000e32:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000e34:	4a14      	ldr	r2, [pc, #80]	@ (8000e88 <_sbrk+0x5c>)
 8000e36:	4b15      	ldr	r3, [pc, #84]	@ (8000e8c <_sbrk+0x60>)
 8000e38:	1ad3      	subs	r3, r2, r3
 8000e3a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000e3c:	697b      	ldr	r3, [r7, #20]
 8000e3e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000e40:	4b13      	ldr	r3, [pc, #76]	@ (8000e90 <_sbrk+0x64>)
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	2b00      	cmp	r3, #0
 8000e46:	d102      	bne.n	8000e4e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000e48:	4b11      	ldr	r3, [pc, #68]	@ (8000e90 <_sbrk+0x64>)
 8000e4a:	4a12      	ldr	r2, [pc, #72]	@ (8000e94 <_sbrk+0x68>)
 8000e4c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000e4e:	4b10      	ldr	r3, [pc, #64]	@ (8000e90 <_sbrk+0x64>)
 8000e50:	681a      	ldr	r2, [r3, #0]
 8000e52:	687b      	ldr	r3, [r7, #4]
 8000e54:	4413      	add	r3, r2
 8000e56:	693a      	ldr	r2, [r7, #16]
 8000e58:	429a      	cmp	r2, r3
 8000e5a:	d207      	bcs.n	8000e6c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000e5c:	f002 f96e 	bl	800313c <__errno>
 8000e60:	4603      	mov	r3, r0
 8000e62:	220c      	movs	r2, #12
 8000e64:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000e66:	f04f 33ff 	mov.w	r3, #4294967295
 8000e6a:	e009      	b.n	8000e80 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000e6c:	4b08      	ldr	r3, [pc, #32]	@ (8000e90 <_sbrk+0x64>)
 8000e6e:	681b      	ldr	r3, [r3, #0]
 8000e70:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000e72:	4b07      	ldr	r3, [pc, #28]	@ (8000e90 <_sbrk+0x64>)
 8000e74:	681a      	ldr	r2, [r3, #0]
 8000e76:	687b      	ldr	r3, [r7, #4]
 8000e78:	4413      	add	r3, r2
 8000e7a:	4a05      	ldr	r2, [pc, #20]	@ (8000e90 <_sbrk+0x64>)
 8000e7c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000e7e:	68fb      	ldr	r3, [r7, #12]
}
 8000e80:	4618      	mov	r0, r3
 8000e82:	3718      	adds	r7, #24
 8000e84:	46bd      	mov	sp, r7
 8000e86:	bd80      	pop	{r7, pc}
 8000e88:	20020000 	.word	0x20020000
 8000e8c:	00000400 	.word	0x00000400
 8000e90:	200001e8 	.word	0x200001e8
 8000e94:	20000340 	.word	0x20000340

08000e98 <SysTick_SetReloadValue>:
/**
 * @brief Set the SysTick reload value.
 * @param ReloadValue: The value to load into the STK_LOAD register (max 0x00FFFFFF).
 * @retval None
 */
void SysTick_SetReloadValue(uint32_t ReloadValue){
 8000e98:	b480      	push	{r7}
 8000e9a:	b083      	sub	sp, #12
 8000e9c:	af00      	add	r7, sp, #0
 8000e9e:	6078      	str	r0, [r7, #4]
	SYSTICK->STK_LOAD = ReloadValue;
 8000ea0:	4a03      	ldr	r2, [pc, #12]	@ (8000eb0 <SysTick_SetReloadValue+0x18>)
 8000ea2:	687b      	ldr	r3, [r7, #4]
 8000ea4:	6053      	str	r3, [r2, #4]
}
 8000ea6:	bf00      	nop
 8000ea8:	370c      	adds	r7, #12
 8000eaa:	46bd      	mov	sp, r7
 8000eac:	bc80      	pop	{r7}
 8000eae:	4770      	bx	lr
 8000eb0:	e000e010 	.word	0xe000e010

08000eb4 <SysTick_EnableCounter>:
/**
 * @brief Enable the SysTick counter.
 * @param None
 * @retval None
 */
void SysTick_EnableCounter(void){
 8000eb4:	b480      	push	{r7}
 8000eb6:	af00      	add	r7, sp, #0
	SYSTICK->STK_CTRL |= (1<<0);
 8000eb8:	4b04      	ldr	r3, [pc, #16]	@ (8000ecc <SysTick_EnableCounter+0x18>)
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	4a03      	ldr	r2, [pc, #12]	@ (8000ecc <SysTick_EnableCounter+0x18>)
 8000ebe:	f043 0301 	orr.w	r3, r3, #1
 8000ec2:	6013      	str	r3, [r2, #0]
}
 8000ec4:	bf00      	nop
 8000ec6:	46bd      	mov	sp, r7
 8000ec8:	bc80      	pop	{r7}
 8000eca:	4770      	bx	lr
 8000ecc:	e000e010 	.word	0xe000e010

08000ed0 <SysTick_SelectClockSource>:
/**
 * @brief Select the clock source for SysTick.
 * @param ClockSource: 0 = external (AHB/8), 1 = internal (AHB).
 * @retval None
 */
void SysTick_SelectClockSource(_Bool ClockSource){
 8000ed0:	b480      	push	{r7}
 8000ed2:	b083      	sub	sp, #12
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	4603      	mov	r3, r0
 8000ed8:	71fb      	strb	r3, [r7, #7]
	SYSTICK->STK_CTRL &= ~(1 << 2);
 8000eda:	4b09      	ldr	r3, [pc, #36]	@ (8000f00 <SysTick_SelectClockSource+0x30>)
 8000edc:	681b      	ldr	r3, [r3, #0]
 8000ede:	4a08      	ldr	r2, [pc, #32]	@ (8000f00 <SysTick_SelectClockSource+0x30>)
 8000ee0:	f023 0304 	bic.w	r3, r3, #4
 8000ee4:	6013      	str	r3, [r2, #0]
	SYSTICK->STK_CTRL |= ClockSource << 2;
 8000ee6:	4b06      	ldr	r3, [pc, #24]	@ (8000f00 <SysTick_SelectClockSource+0x30>)
 8000ee8:	681a      	ldr	r2, [r3, #0]
 8000eea:	79fb      	ldrb	r3, [r7, #7]
 8000eec:	009b      	lsls	r3, r3, #2
 8000eee:	4904      	ldr	r1, [pc, #16]	@ (8000f00 <SysTick_SelectClockSource+0x30>)
 8000ef0:	4313      	orrs	r3, r2
 8000ef2:	600b      	str	r3, [r1, #0]
}
 8000ef4:	bf00      	nop
 8000ef6:	370c      	adds	r7, #12
 8000ef8:	46bd      	mov	sp, r7
 8000efa:	bc80      	pop	{r7}
 8000efc:	4770      	bx	lr
 8000efe:	bf00      	nop
 8000f00:	e000e010 	.word	0xe000e010

08000f04 <SysTick_InterruptConfig>:
/**
 * @brief Configure the SysTick interrupt.
 * @param IsInterruptEnaled: 1 = enable interrupt, 0 = disable interrupt.
 * @retval None
 */
void SysTick_InterruptConfig(_Bool IsInterruptEnaled){
 8000f04:	b480      	push	{r7}
 8000f06:	b083      	sub	sp, #12
 8000f08:	af00      	add	r7, sp, #0
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	71fb      	strb	r3, [r7, #7]
	SYSTICK->STK_CTRL &= ~(1 << 1);
 8000f0e:	4b09      	ldr	r3, [pc, #36]	@ (8000f34 <SysTick_InterruptConfig+0x30>)
 8000f10:	681b      	ldr	r3, [r3, #0]
 8000f12:	4a08      	ldr	r2, [pc, #32]	@ (8000f34 <SysTick_InterruptConfig+0x30>)
 8000f14:	f023 0302 	bic.w	r3, r3, #2
 8000f18:	6013      	str	r3, [r2, #0]
	SYSTICK->STK_CTRL |= (IsInterruptEnaled << 1);
 8000f1a:	4b06      	ldr	r3, [pc, #24]	@ (8000f34 <SysTick_InterruptConfig+0x30>)
 8000f1c:	681a      	ldr	r2, [r3, #0]
 8000f1e:	79fb      	ldrb	r3, [r7, #7]
 8000f20:	005b      	lsls	r3, r3, #1
 8000f22:	4904      	ldr	r1, [pc, #16]	@ (8000f34 <SysTick_InterruptConfig+0x30>)
 8000f24:	4313      	orrs	r3, r2
 8000f26:	600b      	str	r3, [r1, #0]
}
 8000f28:	bf00      	nop
 8000f2a:	370c      	adds	r7, #12
 8000f2c:	46bd      	mov	sp, r7
 8000f2e:	bc80      	pop	{r7}
 8000f30:	4770      	bx	lr
 8000f32:	bf00      	nop
 8000f34:	e000e010 	.word	0xe000e010

08000f38 <SysTick_Init>:
/**
 * @brief Initialize SysTick to generate an interrupt every 1 ms (assuming 16 MHz clock and AHB/8).
 * @param None
 * @retval None
 */
void SysTick_Init(void){
 8000f38:	b580      	push	{r7, lr}
 8000f3a:	af00      	add	r7, sp, #0
	SysTick_SetReloadValue((ClockFreq / 1000) - 1);
 8000f3c:	4b09      	ldr	r3, [pc, #36]	@ (8000f64 <SysTick_Init+0x2c>)
 8000f3e:	681b      	ldr	r3, [r3, #0]
 8000f40:	4a09      	ldr	r2, [pc, #36]	@ (8000f68 <SysTick_Init+0x30>)
 8000f42:	fba2 2303 	umull	r2, r3, r2, r3
 8000f46:	099b      	lsrs	r3, r3, #6
 8000f48:	3b01      	subs	r3, #1
 8000f4a:	4618      	mov	r0, r3
 8000f4c:	f7ff ffa4 	bl	8000e98 <SysTick_SetReloadValue>
	//SysTick_ClearCounterValue();
	SysTick_SelectClockSource(SYSTICK_CLKSOURCE_AHB_DIV_8);
 8000f50:	2000      	movs	r0, #0
 8000f52:	f7ff ffbd 	bl	8000ed0 <SysTick_SelectClockSource>
	SysTick_InterruptConfig(SYSTICK_INTERRUPT_ENABLED);
 8000f56:	2001      	movs	r0, #1
 8000f58:	f7ff ffd4 	bl	8000f04 <SysTick_InterruptConfig>

	SysTick_EnableCounter();
 8000f5c:	f7ff ffaa 	bl	8000eb4 <SysTick_EnableCounter>
}
 8000f60:	bf00      	nop
 8000f62:	bd80      	pop	{r7, pc}
 8000f64:	20000000 	.word	0x20000000
 8000f68:	10624dd3 	.word	0x10624dd3

08000f6c <getTick>:
/**
 * @brief Returns the current system tick count in milliseconds.
 * @param None
 * @retval Current tick value (in ms)
 */
uint32_t getTick(void){
 8000f6c:	b480      	push	{r7}
 8000f6e:	af00      	add	r7, sp, #0
	return ticks;
 8000f70:	4b02      	ldr	r3, [pc, #8]	@ (8000f7c <getTick+0x10>)
 8000f72:	681b      	ldr	r3, [r3, #0]
}
 8000f74:	4618      	mov	r0, r3
 8000f76:	46bd      	mov	sp, r7
 8000f78:	bc80      	pop	{r7}
 8000f7a:	4770      	bx	lr
 8000f7c:	200001ec 	.word	0x200001ec

08000f80 <SysTick_Handler>:
 * @brief SysTick interrupt handler, called every 1 ms.
 * Increments the global tick counter.
 * @param None
 * @retval None
 */
void SysTick_Handler(void){
 8000f80:	b480      	push	{r7}
 8000f82:	af00      	add	r7, sp, #0
	ticks++;
 8000f84:	4b04      	ldr	r3, [pc, #16]	@ (8000f98 <SysTick_Handler+0x18>)
 8000f86:	681b      	ldr	r3, [r3, #0]
 8000f88:	3301      	adds	r3, #1
 8000f8a:	4a03      	ldr	r2, [pc, #12]	@ (8000f98 <SysTick_Handler+0x18>)
 8000f8c:	6013      	str	r3, [r2, #0]
}
 8000f8e:	bf00      	nop
 8000f90:	46bd      	mov	sp, r7
 8000f92:	bc80      	pop	{r7}
 8000f94:	4770      	bx	lr
 8000f96:	bf00      	nop
 8000f98:	200001ec 	.word	0x200001ec

08000f9c <Delay_ms>:
 * @brief Delays execution for the specified number of milliseconds.
 * Uses the system tick counter for timing.
 * @param ms: Number of milliseconds to delay
 * @retval None
 */
void Delay_ms(uint16_t ms){
 8000f9c:	b580      	push	{r7, lr}
 8000f9e:	b084      	sub	sp, #16
 8000fa0:	af00      	add	r7, sp, #0
 8000fa2:	4603      	mov	r3, r0
 8000fa4:	80fb      	strh	r3, [r7, #6]
	uint32_t current_ticks = getTick();
 8000fa6:	f7ff ffe1 	bl	8000f6c <getTick>
 8000faa:	60f8      	str	r0, [r7, #12]
	while((uint32_t)(getTick() - current_ticks) < ms);
 8000fac:	bf00      	nop
 8000fae:	f7ff ffdd 	bl	8000f6c <getTick>
 8000fb2:	4602      	mov	r2, r0
 8000fb4:	68fb      	ldr	r3, [r7, #12]
 8000fb6:	1ad2      	subs	r2, r2, r3
 8000fb8:	88fb      	ldrh	r3, [r7, #6]
 8000fba:	429a      	cmp	r2, r3
 8000fbc:	d3f7      	bcc.n	8000fae <Delay_ms+0x12>
}
 8000fbe:	bf00      	nop
 8000fc0:	bf00      	nop
 8000fc2:	3710      	adds	r7, #16
 8000fc4:	46bd      	mov	sp, r7
 8000fc6:	bd80      	pop	{r7, pc}

08000fc8 <GPIO_PeriClockControl>:
  * @param  GPIOx where x can be (A..I) to select the GPIO peripheral .
  * @param  clockState Specifies whether to ENABLE or DISABLE of the clock for the given GPIO peripheral.
  * @retval None
  */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t clockState)
{
 8000fc8:	b480      	push	{r7}
 8000fca:	b083      	sub	sp, #12
 8000fcc:	af00      	add	r7, sp, #0
 8000fce:	6078      	str	r0, [r7, #4]
 8000fd0:	460b      	mov	r3, r1
 8000fd2:	70fb      	strb	r3, [r7, #3]
    if (clockState == ENABLE) {
 8000fd4:	78fb      	ldrb	r3, [r7, #3]
 8000fd6:	2b01      	cmp	r3, #1
 8000fd8:	d162      	bne.n	80010a0 <GPIO_PeriClockControl+0xd8>
        if (pGPIOx == GPIOA) {
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	4a64      	ldr	r2, [pc, #400]	@ (8001170 <GPIO_PeriClockControl+0x1a8>)
 8000fde:	4293      	cmp	r3, r2
 8000fe0:	d106      	bne.n	8000ff0 <GPIO_PeriClockControl+0x28>
            GPIOA_CLK_ENABLE();
 8000fe2:	4b64      	ldr	r3, [pc, #400]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8000fe4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000fe6:	4a63      	ldr	r2, [pc, #396]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8000fe8:	f043 0301 	orr.w	r3, r3, #1
 8000fec:	6313      	str	r3, [r2, #48]	@ 0x30
            GPIOH_CLK_DISABLE();
        }else if (pGPIOx == GPIOI) {
            GPIOI_CLK_DISABLE();
        }
    }
}
 8000fee:	e0b9      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOB) {
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	4a61      	ldr	r2, [pc, #388]	@ (8001178 <GPIO_PeriClockControl+0x1b0>)
 8000ff4:	4293      	cmp	r3, r2
 8000ff6:	d106      	bne.n	8001006 <GPIO_PeriClockControl+0x3e>
            GPIOB_CLK_ENABLE();
 8000ff8:	4b5e      	ldr	r3, [pc, #376]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8000ffa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ffc:	4a5d      	ldr	r2, [pc, #372]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8000ffe:	f043 0302 	orr.w	r3, r3, #2
 8001002:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001004:	e0ae      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOC) {
 8001006:	687b      	ldr	r3, [r7, #4]
 8001008:	4a5c      	ldr	r2, [pc, #368]	@ (800117c <GPIO_PeriClockControl+0x1b4>)
 800100a:	4293      	cmp	r3, r2
 800100c:	d106      	bne.n	800101c <GPIO_PeriClockControl+0x54>
            GPIOC_CLK_ENABLE();
 800100e:	4b59      	ldr	r3, [pc, #356]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001010:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001012:	4a58      	ldr	r2, [pc, #352]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001014:	f043 0304 	orr.w	r3, r3, #4
 8001018:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800101a:	e0a3      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOD) {
 800101c:	687b      	ldr	r3, [r7, #4]
 800101e:	4a58      	ldr	r2, [pc, #352]	@ (8001180 <GPIO_PeriClockControl+0x1b8>)
 8001020:	4293      	cmp	r3, r2
 8001022:	d106      	bne.n	8001032 <GPIO_PeriClockControl+0x6a>
            GPIOD_CLK_ENABLE();
 8001024:	4b53      	ldr	r3, [pc, #332]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001026:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001028:	4a52      	ldr	r2, [pc, #328]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 800102a:	f043 0308 	orr.w	r3, r3, #8
 800102e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001030:	e098      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOE) {
 8001032:	687b      	ldr	r3, [r7, #4]
 8001034:	4a53      	ldr	r2, [pc, #332]	@ (8001184 <GPIO_PeriClockControl+0x1bc>)
 8001036:	4293      	cmp	r3, r2
 8001038:	d106      	bne.n	8001048 <GPIO_PeriClockControl+0x80>
            GPIOE_CLK_ENABLE();
 800103a:	4b4e      	ldr	r3, [pc, #312]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 800103c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800103e:	4a4d      	ldr	r2, [pc, #308]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001040:	f043 0310 	orr.w	r3, r3, #16
 8001044:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001046:	e08d      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOF) {
 8001048:	687b      	ldr	r3, [r7, #4]
 800104a:	4a4f      	ldr	r2, [pc, #316]	@ (8001188 <GPIO_PeriClockControl+0x1c0>)
 800104c:	4293      	cmp	r3, r2
 800104e:	d106      	bne.n	800105e <GPIO_PeriClockControl+0x96>
            GPIOF_CLK_ENABLE();
 8001050:	4b48      	ldr	r3, [pc, #288]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001052:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001054:	4a47      	ldr	r2, [pc, #284]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001056:	f043 0320 	orr.w	r3, r3, #32
 800105a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800105c:	e082      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOG) {
 800105e:	687b      	ldr	r3, [r7, #4]
 8001060:	4a4a      	ldr	r2, [pc, #296]	@ (800118c <GPIO_PeriClockControl+0x1c4>)
 8001062:	4293      	cmp	r3, r2
 8001064:	d106      	bne.n	8001074 <GPIO_PeriClockControl+0xac>
            GPIOG_CLK_ENABLE();
 8001066:	4b43      	ldr	r3, [pc, #268]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001068:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800106a:	4a42      	ldr	r2, [pc, #264]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 800106c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001070:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001072:	e077      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOH) {
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	4a46      	ldr	r2, [pc, #280]	@ (8001190 <GPIO_PeriClockControl+0x1c8>)
 8001078:	4293      	cmp	r3, r2
 800107a:	d106      	bne.n	800108a <GPIO_PeriClockControl+0xc2>
            GPIOH_CLK_ENABLE();
 800107c:	4b3d      	ldr	r3, [pc, #244]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 800107e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001080:	4a3c      	ldr	r2, [pc, #240]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001082:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001086:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001088:	e06c      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOI) {
 800108a:	687b      	ldr	r3, [r7, #4]
 800108c:	4a41      	ldr	r2, [pc, #260]	@ (8001194 <GPIO_PeriClockControl+0x1cc>)
 800108e:	4293      	cmp	r3, r2
 8001090:	d168      	bne.n	8001164 <GPIO_PeriClockControl+0x19c>
            GPIOI_CLK_ENABLE();
 8001092:	4b38      	ldr	r3, [pc, #224]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001094:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001096:	4a37      	ldr	r2, [pc, #220]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001098:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800109c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800109e:	e061      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        if (pGPIOx == GPIOA) {
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	4a33      	ldr	r2, [pc, #204]	@ (8001170 <GPIO_PeriClockControl+0x1a8>)
 80010a4:	4293      	cmp	r3, r2
 80010a6:	d106      	bne.n	80010b6 <GPIO_PeriClockControl+0xee>
            GPIOA_CLK_DISABLE();
 80010a8:	4b32      	ldr	r3, [pc, #200]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 80010aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010ac:	4a31      	ldr	r2, [pc, #196]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 80010ae:	f023 0301 	bic.w	r3, r3, #1
 80010b2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80010b4:	e056      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOB) {
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	4a2f      	ldr	r2, [pc, #188]	@ (8001178 <GPIO_PeriClockControl+0x1b0>)
 80010ba:	4293      	cmp	r3, r2
 80010bc:	d106      	bne.n	80010cc <GPIO_PeriClockControl+0x104>
            GPIOB_CLK_DISABLE();
 80010be:	4b2d      	ldr	r3, [pc, #180]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 80010c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010c2:	4a2c      	ldr	r2, [pc, #176]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 80010c4:	f023 0302 	bic.w	r3, r3, #2
 80010c8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80010ca:	e04b      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOC) {
 80010cc:	687b      	ldr	r3, [r7, #4]
 80010ce:	4a2b      	ldr	r2, [pc, #172]	@ (800117c <GPIO_PeriClockControl+0x1b4>)
 80010d0:	4293      	cmp	r3, r2
 80010d2:	d106      	bne.n	80010e2 <GPIO_PeriClockControl+0x11a>
            GPIOC_CLK_DISABLE();
 80010d4:	4b27      	ldr	r3, [pc, #156]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 80010d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010d8:	4a26      	ldr	r2, [pc, #152]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 80010da:	f023 0304 	bic.w	r3, r3, #4
 80010de:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80010e0:	e040      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOD) {
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	4a26      	ldr	r2, [pc, #152]	@ (8001180 <GPIO_PeriClockControl+0x1b8>)
 80010e6:	4293      	cmp	r3, r2
 80010e8:	d106      	bne.n	80010f8 <GPIO_PeriClockControl+0x130>
            GPIOD_CLK_DISABLE();
 80010ea:	4b22      	ldr	r3, [pc, #136]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 80010ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010ee:	4a21      	ldr	r2, [pc, #132]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 80010f0:	f023 0308 	bic.w	r3, r3, #8
 80010f4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80010f6:	e035      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOE) {
 80010f8:	687b      	ldr	r3, [r7, #4]
 80010fa:	4a22      	ldr	r2, [pc, #136]	@ (8001184 <GPIO_PeriClockControl+0x1bc>)
 80010fc:	4293      	cmp	r3, r2
 80010fe:	d106      	bne.n	800110e <GPIO_PeriClockControl+0x146>
            GPIOE_CLK_DISABLE();
 8001100:	4b1c      	ldr	r3, [pc, #112]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001102:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001104:	4a1b      	ldr	r2, [pc, #108]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001106:	f023 0310 	bic.w	r3, r3, #16
 800110a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800110c:	e02a      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOF) {
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	4a1d      	ldr	r2, [pc, #116]	@ (8001188 <GPIO_PeriClockControl+0x1c0>)
 8001112:	4293      	cmp	r3, r2
 8001114:	d106      	bne.n	8001124 <GPIO_PeriClockControl+0x15c>
            GPIOF_CLK_DISABLE();
 8001116:	4b17      	ldr	r3, [pc, #92]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001118:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800111a:	4a16      	ldr	r2, [pc, #88]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 800111c:	f023 0320 	bic.w	r3, r3, #32
 8001120:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001122:	e01f      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOG) {
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	4a19      	ldr	r2, [pc, #100]	@ (800118c <GPIO_PeriClockControl+0x1c4>)
 8001128:	4293      	cmp	r3, r2
 800112a:	d106      	bne.n	800113a <GPIO_PeriClockControl+0x172>
            GPIOG_CLK_DISABLE();
 800112c:	4b11      	ldr	r3, [pc, #68]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 800112e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001130:	4a10      	ldr	r2, [pc, #64]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001132:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8001136:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001138:	e014      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOH) {
 800113a:	687b      	ldr	r3, [r7, #4]
 800113c:	4a14      	ldr	r2, [pc, #80]	@ (8001190 <GPIO_PeriClockControl+0x1c8>)
 800113e:	4293      	cmp	r3, r2
 8001140:	d106      	bne.n	8001150 <GPIO_PeriClockControl+0x188>
            GPIOH_CLK_DISABLE();
 8001142:	4b0c      	ldr	r3, [pc, #48]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001144:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001146:	4a0b      	ldr	r2, [pc, #44]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 8001148:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800114c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800114e:	e009      	b.n	8001164 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOI) {
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	4a10      	ldr	r2, [pc, #64]	@ (8001194 <GPIO_PeriClockControl+0x1cc>)
 8001154:	4293      	cmp	r3, r2
 8001156:	d105      	bne.n	8001164 <GPIO_PeriClockControl+0x19c>
            GPIOI_CLK_DISABLE();
 8001158:	4b06      	ldr	r3, [pc, #24]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 800115a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800115c:	4a05      	ldr	r2, [pc, #20]	@ (8001174 <GPIO_PeriClockControl+0x1ac>)
 800115e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001162:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001164:	bf00      	nop
 8001166:	370c      	adds	r7, #12
 8001168:	46bd      	mov	sp, r7
 800116a:	bc80      	pop	{r7}
 800116c:	4770      	bx	lr
 800116e:	bf00      	nop
 8001170:	40020000 	.word	0x40020000
 8001174:	40023800 	.word	0x40023800
 8001178:	40020400 	.word	0x40020400
 800117c:	40020800 	.word	0x40020800
 8001180:	40020c00 	.word	0x40020c00
 8001184:	40021000 	.word	0x40021000
 8001188:	40021400 	.word	0x40021400
 800118c:	40021800 	.word	0x40021800
 8001190:	40021c00 	.word	0x40021c00
 8001194:	40022000 	.word	0x40022000

08001198 <GPIO_ConfigureMode>:
 *                    - GPIO_MODE_IT_RISING
 *                    - GPIO_MODE_IT_RISING_FALLING
 *
 * @retval None
 */
void GPIO_ConfigureMode(GPIO_RegDef_t* GPIOx, uint8_t GPIO_PIN, uint8_t GPIO_Mode){
 8001198:	b480      	push	{r7}
 800119a:	b085      	sub	sp, #20
 800119c:	af00      	add	r7, sp, #0
 800119e:	6078      	str	r0, [r7, #4]
 80011a0:	460b      	mov	r3, r1
 80011a2:	70fb      	strb	r3, [r7, #3]
 80011a4:	4613      	mov	r3, r2
 80011a6:	70bb      	strb	r3, [r7, #2]
    if (GPIO_Mode <= GPIO_MODE_ANALOG){ //When the selected mode is not GPIO External Interrupt
 80011a8:	78bb      	ldrb	r3, [r7, #2]
 80011aa:	2b03      	cmp	r3, #3
 80011ac:	d815      	bhi.n	80011da <GPIO_ConfigureMode+0x42>
	    //Reset bits value of selected pin.
	    GPIOx->MODER &= ~(0b11 << (GPIO_PIN * 2));
 80011ae:	687b      	ldr	r3, [r7, #4]
 80011b0:	681b      	ldr	r3, [r3, #0]
 80011b2:	78fa      	ldrb	r2, [r7, #3]
 80011b4:	0052      	lsls	r2, r2, #1
 80011b6:	2103      	movs	r1, #3
 80011b8:	fa01 f202 	lsl.w	r2, r1, r2
 80011bc:	43d2      	mvns	r2, r2
 80011be:	401a      	ands	r2, r3
 80011c0:	687b      	ldr	r3, [r7, #4]
 80011c2:	601a      	str	r2, [r3, #0]
	    //Set the selected mode for the pin
	    GPIOx->MODER |= GPIO_Mode << (GPIO_PIN * 2);
 80011c4:	687b      	ldr	r3, [r7, #4]
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	78b9      	ldrb	r1, [r7, #2]
 80011ca:	78fa      	ldrb	r2, [r7, #3]
 80011cc:	0052      	lsls	r2, r2, #1
 80011ce:	fa01 f202 	lsl.w	r2, r1, r2
 80011d2:	431a      	orrs	r2, r3
 80011d4:	687b      	ldr	r3, [r7, #4]
 80011d6:	601a      	str	r2, [r3, #0]
	    EXTI->IMR |= (1 << GPIO_PIN);

	    EXTI->PR |= (1 << GPIO_PIN);  // Clear pending flag
    }

}
 80011d8:	e0c1      	b.n	800135e <GPIO_ConfigureMode+0x1c6>
	    if(GPIO_Mode == GPIO_MODE_IT_FALLING){
 80011da:	78bb      	ldrb	r3, [r7, #2]
 80011dc:	2b04      	cmp	r3, #4
 80011de:	d115      	bne.n	800120c <GPIO_ConfigureMode+0x74>
		    EXTI->FTSR |= (1 << GPIO_PIN);
 80011e0:	4b61      	ldr	r3, [pc, #388]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 80011e2:	68db      	ldr	r3, [r3, #12]
 80011e4:	78fa      	ldrb	r2, [r7, #3]
 80011e6:	2101      	movs	r1, #1
 80011e8:	fa01 f202 	lsl.w	r2, r1, r2
 80011ec:	4611      	mov	r1, r2
 80011ee:	4a5e      	ldr	r2, [pc, #376]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 80011f0:	430b      	orrs	r3, r1
 80011f2:	60d3      	str	r3, [r2, #12]
		    EXTI->RTSR &= ~(1 << GPIO_PIN);
 80011f4:	4b5c      	ldr	r3, [pc, #368]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 80011f6:	689b      	ldr	r3, [r3, #8]
 80011f8:	78fa      	ldrb	r2, [r7, #3]
 80011fa:	2101      	movs	r1, #1
 80011fc:	fa01 f202 	lsl.w	r2, r1, r2
 8001200:	43d2      	mvns	r2, r2
 8001202:	4611      	mov	r1, r2
 8001204:	4a58      	ldr	r2, [pc, #352]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001206:	400b      	ands	r3, r1
 8001208:	6093      	str	r3, [r2, #8]
 800120a:	e02c      	b.n	8001266 <GPIO_ConfigureMode+0xce>
	    else if(GPIO_Mode == GPIO_MODE_IT_RISING){
 800120c:	78bb      	ldrb	r3, [r7, #2]
 800120e:	2b05      	cmp	r3, #5
 8001210:	d115      	bne.n	800123e <GPIO_ConfigureMode+0xa6>
		    EXTI->RTSR |= (1 << GPIO_PIN);
 8001212:	4b55      	ldr	r3, [pc, #340]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001214:	689b      	ldr	r3, [r3, #8]
 8001216:	78fa      	ldrb	r2, [r7, #3]
 8001218:	2101      	movs	r1, #1
 800121a:	fa01 f202 	lsl.w	r2, r1, r2
 800121e:	4611      	mov	r1, r2
 8001220:	4a51      	ldr	r2, [pc, #324]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001222:	430b      	orrs	r3, r1
 8001224:	6093      	str	r3, [r2, #8]
		    EXTI->FTSR &= ~(1 << GPIO_PIN);
 8001226:	4b50      	ldr	r3, [pc, #320]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001228:	68db      	ldr	r3, [r3, #12]
 800122a:	78fa      	ldrb	r2, [r7, #3]
 800122c:	2101      	movs	r1, #1
 800122e:	fa01 f202 	lsl.w	r2, r1, r2
 8001232:	43d2      	mvns	r2, r2
 8001234:	4611      	mov	r1, r2
 8001236:	4a4c      	ldr	r2, [pc, #304]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001238:	400b      	ands	r3, r1
 800123a:	60d3      	str	r3, [r2, #12]
 800123c:	e013      	b.n	8001266 <GPIO_ConfigureMode+0xce>
		    EXTI->RTSR |= (1 << GPIO_PIN);
 800123e:	4b4a      	ldr	r3, [pc, #296]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001240:	689b      	ldr	r3, [r3, #8]
 8001242:	78fa      	ldrb	r2, [r7, #3]
 8001244:	2101      	movs	r1, #1
 8001246:	fa01 f202 	lsl.w	r2, r1, r2
 800124a:	4611      	mov	r1, r2
 800124c:	4a46      	ldr	r2, [pc, #280]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 800124e:	430b      	orrs	r3, r1
 8001250:	6093      	str	r3, [r2, #8]
		    EXTI->FTSR |= (1 << GPIO_PIN);
 8001252:	4b45      	ldr	r3, [pc, #276]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001254:	68db      	ldr	r3, [r3, #12]
 8001256:	78fa      	ldrb	r2, [r7, #3]
 8001258:	2101      	movs	r1, #1
 800125a:	fa01 f202 	lsl.w	r2, r1, r2
 800125e:	4611      	mov	r1, r2
 8001260:	4a41      	ldr	r2, [pc, #260]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001262:	430b      	orrs	r3, r1
 8001264:	60d3      	str	r3, [r2, #12]
	    SYSCFG_CLK_ENABLE();	//Enable SYSCFG clock
 8001266:	4b41      	ldr	r3, [pc, #260]	@ (800136c <GPIO_ConfigureMode+0x1d4>)
 8001268:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800126a:	4a40      	ldr	r2, [pc, #256]	@ (800136c <GPIO_ConfigureMode+0x1d4>)
 800126c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001270:	6453      	str	r3, [r2, #68]	@ 0x44
	    uint8_t EXTICR_Index = GPIO_PIN / 4; //Get Register index of EXTICR
 8001272:	78fb      	ldrb	r3, [r7, #3]
 8001274:	089b      	lsrs	r3, r3, #2
 8001276:	73fb      	strb	r3, [r7, #15]
	    uint8_t EXTICR_StartBit = GPIO_PIN % 4;
 8001278:	78fb      	ldrb	r3, [r7, #3]
 800127a:	f003 0303 	and.w	r3, r3, #3
 800127e:	73bb      	strb	r3, [r7, #14]
	    uint8_t GPIO_Port =  GPIO_BASEADDR_TO_CODE(GPIOx);
 8001280:	687b      	ldr	r3, [r7, #4]
 8001282:	4a3b      	ldr	r2, [pc, #236]	@ (8001370 <GPIO_ConfigureMode+0x1d8>)
 8001284:	4293      	cmp	r3, r2
 8001286:	d031      	beq.n	80012ec <GPIO_ConfigureMode+0x154>
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	4a3a      	ldr	r2, [pc, #232]	@ (8001374 <GPIO_ConfigureMode+0x1dc>)
 800128c:	4293      	cmp	r3, r2
 800128e:	d02b      	beq.n	80012e8 <GPIO_ConfigureMode+0x150>
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	4a39      	ldr	r2, [pc, #228]	@ (8001378 <GPIO_ConfigureMode+0x1e0>)
 8001294:	4293      	cmp	r3, r2
 8001296:	d025      	beq.n	80012e4 <GPIO_ConfigureMode+0x14c>
 8001298:	687b      	ldr	r3, [r7, #4]
 800129a:	4a38      	ldr	r2, [pc, #224]	@ (800137c <GPIO_ConfigureMode+0x1e4>)
 800129c:	4293      	cmp	r3, r2
 800129e:	d01f      	beq.n	80012e0 <GPIO_ConfigureMode+0x148>
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	4a37      	ldr	r2, [pc, #220]	@ (8001380 <GPIO_ConfigureMode+0x1e8>)
 80012a4:	4293      	cmp	r3, r2
 80012a6:	d019      	beq.n	80012dc <GPIO_ConfigureMode+0x144>
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	4a36      	ldr	r2, [pc, #216]	@ (8001384 <GPIO_ConfigureMode+0x1ec>)
 80012ac:	4293      	cmp	r3, r2
 80012ae:	d013      	beq.n	80012d8 <GPIO_ConfigureMode+0x140>
 80012b0:	687b      	ldr	r3, [r7, #4]
 80012b2:	4a35      	ldr	r2, [pc, #212]	@ (8001388 <GPIO_ConfigureMode+0x1f0>)
 80012b4:	4293      	cmp	r3, r2
 80012b6:	d00d      	beq.n	80012d4 <GPIO_ConfigureMode+0x13c>
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	4a34      	ldr	r2, [pc, #208]	@ (800138c <GPIO_ConfigureMode+0x1f4>)
 80012bc:	4293      	cmp	r3, r2
 80012be:	d007      	beq.n	80012d0 <GPIO_ConfigureMode+0x138>
 80012c0:	687b      	ldr	r3, [r7, #4]
 80012c2:	4a33      	ldr	r2, [pc, #204]	@ (8001390 <GPIO_ConfigureMode+0x1f8>)
 80012c4:	4293      	cmp	r3, r2
 80012c6:	d101      	bne.n	80012cc <GPIO_ConfigureMode+0x134>
 80012c8:	2308      	movs	r3, #8
 80012ca:	e010      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012cc:	2300      	movs	r3, #0
 80012ce:	e00e      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012d0:	2307      	movs	r3, #7
 80012d2:	e00c      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012d4:	2306      	movs	r3, #6
 80012d6:	e00a      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012d8:	2305      	movs	r3, #5
 80012da:	e008      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012dc:	2304      	movs	r3, #4
 80012de:	e006      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012e0:	2303      	movs	r3, #3
 80012e2:	e004      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012e4:	2302      	movs	r3, #2
 80012e6:	e002      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012e8:	2301      	movs	r3, #1
 80012ea:	e000      	b.n	80012ee <GPIO_ConfigureMode+0x156>
 80012ec:	2300      	movs	r3, #0
 80012ee:	737b      	strb	r3, [r7, #13]
	    SYSCFG->EXTICR[EXTICR_Index] &= ~(0b1111 << (EXTICR_StartBit * 4));
 80012f0:	4a28      	ldr	r2, [pc, #160]	@ (8001394 <GPIO_ConfigureMode+0x1fc>)
 80012f2:	7bfb      	ldrb	r3, [r7, #15]
 80012f4:	3302      	adds	r3, #2
 80012f6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80012fa:	7bbb      	ldrb	r3, [r7, #14]
 80012fc:	009b      	lsls	r3, r3, #2
 80012fe:	210f      	movs	r1, #15
 8001300:	fa01 f303 	lsl.w	r3, r1, r3
 8001304:	43db      	mvns	r3, r3
 8001306:	4618      	mov	r0, r3
 8001308:	4922      	ldr	r1, [pc, #136]	@ (8001394 <GPIO_ConfigureMode+0x1fc>)
 800130a:	7bfb      	ldrb	r3, [r7, #15]
 800130c:	4002      	ands	r2, r0
 800130e:	3302      	adds	r3, #2
 8001310:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	    SYSCFG->EXTICR[EXTICR_Index] |= GPIO_Port << (EXTICR_StartBit * 4);
 8001314:	4a1f      	ldr	r2, [pc, #124]	@ (8001394 <GPIO_ConfigureMode+0x1fc>)
 8001316:	7bfb      	ldrb	r3, [r7, #15]
 8001318:	3302      	adds	r3, #2
 800131a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800131e:	7b79      	ldrb	r1, [r7, #13]
 8001320:	7bbb      	ldrb	r3, [r7, #14]
 8001322:	009b      	lsls	r3, r3, #2
 8001324:	fa01 f303 	lsl.w	r3, r1, r3
 8001328:	4618      	mov	r0, r3
 800132a:	491a      	ldr	r1, [pc, #104]	@ (8001394 <GPIO_ConfigureMode+0x1fc>)
 800132c:	7bfb      	ldrb	r3, [r7, #15]
 800132e:	4302      	orrs	r2, r0
 8001330:	3302      	adds	r3, #2
 8001332:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	    EXTI->IMR |= (1 << GPIO_PIN);
 8001336:	4b0c      	ldr	r3, [pc, #48]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001338:	681b      	ldr	r3, [r3, #0]
 800133a:	78fa      	ldrb	r2, [r7, #3]
 800133c:	2101      	movs	r1, #1
 800133e:	fa01 f202 	lsl.w	r2, r1, r2
 8001342:	4611      	mov	r1, r2
 8001344:	4a08      	ldr	r2, [pc, #32]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 8001346:	430b      	orrs	r3, r1
 8001348:	6013      	str	r3, [r2, #0]
	    EXTI->PR |= (1 << GPIO_PIN);  // Clear pending flag
 800134a:	4b07      	ldr	r3, [pc, #28]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 800134c:	695b      	ldr	r3, [r3, #20]
 800134e:	78fa      	ldrb	r2, [r7, #3]
 8001350:	2101      	movs	r1, #1
 8001352:	fa01 f202 	lsl.w	r2, r1, r2
 8001356:	4611      	mov	r1, r2
 8001358:	4a03      	ldr	r2, [pc, #12]	@ (8001368 <GPIO_ConfigureMode+0x1d0>)
 800135a:	430b      	orrs	r3, r1
 800135c:	6153      	str	r3, [r2, #20]
}
 800135e:	bf00      	nop
 8001360:	3714      	adds	r7, #20
 8001362:	46bd      	mov	sp, r7
 8001364:	bc80      	pop	{r7}
 8001366:	4770      	bx	lr
 8001368:	40013c00 	.word	0x40013c00
 800136c:	40023800 	.word	0x40023800
 8001370:	40020000 	.word	0x40020000
 8001374:	40020400 	.word	0x40020400
 8001378:	40020800 	.word	0x40020800
 800137c:	40020c00 	.word	0x40020c00
 8001380:	40021000 	.word	0x40021000
 8001384:	40021400 	.word	0x40021400
 8001388:	40021800 	.word	0x40021800
 800138c:	40021c00 	.word	0x40021c00
 8001390:	40022000 	.word	0x40022000
 8001394:	40013800 	.word	0x40013800

08001398 <GPIO_ConfigureSpeed>:
 *                     - GPIO_SPEED_MEDIUM
 *                     - GPIO_SPEED_FAST
 *
 * @retval None
 */
void GPIO_ConfigureSpeed(GPIO_RegDef_t* GPIOx, uint8_t GPIO_Pin, uint8_t GPIO_Speed){
 8001398:	b480      	push	{r7}
 800139a:	b085      	sub	sp, #20
 800139c:	af00      	add	r7, sp, #0
 800139e:	6078      	str	r0, [r7, #4]
 80013a0:	460b      	mov	r3, r1
 80013a2:	70fb      	strb	r3, [r7, #3]
 80013a4:	4613      	mov	r3, r2
 80013a6:	70bb      	strb	r3, [r7, #2]
    uint8_t startBit = GPIO_Pin * 2;
 80013a8:	78fb      	ldrb	r3, [r7, #3]
 80013aa:	005b      	lsls	r3, r3, #1
 80013ac:	73fb      	strb	r3, [r7, #15]
    //Clear the value of selected pin
    GPIOx->OSPEEDR &= ~(0b11 << startBit);
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	689b      	ldr	r3, [r3, #8]
 80013b2:	7bfa      	ldrb	r2, [r7, #15]
 80013b4:	2103      	movs	r1, #3
 80013b6:	fa01 f202 	lsl.w	r2, r1, r2
 80013ba:	43d2      	mvns	r2, r2
 80013bc:	401a      	ands	r2, r3
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	609a      	str	r2, [r3, #8]
    //Set GPIO Speed for selected Pin
    GPIOx->OSPEEDR |= GPIO_Speed << startBit;
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	689b      	ldr	r3, [r3, #8]
 80013c6:	78b9      	ldrb	r1, [r7, #2]
 80013c8:	7bfa      	ldrb	r2, [r7, #15]
 80013ca:	fa01 f202 	lsl.w	r2, r1, r2
 80013ce:	431a      	orrs	r2, r3
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	609a      	str	r2, [r3, #8]
}
 80013d4:	bf00      	nop
 80013d6:	3714      	adds	r7, #20
 80013d8:	46bd      	mov	sp, r7
 80013da:	bc80      	pop	{r7}
 80013dc:	4770      	bx	lr

080013de <GPIO_ConfigureOutputType>:
 *                          - GPIO_OPTYPE_PP (Push-pull)
 *                          - GPIO_OPTYPE_OD (Open-drain)
 *
 * @retval None
 */
void GPIO_ConfigureOutputType(GPIO_RegDef_t* GPIOx, uint8_t GPIO_Pin, _Bool GPIO_OutputType){
 80013de:	b480      	push	{r7}
 80013e0:	b083      	sub	sp, #12
 80013e2:	af00      	add	r7, sp, #0
 80013e4:	6078      	str	r0, [r7, #4]
 80013e6:	460b      	mov	r3, r1
 80013e8:	70fb      	strb	r3, [r7, #3]
 80013ea:	4613      	mov	r3, r2
 80013ec:	70bb      	strb	r3, [r7, #2]
    GPIOx->OTYPER &= ~(1 << GPIO_Pin);  //Clear value of selected pin
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	685b      	ldr	r3, [r3, #4]
 80013f2:	78fa      	ldrb	r2, [r7, #3]
 80013f4:	2101      	movs	r1, #1
 80013f6:	fa01 f202 	lsl.w	r2, r1, r2
 80013fa:	43d2      	mvns	r2, r2
 80013fc:	401a      	ands	r2, r3
 80013fe:	687b      	ldr	r3, [r7, #4]
 8001400:	605a      	str	r2, [r3, #4]
    GPIOx->OTYPER |= GPIO_OutputType << GPIO_Pin; //Set GPIO Output type
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	685b      	ldr	r3, [r3, #4]
 8001406:	78b9      	ldrb	r1, [r7, #2]
 8001408:	78fa      	ldrb	r2, [r7, #3]
 800140a:	fa01 f202 	lsl.w	r2, r1, r2
 800140e:	431a      	orrs	r2, r3
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	605a      	str	r2, [r3, #4]
}
 8001414:	bf00      	nop
 8001416:	370c      	adds	r7, #12
 8001418:	46bd      	mov	sp, r7
 800141a:	bc80      	pop	{r7}
 800141c:	4770      	bx	lr

0800141e <GPIO_ConfigurePullUpDown>:
 *                   - GPIO_PULLUP
 *                   - GPIO_PULLDOWN
 *
 * @retval None
 */
void GPIO_ConfigurePullUpDown(GPIO_RegDef_t* GPIOx, uint8_t GPIO_Pin, uint8_t PullMode){
 800141e:	b480      	push	{r7}
 8001420:	b083      	sub	sp, #12
 8001422:	af00      	add	r7, sp, #0
 8001424:	6078      	str	r0, [r7, #4]
 8001426:	460b      	mov	r3, r1
 8001428:	70fb      	strb	r3, [r7, #3]
 800142a:	4613      	mov	r3, r2
 800142c:	70bb      	strb	r3, [r7, #2]
    GPIOx->PUPDR &= ~(0b11 << (GPIO_Pin*2)); //Clear value of selected pin
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	68db      	ldr	r3, [r3, #12]
 8001432:	78fa      	ldrb	r2, [r7, #3]
 8001434:	0052      	lsls	r2, r2, #1
 8001436:	2103      	movs	r1, #3
 8001438:	fa01 f202 	lsl.w	r2, r1, r2
 800143c:	43d2      	mvns	r2, r2
 800143e:	401a      	ands	r2, r3
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	60da      	str	r2, [r3, #12]
    GPIOx->PUPDR |= PullMode << (GPIO_Pin * 2); //Set GPIO pull mode.
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	68db      	ldr	r3, [r3, #12]
 8001448:	78b9      	ldrb	r1, [r7, #2]
 800144a:	78fa      	ldrb	r2, [r7, #3]
 800144c:	0052      	lsls	r2, r2, #1
 800144e:	fa01 f202 	lsl.w	r2, r1, r2
 8001452:	431a      	orrs	r2, r3
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	60da      	str	r2, [r3, #12]
}
 8001458:	bf00      	nop
 800145a:	370c      	adds	r7, #12
 800145c:	46bd      	mov	sp, r7
 800145e:	bc80      	pop	{r7}
 8001460:	4770      	bx	lr

08001462 <GPIO_Initialize>:
 * @param  GPIO_Pin  GPIO pin number (0–15).
 * @param  GPIO_Mode Desired mode (input, output, interrupt, etc.).
 *
 * @retval None
 */
void GPIO_Initialize(GPIO_RegDef_t *GPIOx, uint8_t GPIO_Pin, uint8_t GPIO_Mode){
 8001462:	b580      	push	{r7, lr}
 8001464:	b082      	sub	sp, #8
 8001466:	af00      	add	r7, sp, #0
 8001468:	6078      	str	r0, [r7, #4]
 800146a:	460b      	mov	r3, r1
 800146c:	70fb      	strb	r3, [r7, #3]
 800146e:	4613      	mov	r3, r2
 8001470:	70bb      	strb	r3, [r7, #2]
      GPIO_PeriClockControl(GPIOx, ENABLE);
 8001472:	2101      	movs	r1, #1
 8001474:	6878      	ldr	r0, [r7, #4]
 8001476:	f7ff fda7 	bl	8000fc8 <GPIO_PeriClockControl>

      GPIO_ConfigureMode(GPIOx, GPIO_Pin, GPIO_Mode);
 800147a:	78ba      	ldrb	r2, [r7, #2]
 800147c:	78fb      	ldrb	r3, [r7, #3]
 800147e:	4619      	mov	r1, r3
 8001480:	6878      	ldr	r0, [r7, #4]
 8001482:	f7ff fe89 	bl	8001198 <GPIO_ConfigureMode>

      GPIO_ConfigureSpeed(GPIOx, GPIO_Pin, GPIO_SPEED_FAST);  //Fast speed as default.
 8001486:	78fb      	ldrb	r3, [r7, #3]
 8001488:	2202      	movs	r2, #2
 800148a:	4619      	mov	r1, r3
 800148c:	6878      	ldr	r0, [r7, #4]
 800148e:	f7ff ff83 	bl	8001398 <GPIO_ConfigureSpeed>

      if(GPIO_Mode == GPIO_MODE_OUTPUT){
 8001492:	78bb      	ldrb	r3, [r7, #2]
 8001494:	2b01      	cmp	r3, #1
 8001496:	d106      	bne.n	80014a6 <GPIO_Initialize+0x44>
	      GPIO_ConfigureOutputType(GPIOx, GPIO_Pin, GPIO_OPTYPE_PP);  //Output push-pull as default
 8001498:	78fb      	ldrb	r3, [r7, #3]
 800149a:	2200      	movs	r2, #0
 800149c:	4619      	mov	r1, r3
 800149e:	6878      	ldr	r0, [r7, #4]
 80014a0:	f7ff ff9d 	bl	80013de <GPIO_ConfigureOutputType>
	      GPIO_ConfigurePullUpDown(GPIOx, GPIO_Pin, GPIO_PULLDOWN);  //If GPIO mode is input, GPIO_PULLDOWN is used as default.
      }
      else if(GPIO_Mode == GPIO_MODE_IT_FALLING){
	      GPIO_ConfigurePullUpDown(GPIOx, GPIO_Pin, GPIO_PULLUP);
      }
}
 80014a4:	e015      	b.n	80014d2 <GPIO_Initialize+0x70>
      else if(GPIO_Mode == GPIO_MODE_INPUT || GPIO_Mode == GPIO_MODE_IT_RISING){
 80014a6:	78bb      	ldrb	r3, [r7, #2]
 80014a8:	2b00      	cmp	r3, #0
 80014aa:	d002      	beq.n	80014b2 <GPIO_Initialize+0x50>
 80014ac:	78bb      	ldrb	r3, [r7, #2]
 80014ae:	2b05      	cmp	r3, #5
 80014b0:	d106      	bne.n	80014c0 <GPIO_Initialize+0x5e>
	      GPIO_ConfigurePullUpDown(GPIOx, GPIO_Pin, GPIO_PULLDOWN);  //If GPIO mode is input, GPIO_PULLDOWN is used as default.
 80014b2:	78fb      	ldrb	r3, [r7, #3]
 80014b4:	2202      	movs	r2, #2
 80014b6:	4619      	mov	r1, r3
 80014b8:	6878      	ldr	r0, [r7, #4]
 80014ba:	f7ff ffb0 	bl	800141e <GPIO_ConfigurePullUpDown>
}
 80014be:	e008      	b.n	80014d2 <GPIO_Initialize+0x70>
      else if(GPIO_Mode == GPIO_MODE_IT_FALLING){
 80014c0:	78bb      	ldrb	r3, [r7, #2]
 80014c2:	2b04      	cmp	r3, #4
 80014c4:	d105      	bne.n	80014d2 <GPIO_Initialize+0x70>
	      GPIO_ConfigurePullUpDown(GPIOx, GPIO_Pin, GPIO_PULLUP);
 80014c6:	78fb      	ldrb	r3, [r7, #3]
 80014c8:	2201      	movs	r2, #1
 80014ca:	4619      	mov	r1, r3
 80014cc:	6878      	ldr	r0, [r7, #4]
 80014ce:	f7ff ffa6 	bl	800141e <GPIO_ConfigurePullUpDown>
}
 80014d2:	bf00      	nop
 80014d4:	3708      	adds	r7, #8
 80014d6:	46bd      	mov	sp, r7
 80014d8:	bd80      	pop	{r7, pc}
	...

080014dc <GPIO_Init>:
  * @param  hGPIO pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_HandleTypeDef *hGPIO)
{
 80014dc:	b580      	push	{r7, lr}
 80014de:	b086      	sub	sp, #24
 80014e0:	af00      	add	r7, sp, #0
 80014e2:	6078      	str	r0, [r7, #4]
    uint32_t temp;
    // Enable the clock peripheral
    GPIO_PeriClockControl(hGPIO->pGPIOx, ENABLE);
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	2101      	movs	r1, #1
 80014ea:	4618      	mov	r0, r3
 80014ec:	f7ff fd6c 	bl	8000fc8 <GPIO_PeriClockControl>

    // 1. Configure mode
    if (hGPIO->Init.Mode <= GPIO_MODE_ANALOG) {
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	795b      	ldrb	r3, [r3, #5]
 80014f4:	2b03      	cmp	r3, #3
 80014f6:	d820      	bhi.n	800153a <GPIO_Init+0x5e>
	    // The non interrupt mode
	    temp = (hGPIO->Init.Mode << (2 * hGPIO->Init.Pin));
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	795b      	ldrb	r3, [r3, #5]
 80014fc:	461a      	mov	r2, r3
 80014fe:	687b      	ldr	r3, [r7, #4]
 8001500:	791b      	ldrb	r3, [r3, #4]
 8001502:	005b      	lsls	r3, r3, #1
 8001504:	fa02 f303 	lsl.w	r3, r2, r3
 8001508:	613b      	str	r3, [r7, #16]
	    hGPIO->pGPIOx->MODER &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	681a      	ldr	r2, [r3, #0]
 8001510:	687b      	ldr	r3, [r7, #4]
 8001512:	791b      	ldrb	r3, [r3, #4]
 8001514:	005b      	lsls	r3, r3, #1
 8001516:	2103      	movs	r1, #3
 8001518:	fa01 f303 	lsl.w	r3, r1, r3
 800151c:	43db      	mvns	r3, r3
 800151e:	4619      	mov	r1, r3
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	681b      	ldr	r3, [r3, #0]
 8001524:	400a      	ands	r2, r1
 8001526:	601a      	str	r2, [r3, #0]
	    hGPIO->pGPIOx->MODER |= temp;
 8001528:	687b      	ldr	r3, [r7, #4]
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	6819      	ldr	r1, [r3, #0]
 800152e:	687b      	ldr	r3, [r7, #4]
 8001530:	681b      	ldr	r3, [r3, #0]
 8001532:	693a      	ldr	r2, [r7, #16]
 8001534:	430a      	orrs	r2, r1
 8001536:	601a      	str	r2, [r3, #0]
 8001538:	e0e4      	b.n	8001704 <GPIO_Init+0x228>
    }else {
	    // Interrupt mode
	    if (hGPIO->Init.Mode == GPIO_MODE_IT_FALLING) {
 800153a:	687b      	ldr	r3, [r7, #4]
 800153c:	795b      	ldrb	r3, [r3, #5]
 800153e:	2b04      	cmp	r3, #4
 8001540:	d117      	bne.n	8001572 <GPIO_Init+0x96>
		    // Configure the FTSR
		    EXTI->FTSR |= (1 << hGPIO->Init.Pin);
 8001542:	4b4b      	ldr	r3, [pc, #300]	@ (8001670 <GPIO_Init+0x194>)
 8001544:	68db      	ldr	r3, [r3, #12]
 8001546:	687a      	ldr	r2, [r7, #4]
 8001548:	7912      	ldrb	r2, [r2, #4]
 800154a:	4611      	mov	r1, r2
 800154c:	2201      	movs	r2, #1
 800154e:	408a      	lsls	r2, r1
 8001550:	4611      	mov	r1, r2
 8001552:	4a47      	ldr	r2, [pc, #284]	@ (8001670 <GPIO_Init+0x194>)
 8001554:	430b      	orrs	r3, r1
 8001556:	60d3      	str	r3, [r2, #12]
		    // Clear the corresponding the RTSR
		    EXTI->RTSR &= ~(1 << hGPIO->Init.Pin);
 8001558:	4b45      	ldr	r3, [pc, #276]	@ (8001670 <GPIO_Init+0x194>)
 800155a:	689b      	ldr	r3, [r3, #8]
 800155c:	687a      	ldr	r2, [r7, #4]
 800155e:	7912      	ldrb	r2, [r2, #4]
 8001560:	4611      	mov	r1, r2
 8001562:	2201      	movs	r2, #1
 8001564:	408a      	lsls	r2, r1
 8001566:	43d2      	mvns	r2, r2
 8001568:	4611      	mov	r1, r2
 800156a:	4a41      	ldr	r2, [pc, #260]	@ (8001670 <GPIO_Init+0x194>)
 800156c:	400b      	ands	r3, r1
 800156e:	6093      	str	r3, [r2, #8]
 8001570:	e035      	b.n	80015de <GPIO_Init+0x102>
	    }else if (hGPIO->Init.Mode == GPIO_MODE_IT_RISING) {
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	795b      	ldrb	r3, [r3, #5]
 8001576:	2b05      	cmp	r3, #5
 8001578:	d117      	bne.n	80015aa <GPIO_Init+0xce>
		    EXTI->RTSR |= (1 << hGPIO->Init.Pin);
 800157a:	4b3d      	ldr	r3, [pc, #244]	@ (8001670 <GPIO_Init+0x194>)
 800157c:	689b      	ldr	r3, [r3, #8]
 800157e:	687a      	ldr	r2, [r7, #4]
 8001580:	7912      	ldrb	r2, [r2, #4]
 8001582:	4611      	mov	r1, r2
 8001584:	2201      	movs	r2, #1
 8001586:	408a      	lsls	r2, r1
 8001588:	4611      	mov	r1, r2
 800158a:	4a39      	ldr	r2, [pc, #228]	@ (8001670 <GPIO_Init+0x194>)
 800158c:	430b      	orrs	r3, r1
 800158e:	6093      	str	r3, [r2, #8]
		    EXTI->FTSR &= ~(1 << hGPIO->Init.Pin);
 8001590:	4b37      	ldr	r3, [pc, #220]	@ (8001670 <GPIO_Init+0x194>)
 8001592:	68db      	ldr	r3, [r3, #12]
 8001594:	687a      	ldr	r2, [r7, #4]
 8001596:	7912      	ldrb	r2, [r2, #4]
 8001598:	4611      	mov	r1, r2
 800159a:	2201      	movs	r2, #1
 800159c:	408a      	lsls	r2, r1
 800159e:	43d2      	mvns	r2, r2
 80015a0:	4611      	mov	r1, r2
 80015a2:	4a33      	ldr	r2, [pc, #204]	@ (8001670 <GPIO_Init+0x194>)
 80015a4:	400b      	ands	r3, r1
 80015a6:	60d3      	str	r3, [r2, #12]
 80015a8:	e019      	b.n	80015de <GPIO_Init+0x102>
	    }else if (hGPIO->Init.Mode == GPIO_MODE_IT_RISING_FALLING) {
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	795b      	ldrb	r3, [r3, #5]
 80015ae:	2b06      	cmp	r3, #6
 80015b0:	d115      	bne.n	80015de <GPIO_Init+0x102>
		    EXTI->RTSR |= (1 << hGPIO->Init.Pin);
 80015b2:	4b2f      	ldr	r3, [pc, #188]	@ (8001670 <GPIO_Init+0x194>)
 80015b4:	689b      	ldr	r3, [r3, #8]
 80015b6:	687a      	ldr	r2, [r7, #4]
 80015b8:	7912      	ldrb	r2, [r2, #4]
 80015ba:	4611      	mov	r1, r2
 80015bc:	2201      	movs	r2, #1
 80015be:	408a      	lsls	r2, r1
 80015c0:	4611      	mov	r1, r2
 80015c2:	4a2b      	ldr	r2, [pc, #172]	@ (8001670 <GPIO_Init+0x194>)
 80015c4:	430b      	orrs	r3, r1
 80015c6:	6093      	str	r3, [r2, #8]
		    EXTI->FTSR |= (1 << hGPIO->Init.Pin);
 80015c8:	4b29      	ldr	r3, [pc, #164]	@ (8001670 <GPIO_Init+0x194>)
 80015ca:	68db      	ldr	r3, [r3, #12]
 80015cc:	687a      	ldr	r2, [r7, #4]
 80015ce:	7912      	ldrb	r2, [r2, #4]
 80015d0:	4611      	mov	r1, r2
 80015d2:	2201      	movs	r2, #1
 80015d4:	408a      	lsls	r2, r1
 80015d6:	4611      	mov	r1, r2
 80015d8:	4a25      	ldr	r2, [pc, #148]	@ (8001670 <GPIO_Init+0x194>)
 80015da:	430b      	orrs	r3, r1
 80015dc:	60d3      	str	r3, [r2, #12]
	    }
	    // Configure the GPIO port selection in SYSCFG_EXTICR
	    uint8_t tmp1 = hGPIO->Init.Pin / 4;
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	791b      	ldrb	r3, [r3, #4]
 80015e2:	089b      	lsrs	r3, r3, #2
 80015e4:	75fb      	strb	r3, [r7, #23]
	    uint8_t tmp2 = hGPIO->Init.Pin % 4;
 80015e6:	687b      	ldr	r3, [r7, #4]
 80015e8:	791b      	ldrb	r3, [r3, #4]
 80015ea:	f003 0303 	and.w	r3, r3, #3
 80015ee:	75bb      	strb	r3, [r7, #22]
	    uint8_t portCode = GPIO_BASEADDR_TO_CODE(hGPIO->pGPIOx);
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	4a1f      	ldr	r2, [pc, #124]	@ (8001674 <GPIO_Init+0x198>)
 80015f6:	4293      	cmp	r3, r2
 80015f8:	d04e      	beq.n	8001698 <GPIO_Init+0x1bc>
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	4a1e      	ldr	r2, [pc, #120]	@ (8001678 <GPIO_Init+0x19c>)
 8001600:	4293      	cmp	r3, r2
 8001602:	d032      	beq.n	800166a <GPIO_Init+0x18e>
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	4a1c      	ldr	r2, [pc, #112]	@ (800167c <GPIO_Init+0x1a0>)
 800160a:	4293      	cmp	r3, r2
 800160c:	d02b      	beq.n	8001666 <GPIO_Init+0x18a>
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	4a1b      	ldr	r2, [pc, #108]	@ (8001680 <GPIO_Init+0x1a4>)
 8001614:	4293      	cmp	r3, r2
 8001616:	d024      	beq.n	8001662 <GPIO_Init+0x186>
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	681b      	ldr	r3, [r3, #0]
 800161c:	4a19      	ldr	r2, [pc, #100]	@ (8001684 <GPIO_Init+0x1a8>)
 800161e:	4293      	cmp	r3, r2
 8001620:	d01d      	beq.n	800165e <GPIO_Init+0x182>
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	681b      	ldr	r3, [r3, #0]
 8001626:	4a18      	ldr	r2, [pc, #96]	@ (8001688 <GPIO_Init+0x1ac>)
 8001628:	4293      	cmp	r3, r2
 800162a:	d016      	beq.n	800165a <GPIO_Init+0x17e>
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	4a16      	ldr	r2, [pc, #88]	@ (800168c <GPIO_Init+0x1b0>)
 8001632:	4293      	cmp	r3, r2
 8001634:	d00f      	beq.n	8001656 <GPIO_Init+0x17a>
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	4a15      	ldr	r2, [pc, #84]	@ (8001690 <GPIO_Init+0x1b4>)
 800163c:	4293      	cmp	r3, r2
 800163e:	d008      	beq.n	8001652 <GPIO_Init+0x176>
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	681b      	ldr	r3, [r3, #0]
 8001644:	4a13      	ldr	r2, [pc, #76]	@ (8001694 <GPIO_Init+0x1b8>)
 8001646:	4293      	cmp	r3, r2
 8001648:	d101      	bne.n	800164e <GPIO_Init+0x172>
 800164a:	2308      	movs	r3, #8
 800164c:	e025      	b.n	800169a <GPIO_Init+0x1be>
 800164e:	2300      	movs	r3, #0
 8001650:	e023      	b.n	800169a <GPIO_Init+0x1be>
 8001652:	2307      	movs	r3, #7
 8001654:	e021      	b.n	800169a <GPIO_Init+0x1be>
 8001656:	2306      	movs	r3, #6
 8001658:	e01f      	b.n	800169a <GPIO_Init+0x1be>
 800165a:	2305      	movs	r3, #5
 800165c:	e01d      	b.n	800169a <GPIO_Init+0x1be>
 800165e:	2304      	movs	r3, #4
 8001660:	e01b      	b.n	800169a <GPIO_Init+0x1be>
 8001662:	2303      	movs	r3, #3
 8001664:	e019      	b.n	800169a <GPIO_Init+0x1be>
 8001666:	2302      	movs	r3, #2
 8001668:	e017      	b.n	800169a <GPIO_Init+0x1be>
 800166a:	2301      	movs	r3, #1
 800166c:	e015      	b.n	800169a <GPIO_Init+0x1be>
 800166e:	bf00      	nop
 8001670:	40013c00 	.word	0x40013c00
 8001674:	40020000 	.word	0x40020000
 8001678:	40020400 	.word	0x40020400
 800167c:	40020800 	.word	0x40020800
 8001680:	40020c00 	.word	0x40020c00
 8001684:	40021000 	.word	0x40021000
 8001688:	40021400 	.word	0x40021400
 800168c:	40021800 	.word	0x40021800
 8001690:	40021c00 	.word	0x40021c00
 8001694:	40022000 	.word	0x40022000
 8001698:	2300      	movs	r3, #0
 800169a:	757b      	strb	r3, [r7, #21]
	    SYSCFG_CLK_ENABLE();
 800169c:	4b65      	ldr	r3, [pc, #404]	@ (8001834 <GPIO_Init+0x358>)
 800169e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80016a0:	4a64      	ldr	r2, [pc, #400]	@ (8001834 <GPIO_Init+0x358>)
 80016a2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80016a6:	6453      	str	r3, [r2, #68]	@ 0x44
	    SYSCFG->EXTICR[tmp1] &= ~(0xF << (tmp2 * 4)); // Clear bits first
 80016a8:	4a63      	ldr	r2, [pc, #396]	@ (8001838 <GPIO_Init+0x35c>)
 80016aa:	7dfb      	ldrb	r3, [r7, #23]
 80016ac:	3302      	adds	r3, #2
 80016ae:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80016b2:	7dbb      	ldrb	r3, [r7, #22]
 80016b4:	009b      	lsls	r3, r3, #2
 80016b6:	210f      	movs	r1, #15
 80016b8:	fa01 f303 	lsl.w	r3, r1, r3
 80016bc:	43db      	mvns	r3, r3
 80016be:	4618      	mov	r0, r3
 80016c0:	495d      	ldr	r1, [pc, #372]	@ (8001838 <GPIO_Init+0x35c>)
 80016c2:	7dfb      	ldrb	r3, [r7, #23]
 80016c4:	4002      	ands	r2, r0
 80016c6:	3302      	adds	r3, #2
 80016c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	    SYSCFG->EXTICR[tmp1] |= portCode << (tmp2 * 4);
 80016cc:	4a5a      	ldr	r2, [pc, #360]	@ (8001838 <GPIO_Init+0x35c>)
 80016ce:	7dfb      	ldrb	r3, [r7, #23]
 80016d0:	3302      	adds	r3, #2
 80016d2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80016d6:	7d79      	ldrb	r1, [r7, #21]
 80016d8:	7dbb      	ldrb	r3, [r7, #22]
 80016da:	009b      	lsls	r3, r3, #2
 80016dc:	fa01 f303 	lsl.w	r3, r1, r3
 80016e0:	4618      	mov	r0, r3
 80016e2:	4955      	ldr	r1, [pc, #340]	@ (8001838 <GPIO_Init+0x35c>)
 80016e4:	7dfb      	ldrb	r3, [r7, #23]
 80016e6:	4302      	orrs	r2, r0
 80016e8:	3302      	adds	r3, #2
 80016ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

	    // Enable the EXTI Interrupt delivery using IMR
	    EXTI->IMR |= 1 << hGPIO->Init.Pin;
 80016ee:	4b53      	ldr	r3, [pc, #332]	@ (800183c <GPIO_Init+0x360>)
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	687a      	ldr	r2, [r7, #4]
 80016f4:	7912      	ldrb	r2, [r2, #4]
 80016f6:	4611      	mov	r1, r2
 80016f8:	2201      	movs	r2, #1
 80016fa:	408a      	lsls	r2, r1
 80016fc:	4611      	mov	r1, r2
 80016fe:	4a4f      	ldr	r2, [pc, #316]	@ (800183c <GPIO_Init+0x360>)
 8001700:	430b      	orrs	r3, r1
 8001702:	6013      	str	r3, [r2, #0]
    }

    // 2. Configure speed
    temp = ((hGPIO->Init.Speed) << (2 * hGPIO->Init.Pin));
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	79db      	ldrb	r3, [r3, #7]
 8001708:	461a      	mov	r2, r3
 800170a:	687b      	ldr	r3, [r7, #4]
 800170c:	791b      	ldrb	r3, [r3, #4]
 800170e:	005b      	lsls	r3, r3, #1
 8001710:	fa02 f303 	lsl.w	r3, r2, r3
 8001714:	613b      	str	r3, [r7, #16]
    hGPIO->pGPIOx->OSPEEDR &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	689a      	ldr	r2, [r3, #8]
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	791b      	ldrb	r3, [r3, #4]
 8001720:	005b      	lsls	r3, r3, #1
 8001722:	2103      	movs	r1, #3
 8001724:	fa01 f303 	lsl.w	r3, r1, r3
 8001728:	43db      	mvns	r3, r3
 800172a:	4619      	mov	r1, r3
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	400a      	ands	r2, r1
 8001732:	609a      	str	r2, [r3, #8]
    hGPIO->pGPIOx->OSPEEDR |= temp;
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	681b      	ldr	r3, [r3, #0]
 8001738:	6899      	ldr	r1, [r3, #8]
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	681b      	ldr	r3, [r3, #0]
 800173e:	693a      	ldr	r2, [r7, #16]
 8001740:	430a      	orrs	r2, r1
 8001742:	609a      	str	r2, [r3, #8]

    // 3. Configure pull settings
    temp = (hGPIO->Init.Pull) << (2 * hGPIO->Init.Pin);
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	799b      	ldrb	r3, [r3, #6]
 8001748:	461a      	mov	r2, r3
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	791b      	ldrb	r3, [r3, #4]
 800174e:	005b      	lsls	r3, r3, #1
 8001750:	fa02 f303 	lsl.w	r3, r2, r3
 8001754:	613b      	str	r3, [r7, #16]
    hGPIO->pGPIOx->PUPDR &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 8001756:	687b      	ldr	r3, [r7, #4]
 8001758:	681b      	ldr	r3, [r3, #0]
 800175a:	68da      	ldr	r2, [r3, #12]
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	791b      	ldrb	r3, [r3, #4]
 8001760:	005b      	lsls	r3, r3, #1
 8001762:	2103      	movs	r1, #3
 8001764:	fa01 f303 	lsl.w	r3, r1, r3
 8001768:	43db      	mvns	r3, r3
 800176a:	4619      	mov	r1, r3
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	681b      	ldr	r3, [r3, #0]
 8001770:	400a      	ands	r2, r1
 8001772:	60da      	str	r2, [r3, #12]
    hGPIO->pGPIOx->PUPDR |= temp;
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	681b      	ldr	r3, [r3, #0]
 8001778:	68d9      	ldr	r1, [r3, #12]
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	681b      	ldr	r3, [r3, #0]
 800177e:	693a      	ldr	r2, [r7, #16]
 8001780:	430a      	orrs	r2, r1
 8001782:	60da      	str	r2, [r3, #12]

    // 4. Configure OPType
    temp = (hGPIO->Init.OPType) << hGPIO->Init.Pin;
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	7a1b      	ldrb	r3, [r3, #8]
 8001788:	461a      	mov	r2, r3
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	791b      	ldrb	r3, [r3, #4]
 800178e:	fa02 f303 	lsl.w	r3, r2, r3
 8001792:	613b      	str	r3, [r7, #16]
    hGPIO->pGPIOx->OTYPER &= ~(0x1 << hGPIO->Init.Pin); // clearing
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	685a      	ldr	r2, [r3, #4]
 800179a:	687b      	ldr	r3, [r7, #4]
 800179c:	791b      	ldrb	r3, [r3, #4]
 800179e:	4619      	mov	r1, r3
 80017a0:	2301      	movs	r3, #1
 80017a2:	408b      	lsls	r3, r1
 80017a4:	43db      	mvns	r3, r3
 80017a6:	4619      	mov	r1, r3
 80017a8:	687b      	ldr	r3, [r7, #4]
 80017aa:	681b      	ldr	r3, [r3, #0]
 80017ac:	400a      	ands	r2, r1
 80017ae:	605a      	str	r2, [r3, #4]
    hGPIO->pGPIOx->OTYPER |= temp;
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	6859      	ldr	r1, [r3, #4]
 80017b6:	687b      	ldr	r3, [r7, #4]
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	693a      	ldr	r2, [r7, #16]
 80017bc:	430a      	orrs	r2, r1
 80017be:	605a      	str	r2, [r3, #4]

    // 5. Configure the alternate function
    if (hGPIO->Init.Mode == GPIO_MODE_AF) {
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	795b      	ldrb	r3, [r3, #5]
 80017c4:	2b02      	cmp	r3, #2
 80017c6:	d131      	bne.n	800182c <GPIO_Init+0x350>
	    uint8_t temp1, temp2;

	    temp1 = hGPIO->Init.Pin / 8; // AFR[0] or AFR[1]
 80017c8:	687b      	ldr	r3, [r7, #4]
 80017ca:	791b      	ldrb	r3, [r3, #4]
 80017cc:	08db      	lsrs	r3, r3, #3
 80017ce:	73fb      	strb	r3, [r7, #15]
	    temp2 = hGPIO->Init.Pin % 8; // Position in AFR register
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	791b      	ldrb	r3, [r3, #4]
 80017d4:	f003 0307 	and.w	r3, r3, #7
 80017d8:	73bb      	strb	r3, [r7, #14]
	    hGPIO->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // clearing
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	7bfa      	ldrb	r2, [r7, #15]
 80017e0:	3208      	adds	r2, #8
 80017e2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80017e6:	7bbb      	ldrb	r3, [r7, #14]
 80017e8:	009b      	lsls	r3, r3, #2
 80017ea:	220f      	movs	r2, #15
 80017ec:	fa02 f303 	lsl.w	r3, r2, r3
 80017f0:	43db      	mvns	r3, r3
 80017f2:	4618      	mov	r0, r3
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	681b      	ldr	r3, [r3, #0]
 80017f8:	7bfa      	ldrb	r2, [r7, #15]
 80017fa:	4001      	ands	r1, r0
 80017fc:	3208      	adds	r2, #8
 80017fe:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	    hGPIO->pGPIOx->AFR[temp1] |= (hGPIO->Init.Alternate << (4 * temp2));
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	681b      	ldr	r3, [r3, #0]
 8001806:	7bfa      	ldrb	r2, [r7, #15]
 8001808:	3208      	adds	r2, #8
 800180a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	7a5b      	ldrb	r3, [r3, #9]
 8001812:	461a      	mov	r2, r3
 8001814:	7bbb      	ldrb	r3, [r7, #14]
 8001816:	009b      	lsls	r3, r3, #2
 8001818:	fa02 f303 	lsl.w	r3, r2, r3
 800181c:	4618      	mov	r0, r3
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	7bfa      	ldrb	r2, [r7, #15]
 8001824:	4301      	orrs	r1, r0
 8001826:	3208      	adds	r2, #8
 8001828:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }
}
 800182c:	bf00      	nop
 800182e:	3718      	adds	r7, #24
 8001830:	46bd      	mov	sp, r7
 8001832:	bd80      	pop	{r7, pc}
 8001834:	40023800 	.word	0x40023800
 8001838:	40013800 	.word	0x40013800
 800183c:	40013c00 	.word	0x40013c00

08001840 <GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the pin
  *            @arg GPIO_PIN_SET: to set the pin
  * @retval None
  */
void GPIO_WritePin(GPIO_RegDef_t *pGPIOx, uint8_t GPIO_pin, uint8_t pinState)
{
 8001840:	b480      	push	{r7}
 8001842:	b083      	sub	sp, #12
 8001844:	af00      	add	r7, sp, #0
 8001846:	6078      	str	r0, [r7, #4]
 8001848:	460b      	mov	r3, r1
 800184a:	70fb      	strb	r3, [r7, #3]
 800184c:	4613      	mov	r3, r2
 800184e:	70bb      	strb	r3, [r7, #2]
	if (pinState == GPIO_PIN_SET) {
 8001850:	78bb      	ldrb	r3, [r7, #2]
 8001852:	2b01      	cmp	r3, #1
 8001854:	d107      	bne.n	8001866 <GPIO_WritePin+0x26>
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR = (1 << GPIO_pin);
 8001856:	78fb      	ldrb	r3, [r7, #3]
 8001858:	2201      	movs	r2, #1
 800185a:	fa02 f303 	lsl.w	r3, r2, r3
 800185e:	461a      	mov	r2, r3
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	615a      	str	r2, [r3, #20]
	}else {
		// write 0
		pGPIOx->ODR &= ~(1 << GPIO_pin);
	}
}
 8001864:	e009      	b.n	800187a <GPIO_WritePin+0x3a>
		pGPIOx->ODR &= ~(1 << GPIO_pin);
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	695b      	ldr	r3, [r3, #20]
 800186a:	78fa      	ldrb	r2, [r7, #3]
 800186c:	2101      	movs	r1, #1
 800186e:	fa01 f202 	lsl.w	r2, r1, r2
 8001872:	43d2      	mvns	r2, r2
 8001874:	401a      	ands	r2, r3
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	615a      	str	r2, [r3, #20]
}
 800187a:	bf00      	nop
 800187c:	370c      	adds	r7, #12
 800187e:	46bd      	mov	sp, r7
 8001880:	bc80      	pop	{r7}
 8001882:	4770      	bx	lr

08001884 <TIM_PeriClockControl>:
  * @brief  Initializes the TIMx peripheral according to the specified parameters in the TIMx_Init.
  * @param  clockState Specifies whether to ENABLE or DISABLE of the clock for the TIM2 peripheral.
  * @retval None
  */
void TIM_PeriClockControl(TIM_RegDef_t *pTIMx, uint8_t clockState)
{
 8001884:	b480      	push	{r7}
 8001886:	b083      	sub	sp, #12
 8001888:	af00      	add	r7, sp, #0
 800188a:	6078      	str	r0, [r7, #4]
 800188c:	460b      	mov	r3, r1
 800188e:	70fb      	strb	r3, [r7, #3]
    if (clockState == ENABLE)
 8001890:	78fb      	ldrb	r3, [r7, #3]
 8001892:	2b01      	cmp	r3, #1
 8001894:	f040 809b 	bne.w	80019ce <TIM_PeriClockControl+0x14a>
    {
        if (pTIMx == TIM1)       TIM1_CLK_ENABLE();
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	4a89      	ldr	r2, [pc, #548]	@ (8001ac0 <TIM_PeriClockControl+0x23c>)
 800189c:	4293      	cmp	r3, r2
 800189e:	d106      	bne.n	80018ae <TIM_PeriClockControl+0x2a>
 80018a0:	4b88      	ldr	r3, [pc, #544]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018a4:	4a87      	ldr	r2, [pc, #540]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018a6:	f043 0301 	orr.w	r3, r3, #1
 80018aa:	6453      	str	r3, [r2, #68]	@ 0x44
        else if (pTIMx == TIM11) TIM11_CLK_DISABLE();
        else if (pTIMx == TIM12) TIM12_CLK_DISABLE();
        else if (pTIMx == TIM13) TIM13_CLK_DISABLE();
        else if (pTIMx == TIM14) TIM14_CLK_DISABLE();
    }
}
 80018ac:	e144      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM2)  TIM2_CLK_ENABLE();
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80018b4:	d106      	bne.n	80018c4 <TIM_PeriClockControl+0x40>
 80018b6:	4b83      	ldr	r3, [pc, #524]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018ba:	4a82      	ldr	r2, [pc, #520]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018bc:	f043 0301 	orr.w	r3, r3, #1
 80018c0:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80018c2:	e139      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM3)  TIM3_CLK_ENABLE();
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	4a80      	ldr	r2, [pc, #512]	@ (8001ac8 <TIM_PeriClockControl+0x244>)
 80018c8:	4293      	cmp	r3, r2
 80018ca:	d106      	bne.n	80018da <TIM_PeriClockControl+0x56>
 80018cc:	4b7d      	ldr	r3, [pc, #500]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018d0:	4a7c      	ldr	r2, [pc, #496]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018d2:	f043 0302 	orr.w	r3, r3, #2
 80018d6:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80018d8:	e12e      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM4)  TIM4_CLK_ENABLE();
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	4a7b      	ldr	r2, [pc, #492]	@ (8001acc <TIM_PeriClockControl+0x248>)
 80018de:	4293      	cmp	r3, r2
 80018e0:	d106      	bne.n	80018f0 <TIM_PeriClockControl+0x6c>
 80018e2:	4b78      	ldr	r3, [pc, #480]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018e6:	4a77      	ldr	r2, [pc, #476]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018e8:	f043 0304 	orr.w	r3, r3, #4
 80018ec:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80018ee:	e123      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM5)  TIM5_CLK_ENABLE();
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	4a77      	ldr	r2, [pc, #476]	@ (8001ad0 <TIM_PeriClockControl+0x24c>)
 80018f4:	4293      	cmp	r3, r2
 80018f6:	d106      	bne.n	8001906 <TIM_PeriClockControl+0x82>
 80018f8:	4b72      	ldr	r3, [pc, #456]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018fc:	4a71      	ldr	r2, [pc, #452]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80018fe:	f043 0308 	orr.w	r3, r3, #8
 8001902:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001904:	e118      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM6)  TIM6_CLK_ENABLE();
 8001906:	687b      	ldr	r3, [r7, #4]
 8001908:	4a72      	ldr	r2, [pc, #456]	@ (8001ad4 <TIM_PeriClockControl+0x250>)
 800190a:	4293      	cmp	r3, r2
 800190c:	d106      	bne.n	800191c <TIM_PeriClockControl+0x98>
 800190e:	4b6d      	ldr	r3, [pc, #436]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001910:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001912:	4a6c      	ldr	r2, [pc, #432]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001914:	f043 0310 	orr.w	r3, r3, #16
 8001918:	6413      	str	r3, [r2, #64]	@ 0x40
}
 800191a:	e10d      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM7)  TIM7_CLK_ENABLE();
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	4a6e      	ldr	r2, [pc, #440]	@ (8001ad8 <TIM_PeriClockControl+0x254>)
 8001920:	4293      	cmp	r3, r2
 8001922:	d106      	bne.n	8001932 <TIM_PeriClockControl+0xae>
 8001924:	4b67      	ldr	r3, [pc, #412]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001926:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001928:	4a66      	ldr	r2, [pc, #408]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 800192a:	f043 0320 	orr.w	r3, r3, #32
 800192e:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001930:	e102      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM8)  TIM8_CLK_ENABLE();
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	4a69      	ldr	r2, [pc, #420]	@ (8001adc <TIM_PeriClockControl+0x258>)
 8001936:	4293      	cmp	r3, r2
 8001938:	d106      	bne.n	8001948 <TIM_PeriClockControl+0xc4>
 800193a:	4b62      	ldr	r3, [pc, #392]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 800193c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800193e:	4a61      	ldr	r2, [pc, #388]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001940:	f043 0302 	orr.w	r3, r3, #2
 8001944:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001946:	e0f7      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM9)  TIM9_CLK_ENABLE();
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	4a65      	ldr	r2, [pc, #404]	@ (8001ae0 <TIM_PeriClockControl+0x25c>)
 800194c:	4293      	cmp	r3, r2
 800194e:	d106      	bne.n	800195e <TIM_PeriClockControl+0xda>
 8001950:	4b5c      	ldr	r3, [pc, #368]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001952:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001954:	4a5b      	ldr	r2, [pc, #364]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001956:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800195a:	6453      	str	r3, [r2, #68]	@ 0x44
}
 800195c:	e0ec      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM10) TIM10_CLK_ENABLE();
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	4a60      	ldr	r2, [pc, #384]	@ (8001ae4 <TIM_PeriClockControl+0x260>)
 8001962:	4293      	cmp	r3, r2
 8001964:	d106      	bne.n	8001974 <TIM_PeriClockControl+0xf0>
 8001966:	4b57      	ldr	r3, [pc, #348]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001968:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800196a:	4a56      	ldr	r2, [pc, #344]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 800196c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001970:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001972:	e0e1      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM11) TIM11_CLK_ENABLE();
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	4a5c      	ldr	r2, [pc, #368]	@ (8001ae8 <TIM_PeriClockControl+0x264>)
 8001978:	4293      	cmp	r3, r2
 800197a:	d106      	bne.n	800198a <TIM_PeriClockControl+0x106>
 800197c:	4b51      	ldr	r3, [pc, #324]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 800197e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001980:	4a50      	ldr	r2, [pc, #320]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001982:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001986:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001988:	e0d6      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM12) TIM12_CLK_ENABLE();
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	4a57      	ldr	r2, [pc, #348]	@ (8001aec <TIM_PeriClockControl+0x268>)
 800198e:	4293      	cmp	r3, r2
 8001990:	d106      	bne.n	80019a0 <TIM_PeriClockControl+0x11c>
 8001992:	4b4c      	ldr	r3, [pc, #304]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001994:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001996:	4a4b      	ldr	r2, [pc, #300]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001998:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800199c:	6413      	str	r3, [r2, #64]	@ 0x40
}
 800199e:	e0cb      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM13) TIM13_CLK_ENABLE();
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	4a53      	ldr	r2, [pc, #332]	@ (8001af0 <TIM_PeriClockControl+0x26c>)
 80019a4:	4293      	cmp	r3, r2
 80019a6:	d106      	bne.n	80019b6 <TIM_PeriClockControl+0x132>
 80019a8:	4b46      	ldr	r3, [pc, #280]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80019aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019ac:	4a45      	ldr	r2, [pc, #276]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80019ae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80019b2:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80019b4:	e0c0      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM14) TIM14_CLK_ENABLE();
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	4a4e      	ldr	r2, [pc, #312]	@ (8001af4 <TIM_PeriClockControl+0x270>)
 80019ba:	4293      	cmp	r3, r2
 80019bc:	f040 80bc 	bne.w	8001b38 <TIM_PeriClockControl+0x2b4>
 80019c0:	4b40      	ldr	r3, [pc, #256]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80019c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019c4:	4a3f      	ldr	r2, [pc, #252]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80019c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80019ca:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80019cc:	e0b4      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        if (pTIMx == TIM1)       TIM1_CLK_DISABLE();
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	4a3b      	ldr	r2, [pc, #236]	@ (8001ac0 <TIM_PeriClockControl+0x23c>)
 80019d2:	4293      	cmp	r3, r2
 80019d4:	d106      	bne.n	80019e4 <TIM_PeriClockControl+0x160>
 80019d6:	4b3b      	ldr	r3, [pc, #236]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80019d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80019da:	4a3a      	ldr	r2, [pc, #232]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80019dc:	f023 0301 	bic.w	r3, r3, #1
 80019e0:	6453      	str	r3, [r2, #68]	@ 0x44
}
 80019e2:	e0a9      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM2)  TIM2_CLK_DISABLE();
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80019ea:	d106      	bne.n	80019fa <TIM_PeriClockControl+0x176>
 80019ec:	4b35      	ldr	r3, [pc, #212]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80019ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019f0:	4a34      	ldr	r2, [pc, #208]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 80019f2:	f023 0301 	bic.w	r3, r3, #1
 80019f6:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80019f8:	e09e      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM3)  TIM3_CLK_DISABLE();
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	4a32      	ldr	r2, [pc, #200]	@ (8001ac8 <TIM_PeriClockControl+0x244>)
 80019fe:	4293      	cmp	r3, r2
 8001a00:	d106      	bne.n	8001a10 <TIM_PeriClockControl+0x18c>
 8001a02:	4b30      	ldr	r3, [pc, #192]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a06:	4a2f      	ldr	r2, [pc, #188]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a08:	f023 0302 	bic.w	r3, r3, #2
 8001a0c:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001a0e:	e093      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM4)  TIM4_CLK_DISABLE();
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	4a2e      	ldr	r2, [pc, #184]	@ (8001acc <TIM_PeriClockControl+0x248>)
 8001a14:	4293      	cmp	r3, r2
 8001a16:	d106      	bne.n	8001a26 <TIM_PeriClockControl+0x1a2>
 8001a18:	4b2a      	ldr	r3, [pc, #168]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a1c:	4a29      	ldr	r2, [pc, #164]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a1e:	f023 0304 	bic.w	r3, r3, #4
 8001a22:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001a24:	e088      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM5)  TIM5_CLK_DISABLE();
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	4a29      	ldr	r2, [pc, #164]	@ (8001ad0 <TIM_PeriClockControl+0x24c>)
 8001a2a:	4293      	cmp	r3, r2
 8001a2c:	d106      	bne.n	8001a3c <TIM_PeriClockControl+0x1b8>
 8001a2e:	4b25      	ldr	r3, [pc, #148]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a32:	4a24      	ldr	r2, [pc, #144]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a34:	f023 0308 	bic.w	r3, r3, #8
 8001a38:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001a3a:	e07d      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM6)  TIM6_CLK_DISABLE();
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	4a25      	ldr	r2, [pc, #148]	@ (8001ad4 <TIM_PeriClockControl+0x250>)
 8001a40:	4293      	cmp	r3, r2
 8001a42:	d106      	bne.n	8001a52 <TIM_PeriClockControl+0x1ce>
 8001a44:	4b1f      	ldr	r3, [pc, #124]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a48:	4a1e      	ldr	r2, [pc, #120]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a4a:	f023 0310 	bic.w	r3, r3, #16
 8001a4e:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001a50:	e072      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM7)  TIM7_CLK_DISABLE();
 8001a52:	687b      	ldr	r3, [r7, #4]
 8001a54:	4a20      	ldr	r2, [pc, #128]	@ (8001ad8 <TIM_PeriClockControl+0x254>)
 8001a56:	4293      	cmp	r3, r2
 8001a58:	d106      	bne.n	8001a68 <TIM_PeriClockControl+0x1e4>
 8001a5a:	4b1a      	ldr	r3, [pc, #104]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a5e:	4a19      	ldr	r2, [pc, #100]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a60:	f023 0320 	bic.w	r3, r3, #32
 8001a64:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001a66:	e067      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM8)  TIM8_CLK_DISABLE();
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	4a1c      	ldr	r2, [pc, #112]	@ (8001adc <TIM_PeriClockControl+0x258>)
 8001a6c:	4293      	cmp	r3, r2
 8001a6e:	d106      	bne.n	8001a7e <TIM_PeriClockControl+0x1fa>
 8001a70:	4b14      	ldr	r3, [pc, #80]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a72:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a74:	4a13      	ldr	r2, [pc, #76]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a76:	f023 0302 	bic.w	r3, r3, #2
 8001a7a:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001a7c:	e05c      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM9)  TIM9_CLK_DISABLE();
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	4a17      	ldr	r2, [pc, #92]	@ (8001ae0 <TIM_PeriClockControl+0x25c>)
 8001a82:	4293      	cmp	r3, r2
 8001a84:	d106      	bne.n	8001a94 <TIM_PeriClockControl+0x210>
 8001a86:	4b0f      	ldr	r3, [pc, #60]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a88:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a8a:	4a0e      	ldr	r2, [pc, #56]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a8c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001a90:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001a92:	e051      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM10) TIM10_CLK_DISABLE();
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	4a13      	ldr	r2, [pc, #76]	@ (8001ae4 <TIM_PeriClockControl+0x260>)
 8001a98:	4293      	cmp	r3, r2
 8001a9a:	d106      	bne.n	8001aaa <TIM_PeriClockControl+0x226>
 8001a9c:	4b09      	ldr	r3, [pc, #36]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001a9e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001aa0:	4a08      	ldr	r2, [pc, #32]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001aa2:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8001aa6:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001aa8:	e046      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM11) TIM11_CLK_DISABLE();
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	4a0e      	ldr	r2, [pc, #56]	@ (8001ae8 <TIM_PeriClockControl+0x264>)
 8001aae:	4293      	cmp	r3, r2
 8001ab0:	d122      	bne.n	8001af8 <TIM_PeriClockControl+0x274>
 8001ab2:	4b04      	ldr	r3, [pc, #16]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001ab4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ab6:	4a03      	ldr	r2, [pc, #12]	@ (8001ac4 <TIM_PeriClockControl+0x240>)
 8001ab8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001abc:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001abe:	e03b      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
 8001ac0:	40010000 	.word	0x40010000
 8001ac4:	40023800 	.word	0x40023800
 8001ac8:	40000400 	.word	0x40000400
 8001acc:	40000800 	.word	0x40000800
 8001ad0:	40000c00 	.word	0x40000c00
 8001ad4:	40001000 	.word	0x40001000
 8001ad8:	40001400 	.word	0x40001400
 8001adc:	40010400 	.word	0x40010400
 8001ae0:	40014000 	.word	0x40014000
 8001ae4:	40014400 	.word	0x40014400
 8001ae8:	40014800 	.word	0x40014800
 8001aec:	40001800 	.word	0x40001800
 8001af0:	40001c00 	.word	0x40001c00
 8001af4:	40002000 	.word	0x40002000
        else if (pTIMx == TIM12) TIM12_CLK_DISABLE();
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	4a12      	ldr	r2, [pc, #72]	@ (8001b44 <TIM_PeriClockControl+0x2c0>)
 8001afc:	4293      	cmp	r3, r2
 8001afe:	d106      	bne.n	8001b0e <TIM_PeriClockControl+0x28a>
 8001b00:	4b11      	ldr	r3, [pc, #68]	@ (8001b48 <TIM_PeriClockControl+0x2c4>)
 8001b02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b04:	4a10      	ldr	r2, [pc, #64]	@ (8001b48 <TIM_PeriClockControl+0x2c4>)
 8001b06:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8001b0a:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001b0c:	e014      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM13) TIM13_CLK_DISABLE();
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	4a0e      	ldr	r2, [pc, #56]	@ (8001b4c <TIM_PeriClockControl+0x2c8>)
 8001b12:	4293      	cmp	r3, r2
 8001b14:	d106      	bne.n	8001b24 <TIM_PeriClockControl+0x2a0>
 8001b16:	4b0c      	ldr	r3, [pc, #48]	@ (8001b48 <TIM_PeriClockControl+0x2c4>)
 8001b18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b1a:	4a0b      	ldr	r2, [pc, #44]	@ (8001b48 <TIM_PeriClockControl+0x2c4>)
 8001b1c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8001b20:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001b22:	e009      	b.n	8001b38 <TIM_PeriClockControl+0x2b4>
        else if (pTIMx == TIM14) TIM14_CLK_DISABLE();
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	4a0a      	ldr	r2, [pc, #40]	@ (8001b50 <TIM_PeriClockControl+0x2cc>)
 8001b28:	4293      	cmp	r3, r2
 8001b2a:	d105      	bne.n	8001b38 <TIM_PeriClockControl+0x2b4>
 8001b2c:	4b06      	ldr	r3, [pc, #24]	@ (8001b48 <TIM_PeriClockControl+0x2c4>)
 8001b2e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b30:	4a05      	ldr	r2, [pc, #20]	@ (8001b48 <TIM_PeriClockControl+0x2c4>)
 8001b32:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001b36:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001b38:	bf00      	nop
 8001b3a:	370c      	adds	r7, #12
 8001b3c:	46bd      	mov	sp, r7
 8001b3e:	bc80      	pop	{r7}
 8001b40:	4770      	bx	lr
 8001b42:	bf00      	nop
 8001b44:	40001800 	.word	0x40001800
 8001b48:	40023800 	.word	0x40023800
 8001b4c:	40001c00 	.word	0x40001c00
 8001b50:	40002000 	.word	0x40002000

08001b54 <TIM_SetConfigPWM>:
                   uint8_t polarity,
                   uint32_t Prescaler,
                   uint32_t Period,
                   uint32_t DutyCycle,
                   uint8_t OCMode)
{
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b084      	sub	sp, #16
 8001b58:	af02      	add	r7, sp, #8
 8001b5a:	6078      	str	r0, [r7, #4]
 8001b5c:	4608      	mov	r0, r1
 8001b5e:	4611      	mov	r1, r2
 8001b60:	461a      	mov	r2, r3
 8001b62:	4603      	mov	r3, r0
 8001b64:	70fb      	strb	r3, [r7, #3]
 8001b66:	460b      	mov	r3, r1
 8001b68:	70bb      	strb	r3, [r7, #2]
 8001b6a:	4613      	mov	r3, r2
 8001b6c:	707b      	strb	r3, [r7, #1]
    // 1. Configure counter mode (up/down/center-aligned)
    TIM_SetCounterMode(pTIMx, CounterMode);
 8001b6e:	78fb      	ldrb	r3, [r7, #3]
 8001b70:	4619      	mov	r1, r3
 8001b72:	6878      	ldr	r0, [r7, #4]
 8001b74:	f000 f9f2 	bl	8001f5c <TIM_SetCounterMode>

    // 2. Configure clock division = no division (CKD = 00)
    pTIMx->CR1 &= ~TIM_CR1_CKD;
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	601a      	str	r2, [r3, #0]
    pTIMx->CR1 |= 0;
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	681a      	ldr	r2, [r3, #0]
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	601a      	str	r2, [r3, #0]

    // 3. Set prescaler, period, and duty cycle
    TIM_ConfigTimeBase(pTIMx, Prescaler, Period, DutyCycle, Channel);
 8001b8c:	78bb      	ldrb	r3, [r7, #2]
 8001b8e:	9300      	str	r3, [sp, #0]
 8001b90:	69bb      	ldr	r3, [r7, #24]
 8001b92:	697a      	ldr	r2, [r7, #20]
 8001b94:	6939      	ldr	r1, [r7, #16]
 8001b96:	6878      	ldr	r0, [r7, #4]
 8001b98:	f000 f94c 	bl	8001e34 <TIM_ConfigTimeBase>

    // 4. Enable counter
    TIM_CounterControl(pTIMx, ENABLE);
 8001b9c:	2101      	movs	r1, #1
 8001b9e:	6878      	ldr	r0, [r7, #4]
 8001ba0:	f000 fa20 	bl	8001fe4 <TIM_CounterControl>

    // 5. Enable output compare for the given channel
    TIM_ChannelOutputControl(pTIMx, Channel, ENABLE);
 8001ba4:	78bb      	ldrb	r3, [r7, #2]
 8001ba6:	2201      	movs	r2, #1
 8001ba8:	4619      	mov	r1, r3
 8001baa:	6878      	ldr	r0, [r7, #4]
 8001bac:	f000 f8e2 	bl	8001d74 <TIM_ChannelOutputControl>

    // 6. Set output polarity
    TIM_SetChannelPolarity(pTIMx, Channel, polarity);
 8001bb0:	787a      	ldrb	r2, [r7, #1]
 8001bb2:	78bb      	ldrb	r3, [r7, #2]
 8001bb4:	4619      	mov	r1, r3
 8001bb6:	6878      	ldr	r0, [r7, #4]
 8001bb8:	f000 f87c 	bl	8001cb4 <TIM_SetChannelPolarity>

    // 7. Set Output Compare mode (e.g., PWM1, PWM2, toggle, etc.)
    TIM_SetOCMode(pTIMx, Channel, OCMode);
 8001bbc:	7f3a      	ldrb	r2, [r7, #28]
 8001bbe:	78bb      	ldrb	r3, [r7, #2]
 8001bc0:	4619      	mov	r1, r3
 8001bc2:	6878      	ldr	r0, [r7, #4]
 8001bc4:	f000 f976 	bl	8001eb4 <TIM_SetOCMode>

    // 8. Generate an update event to load all the registers
    pTIMx->EGR |= TIM_EGR_UG;
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	695b      	ldr	r3, [r3, #20]
 8001bcc:	f043 0201 	orr.w	r2, r3, #1
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	615a      	str	r2, [r3, #20]
}
 8001bd4:	bf00      	nop
 8001bd6:	3708      	adds	r7, #8
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	bd80      	pop	{r7, pc}

08001bdc <GPIO_Init_TIM>:
 * @brief  Initializes the GPIO pin for the specified timer channel.
 * @param  channel: Specifies the timer channel to configure the GPIO for.
 * @retval None
 */
void GPIO_Init_TIM(uint8_t channel)
{
 8001bdc:	b580      	push	{r7, lr}
 8001bde:	b086      	sub	sp, #24
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	4603      	mov	r3, r0
 8001be4:	71fb      	strb	r3, [r7, #7]
    GPIO_HandleTypeDef GPIO_InitStruct;

    GPIO_InitStruct.pGPIOx = GPIOA;
 8001be6:	4b20      	ldr	r3, [pc, #128]	@ (8001c68 <GPIO_Init_TIM+0x8c>)
 8001be8:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Init.Mode = GPIO_MODE_AF;
 8001bea:	2302      	movs	r3, #2
 8001bec:	747b      	strb	r3, [r7, #17]
    GPIO_InitStruct.Init.OPType = GPIO_OPTYPE_PP;
 8001bee:	2300      	movs	r3, #0
 8001bf0:	753b      	strb	r3, [r7, #20]
    GPIO_InitStruct.Init.Pull = GPIO_NOPULL;
 8001bf2:	2300      	movs	r3, #0
 8001bf4:	74bb      	strb	r3, [r7, #18]
    GPIO_InitStruct.Init.Speed = GPIO_SPEED_LOW;
 8001bf6:	2300      	movs	r3, #0
 8001bf8:	74fb      	strb	r3, [r7, #19]
    GPIO_InitStruct.Init.Alternate = 1; // TIM2 uses AF1 on PA0–PA3
 8001bfa:	2301      	movs	r3, #1
 8001bfc:	757b      	strb	r3, [r7, #21]

    switch (channel)
 8001bfe:	79fb      	ldrb	r3, [r7, #7]
 8001c00:	2b03      	cmp	r3, #3
 8001c02:	d82b      	bhi.n	8001c5c <GPIO_Init_TIM+0x80>
 8001c04:	a201      	add	r2, pc, #4	@ (adr r2, 8001c0c <GPIO_Init_TIM+0x30>)
 8001c06:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001c0a:	bf00      	nop
 8001c0c:	08001c1d 	.word	0x08001c1d
 8001c10:	08001c2d 	.word	0x08001c2d
 8001c14:	08001c3d 	.word	0x08001c3d
 8001c18:	08001c4d 	.word	0x08001c4d
    {
        case TIM_CHANNEL_1: // PA0
            GPIO_InitStruct.Init.Pin = GPIO_PIN_0;
 8001c1c:	2300      	movs	r3, #0
 8001c1e:	743b      	strb	r3, [r7, #16]
            GPIO_Init(&GPIO_InitStruct);
 8001c20:	f107 030c 	add.w	r3, r7, #12
 8001c24:	4618      	mov	r0, r3
 8001c26:	f7ff fc59 	bl	80014dc <GPIO_Init>
            break;
 8001c2a:	e018      	b.n	8001c5e <GPIO_Init_TIM+0x82>

        case TIM_CHANNEL_2: // PA1
            GPIO_InitStruct.Init.Pin = GPIO_PIN_1;
 8001c2c:	2301      	movs	r3, #1
 8001c2e:	743b      	strb	r3, [r7, #16]
            GPIO_Init(&GPIO_InitStruct);
 8001c30:	f107 030c 	add.w	r3, r7, #12
 8001c34:	4618      	mov	r0, r3
 8001c36:	f7ff fc51 	bl	80014dc <GPIO_Init>
            break;
 8001c3a:	e010      	b.n	8001c5e <GPIO_Init_TIM+0x82>

        case TIM_CHANNEL_3: // PA2
            GPIO_InitStruct.Init.Pin = GPIO_PIN_2;
 8001c3c:	2302      	movs	r3, #2
 8001c3e:	743b      	strb	r3, [r7, #16]
            GPIO_Init(&GPIO_InitStruct);
 8001c40:	f107 030c 	add.w	r3, r7, #12
 8001c44:	4618      	mov	r0, r3
 8001c46:	f7ff fc49 	bl	80014dc <GPIO_Init>
            break;
 8001c4a:	e008      	b.n	8001c5e <GPIO_Init_TIM+0x82>

        case TIM_CHANNEL_4: // PA3
            GPIO_InitStruct.Init.Pin = GPIO_PIN_3;
 8001c4c:	2303      	movs	r3, #3
 8001c4e:	743b      	strb	r3, [r7, #16]
            GPIO_Init(&GPIO_InitStruct);
 8001c50:	f107 030c 	add.w	r3, r7, #12
 8001c54:	4618      	mov	r0, r3
 8001c56:	f7ff fc41 	bl	80014dc <GPIO_Init>
            break;
 8001c5a:	e000      	b.n	8001c5e <GPIO_Init_TIM+0x82>

        default:
            // Invalid channel
            break;
 8001c5c:	bf00      	nop
    }
}
 8001c5e:	bf00      	nop
 8001c60:	3718      	adds	r7, #24
 8001c62:	46bd      	mov	sp, r7
 8001c64:	bd80      	pop	{r7, pc}
 8001c66:	bf00      	nop
 8001c68:	40020000 	.word	0x40020000

08001c6c <TIM_PWM_Init>:
 * @param  TIMx: Pointer to the TIM peripheral register structure.
 * @param  channel: Specifies the timer channel to configure for PWM output.
 * @retval None
 */
void TIM_PWM_Init(TIM_RegDef_t *TIMx,uint8_t channel)
{
 8001c6c:	b580      	push	{r7, lr}
 8001c6e:	b086      	sub	sp, #24
 8001c70:	af04      	add	r7, sp, #16
 8001c72:	6078      	str	r0, [r7, #4]
 8001c74:	460b      	mov	r3, r1
 8001c76:	70fb      	strb	r3, [r7, #3]

	 /* Enable clock for the TIM */
	TIM_PeriClockControl(TIMx, ENABLE);
 8001c78:	2101      	movs	r1, #1
 8001c7a:	6878      	ldr	r0, [r7, #4]
 8001c7c:	f7ff fe02 	bl	8001884 <TIM_PeriClockControl>

	/* GPIO Init for the TIM */
	GPIO_Init_TIM(channel);
 8001c80:	78fb      	ldrb	r3, [r7, #3]
 8001c82:	4618      	mov	r0, r3
 8001c84:	f7ff ffaa 	bl	8001bdc <GPIO_Init_TIM>

	/* Init the base time for the PWM */
	TIM_SetConfigPWM(TIM2, TIM_COUNTERMODE_UP, TIM_CHANNEL_1, TIM_OC_POLARITY_HIGH, 15, 999, 500, TIM_OCMODE_PWM1);
 8001c88:	2306      	movs	r3, #6
 8001c8a:	9303      	str	r3, [sp, #12]
 8001c8c:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001c90:	9302      	str	r3, [sp, #8]
 8001c92:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001c96:	9301      	str	r3, [sp, #4]
 8001c98:	230f      	movs	r3, #15
 8001c9a:	9300      	str	r3, [sp, #0]
 8001c9c:	2300      	movs	r3, #0
 8001c9e:	2200      	movs	r2, #0
 8001ca0:	2100      	movs	r1, #0
 8001ca2:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8001ca6:	f7ff ff55 	bl	8001b54 <TIM_SetConfigPWM>
}
 8001caa:	bf00      	nop
 8001cac:	3708      	adds	r7, #8
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	bd80      	pop	{r7, pc}
	...

08001cb4 <TIM_SetChannelPolarity>:
  * @param  channel  Specifies the TIM channel (TIM_CHANNEL_1 to TIM_CHANNEL_4).
  * @param  polarity Specifies the output polarity (TIM_OC_POLARITY_HIGH or TIM_OC_POLARITY_LOW).
  * @retval None
  */
void TIM_SetChannelPolarity(TIM_RegDef_t *TIMx, uint8_t channel, uint8_t polarity)
{
 8001cb4:	b480      	push	{r7}
 8001cb6:	b083      	sub	sp, #12
 8001cb8:	af00      	add	r7, sp, #0
 8001cba:	6078      	str	r0, [r7, #4]
 8001cbc:	460b      	mov	r3, r1
 8001cbe:	70fb      	strb	r3, [r7, #3]
 8001cc0:	4613      	mov	r3, r2
 8001cc2:	70bb      	strb	r3, [r7, #2]
  switch(channel)
 8001cc4:	78fb      	ldrb	r3, [r7, #3]
 8001cc6:	2b03      	cmp	r3, #3
 8001cc8:	d84e      	bhi.n	8001d68 <TIM_SetChannelPolarity+0xb4>
 8001cca:	a201      	add	r2, pc, #4	@ (adr r2, 8001cd0 <TIM_SetChannelPolarity+0x1c>)
 8001ccc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001cd0:	08001ce1 	.word	0x08001ce1
 8001cd4:	08001d03 	.word	0x08001d03
 8001cd8:	08001d25 	.word	0x08001d25
 8001cdc:	08001d47 	.word	0x08001d47
  {
    case TIM_CHANNEL_1:
	    if (polarity == TIM_OC_POLARITY_LOW)
 8001ce0:	78bb      	ldrb	r3, [r7, #2]
 8001ce2:	2b01      	cmp	r3, #1
 8001ce4:	d106      	bne.n	8001cf4 <TIM_SetChannelPolarity+0x40>
	    {
		    TIMx->CR1 |= (1 << TIM_CCER_CC1P_Pos);
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	f043 0202 	orr.w	r2, r3, #2
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	601a      	str	r2, [r3, #0]
	    }else {
		    TIMx->CR1 &= ~(1 << TIM_CCER_CC1P_Pos);
	    }
	    break;
 8001cf2:	e03a      	b.n	8001d6a <TIM_SetChannelPolarity+0xb6>
		    TIMx->CR1 &= ~(1 << TIM_CCER_CC1P_Pos);
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	681b      	ldr	r3, [r3, #0]
 8001cf8:	f023 0202 	bic.w	r2, r3, #2
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	601a      	str	r2, [r3, #0]
	    break;
 8001d00:	e033      	b.n	8001d6a <TIM_SetChannelPolarity+0xb6>

    case TIM_CHANNEL_2:
	    if (polarity == TIM_OC_POLARITY_LOW)
 8001d02:	78bb      	ldrb	r3, [r7, #2]
 8001d04:	2b01      	cmp	r3, #1
 8001d06:	d106      	bne.n	8001d16 <TIM_SetChannelPolarity+0x62>
	    {
		    TIMx->CR1 |= (1 << TIM_CCER_CC2P_Pos);
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	f043 0220 	orr.w	r2, r3, #32
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	601a      	str	r2, [r3, #0]
	    }else {
		    TIMx->CR1 &= ~(1 << TIM_CCER_CC2P_Pos);
	    }
	    break;
 8001d14:	e029      	b.n	8001d6a <TIM_SetChannelPolarity+0xb6>
		    TIMx->CR1 &= ~(1 << TIM_CCER_CC2P_Pos);
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	f023 0220 	bic.w	r2, r3, #32
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	601a      	str	r2, [r3, #0]
	    break;
 8001d22:	e022      	b.n	8001d6a <TIM_SetChannelPolarity+0xb6>

    case TIM_CHANNEL_3:
	    if (polarity == TIM_OC_POLARITY_LOW)
 8001d24:	78bb      	ldrb	r3, [r7, #2]
 8001d26:	2b01      	cmp	r3, #1
 8001d28:	d106      	bne.n	8001d38 <TIM_SetChannelPolarity+0x84>
	    {
		    TIMx->CR1 |= (1 << TIM_CCER_CC3P_Pos);
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8001d32:	687b      	ldr	r3, [r7, #4]
 8001d34:	601a      	str	r2, [r3, #0]
	    }else {
		    TIMx->CR1 &= ~(1 << TIM_CCER_CC3P_Pos);
	    }
	    break;
 8001d36:	e018      	b.n	8001d6a <TIM_SetChannelPolarity+0xb6>
		    TIMx->CR1 &= ~(1 << TIM_CCER_CC3P_Pos);
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	601a      	str	r2, [r3, #0]
	    break;
 8001d44:	e011      	b.n	8001d6a <TIM_SetChannelPolarity+0xb6>

    case TIM_CHANNEL_4:
	    if (polarity == TIM_OC_POLARITY_LOW)
 8001d46:	78bb      	ldrb	r3, [r7, #2]
 8001d48:	2b01      	cmp	r3, #1
 8001d4a:	d106      	bne.n	8001d5a <TIM_SetChannelPolarity+0xa6>
	    {
		    TIMx->CR1 |= (1 << TIM_CCER_CC4P_Pos);
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	681b      	ldr	r3, [r3, #0]
 8001d50:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	601a      	str	r2, [r3, #0]
	    }else {
		    TIMx->CR1 &= ~(1 << TIM_CCER_CC4P_Pos);
	    }
	    break;
 8001d58:	e007      	b.n	8001d6a <TIM_SetChannelPolarity+0xb6>
		    TIMx->CR1 &= ~(1 << TIM_CCER_CC4P_Pos);
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	601a      	str	r2, [r3, #0]
	    break;
 8001d66:	e000      	b.n	8001d6a <TIM_SetChannelPolarity+0xb6>

    default:
	    /* Nothing to do */
	    break;
 8001d68:	bf00      	nop

  }
}
 8001d6a:	bf00      	nop
 8001d6c:	370c      	adds	r7, #12
 8001d6e:	46bd      	mov	sp, r7
 8001d70:	bc80      	pop	{r7}
 8001d72:	4770      	bx	lr

08001d74 <TIM_ChannelOutputControl>:
  * @param  channel  Specifies the TIM channel (TIM_CHANNEL_1 to TIM_CHANNEL_4).
  * @param  enable   Set to 1 to enable output, 0 to disable output.
  * @retval None
  */
void TIM_ChannelOutputControl(TIM_RegDef_t *TIMx, uint8_t channel, uint8_t State)
{
 8001d74:	b480      	push	{r7}
 8001d76:	b083      	sub	sp, #12
 8001d78:	af00      	add	r7, sp, #0
 8001d7a:	6078      	str	r0, [r7, #4]
 8001d7c:	460b      	mov	r3, r1
 8001d7e:	70fb      	strb	r3, [r7, #3]
 8001d80:	4613      	mov	r3, r2
 8001d82:	70bb      	strb	r3, [r7, #2]
    switch(channel)
 8001d84:	78fb      	ldrb	r3, [r7, #3]
 8001d86:	2b03      	cmp	r3, #3
 8001d88:	d84e      	bhi.n	8001e28 <TIM_ChannelOutputControl+0xb4>
 8001d8a:	a201      	add	r2, pc, #4	@ (adr r2, 8001d90 <TIM_ChannelOutputControl+0x1c>)
 8001d8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001d90:	08001da1 	.word	0x08001da1
 8001d94:	08001dc3 	.word	0x08001dc3
 8001d98:	08001de5 	.word	0x08001de5
 8001d9c:	08001e07 	.word	0x08001e07
    {
        case TIM_CHANNEL_1:
            if (State == ENABLE)
 8001da0:	78bb      	ldrb	r3, [r7, #2]
 8001da2:	2b01      	cmp	r3, #1
 8001da4:	d106      	bne.n	8001db4 <TIM_ChannelOutputControl+0x40>
                TIMx->CCER |= (1 << TIM_CCER_CC1E_Pos);   // CC1E: Capture/Compare 1
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	6a1b      	ldr	r3, [r3, #32]
 8001daa:	f043 0201 	orr.w	r2, r3, #1
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	621a      	str	r2, [r3, #32]
            else
                TIMx->CCER &= ~(1 << TIM_CCER_CC1E_Pos);
            break;
 8001db2:	e03a      	b.n	8001e2a <TIM_ChannelOutputControl+0xb6>
                TIMx->CCER &= ~(1 << TIM_CCER_CC1E_Pos);
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	6a1b      	ldr	r3, [r3, #32]
 8001db8:	f023 0201 	bic.w	r2, r3, #1
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	621a      	str	r2, [r3, #32]
            break;
 8001dc0:	e033      	b.n	8001e2a <TIM_ChannelOutputControl+0xb6>

        case TIM_CHANNEL_2:
            if (State == ENABLE)
 8001dc2:	78bb      	ldrb	r3, [r7, #2]
 8001dc4:	2b01      	cmp	r3, #1
 8001dc6:	d106      	bne.n	8001dd6 <TIM_ChannelOutputControl+0x62>
                TIMx->CCER |= (1 << TIM_CCER_CC2E_Pos);   // CC2E: Capture/Compare 2
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	6a1b      	ldr	r3, [r3, #32]
 8001dcc:	f043 0210 	orr.w	r2, r3, #16
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	621a      	str	r2, [r3, #32]
            else
                TIMx->CCER &= ~(1 << TIM_CCER_CC2E_Pos);
            break;
 8001dd4:	e029      	b.n	8001e2a <TIM_ChannelOutputControl+0xb6>
                TIMx->CCER &= ~(1 << TIM_CCER_CC2E_Pos);
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	6a1b      	ldr	r3, [r3, #32]
 8001dda:	f023 0210 	bic.w	r2, r3, #16
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	621a      	str	r2, [r3, #32]
            break;
 8001de2:	e022      	b.n	8001e2a <TIM_ChannelOutputControl+0xb6>

        case TIM_CHANNEL_3:
            if (State == ENABLE)
 8001de4:	78bb      	ldrb	r3, [r7, #2]
 8001de6:	2b01      	cmp	r3, #1
 8001de8:	d106      	bne.n	8001df8 <TIM_ChannelOutputControl+0x84>
                TIMx->CCER |= (1 << TIM_CCER_CC3E_Pos);   // CC3E: Capture/Compare 3
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	6a1b      	ldr	r3, [r3, #32]
 8001dee:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001df2:	687b      	ldr	r3, [r7, #4]
 8001df4:	621a      	str	r2, [r3, #32]
            else
                TIMx->CCER &= ~(1 << TIM_CCER_CC3E_Pos);
            break;
 8001df6:	e018      	b.n	8001e2a <TIM_ChannelOutputControl+0xb6>
                TIMx->CCER &= ~(1 << TIM_CCER_CC3E_Pos);
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	6a1b      	ldr	r3, [r3, #32]
 8001dfc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	621a      	str	r2, [r3, #32]
            break;
 8001e04:	e011      	b.n	8001e2a <TIM_ChannelOutputControl+0xb6>

        case TIM_CHANNEL_4:
            if (State == ENABLE)
 8001e06:	78bb      	ldrb	r3, [r7, #2]
 8001e08:	2b01      	cmp	r3, #1
 8001e0a:	d106      	bne.n	8001e1a <TIM_ChannelOutputControl+0xa6>
                TIMx->CCER |= (1 << TIM_CCER_CC4E_Pos);  // CC4E: Capture/Compare 4
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	6a1b      	ldr	r3, [r3, #32]
 8001e10:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	621a      	str	r2, [r3, #32]
            else
                TIMx->CCER &= ~(1 << TIM_CCER_CC4E_Pos);
            break;
 8001e18:	e007      	b.n	8001e2a <TIM_ChannelOutputControl+0xb6>
                TIMx->CCER &= ~(1 << TIM_CCER_CC4E_Pos);
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	6a1b      	ldr	r3, [r3, #32]
 8001e1e:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	621a      	str	r2, [r3, #32]
            break;
 8001e26:	e000      	b.n	8001e2a <TIM_ChannelOutputControl+0xb6>

        default:
            // Invalid channel
            break;
 8001e28:	bf00      	nop
    }
}
 8001e2a:	bf00      	nop
 8001e2c:	370c      	adds	r7, #12
 8001e2e:	46bd      	mov	sp, r7
 8001e30:	bc80      	pop	{r7}
 8001e32:	4770      	bx	lr

08001e34 <TIM_ConfigTimeBase>:
  * @param  DutyCycle  Capture/Compare value (defines the pulse width).
  * @param  Channel    Channel to set duty cycle (1 to 4).
  * @retval None
  */
void TIM_ConfigTimeBase(TIM_RegDef_t *TIMx, uint32_t Prescaler, uint32_t Period, uint32_t DutyCycle, uint8_t Channel)
{
 8001e34:	b480      	push	{r7}
 8001e36:	b085      	sub	sp, #20
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	60f8      	str	r0, [r7, #12]
 8001e3c:	60b9      	str	r1, [r7, #8]
 8001e3e:	607a      	str	r2, [r7, #4]
 8001e40:	603b      	str	r3, [r7, #0]
    // Set prescaler
    TIMx->PSC = Prescaler;
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	68ba      	ldr	r2, [r7, #8]
 8001e46:	629a      	str	r2, [r3, #40]	@ 0x28

    // Set auto-reload (period)
    TIMx->ARR = Period;
 8001e48:	68fb      	ldr	r3, [r7, #12]
 8001e4a:	687a      	ldr	r2, [r7, #4]
 8001e4c:	62da      	str	r2, [r3, #44]	@ 0x2c

    // Set duty cycle based on channel
    switch(Channel)
 8001e4e:	7e3b      	ldrb	r3, [r7, #24]
 8001e50:	2b03      	cmp	r3, #3
 8001e52:	d81b      	bhi.n	8001e8c <TIM_ConfigTimeBase+0x58>
 8001e54:	a201      	add	r2, pc, #4	@ (adr r2, 8001e5c <TIM_ConfigTimeBase+0x28>)
 8001e56:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001e5a:	bf00      	nop
 8001e5c:	08001e6d 	.word	0x08001e6d
 8001e60:	08001e75 	.word	0x08001e75
 8001e64:	08001e7d 	.word	0x08001e7d
 8001e68:	08001e85 	.word	0x08001e85
    {
      case TIM_CHANNEL_1:
	  TIMx->CCR1 = DutyCycle;
 8001e6c:	68fb      	ldr	r3, [r7, #12]
 8001e6e:	683a      	ldr	r2, [r7, #0]
 8001e70:	635a      	str	r2, [r3, #52]	@ 0x34
	  break;
 8001e72:	e00c      	b.n	8001e8e <TIM_ConfigTimeBase+0x5a>

      case TIM_CHANNEL_2:
	  TIMx->CCR2 = DutyCycle;
 8001e74:	68fb      	ldr	r3, [r7, #12]
 8001e76:	683a      	ldr	r2, [r7, #0]
 8001e78:	639a      	str	r2, [r3, #56]	@ 0x38
	  break;
 8001e7a:	e008      	b.n	8001e8e <TIM_ConfigTimeBase+0x5a>

      case TIM_CHANNEL_3:
	  TIMx->CCR3 = DutyCycle;
 8001e7c:	68fb      	ldr	r3, [r7, #12]
 8001e7e:	683a      	ldr	r2, [r7, #0]
 8001e80:	63da      	str	r2, [r3, #60]	@ 0x3c
	  break;
 8001e82:	e004      	b.n	8001e8e <TIM_ConfigTimeBase+0x5a>

      case TIM_CHANNEL_4:
	  TIMx->CCR4 = DutyCycle;
 8001e84:	68fb      	ldr	r3, [r7, #12]
 8001e86:	683a      	ldr	r2, [r7, #0]
 8001e88:	641a      	str	r2, [r3, #64]	@ 0x40
	  break;
 8001e8a:	e000      	b.n	8001e8e <TIM_ConfigTimeBase+0x5a>

      default:
	  // Invalid channel
	  break;
 8001e8c:	bf00      	nop
    }
}
 8001e8e:	bf00      	nop
 8001e90:	3714      	adds	r7, #20
 8001e92:	46bd      	mov	sp, r7
 8001e94:	bc80      	pop	{r7}
 8001e96:	4770      	bx	lr

08001e98 <TIM_SetDuty>:


void TIM_SetDuty(uint32_t DutyCycle)
{
 8001e98:	b480      	push	{r7}
 8001e9a:	b083      	sub	sp, #12
 8001e9c:	af00      	add	r7, sp, #0
 8001e9e:	6078      	str	r0, [r7, #4]
       TIM2->CCR1 = DutyCycle;
 8001ea0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001ea8:	bf00      	nop
 8001eaa:	370c      	adds	r7, #12
 8001eac:	46bd      	mov	sp, r7
 8001eae:	bc80      	pop	{r7}
 8001eb0:	4770      	bx	lr
	...

08001eb4 <TIM_SetOCMode>:
  * @param  channel  Channel number (1 to 4).
  * @param  OCmode     Output Compare mode (e.g., TIM_OCMODE_PWM1, TIM_OCMODE_TOGGLE, etc.).
  * @retval None
  */
void TIM_SetOCMode(TIM_RegDef_t *TIMx, uint8_t channel, uint8_t OCmode)
{
 8001eb4:	b480      	push	{r7}
 8001eb6:	b083      	sub	sp, #12
 8001eb8:	af00      	add	r7, sp, #0
 8001eba:	6078      	str	r0, [r7, #4]
 8001ebc:	460b      	mov	r3, r1
 8001ebe:	70fb      	strb	r3, [r7, #3]
 8001ec0:	4613      	mov	r3, r2
 8001ec2:	70bb      	strb	r3, [r7, #2]
    switch (channel)
 8001ec4:	78fb      	ldrb	r3, [r7, #3]
 8001ec6:	2b03      	cmp	r3, #3
 8001ec8:	d842      	bhi.n	8001f50 <TIM_SetOCMode+0x9c>
 8001eca:	a201      	add	r2, pc, #4	@ (adr r2, 8001ed0 <TIM_SetOCMode+0x1c>)
 8001ecc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001ed0:	08001ee1 	.word	0x08001ee1
 8001ed4:	08001efd 	.word	0x08001efd
 8001ed8:	08001f19 	.word	0x08001f19
 8001edc:	08001f35 	.word	0x08001f35
    {
        case TIM_CHANNEL_1:
            // Clear bits 6:4 (OC1M) in CCMR1
            TIMx->CCMR1 &= ~(0x7 << TIM_CCMR1_OC1M_Pos);
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	699b      	ldr	r3, [r3, #24]
 8001ee4:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	619a      	str	r2, [r3, #24]
            // Set new OCmode
            TIMx->CCMR1 |= (OCmode << TIM_CCMR1_OC1M_Pos);
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	699a      	ldr	r2, [r3, #24]
 8001ef0:	78bb      	ldrb	r3, [r7, #2]
 8001ef2:	011b      	lsls	r3, r3, #4
 8001ef4:	431a      	orrs	r2, r3
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	619a      	str	r2, [r3, #24]
            break;
 8001efa:	e02a      	b.n	8001f52 <TIM_SetOCMode+0x9e>

        case TIM_CHANNEL_2:
            // Clear bits 14:12 (OC2M) in CCMR1
            TIMx->CCMR1 &= ~(0x7 << TIM_CCMR2_OC1M_Pos);
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	699b      	ldr	r3, [r3, #24]
 8001f00:	f423 42e0 	bic.w	r2, r3, #28672	@ 0x7000
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	619a      	str	r2, [r3, #24]
            // Set new OCmode
            TIMx->CCMR1 |= (OCmode << TIM_CCMR2_OC1M_Pos);
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	699a      	ldr	r2, [r3, #24]
 8001f0c:	78bb      	ldrb	r3, [r7, #2]
 8001f0e:	031b      	lsls	r3, r3, #12
 8001f10:	431a      	orrs	r2, r3
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	619a      	str	r2, [r3, #24]
            break;
 8001f16:	e01c      	b.n	8001f52 <TIM_SetOCMode+0x9e>

        case TIM_CHANNEL_3:
            // Clear bits 6:4 (OC3M) in CCMR2
            TIMx->CCMR2 &= ~(0x7 << TIM_CCMR3_OC1M_Pos);
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	69db      	ldr	r3, [r3, #28]
 8001f1c:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	61da      	str	r2, [r3, #28]
            // Set new OCmode
            TIMx->CCMR2 |= (OCmode << TIM_CCMR3_OC1M_Pos);
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	69da      	ldr	r2, [r3, #28]
 8001f28:	78bb      	ldrb	r3, [r7, #2]
 8001f2a:	011b      	lsls	r3, r3, #4
 8001f2c:	431a      	orrs	r2, r3
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	61da      	str	r2, [r3, #28]
            break;
 8001f32:	e00e      	b.n	8001f52 <TIM_SetOCMode+0x9e>

        case TIM_CHANNEL_4:
            // Clear bits 14:12 (OC4M) in CCMR2
            TIMx->CCMR2 &= ~(0x7 << TIM_CCMR4_OC1M_Pos);
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	69db      	ldr	r3, [r3, #28]
 8001f38:	f423 42e0 	bic.w	r2, r3, #28672	@ 0x7000
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	61da      	str	r2, [r3, #28]
            // Set new OCmode
            TIMx->CCMR2 |= (OCmode << TIM_CCMR4_OC1M_Pos);
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	69da      	ldr	r2, [r3, #28]
 8001f44:	78bb      	ldrb	r3, [r7, #2]
 8001f46:	031b      	lsls	r3, r3, #12
 8001f48:	431a      	orrs	r2, r3
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	61da      	str	r2, [r3, #28]
            break;
 8001f4e:	e000      	b.n	8001f52 <TIM_SetOCMode+0x9e>

        default:
            // Invalid channel
            break;
 8001f50:	bf00      	nop
    }
}
 8001f52:	bf00      	nop
 8001f54:	370c      	adds	r7, #12
 8001f56:	46bd      	mov	sp, r7
 8001f58:	bc80      	pop	{r7}
 8001f5a:	4770      	bx	lr

08001f5c <TIM_SetCounterMode>:
  * @param  TIMx TIM peripheral
  * @param  Mode
  * @retval None
  */
static void TIM_SetCounterMode(TIM_RegDef_t *TIMx, uint8_t Mode)
{
 8001f5c:	b480      	push	{r7}
 8001f5e:	b083      	sub	sp, #12
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	6078      	str	r0, [r7, #4]
 8001f64:	460b      	mov	r3, r1
 8001f66:	70fb      	strb	r3, [r7, #3]
	// clear bit CMS[1:0] and DIR in CR1 register
	TIMx->CR1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	601a      	str	r2, [r3, #0]

	switch(Mode)
 8001f74:	78fb      	ldrb	r3, [r7, #3]
 8001f76:	2b04      	cmp	r3, #4
 8001f78:	d82d      	bhi.n	8001fd6 <TIM_SetCounterMode+0x7a>
 8001f7a:	a201      	add	r2, pc, #4	@ (adr r2, 8001f80 <TIM_SetCounterMode+0x24>)
 8001f7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f80:	08001f95 	.word	0x08001f95
 8001f84:	08001f9f 	.word	0x08001f9f
 8001f88:	08001fad 	.word	0x08001fad
 8001f8c:	08001fbb 	.word	0x08001fbb
 8001f90:	08001fc9 	.word	0x08001fc9
	{
		case TIM_COUNTERMODE_UP:
			TIMx->CR1 |= 0;
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	681a      	ldr	r2, [r3, #0]
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	601a      	str	r2, [r3, #0]
			break;
 8001f9c:	e01c      	b.n	8001fd8 <TIM_SetCounterMode+0x7c>
		case TIM_COUNTERMODE_DOWN:
			TIMx->CR1 |= TIM_CR1_DIR;
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	f043 0210 	orr.w	r2, r3, #16
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	601a      	str	r2, [r3, #0]
			break;
 8001faa:	e015      	b.n	8001fd8 <TIM_SetCounterMode+0x7c>
		case TIM_COUNTERMODE_CENTERALIGNED1:
			TIMx->CR1 |= TIM_CR1_CMS_0; // CMS = 01
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	f043 0220 	orr.w	r2, r3, #32
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	601a      	str	r2, [r3, #0]
			break;
 8001fb8:	e00e      	b.n	8001fd8 <TIM_SetCounterMode+0x7c>
		case TIM_COUNTERMODE_CENTERALIGNED2:
			TIMx->CR1 |= TIM_CR1_CMS_1; // CMS = 02
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	601a      	str	r2, [r3, #0]
			break;
 8001fc6:	e007      	b.n	8001fd8 <TIM_SetCounterMode+0x7c>
		case TIM_COUNTERMODE_CENTERALIGNED3:
			TIMx->CR1 |= TIM_CR1_CMS; // CMS = 03
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	f043 0260 	orr.w	r2, r3, #96	@ 0x60
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	601a      	str	r2, [r3, #0]
			break;
 8001fd4:	e000      	b.n	8001fd8 <TIM_SetCounterMode+0x7c>
		default:
			/* Nothing to do */
			break;
 8001fd6:	bf00      	nop
	}
}
 8001fd8:	bf00      	nop
 8001fda:	370c      	adds	r7, #12
 8001fdc:	46bd      	mov	sp, r7
 8001fde:	bc80      	pop	{r7}
 8001fe0:	4770      	bx	lr
 8001fe2:	bf00      	nop

08001fe4 <TIM_CounterControl>:
  * @param  TIMx TIM peripheral
  * @param  State ENABLE or DISABLE
  * @retval None
  */
static void TIM_CounterControl(TIM_RegDef_t *pTIMx, uint8_t State)
{
 8001fe4:	b480      	push	{r7}
 8001fe6:	b083      	sub	sp, #12
 8001fe8:	af00      	add	r7, sp, #0
 8001fea:	6078      	str	r0, [r7, #4]
 8001fec:	460b      	mov	r3, r1
 8001fee:	70fb      	strb	r3, [r7, #3]
	if (State == ENABLE)
 8001ff0:	78fb      	ldrb	r3, [r7, #3]
 8001ff2:	2b01      	cmp	r3, #1
 8001ff4:	d106      	bne.n	8002004 <TIM_CounterControl+0x20>
	{
		pTIMx->CR1 |= TIM_CR1_CEN;
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	f043 0201 	orr.w	r2, r3, #1
 8001ffe:	687b      	ldr	r3, [r7, #4]
 8002000:	601a      	str	r2, [r3, #0]
	}else {
		pTIMx->CR1 &= ~TIM_CR1_CEN;
	}
}
 8002002:	e005      	b.n	8002010 <TIM_CounterControl+0x2c>
		pTIMx->CR1 &= ~TIM_CR1_CEN;
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	f023 0201 	bic.w	r2, r3, #1
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	601a      	str	r2, [r3, #0]
}
 8002010:	bf00      	nop
 8002012:	370c      	adds	r7, #12
 8002014:	46bd      	mov	sp, r7
 8002016:	bc80      	pop	{r7}
 8002018:	4770      	bx	lr

0800201a <Motor_Init>:

#include "DCMotor.h"
#include <stdlib.h>


void Motor_Init(){
 800201a:	b580      	push	{r7, lr}
 800201c:	af00      	add	r7, sp, #0
  Motor_ConfigIN_GPIO();
 800201e:	f000 f805 	bl	800202c <Motor_ConfigIN_GPIO>
  Motor_ConfigPWMSource();
 8002022:	f000 f813 	bl	800204c <Motor_ConfigPWMSource>

}
 8002026:	bf00      	nop
 8002028:	bd80      	pop	{r7, pc}
	...

0800202c <Motor_ConfigIN_GPIO>:

void Motor_ConfigIN_GPIO(){
 800202c:	b580      	push	{r7, lr}
 800202e:	af00      	add	r7, sp, #0
  //Configure GPIO mode as output to connect to L298N IN1 and IN2 pin
  GPIO_Initialize(L298N_IN1_PORT, L298N_IN1_PIN, GPIO_MODE_OUTPUT);
 8002030:	2201      	movs	r2, #1
 8002032:	2102      	movs	r1, #2
 8002034:	4804      	ldr	r0, [pc, #16]	@ (8002048 <Motor_ConfigIN_GPIO+0x1c>)
 8002036:	f7ff fa14 	bl	8001462 <GPIO_Initialize>
  GPIO_Initialize(L298N_IN2_PORT, L298N_IN2_PIN, GPIO_MODE_OUTPUT);
 800203a:	2201      	movs	r2, #1
 800203c:	2103      	movs	r1, #3
 800203e:	4802      	ldr	r0, [pc, #8]	@ (8002048 <Motor_ConfigIN_GPIO+0x1c>)
 8002040:	f7ff fa0f 	bl	8001462 <GPIO_Initialize>
}
 8002044:	bf00      	nop
 8002046:	bd80      	pop	{r7, pc}
 8002048:	40020800 	.word	0x40020800

0800204c <Motor_ConfigPWMSource>:


void Motor_ConfigPWMSource(){
 800204c:	b580      	push	{r7, lr}
 800204e:	af00      	add	r7, sp, #0
  TIM_PWM_Init(TIM2, TIM_CHANNEL_1);
 8002050:	2100      	movs	r1, #0
 8002052:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002056:	f7ff fe09 	bl	8001c6c <TIM_PWM_Init>
}
 800205a:	bf00      	nop
 800205c:	bd80      	pop	{r7, pc}
	...

08002060 <Motor_ConfigDirection>:




void Motor_ConfigDirection(_Bool Motor, _Bool Direction){
 8002060:	b580      	push	{r7, lr}
 8002062:	b082      	sub	sp, #8
 8002064:	af00      	add	r7, sp, #0
 8002066:	4603      	mov	r3, r0
 8002068:	460a      	mov	r2, r1
 800206a:	71fb      	strb	r3, [r7, #7]
 800206c:	4613      	mov	r3, r2
 800206e:	71bb      	strb	r3, [r7, #6]
  if(Motor == MOTOR_LEFT){
 8002070:	79fb      	ldrb	r3, [r7, #7]
 8002072:	f083 0301 	eor.w	r3, r3, #1
 8002076:	b2db      	uxtb	r3, r3
 8002078:	2b00      	cmp	r3, #0
 800207a:	d028      	beq.n	80020ce <Motor_ConfigDirection+0x6e>
      if(Direction == MOTOR_DIR_FORWARD){
 800207c:	79bb      	ldrb	r3, [r7, #6]
 800207e:	f083 0301 	eor.w	r3, r3, #1
 8002082:	b2db      	uxtb	r3, r3
 8002084:	2b00      	cmp	r3, #0
 8002086:	d00a      	beq.n	800209e <Motor_ConfigDirection+0x3e>
	  GPIO_WritePin(L298N_IN1_PORT, L298N_IN1_PIN, 1);
 8002088:	2201      	movs	r2, #1
 800208a:	2102      	movs	r1, #2
 800208c:	4812      	ldr	r0, [pc, #72]	@ (80020d8 <Motor_ConfigDirection+0x78>)
 800208e:	f7ff fbd7 	bl	8001840 <GPIO_WritePin>
	  GPIO_WritePin(L298N_IN2_PORT, L298N_IN2_PIN, 0);
 8002092:	2200      	movs	r2, #0
 8002094:	2103      	movs	r1, #3
 8002096:	4810      	ldr	r0, [pc, #64]	@ (80020d8 <Motor_ConfigDirection+0x78>)
 8002098:	f7ff fbd2 	bl	8001840 <GPIO_WritePin>
      else{
	  GPIO_WritePin(L298N_IN1_PORT, L298N_IN1_PIN, 1);
	  GPIO_WritePin(L298N_IN2_PORT, L298N_IN2_PIN, 1);
      }
  }
}
 800209c:	e017      	b.n	80020ce <Motor_ConfigDirection+0x6e>
      else if (Direction == MOTOR_DIR_BACKWARD){
 800209e:	79bb      	ldrb	r3, [r7, #6]
 80020a0:	2b00      	cmp	r3, #0
 80020a2:	d00a      	beq.n	80020ba <Motor_ConfigDirection+0x5a>
	  GPIO_WritePin(L298N_IN1_PORT, L298N_IN1_PIN, 0);
 80020a4:	2200      	movs	r2, #0
 80020a6:	2102      	movs	r1, #2
 80020a8:	480b      	ldr	r0, [pc, #44]	@ (80020d8 <Motor_ConfigDirection+0x78>)
 80020aa:	f7ff fbc9 	bl	8001840 <GPIO_WritePin>
	  GPIO_WritePin(L298N_IN2_PORT, L298N_IN2_PIN, 1);
 80020ae:	2201      	movs	r2, #1
 80020b0:	2103      	movs	r1, #3
 80020b2:	4809      	ldr	r0, [pc, #36]	@ (80020d8 <Motor_ConfigDirection+0x78>)
 80020b4:	f7ff fbc4 	bl	8001840 <GPIO_WritePin>
}
 80020b8:	e009      	b.n	80020ce <Motor_ConfigDirection+0x6e>
	  GPIO_WritePin(L298N_IN1_PORT, L298N_IN1_PIN, 1);
 80020ba:	2201      	movs	r2, #1
 80020bc:	2102      	movs	r1, #2
 80020be:	4806      	ldr	r0, [pc, #24]	@ (80020d8 <Motor_ConfigDirection+0x78>)
 80020c0:	f7ff fbbe 	bl	8001840 <GPIO_WritePin>
	  GPIO_WritePin(L298N_IN2_PORT, L298N_IN2_PIN, 1);
 80020c4:	2201      	movs	r2, #1
 80020c6:	2103      	movs	r1, #3
 80020c8:	4803      	ldr	r0, [pc, #12]	@ (80020d8 <Motor_ConfigDirection+0x78>)
 80020ca:	f7ff fbb9 	bl	8001840 <GPIO_WritePin>
}
 80020ce:	bf00      	nop
 80020d0:	3708      	adds	r7, #8
 80020d2:	46bd      	mov	sp, r7
 80020d4:	bd80      	pop	{r7, pc}
 80020d6:	bf00      	nop
 80020d8:	40020800 	.word	0x40020800

080020dc <Motor_Control>:


void Motor_Control(_Bool Motor, int16_t ControlSignal){
 80020dc:	b580      	push	{r7, lr}
 80020de:	b084      	sub	sp, #16
 80020e0:	af00      	add	r7, sp, #0
 80020e2:	4603      	mov	r3, r0
 80020e4:	460a      	mov	r2, r1
 80020e6:	71fb      	strb	r3, [r7, #7]
 80020e8:	4613      	mov	r3, r2
 80020ea:	80bb      	strh	r3, [r7, #4]
  uint16_t ABS_ControlSignal = abs(ControlSignal);
 80020ec:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	bfb8      	it	lt
 80020f4:	425b      	neglt	r3, r3
 80020f6:	81fb      	strh	r3, [r7, #14]

  if(Motor == MOTOR_LEFT){
 80020f8:	79fb      	ldrb	r3, [r7, #7]
 80020fa:	f083 0301 	eor.w	r3, r3, #1
 80020fe:	b2db      	uxtb	r3, r3
 8002100:	2b00      	cmp	r3, #0
 8002102:	d014      	beq.n	800212e <Motor_Control+0x52>
      if(ControlSignal < 0){
 8002104:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8002108:	2b00      	cmp	r3, #0
 800210a:	da04      	bge.n	8002116 <Motor_Control+0x3a>
	  Motor_ConfigDirection(MOTOR_LEFT, MOTOR_DIR_BACKWARD);
 800210c:	2101      	movs	r1, #1
 800210e:	2000      	movs	r0, #0
 8002110:	f7ff ffa6 	bl	8002060 <Motor_ConfigDirection>
 8002114:	e007      	b.n	8002126 <Motor_Control+0x4a>
      }
      else if(ControlSignal >= 0){
 8002116:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800211a:	2b00      	cmp	r3, #0
 800211c:	db03      	blt.n	8002126 <Motor_Control+0x4a>
	  Motor_ConfigDirection(MOTOR_LEFT, MOTOR_DIR_FORWARD);
 800211e:	2100      	movs	r1, #0
 8002120:	2000      	movs	r0, #0
 8002122:	f7ff ff9d 	bl	8002060 <Motor_ConfigDirection>
      }

      TIM_SetDuty(ABS_ControlSignal);
 8002126:	89fb      	ldrh	r3, [r7, #14]
 8002128:	4618      	mov	r0, r3
 800212a:	f7ff feb5 	bl	8001e98 <TIM_SetDuty>
  }
}
 800212e:	bf00      	nop
 8002130:	3710      	adds	r7, #16
 8002132:	46bd      	mov	sp, r7
 8002134:	bd80      	pop	{r7, pc}
	...

08002138 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002138:	480d      	ldr	r0, [pc, #52]	@ (8002170 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800213a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800213c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002140:	480c      	ldr	r0, [pc, #48]	@ (8002174 <LoopForever+0x6>)
  ldr r1, =_edata
 8002142:	490d      	ldr	r1, [pc, #52]	@ (8002178 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002144:	4a0d      	ldr	r2, [pc, #52]	@ (800217c <LoopForever+0xe>)
  movs r3, #0
 8002146:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002148:	e002      	b.n	8002150 <LoopCopyDataInit>

0800214a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800214a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800214c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800214e:	3304      	adds	r3, #4

08002150 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002150:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002152:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002154:	d3f9      	bcc.n	800214a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002156:	4a0a      	ldr	r2, [pc, #40]	@ (8002180 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002158:	4c0a      	ldr	r4, [pc, #40]	@ (8002184 <LoopForever+0x16>)
  movs r3, #0
 800215a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800215c:	e001      	b.n	8002162 <LoopFillZerobss>

0800215e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800215e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002160:	3204      	adds	r2, #4

08002162 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002162:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002164:	d3fb      	bcc.n	800215e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002166:	f000 ffef 	bl	8003148 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800216a:	f7fe fdc3 	bl	8000cf4 <main>

0800216e <LoopForever>:

LoopForever:
  b LoopForever
 800216e:	e7fe      	b.n	800216e <LoopForever>
  ldr   r0, =_estack
 8002170:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002174:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002178:	200001cc 	.word	0x200001cc
  ldr r2, =_sidata
 800217c:	08006c64 	.word	0x08006c64
  ldr r2, =_sbss
 8002180:	200001cc 	.word	0x200001cc
  ldr r4, =_ebss
 8002184:	2000033c 	.word	0x2000033c

08002188 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002188:	e7fe      	b.n	8002188 <ADC_IRQHandler>

0800218a <__cvt>:
 800218a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800218e:	b088      	sub	sp, #32
 8002190:	2b00      	cmp	r3, #0
 8002192:	461d      	mov	r5, r3
 8002194:	4614      	mov	r4, r2
 8002196:	bfbc      	itt	lt
 8002198:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 800219c:	4614      	movlt	r4, r2
 800219e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80021a0:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80021a2:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80021a6:	bfb6      	itet	lt
 80021a8:	461d      	movlt	r5, r3
 80021aa:	2300      	movge	r3, #0
 80021ac:	232d      	movlt	r3, #45	@ 0x2d
 80021ae:	7013      	strb	r3, [r2, #0]
 80021b0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80021b2:	f023 0820 	bic.w	r8, r3, #32
 80021b6:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80021ba:	d005      	beq.n	80021c8 <__cvt+0x3e>
 80021bc:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80021c0:	d100      	bne.n	80021c4 <__cvt+0x3a>
 80021c2:	3601      	adds	r6, #1
 80021c4:	2302      	movs	r3, #2
 80021c6:	e000      	b.n	80021ca <__cvt+0x40>
 80021c8:	2303      	movs	r3, #3
 80021ca:	aa07      	add	r2, sp, #28
 80021cc:	9204      	str	r2, [sp, #16]
 80021ce:	aa06      	add	r2, sp, #24
 80021d0:	e9cd a202 	strd	sl, r2, [sp, #8]
 80021d4:	e9cd 3600 	strd	r3, r6, [sp]
 80021d8:	4622      	mov	r2, r4
 80021da:	462b      	mov	r3, r5
 80021dc:	f001 f868 	bl	80032b0 <_dtoa_r>
 80021e0:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80021e4:	4607      	mov	r7, r0
 80021e6:	d119      	bne.n	800221c <__cvt+0x92>
 80021e8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80021ea:	07db      	lsls	r3, r3, #31
 80021ec:	d50e      	bpl.n	800220c <__cvt+0x82>
 80021ee:	eb00 0906 	add.w	r9, r0, r6
 80021f2:	2200      	movs	r2, #0
 80021f4:	2300      	movs	r3, #0
 80021f6:	4620      	mov	r0, r4
 80021f8:	4629      	mov	r1, r5
 80021fa:	f7fe fc65 	bl	8000ac8 <__aeabi_dcmpeq>
 80021fe:	b108      	cbz	r0, 8002204 <__cvt+0x7a>
 8002200:	f8cd 901c 	str.w	r9, [sp, #28]
 8002204:	2230      	movs	r2, #48	@ 0x30
 8002206:	9b07      	ldr	r3, [sp, #28]
 8002208:	454b      	cmp	r3, r9
 800220a:	d31e      	bcc.n	800224a <__cvt+0xc0>
 800220c:	9b07      	ldr	r3, [sp, #28]
 800220e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8002210:	1bdb      	subs	r3, r3, r7
 8002212:	4638      	mov	r0, r7
 8002214:	6013      	str	r3, [r2, #0]
 8002216:	b008      	add	sp, #32
 8002218:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800221c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8002220:	eb00 0906 	add.w	r9, r0, r6
 8002224:	d1e5      	bne.n	80021f2 <__cvt+0x68>
 8002226:	7803      	ldrb	r3, [r0, #0]
 8002228:	2b30      	cmp	r3, #48	@ 0x30
 800222a:	d10a      	bne.n	8002242 <__cvt+0xb8>
 800222c:	2200      	movs	r2, #0
 800222e:	2300      	movs	r3, #0
 8002230:	4620      	mov	r0, r4
 8002232:	4629      	mov	r1, r5
 8002234:	f7fe fc48 	bl	8000ac8 <__aeabi_dcmpeq>
 8002238:	b918      	cbnz	r0, 8002242 <__cvt+0xb8>
 800223a:	f1c6 0601 	rsb	r6, r6, #1
 800223e:	f8ca 6000 	str.w	r6, [sl]
 8002242:	f8da 3000 	ldr.w	r3, [sl]
 8002246:	4499      	add	r9, r3
 8002248:	e7d3      	b.n	80021f2 <__cvt+0x68>
 800224a:	1c59      	adds	r1, r3, #1
 800224c:	9107      	str	r1, [sp, #28]
 800224e:	701a      	strb	r2, [r3, #0]
 8002250:	e7d9      	b.n	8002206 <__cvt+0x7c>

08002252 <__exponent>:
 8002252:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002254:	2900      	cmp	r1, #0
 8002256:	bfba      	itte	lt
 8002258:	4249      	neglt	r1, r1
 800225a:	232d      	movlt	r3, #45	@ 0x2d
 800225c:	232b      	movge	r3, #43	@ 0x2b
 800225e:	2909      	cmp	r1, #9
 8002260:	7002      	strb	r2, [r0, #0]
 8002262:	7043      	strb	r3, [r0, #1]
 8002264:	dd29      	ble.n	80022ba <__exponent+0x68>
 8002266:	f10d 0307 	add.w	r3, sp, #7
 800226a:	461d      	mov	r5, r3
 800226c:	270a      	movs	r7, #10
 800226e:	461a      	mov	r2, r3
 8002270:	fbb1 f6f7 	udiv	r6, r1, r7
 8002274:	fb07 1416 	mls	r4, r7, r6, r1
 8002278:	3430      	adds	r4, #48	@ 0x30
 800227a:	f802 4c01 	strb.w	r4, [r2, #-1]
 800227e:	460c      	mov	r4, r1
 8002280:	2c63      	cmp	r4, #99	@ 0x63
 8002282:	f103 33ff 	add.w	r3, r3, #4294967295
 8002286:	4631      	mov	r1, r6
 8002288:	dcf1      	bgt.n	800226e <__exponent+0x1c>
 800228a:	3130      	adds	r1, #48	@ 0x30
 800228c:	1e94      	subs	r4, r2, #2
 800228e:	f803 1c01 	strb.w	r1, [r3, #-1]
 8002292:	1c41      	adds	r1, r0, #1
 8002294:	4623      	mov	r3, r4
 8002296:	42ab      	cmp	r3, r5
 8002298:	d30a      	bcc.n	80022b0 <__exponent+0x5e>
 800229a:	f10d 0309 	add.w	r3, sp, #9
 800229e:	1a9b      	subs	r3, r3, r2
 80022a0:	42ac      	cmp	r4, r5
 80022a2:	bf88      	it	hi
 80022a4:	2300      	movhi	r3, #0
 80022a6:	3302      	adds	r3, #2
 80022a8:	4403      	add	r3, r0
 80022aa:	1a18      	subs	r0, r3, r0
 80022ac:	b003      	add	sp, #12
 80022ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022b0:	f813 6b01 	ldrb.w	r6, [r3], #1
 80022b4:	f801 6f01 	strb.w	r6, [r1, #1]!
 80022b8:	e7ed      	b.n	8002296 <__exponent+0x44>
 80022ba:	2330      	movs	r3, #48	@ 0x30
 80022bc:	3130      	adds	r1, #48	@ 0x30
 80022be:	7083      	strb	r3, [r0, #2]
 80022c0:	70c1      	strb	r1, [r0, #3]
 80022c2:	1d03      	adds	r3, r0, #4
 80022c4:	e7f1      	b.n	80022aa <__exponent+0x58>
	...

080022c8 <_printf_float>:
 80022c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80022cc:	b091      	sub	sp, #68	@ 0x44
 80022ce:	460c      	mov	r4, r1
 80022d0:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 80022d4:	4616      	mov	r6, r2
 80022d6:	461f      	mov	r7, r3
 80022d8:	4605      	mov	r5, r0
 80022da:	f000 fee5 	bl	80030a8 <_localeconv_r>
 80022de:	6803      	ldr	r3, [r0, #0]
 80022e0:	9308      	str	r3, [sp, #32]
 80022e2:	4618      	mov	r0, r3
 80022e4:	f7fd ffc4 	bl	8000270 <strlen>
 80022e8:	2300      	movs	r3, #0
 80022ea:	930e      	str	r3, [sp, #56]	@ 0x38
 80022ec:	f8d8 3000 	ldr.w	r3, [r8]
 80022f0:	9009      	str	r0, [sp, #36]	@ 0x24
 80022f2:	3307      	adds	r3, #7
 80022f4:	f023 0307 	bic.w	r3, r3, #7
 80022f8:	f103 0208 	add.w	r2, r3, #8
 80022fc:	f894 a018 	ldrb.w	sl, [r4, #24]
 8002300:	f8d4 b000 	ldr.w	fp, [r4]
 8002304:	f8c8 2000 	str.w	r2, [r8]
 8002308:	e9d3 8900 	ldrd	r8, r9, [r3]
 800230c:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8002310:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002312:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8002316:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800231a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800231e:	4b9d      	ldr	r3, [pc, #628]	@ (8002594 <_printf_float+0x2cc>)
 8002320:	f04f 32ff 	mov.w	r2, #4294967295
 8002324:	f7fe fc02 	bl	8000b2c <__aeabi_dcmpun>
 8002328:	bb70      	cbnz	r0, 8002388 <_printf_float+0xc0>
 800232a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800232e:	4b99      	ldr	r3, [pc, #612]	@ (8002594 <_printf_float+0x2cc>)
 8002330:	f04f 32ff 	mov.w	r2, #4294967295
 8002334:	f7fe fbdc 	bl	8000af0 <__aeabi_dcmple>
 8002338:	bb30      	cbnz	r0, 8002388 <_printf_float+0xc0>
 800233a:	2200      	movs	r2, #0
 800233c:	2300      	movs	r3, #0
 800233e:	4640      	mov	r0, r8
 8002340:	4649      	mov	r1, r9
 8002342:	f7fe fbcb 	bl	8000adc <__aeabi_dcmplt>
 8002346:	b110      	cbz	r0, 800234e <_printf_float+0x86>
 8002348:	232d      	movs	r3, #45	@ 0x2d
 800234a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800234e:	4a92      	ldr	r2, [pc, #584]	@ (8002598 <_printf_float+0x2d0>)
 8002350:	4b92      	ldr	r3, [pc, #584]	@ (800259c <_printf_float+0x2d4>)
 8002352:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8002356:	bf8c      	ite	hi
 8002358:	4690      	movhi	r8, r2
 800235a:	4698      	movls	r8, r3
 800235c:	2303      	movs	r3, #3
 800235e:	6123      	str	r3, [r4, #16]
 8002360:	f02b 0304 	bic.w	r3, fp, #4
 8002364:	6023      	str	r3, [r4, #0]
 8002366:	f04f 0900 	mov.w	r9, #0
 800236a:	9700      	str	r7, [sp, #0]
 800236c:	4633      	mov	r3, r6
 800236e:	aa0f      	add	r2, sp, #60	@ 0x3c
 8002370:	4621      	mov	r1, r4
 8002372:	4628      	mov	r0, r5
 8002374:	f000 f9d4 	bl	8002720 <_printf_common>
 8002378:	3001      	adds	r0, #1
 800237a:	f040 808f 	bne.w	800249c <_printf_float+0x1d4>
 800237e:	f04f 30ff 	mov.w	r0, #4294967295
 8002382:	b011      	add	sp, #68	@ 0x44
 8002384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002388:	4642      	mov	r2, r8
 800238a:	464b      	mov	r3, r9
 800238c:	4640      	mov	r0, r8
 800238e:	4649      	mov	r1, r9
 8002390:	f7fe fbcc 	bl	8000b2c <__aeabi_dcmpun>
 8002394:	b140      	cbz	r0, 80023a8 <_printf_float+0xe0>
 8002396:	464b      	mov	r3, r9
 8002398:	2b00      	cmp	r3, #0
 800239a:	bfbc      	itt	lt
 800239c:	232d      	movlt	r3, #45	@ 0x2d
 800239e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80023a2:	4a7f      	ldr	r2, [pc, #508]	@ (80025a0 <_printf_float+0x2d8>)
 80023a4:	4b7f      	ldr	r3, [pc, #508]	@ (80025a4 <_printf_float+0x2dc>)
 80023a6:	e7d4      	b.n	8002352 <_printf_float+0x8a>
 80023a8:	6863      	ldr	r3, [r4, #4]
 80023aa:	1c5a      	adds	r2, r3, #1
 80023ac:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 80023b0:	d13f      	bne.n	8002432 <_printf_float+0x16a>
 80023b2:	2306      	movs	r3, #6
 80023b4:	6063      	str	r3, [r4, #4]
 80023b6:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 80023ba:	2200      	movs	r2, #0
 80023bc:	6023      	str	r3, [r4, #0]
 80023be:	9206      	str	r2, [sp, #24]
 80023c0:	aa0e      	add	r2, sp, #56	@ 0x38
 80023c2:	e9cd a204 	strd	sl, r2, [sp, #16]
 80023c6:	aa0d      	add	r2, sp, #52	@ 0x34
 80023c8:	9203      	str	r2, [sp, #12]
 80023ca:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 80023ce:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80023d2:	6863      	ldr	r3, [r4, #4]
 80023d4:	9300      	str	r3, [sp, #0]
 80023d6:	4642      	mov	r2, r8
 80023d8:	464b      	mov	r3, r9
 80023da:	4628      	mov	r0, r5
 80023dc:	910a      	str	r1, [sp, #40]	@ 0x28
 80023de:	f7ff fed4 	bl	800218a <__cvt>
 80023e2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80023e4:	2947      	cmp	r1, #71	@ 0x47
 80023e6:	4680      	mov	r8, r0
 80023e8:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80023ea:	d128      	bne.n	800243e <_printf_float+0x176>
 80023ec:	1cc8      	adds	r0, r1, #3
 80023ee:	db02      	blt.n	80023f6 <_printf_float+0x12e>
 80023f0:	6863      	ldr	r3, [r4, #4]
 80023f2:	4299      	cmp	r1, r3
 80023f4:	dd40      	ble.n	8002478 <_printf_float+0x1b0>
 80023f6:	f1aa 0a02 	sub.w	sl, sl, #2
 80023fa:	fa5f fa8a 	uxtb.w	sl, sl
 80023fe:	3901      	subs	r1, #1
 8002400:	4652      	mov	r2, sl
 8002402:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8002406:	910d      	str	r1, [sp, #52]	@ 0x34
 8002408:	f7ff ff23 	bl	8002252 <__exponent>
 800240c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800240e:	1813      	adds	r3, r2, r0
 8002410:	2a01      	cmp	r2, #1
 8002412:	4681      	mov	r9, r0
 8002414:	6123      	str	r3, [r4, #16]
 8002416:	dc02      	bgt.n	800241e <_printf_float+0x156>
 8002418:	6822      	ldr	r2, [r4, #0]
 800241a:	07d2      	lsls	r2, r2, #31
 800241c:	d501      	bpl.n	8002422 <_printf_float+0x15a>
 800241e:	3301      	adds	r3, #1
 8002420:	6123      	str	r3, [r4, #16]
 8002422:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8002426:	2b00      	cmp	r3, #0
 8002428:	d09f      	beq.n	800236a <_printf_float+0xa2>
 800242a:	232d      	movs	r3, #45	@ 0x2d
 800242c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002430:	e79b      	b.n	800236a <_printf_float+0xa2>
 8002432:	2947      	cmp	r1, #71	@ 0x47
 8002434:	d1bf      	bne.n	80023b6 <_printf_float+0xee>
 8002436:	2b00      	cmp	r3, #0
 8002438:	d1bd      	bne.n	80023b6 <_printf_float+0xee>
 800243a:	2301      	movs	r3, #1
 800243c:	e7ba      	b.n	80023b4 <_printf_float+0xec>
 800243e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002442:	d9dc      	bls.n	80023fe <_printf_float+0x136>
 8002444:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002448:	d118      	bne.n	800247c <_printf_float+0x1b4>
 800244a:	2900      	cmp	r1, #0
 800244c:	6863      	ldr	r3, [r4, #4]
 800244e:	dd0b      	ble.n	8002468 <_printf_float+0x1a0>
 8002450:	6121      	str	r1, [r4, #16]
 8002452:	b913      	cbnz	r3, 800245a <_printf_float+0x192>
 8002454:	6822      	ldr	r2, [r4, #0]
 8002456:	07d0      	lsls	r0, r2, #31
 8002458:	d502      	bpl.n	8002460 <_printf_float+0x198>
 800245a:	3301      	adds	r3, #1
 800245c:	440b      	add	r3, r1
 800245e:	6123      	str	r3, [r4, #16]
 8002460:	65a1      	str	r1, [r4, #88]	@ 0x58
 8002462:	f04f 0900 	mov.w	r9, #0
 8002466:	e7dc      	b.n	8002422 <_printf_float+0x15a>
 8002468:	b913      	cbnz	r3, 8002470 <_printf_float+0x1a8>
 800246a:	6822      	ldr	r2, [r4, #0]
 800246c:	07d2      	lsls	r2, r2, #31
 800246e:	d501      	bpl.n	8002474 <_printf_float+0x1ac>
 8002470:	3302      	adds	r3, #2
 8002472:	e7f4      	b.n	800245e <_printf_float+0x196>
 8002474:	2301      	movs	r3, #1
 8002476:	e7f2      	b.n	800245e <_printf_float+0x196>
 8002478:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800247c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800247e:	4299      	cmp	r1, r3
 8002480:	db05      	blt.n	800248e <_printf_float+0x1c6>
 8002482:	6823      	ldr	r3, [r4, #0]
 8002484:	6121      	str	r1, [r4, #16]
 8002486:	07d8      	lsls	r0, r3, #31
 8002488:	d5ea      	bpl.n	8002460 <_printf_float+0x198>
 800248a:	1c4b      	adds	r3, r1, #1
 800248c:	e7e7      	b.n	800245e <_printf_float+0x196>
 800248e:	2900      	cmp	r1, #0
 8002490:	bfd4      	ite	le
 8002492:	f1c1 0202 	rsble	r2, r1, #2
 8002496:	2201      	movgt	r2, #1
 8002498:	4413      	add	r3, r2
 800249a:	e7e0      	b.n	800245e <_printf_float+0x196>
 800249c:	6823      	ldr	r3, [r4, #0]
 800249e:	055a      	lsls	r2, r3, #21
 80024a0:	d407      	bmi.n	80024b2 <_printf_float+0x1ea>
 80024a2:	6923      	ldr	r3, [r4, #16]
 80024a4:	4642      	mov	r2, r8
 80024a6:	4631      	mov	r1, r6
 80024a8:	4628      	mov	r0, r5
 80024aa:	47b8      	blx	r7
 80024ac:	3001      	adds	r0, #1
 80024ae:	d12b      	bne.n	8002508 <_printf_float+0x240>
 80024b0:	e765      	b.n	800237e <_printf_float+0xb6>
 80024b2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80024b6:	f240 80dd 	bls.w	8002674 <_printf_float+0x3ac>
 80024ba:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80024be:	2200      	movs	r2, #0
 80024c0:	2300      	movs	r3, #0
 80024c2:	f7fe fb01 	bl	8000ac8 <__aeabi_dcmpeq>
 80024c6:	2800      	cmp	r0, #0
 80024c8:	d033      	beq.n	8002532 <_printf_float+0x26a>
 80024ca:	4a37      	ldr	r2, [pc, #220]	@ (80025a8 <_printf_float+0x2e0>)
 80024cc:	2301      	movs	r3, #1
 80024ce:	4631      	mov	r1, r6
 80024d0:	4628      	mov	r0, r5
 80024d2:	47b8      	blx	r7
 80024d4:	3001      	adds	r0, #1
 80024d6:	f43f af52 	beq.w	800237e <_printf_float+0xb6>
 80024da:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 80024de:	4543      	cmp	r3, r8
 80024e0:	db02      	blt.n	80024e8 <_printf_float+0x220>
 80024e2:	6823      	ldr	r3, [r4, #0]
 80024e4:	07d8      	lsls	r0, r3, #31
 80024e6:	d50f      	bpl.n	8002508 <_printf_float+0x240>
 80024e8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80024ec:	4631      	mov	r1, r6
 80024ee:	4628      	mov	r0, r5
 80024f0:	47b8      	blx	r7
 80024f2:	3001      	adds	r0, #1
 80024f4:	f43f af43 	beq.w	800237e <_printf_float+0xb6>
 80024f8:	f04f 0900 	mov.w	r9, #0
 80024fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8002500:	f104 0a1a 	add.w	sl, r4, #26
 8002504:	45c8      	cmp	r8, r9
 8002506:	dc09      	bgt.n	800251c <_printf_float+0x254>
 8002508:	6823      	ldr	r3, [r4, #0]
 800250a:	079b      	lsls	r3, r3, #30
 800250c:	f100 8103 	bmi.w	8002716 <_printf_float+0x44e>
 8002510:	68e0      	ldr	r0, [r4, #12]
 8002512:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002514:	4298      	cmp	r0, r3
 8002516:	bfb8      	it	lt
 8002518:	4618      	movlt	r0, r3
 800251a:	e732      	b.n	8002382 <_printf_float+0xba>
 800251c:	2301      	movs	r3, #1
 800251e:	4652      	mov	r2, sl
 8002520:	4631      	mov	r1, r6
 8002522:	4628      	mov	r0, r5
 8002524:	47b8      	blx	r7
 8002526:	3001      	adds	r0, #1
 8002528:	f43f af29 	beq.w	800237e <_printf_float+0xb6>
 800252c:	f109 0901 	add.w	r9, r9, #1
 8002530:	e7e8      	b.n	8002504 <_printf_float+0x23c>
 8002532:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002534:	2b00      	cmp	r3, #0
 8002536:	dc39      	bgt.n	80025ac <_printf_float+0x2e4>
 8002538:	4a1b      	ldr	r2, [pc, #108]	@ (80025a8 <_printf_float+0x2e0>)
 800253a:	2301      	movs	r3, #1
 800253c:	4631      	mov	r1, r6
 800253e:	4628      	mov	r0, r5
 8002540:	47b8      	blx	r7
 8002542:	3001      	adds	r0, #1
 8002544:	f43f af1b 	beq.w	800237e <_printf_float+0xb6>
 8002548:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 800254c:	ea59 0303 	orrs.w	r3, r9, r3
 8002550:	d102      	bne.n	8002558 <_printf_float+0x290>
 8002552:	6823      	ldr	r3, [r4, #0]
 8002554:	07d9      	lsls	r1, r3, #31
 8002556:	d5d7      	bpl.n	8002508 <_printf_float+0x240>
 8002558:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800255c:	4631      	mov	r1, r6
 800255e:	4628      	mov	r0, r5
 8002560:	47b8      	blx	r7
 8002562:	3001      	adds	r0, #1
 8002564:	f43f af0b 	beq.w	800237e <_printf_float+0xb6>
 8002568:	f04f 0a00 	mov.w	sl, #0
 800256c:	f104 0b1a 	add.w	fp, r4, #26
 8002570:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002572:	425b      	negs	r3, r3
 8002574:	4553      	cmp	r3, sl
 8002576:	dc01      	bgt.n	800257c <_printf_float+0x2b4>
 8002578:	464b      	mov	r3, r9
 800257a:	e793      	b.n	80024a4 <_printf_float+0x1dc>
 800257c:	2301      	movs	r3, #1
 800257e:	465a      	mov	r2, fp
 8002580:	4631      	mov	r1, r6
 8002582:	4628      	mov	r0, r5
 8002584:	47b8      	blx	r7
 8002586:	3001      	adds	r0, #1
 8002588:	f43f aef9 	beq.w	800237e <_printf_float+0xb6>
 800258c:	f10a 0a01 	add.w	sl, sl, #1
 8002590:	e7ee      	b.n	8002570 <_printf_float+0x2a8>
 8002592:	bf00      	nop
 8002594:	7fefffff 	.word	0x7fefffff
 8002598:	0800682c 	.word	0x0800682c
 800259c:	08006828 	.word	0x08006828
 80025a0:	08006834 	.word	0x08006834
 80025a4:	08006830 	.word	0x08006830
 80025a8:	08006838 	.word	0x08006838
 80025ac:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80025ae:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80025b2:	4553      	cmp	r3, sl
 80025b4:	bfa8      	it	ge
 80025b6:	4653      	movge	r3, sl
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	4699      	mov	r9, r3
 80025bc:	dc36      	bgt.n	800262c <_printf_float+0x364>
 80025be:	f04f 0b00 	mov.w	fp, #0
 80025c2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80025c6:	f104 021a 	add.w	r2, r4, #26
 80025ca:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80025cc:	930a      	str	r3, [sp, #40]	@ 0x28
 80025ce:	eba3 0309 	sub.w	r3, r3, r9
 80025d2:	455b      	cmp	r3, fp
 80025d4:	dc31      	bgt.n	800263a <_printf_float+0x372>
 80025d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80025d8:	459a      	cmp	sl, r3
 80025da:	dc3a      	bgt.n	8002652 <_printf_float+0x38a>
 80025dc:	6823      	ldr	r3, [r4, #0]
 80025de:	07da      	lsls	r2, r3, #31
 80025e0:	d437      	bmi.n	8002652 <_printf_float+0x38a>
 80025e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80025e4:	ebaa 0903 	sub.w	r9, sl, r3
 80025e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80025ea:	ebaa 0303 	sub.w	r3, sl, r3
 80025ee:	4599      	cmp	r9, r3
 80025f0:	bfa8      	it	ge
 80025f2:	4699      	movge	r9, r3
 80025f4:	f1b9 0f00 	cmp.w	r9, #0
 80025f8:	dc33      	bgt.n	8002662 <_printf_float+0x39a>
 80025fa:	f04f 0800 	mov.w	r8, #0
 80025fe:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002602:	f104 0b1a 	add.w	fp, r4, #26
 8002606:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002608:	ebaa 0303 	sub.w	r3, sl, r3
 800260c:	eba3 0309 	sub.w	r3, r3, r9
 8002610:	4543      	cmp	r3, r8
 8002612:	f77f af79 	ble.w	8002508 <_printf_float+0x240>
 8002616:	2301      	movs	r3, #1
 8002618:	465a      	mov	r2, fp
 800261a:	4631      	mov	r1, r6
 800261c:	4628      	mov	r0, r5
 800261e:	47b8      	blx	r7
 8002620:	3001      	adds	r0, #1
 8002622:	f43f aeac 	beq.w	800237e <_printf_float+0xb6>
 8002626:	f108 0801 	add.w	r8, r8, #1
 800262a:	e7ec      	b.n	8002606 <_printf_float+0x33e>
 800262c:	4642      	mov	r2, r8
 800262e:	4631      	mov	r1, r6
 8002630:	4628      	mov	r0, r5
 8002632:	47b8      	blx	r7
 8002634:	3001      	adds	r0, #1
 8002636:	d1c2      	bne.n	80025be <_printf_float+0x2f6>
 8002638:	e6a1      	b.n	800237e <_printf_float+0xb6>
 800263a:	2301      	movs	r3, #1
 800263c:	4631      	mov	r1, r6
 800263e:	4628      	mov	r0, r5
 8002640:	920a      	str	r2, [sp, #40]	@ 0x28
 8002642:	47b8      	blx	r7
 8002644:	3001      	adds	r0, #1
 8002646:	f43f ae9a 	beq.w	800237e <_printf_float+0xb6>
 800264a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800264c:	f10b 0b01 	add.w	fp, fp, #1
 8002650:	e7bb      	b.n	80025ca <_printf_float+0x302>
 8002652:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002656:	4631      	mov	r1, r6
 8002658:	4628      	mov	r0, r5
 800265a:	47b8      	blx	r7
 800265c:	3001      	adds	r0, #1
 800265e:	d1c0      	bne.n	80025e2 <_printf_float+0x31a>
 8002660:	e68d      	b.n	800237e <_printf_float+0xb6>
 8002662:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002664:	464b      	mov	r3, r9
 8002666:	4442      	add	r2, r8
 8002668:	4631      	mov	r1, r6
 800266a:	4628      	mov	r0, r5
 800266c:	47b8      	blx	r7
 800266e:	3001      	adds	r0, #1
 8002670:	d1c3      	bne.n	80025fa <_printf_float+0x332>
 8002672:	e684      	b.n	800237e <_printf_float+0xb6>
 8002674:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002678:	f1ba 0f01 	cmp.w	sl, #1
 800267c:	dc01      	bgt.n	8002682 <_printf_float+0x3ba>
 800267e:	07db      	lsls	r3, r3, #31
 8002680:	d536      	bpl.n	80026f0 <_printf_float+0x428>
 8002682:	2301      	movs	r3, #1
 8002684:	4642      	mov	r2, r8
 8002686:	4631      	mov	r1, r6
 8002688:	4628      	mov	r0, r5
 800268a:	47b8      	blx	r7
 800268c:	3001      	adds	r0, #1
 800268e:	f43f ae76 	beq.w	800237e <_printf_float+0xb6>
 8002692:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002696:	4631      	mov	r1, r6
 8002698:	4628      	mov	r0, r5
 800269a:	47b8      	blx	r7
 800269c:	3001      	adds	r0, #1
 800269e:	f43f ae6e 	beq.w	800237e <_printf_float+0xb6>
 80026a2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80026a6:	2200      	movs	r2, #0
 80026a8:	2300      	movs	r3, #0
 80026aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80026ae:	f7fe fa0b 	bl	8000ac8 <__aeabi_dcmpeq>
 80026b2:	b9c0      	cbnz	r0, 80026e6 <_printf_float+0x41e>
 80026b4:	4653      	mov	r3, sl
 80026b6:	f108 0201 	add.w	r2, r8, #1
 80026ba:	4631      	mov	r1, r6
 80026bc:	4628      	mov	r0, r5
 80026be:	47b8      	blx	r7
 80026c0:	3001      	adds	r0, #1
 80026c2:	d10c      	bne.n	80026de <_printf_float+0x416>
 80026c4:	e65b      	b.n	800237e <_printf_float+0xb6>
 80026c6:	2301      	movs	r3, #1
 80026c8:	465a      	mov	r2, fp
 80026ca:	4631      	mov	r1, r6
 80026cc:	4628      	mov	r0, r5
 80026ce:	47b8      	blx	r7
 80026d0:	3001      	adds	r0, #1
 80026d2:	f43f ae54 	beq.w	800237e <_printf_float+0xb6>
 80026d6:	f108 0801 	add.w	r8, r8, #1
 80026da:	45d0      	cmp	r8, sl
 80026dc:	dbf3      	blt.n	80026c6 <_printf_float+0x3fe>
 80026de:	464b      	mov	r3, r9
 80026e0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80026e4:	e6df      	b.n	80024a6 <_printf_float+0x1de>
 80026e6:	f04f 0800 	mov.w	r8, #0
 80026ea:	f104 0b1a 	add.w	fp, r4, #26
 80026ee:	e7f4      	b.n	80026da <_printf_float+0x412>
 80026f0:	2301      	movs	r3, #1
 80026f2:	4642      	mov	r2, r8
 80026f4:	e7e1      	b.n	80026ba <_printf_float+0x3f2>
 80026f6:	2301      	movs	r3, #1
 80026f8:	464a      	mov	r2, r9
 80026fa:	4631      	mov	r1, r6
 80026fc:	4628      	mov	r0, r5
 80026fe:	47b8      	blx	r7
 8002700:	3001      	adds	r0, #1
 8002702:	f43f ae3c 	beq.w	800237e <_printf_float+0xb6>
 8002706:	f108 0801 	add.w	r8, r8, #1
 800270a:	68e3      	ldr	r3, [r4, #12]
 800270c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800270e:	1a5b      	subs	r3, r3, r1
 8002710:	4543      	cmp	r3, r8
 8002712:	dcf0      	bgt.n	80026f6 <_printf_float+0x42e>
 8002714:	e6fc      	b.n	8002510 <_printf_float+0x248>
 8002716:	f04f 0800 	mov.w	r8, #0
 800271a:	f104 0919 	add.w	r9, r4, #25
 800271e:	e7f4      	b.n	800270a <_printf_float+0x442>

08002720 <_printf_common>:
 8002720:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002724:	4616      	mov	r6, r2
 8002726:	4698      	mov	r8, r3
 8002728:	688a      	ldr	r2, [r1, #8]
 800272a:	690b      	ldr	r3, [r1, #16]
 800272c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002730:	4293      	cmp	r3, r2
 8002732:	bfb8      	it	lt
 8002734:	4613      	movlt	r3, r2
 8002736:	6033      	str	r3, [r6, #0]
 8002738:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800273c:	4607      	mov	r7, r0
 800273e:	460c      	mov	r4, r1
 8002740:	b10a      	cbz	r2, 8002746 <_printf_common+0x26>
 8002742:	3301      	adds	r3, #1
 8002744:	6033      	str	r3, [r6, #0]
 8002746:	6823      	ldr	r3, [r4, #0]
 8002748:	0699      	lsls	r1, r3, #26
 800274a:	bf42      	ittt	mi
 800274c:	6833      	ldrmi	r3, [r6, #0]
 800274e:	3302      	addmi	r3, #2
 8002750:	6033      	strmi	r3, [r6, #0]
 8002752:	6825      	ldr	r5, [r4, #0]
 8002754:	f015 0506 	ands.w	r5, r5, #6
 8002758:	d106      	bne.n	8002768 <_printf_common+0x48>
 800275a:	f104 0a19 	add.w	sl, r4, #25
 800275e:	68e3      	ldr	r3, [r4, #12]
 8002760:	6832      	ldr	r2, [r6, #0]
 8002762:	1a9b      	subs	r3, r3, r2
 8002764:	42ab      	cmp	r3, r5
 8002766:	dc26      	bgt.n	80027b6 <_printf_common+0x96>
 8002768:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800276c:	6822      	ldr	r2, [r4, #0]
 800276e:	3b00      	subs	r3, #0
 8002770:	bf18      	it	ne
 8002772:	2301      	movne	r3, #1
 8002774:	0692      	lsls	r2, r2, #26
 8002776:	d42b      	bmi.n	80027d0 <_printf_common+0xb0>
 8002778:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800277c:	4641      	mov	r1, r8
 800277e:	4638      	mov	r0, r7
 8002780:	47c8      	blx	r9
 8002782:	3001      	adds	r0, #1
 8002784:	d01e      	beq.n	80027c4 <_printf_common+0xa4>
 8002786:	6823      	ldr	r3, [r4, #0]
 8002788:	6922      	ldr	r2, [r4, #16]
 800278a:	f003 0306 	and.w	r3, r3, #6
 800278e:	2b04      	cmp	r3, #4
 8002790:	bf02      	ittt	eq
 8002792:	68e5      	ldreq	r5, [r4, #12]
 8002794:	6833      	ldreq	r3, [r6, #0]
 8002796:	1aed      	subeq	r5, r5, r3
 8002798:	68a3      	ldr	r3, [r4, #8]
 800279a:	bf0c      	ite	eq
 800279c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80027a0:	2500      	movne	r5, #0
 80027a2:	4293      	cmp	r3, r2
 80027a4:	bfc4      	itt	gt
 80027a6:	1a9b      	subgt	r3, r3, r2
 80027a8:	18ed      	addgt	r5, r5, r3
 80027aa:	2600      	movs	r6, #0
 80027ac:	341a      	adds	r4, #26
 80027ae:	42b5      	cmp	r5, r6
 80027b0:	d11a      	bne.n	80027e8 <_printf_common+0xc8>
 80027b2:	2000      	movs	r0, #0
 80027b4:	e008      	b.n	80027c8 <_printf_common+0xa8>
 80027b6:	2301      	movs	r3, #1
 80027b8:	4652      	mov	r2, sl
 80027ba:	4641      	mov	r1, r8
 80027bc:	4638      	mov	r0, r7
 80027be:	47c8      	blx	r9
 80027c0:	3001      	adds	r0, #1
 80027c2:	d103      	bne.n	80027cc <_printf_common+0xac>
 80027c4:	f04f 30ff 	mov.w	r0, #4294967295
 80027c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80027cc:	3501      	adds	r5, #1
 80027ce:	e7c6      	b.n	800275e <_printf_common+0x3e>
 80027d0:	18e1      	adds	r1, r4, r3
 80027d2:	1c5a      	adds	r2, r3, #1
 80027d4:	2030      	movs	r0, #48	@ 0x30
 80027d6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80027da:	4422      	add	r2, r4
 80027dc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80027e0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80027e4:	3302      	adds	r3, #2
 80027e6:	e7c7      	b.n	8002778 <_printf_common+0x58>
 80027e8:	2301      	movs	r3, #1
 80027ea:	4622      	mov	r2, r4
 80027ec:	4641      	mov	r1, r8
 80027ee:	4638      	mov	r0, r7
 80027f0:	47c8      	blx	r9
 80027f2:	3001      	adds	r0, #1
 80027f4:	d0e6      	beq.n	80027c4 <_printf_common+0xa4>
 80027f6:	3601      	adds	r6, #1
 80027f8:	e7d9      	b.n	80027ae <_printf_common+0x8e>
	...

080027fc <_printf_i>:
 80027fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002800:	7e0f      	ldrb	r7, [r1, #24]
 8002802:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002804:	2f78      	cmp	r7, #120	@ 0x78
 8002806:	4691      	mov	r9, r2
 8002808:	4680      	mov	r8, r0
 800280a:	460c      	mov	r4, r1
 800280c:	469a      	mov	sl, r3
 800280e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002812:	d807      	bhi.n	8002824 <_printf_i+0x28>
 8002814:	2f62      	cmp	r7, #98	@ 0x62
 8002816:	d80a      	bhi.n	800282e <_printf_i+0x32>
 8002818:	2f00      	cmp	r7, #0
 800281a:	f000 80d1 	beq.w	80029c0 <_printf_i+0x1c4>
 800281e:	2f58      	cmp	r7, #88	@ 0x58
 8002820:	f000 80b8 	beq.w	8002994 <_printf_i+0x198>
 8002824:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002828:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800282c:	e03a      	b.n	80028a4 <_printf_i+0xa8>
 800282e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002832:	2b15      	cmp	r3, #21
 8002834:	d8f6      	bhi.n	8002824 <_printf_i+0x28>
 8002836:	a101      	add	r1, pc, #4	@ (adr r1, 800283c <_printf_i+0x40>)
 8002838:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800283c:	08002895 	.word	0x08002895
 8002840:	080028a9 	.word	0x080028a9
 8002844:	08002825 	.word	0x08002825
 8002848:	08002825 	.word	0x08002825
 800284c:	08002825 	.word	0x08002825
 8002850:	08002825 	.word	0x08002825
 8002854:	080028a9 	.word	0x080028a9
 8002858:	08002825 	.word	0x08002825
 800285c:	08002825 	.word	0x08002825
 8002860:	08002825 	.word	0x08002825
 8002864:	08002825 	.word	0x08002825
 8002868:	080029a7 	.word	0x080029a7
 800286c:	080028d3 	.word	0x080028d3
 8002870:	08002961 	.word	0x08002961
 8002874:	08002825 	.word	0x08002825
 8002878:	08002825 	.word	0x08002825
 800287c:	080029c9 	.word	0x080029c9
 8002880:	08002825 	.word	0x08002825
 8002884:	080028d3 	.word	0x080028d3
 8002888:	08002825 	.word	0x08002825
 800288c:	08002825 	.word	0x08002825
 8002890:	08002969 	.word	0x08002969
 8002894:	6833      	ldr	r3, [r6, #0]
 8002896:	1d1a      	adds	r2, r3, #4
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	6032      	str	r2, [r6, #0]
 800289c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80028a0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80028a4:	2301      	movs	r3, #1
 80028a6:	e09c      	b.n	80029e2 <_printf_i+0x1e6>
 80028a8:	6833      	ldr	r3, [r6, #0]
 80028aa:	6820      	ldr	r0, [r4, #0]
 80028ac:	1d19      	adds	r1, r3, #4
 80028ae:	6031      	str	r1, [r6, #0]
 80028b0:	0606      	lsls	r6, r0, #24
 80028b2:	d501      	bpl.n	80028b8 <_printf_i+0xbc>
 80028b4:	681d      	ldr	r5, [r3, #0]
 80028b6:	e003      	b.n	80028c0 <_printf_i+0xc4>
 80028b8:	0645      	lsls	r5, r0, #25
 80028ba:	d5fb      	bpl.n	80028b4 <_printf_i+0xb8>
 80028bc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80028c0:	2d00      	cmp	r5, #0
 80028c2:	da03      	bge.n	80028cc <_printf_i+0xd0>
 80028c4:	232d      	movs	r3, #45	@ 0x2d
 80028c6:	426d      	negs	r5, r5
 80028c8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80028cc:	4858      	ldr	r0, [pc, #352]	@ (8002a30 <_printf_i+0x234>)
 80028ce:	230a      	movs	r3, #10
 80028d0:	e011      	b.n	80028f6 <_printf_i+0xfa>
 80028d2:	6821      	ldr	r1, [r4, #0]
 80028d4:	6833      	ldr	r3, [r6, #0]
 80028d6:	0608      	lsls	r0, r1, #24
 80028d8:	f853 5b04 	ldr.w	r5, [r3], #4
 80028dc:	d402      	bmi.n	80028e4 <_printf_i+0xe8>
 80028de:	0649      	lsls	r1, r1, #25
 80028e0:	bf48      	it	mi
 80028e2:	b2ad      	uxthmi	r5, r5
 80028e4:	2f6f      	cmp	r7, #111	@ 0x6f
 80028e6:	4852      	ldr	r0, [pc, #328]	@ (8002a30 <_printf_i+0x234>)
 80028e8:	6033      	str	r3, [r6, #0]
 80028ea:	bf14      	ite	ne
 80028ec:	230a      	movne	r3, #10
 80028ee:	2308      	moveq	r3, #8
 80028f0:	2100      	movs	r1, #0
 80028f2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80028f6:	6866      	ldr	r6, [r4, #4]
 80028f8:	60a6      	str	r6, [r4, #8]
 80028fa:	2e00      	cmp	r6, #0
 80028fc:	db05      	blt.n	800290a <_printf_i+0x10e>
 80028fe:	6821      	ldr	r1, [r4, #0]
 8002900:	432e      	orrs	r6, r5
 8002902:	f021 0104 	bic.w	r1, r1, #4
 8002906:	6021      	str	r1, [r4, #0]
 8002908:	d04b      	beq.n	80029a2 <_printf_i+0x1a6>
 800290a:	4616      	mov	r6, r2
 800290c:	fbb5 f1f3 	udiv	r1, r5, r3
 8002910:	fb03 5711 	mls	r7, r3, r1, r5
 8002914:	5dc7      	ldrb	r7, [r0, r7]
 8002916:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800291a:	462f      	mov	r7, r5
 800291c:	42bb      	cmp	r3, r7
 800291e:	460d      	mov	r5, r1
 8002920:	d9f4      	bls.n	800290c <_printf_i+0x110>
 8002922:	2b08      	cmp	r3, #8
 8002924:	d10b      	bne.n	800293e <_printf_i+0x142>
 8002926:	6823      	ldr	r3, [r4, #0]
 8002928:	07df      	lsls	r7, r3, #31
 800292a:	d508      	bpl.n	800293e <_printf_i+0x142>
 800292c:	6923      	ldr	r3, [r4, #16]
 800292e:	6861      	ldr	r1, [r4, #4]
 8002930:	4299      	cmp	r1, r3
 8002932:	bfde      	ittt	le
 8002934:	2330      	movle	r3, #48	@ 0x30
 8002936:	f806 3c01 	strble.w	r3, [r6, #-1]
 800293a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800293e:	1b92      	subs	r2, r2, r6
 8002940:	6122      	str	r2, [r4, #16]
 8002942:	f8cd a000 	str.w	sl, [sp]
 8002946:	464b      	mov	r3, r9
 8002948:	aa03      	add	r2, sp, #12
 800294a:	4621      	mov	r1, r4
 800294c:	4640      	mov	r0, r8
 800294e:	f7ff fee7 	bl	8002720 <_printf_common>
 8002952:	3001      	adds	r0, #1
 8002954:	d14a      	bne.n	80029ec <_printf_i+0x1f0>
 8002956:	f04f 30ff 	mov.w	r0, #4294967295
 800295a:	b004      	add	sp, #16
 800295c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002960:	6823      	ldr	r3, [r4, #0]
 8002962:	f043 0320 	orr.w	r3, r3, #32
 8002966:	6023      	str	r3, [r4, #0]
 8002968:	4832      	ldr	r0, [pc, #200]	@ (8002a34 <_printf_i+0x238>)
 800296a:	2778      	movs	r7, #120	@ 0x78
 800296c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002970:	6823      	ldr	r3, [r4, #0]
 8002972:	6831      	ldr	r1, [r6, #0]
 8002974:	061f      	lsls	r7, r3, #24
 8002976:	f851 5b04 	ldr.w	r5, [r1], #4
 800297a:	d402      	bmi.n	8002982 <_printf_i+0x186>
 800297c:	065f      	lsls	r7, r3, #25
 800297e:	bf48      	it	mi
 8002980:	b2ad      	uxthmi	r5, r5
 8002982:	6031      	str	r1, [r6, #0]
 8002984:	07d9      	lsls	r1, r3, #31
 8002986:	bf44      	itt	mi
 8002988:	f043 0320 	orrmi.w	r3, r3, #32
 800298c:	6023      	strmi	r3, [r4, #0]
 800298e:	b11d      	cbz	r5, 8002998 <_printf_i+0x19c>
 8002990:	2310      	movs	r3, #16
 8002992:	e7ad      	b.n	80028f0 <_printf_i+0xf4>
 8002994:	4826      	ldr	r0, [pc, #152]	@ (8002a30 <_printf_i+0x234>)
 8002996:	e7e9      	b.n	800296c <_printf_i+0x170>
 8002998:	6823      	ldr	r3, [r4, #0]
 800299a:	f023 0320 	bic.w	r3, r3, #32
 800299e:	6023      	str	r3, [r4, #0]
 80029a0:	e7f6      	b.n	8002990 <_printf_i+0x194>
 80029a2:	4616      	mov	r6, r2
 80029a4:	e7bd      	b.n	8002922 <_printf_i+0x126>
 80029a6:	6833      	ldr	r3, [r6, #0]
 80029a8:	6825      	ldr	r5, [r4, #0]
 80029aa:	6961      	ldr	r1, [r4, #20]
 80029ac:	1d18      	adds	r0, r3, #4
 80029ae:	6030      	str	r0, [r6, #0]
 80029b0:	062e      	lsls	r6, r5, #24
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	d501      	bpl.n	80029ba <_printf_i+0x1be>
 80029b6:	6019      	str	r1, [r3, #0]
 80029b8:	e002      	b.n	80029c0 <_printf_i+0x1c4>
 80029ba:	0668      	lsls	r0, r5, #25
 80029bc:	d5fb      	bpl.n	80029b6 <_printf_i+0x1ba>
 80029be:	8019      	strh	r1, [r3, #0]
 80029c0:	2300      	movs	r3, #0
 80029c2:	6123      	str	r3, [r4, #16]
 80029c4:	4616      	mov	r6, r2
 80029c6:	e7bc      	b.n	8002942 <_printf_i+0x146>
 80029c8:	6833      	ldr	r3, [r6, #0]
 80029ca:	1d1a      	adds	r2, r3, #4
 80029cc:	6032      	str	r2, [r6, #0]
 80029ce:	681e      	ldr	r6, [r3, #0]
 80029d0:	6862      	ldr	r2, [r4, #4]
 80029d2:	2100      	movs	r1, #0
 80029d4:	4630      	mov	r0, r6
 80029d6:	f7fd fbfb 	bl	80001d0 <memchr>
 80029da:	b108      	cbz	r0, 80029e0 <_printf_i+0x1e4>
 80029dc:	1b80      	subs	r0, r0, r6
 80029de:	6060      	str	r0, [r4, #4]
 80029e0:	6863      	ldr	r3, [r4, #4]
 80029e2:	6123      	str	r3, [r4, #16]
 80029e4:	2300      	movs	r3, #0
 80029e6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80029ea:	e7aa      	b.n	8002942 <_printf_i+0x146>
 80029ec:	6923      	ldr	r3, [r4, #16]
 80029ee:	4632      	mov	r2, r6
 80029f0:	4649      	mov	r1, r9
 80029f2:	4640      	mov	r0, r8
 80029f4:	47d0      	blx	sl
 80029f6:	3001      	adds	r0, #1
 80029f8:	d0ad      	beq.n	8002956 <_printf_i+0x15a>
 80029fa:	6823      	ldr	r3, [r4, #0]
 80029fc:	079b      	lsls	r3, r3, #30
 80029fe:	d413      	bmi.n	8002a28 <_printf_i+0x22c>
 8002a00:	68e0      	ldr	r0, [r4, #12]
 8002a02:	9b03      	ldr	r3, [sp, #12]
 8002a04:	4298      	cmp	r0, r3
 8002a06:	bfb8      	it	lt
 8002a08:	4618      	movlt	r0, r3
 8002a0a:	e7a6      	b.n	800295a <_printf_i+0x15e>
 8002a0c:	2301      	movs	r3, #1
 8002a0e:	4632      	mov	r2, r6
 8002a10:	4649      	mov	r1, r9
 8002a12:	4640      	mov	r0, r8
 8002a14:	47d0      	blx	sl
 8002a16:	3001      	adds	r0, #1
 8002a18:	d09d      	beq.n	8002956 <_printf_i+0x15a>
 8002a1a:	3501      	adds	r5, #1
 8002a1c:	68e3      	ldr	r3, [r4, #12]
 8002a1e:	9903      	ldr	r1, [sp, #12]
 8002a20:	1a5b      	subs	r3, r3, r1
 8002a22:	42ab      	cmp	r3, r5
 8002a24:	dcf2      	bgt.n	8002a0c <_printf_i+0x210>
 8002a26:	e7eb      	b.n	8002a00 <_printf_i+0x204>
 8002a28:	2500      	movs	r5, #0
 8002a2a:	f104 0619 	add.w	r6, r4, #25
 8002a2e:	e7f5      	b.n	8002a1c <_printf_i+0x220>
 8002a30:	0800683a 	.word	0x0800683a
 8002a34:	0800684b 	.word	0x0800684b

08002a38 <_scanf_float>:
 8002a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a3c:	b087      	sub	sp, #28
 8002a3e:	4691      	mov	r9, r2
 8002a40:	9303      	str	r3, [sp, #12]
 8002a42:	688b      	ldr	r3, [r1, #8]
 8002a44:	1e5a      	subs	r2, r3, #1
 8002a46:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8002a4a:	bf81      	itttt	hi
 8002a4c:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8002a50:	eb03 0b05 	addhi.w	fp, r3, r5
 8002a54:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8002a58:	608b      	strhi	r3, [r1, #8]
 8002a5a:	680b      	ldr	r3, [r1, #0]
 8002a5c:	460a      	mov	r2, r1
 8002a5e:	f04f 0500 	mov.w	r5, #0
 8002a62:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8002a66:	f842 3b1c 	str.w	r3, [r2], #28
 8002a6a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002a6e:	4680      	mov	r8, r0
 8002a70:	460c      	mov	r4, r1
 8002a72:	bf98      	it	ls
 8002a74:	f04f 0b00 	movls.w	fp, #0
 8002a78:	9201      	str	r2, [sp, #4]
 8002a7a:	4616      	mov	r6, r2
 8002a7c:	46aa      	mov	sl, r5
 8002a7e:	462f      	mov	r7, r5
 8002a80:	9502      	str	r5, [sp, #8]
 8002a82:	68a2      	ldr	r2, [r4, #8]
 8002a84:	b15a      	cbz	r2, 8002a9e <_scanf_float+0x66>
 8002a86:	f8d9 3000 	ldr.w	r3, [r9]
 8002a8a:	781b      	ldrb	r3, [r3, #0]
 8002a8c:	2b4e      	cmp	r3, #78	@ 0x4e
 8002a8e:	d863      	bhi.n	8002b58 <_scanf_float+0x120>
 8002a90:	2b40      	cmp	r3, #64	@ 0x40
 8002a92:	d83b      	bhi.n	8002b0c <_scanf_float+0xd4>
 8002a94:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002a98:	b2c8      	uxtb	r0, r1
 8002a9a:	280e      	cmp	r0, #14
 8002a9c:	d939      	bls.n	8002b12 <_scanf_float+0xda>
 8002a9e:	b11f      	cbz	r7, 8002aa8 <_scanf_float+0x70>
 8002aa0:	6823      	ldr	r3, [r4, #0]
 8002aa2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002aa6:	6023      	str	r3, [r4, #0]
 8002aa8:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002aac:	f1ba 0f01 	cmp.w	sl, #1
 8002ab0:	f200 8114 	bhi.w	8002cdc <_scanf_float+0x2a4>
 8002ab4:	9b01      	ldr	r3, [sp, #4]
 8002ab6:	429e      	cmp	r6, r3
 8002ab8:	f200 8105 	bhi.w	8002cc6 <_scanf_float+0x28e>
 8002abc:	2001      	movs	r0, #1
 8002abe:	b007      	add	sp, #28
 8002ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ac4:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8002ac8:	2a0d      	cmp	r2, #13
 8002aca:	d8e8      	bhi.n	8002a9e <_scanf_float+0x66>
 8002acc:	a101      	add	r1, pc, #4	@ (adr r1, 8002ad4 <_scanf_float+0x9c>)
 8002ace:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002ad2:	bf00      	nop
 8002ad4:	08002c1d 	.word	0x08002c1d
 8002ad8:	08002a9f 	.word	0x08002a9f
 8002adc:	08002a9f 	.word	0x08002a9f
 8002ae0:	08002a9f 	.word	0x08002a9f
 8002ae4:	08002c79 	.word	0x08002c79
 8002ae8:	08002c53 	.word	0x08002c53
 8002aec:	08002a9f 	.word	0x08002a9f
 8002af0:	08002a9f 	.word	0x08002a9f
 8002af4:	08002c2b 	.word	0x08002c2b
 8002af8:	08002a9f 	.word	0x08002a9f
 8002afc:	08002a9f 	.word	0x08002a9f
 8002b00:	08002a9f 	.word	0x08002a9f
 8002b04:	08002a9f 	.word	0x08002a9f
 8002b08:	08002be7 	.word	0x08002be7
 8002b0c:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8002b10:	e7da      	b.n	8002ac8 <_scanf_float+0x90>
 8002b12:	290e      	cmp	r1, #14
 8002b14:	d8c3      	bhi.n	8002a9e <_scanf_float+0x66>
 8002b16:	a001      	add	r0, pc, #4	@ (adr r0, 8002b1c <_scanf_float+0xe4>)
 8002b18:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002b1c:	08002bd7 	.word	0x08002bd7
 8002b20:	08002a9f 	.word	0x08002a9f
 8002b24:	08002bd7 	.word	0x08002bd7
 8002b28:	08002c67 	.word	0x08002c67
 8002b2c:	08002a9f 	.word	0x08002a9f
 8002b30:	08002b79 	.word	0x08002b79
 8002b34:	08002bbd 	.word	0x08002bbd
 8002b38:	08002bbd 	.word	0x08002bbd
 8002b3c:	08002bbd 	.word	0x08002bbd
 8002b40:	08002bbd 	.word	0x08002bbd
 8002b44:	08002bbd 	.word	0x08002bbd
 8002b48:	08002bbd 	.word	0x08002bbd
 8002b4c:	08002bbd 	.word	0x08002bbd
 8002b50:	08002bbd 	.word	0x08002bbd
 8002b54:	08002bbd 	.word	0x08002bbd
 8002b58:	2b6e      	cmp	r3, #110	@ 0x6e
 8002b5a:	d809      	bhi.n	8002b70 <_scanf_float+0x138>
 8002b5c:	2b60      	cmp	r3, #96	@ 0x60
 8002b5e:	d8b1      	bhi.n	8002ac4 <_scanf_float+0x8c>
 8002b60:	2b54      	cmp	r3, #84	@ 0x54
 8002b62:	d07b      	beq.n	8002c5c <_scanf_float+0x224>
 8002b64:	2b59      	cmp	r3, #89	@ 0x59
 8002b66:	d19a      	bne.n	8002a9e <_scanf_float+0x66>
 8002b68:	2d07      	cmp	r5, #7
 8002b6a:	d198      	bne.n	8002a9e <_scanf_float+0x66>
 8002b6c:	2508      	movs	r5, #8
 8002b6e:	e02f      	b.n	8002bd0 <_scanf_float+0x198>
 8002b70:	2b74      	cmp	r3, #116	@ 0x74
 8002b72:	d073      	beq.n	8002c5c <_scanf_float+0x224>
 8002b74:	2b79      	cmp	r3, #121	@ 0x79
 8002b76:	e7f6      	b.n	8002b66 <_scanf_float+0x12e>
 8002b78:	6821      	ldr	r1, [r4, #0]
 8002b7a:	05c8      	lsls	r0, r1, #23
 8002b7c:	d51e      	bpl.n	8002bbc <_scanf_float+0x184>
 8002b7e:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8002b82:	6021      	str	r1, [r4, #0]
 8002b84:	3701      	adds	r7, #1
 8002b86:	f1bb 0f00 	cmp.w	fp, #0
 8002b8a:	d003      	beq.n	8002b94 <_scanf_float+0x15c>
 8002b8c:	3201      	adds	r2, #1
 8002b8e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002b92:	60a2      	str	r2, [r4, #8]
 8002b94:	68a3      	ldr	r3, [r4, #8]
 8002b96:	3b01      	subs	r3, #1
 8002b98:	60a3      	str	r3, [r4, #8]
 8002b9a:	6923      	ldr	r3, [r4, #16]
 8002b9c:	3301      	adds	r3, #1
 8002b9e:	6123      	str	r3, [r4, #16]
 8002ba0:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8002ba4:	3b01      	subs	r3, #1
 8002ba6:	2b00      	cmp	r3, #0
 8002ba8:	f8c9 3004 	str.w	r3, [r9, #4]
 8002bac:	f340 8082 	ble.w	8002cb4 <_scanf_float+0x27c>
 8002bb0:	f8d9 3000 	ldr.w	r3, [r9]
 8002bb4:	3301      	adds	r3, #1
 8002bb6:	f8c9 3000 	str.w	r3, [r9]
 8002bba:	e762      	b.n	8002a82 <_scanf_float+0x4a>
 8002bbc:	eb1a 0105 	adds.w	r1, sl, r5
 8002bc0:	f47f af6d 	bne.w	8002a9e <_scanf_float+0x66>
 8002bc4:	6822      	ldr	r2, [r4, #0]
 8002bc6:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8002bca:	6022      	str	r2, [r4, #0]
 8002bcc:	460d      	mov	r5, r1
 8002bce:	468a      	mov	sl, r1
 8002bd0:	f806 3b01 	strb.w	r3, [r6], #1
 8002bd4:	e7de      	b.n	8002b94 <_scanf_float+0x15c>
 8002bd6:	6822      	ldr	r2, [r4, #0]
 8002bd8:	0610      	lsls	r0, r2, #24
 8002bda:	f57f af60 	bpl.w	8002a9e <_scanf_float+0x66>
 8002bde:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002be2:	6022      	str	r2, [r4, #0]
 8002be4:	e7f4      	b.n	8002bd0 <_scanf_float+0x198>
 8002be6:	f1ba 0f00 	cmp.w	sl, #0
 8002bea:	d10c      	bne.n	8002c06 <_scanf_float+0x1ce>
 8002bec:	b977      	cbnz	r7, 8002c0c <_scanf_float+0x1d4>
 8002bee:	6822      	ldr	r2, [r4, #0]
 8002bf0:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002bf4:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002bf8:	d108      	bne.n	8002c0c <_scanf_float+0x1d4>
 8002bfa:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002bfe:	6022      	str	r2, [r4, #0]
 8002c00:	f04f 0a01 	mov.w	sl, #1
 8002c04:	e7e4      	b.n	8002bd0 <_scanf_float+0x198>
 8002c06:	f1ba 0f02 	cmp.w	sl, #2
 8002c0a:	d050      	beq.n	8002cae <_scanf_float+0x276>
 8002c0c:	2d01      	cmp	r5, #1
 8002c0e:	d002      	beq.n	8002c16 <_scanf_float+0x1de>
 8002c10:	2d04      	cmp	r5, #4
 8002c12:	f47f af44 	bne.w	8002a9e <_scanf_float+0x66>
 8002c16:	3501      	adds	r5, #1
 8002c18:	b2ed      	uxtb	r5, r5
 8002c1a:	e7d9      	b.n	8002bd0 <_scanf_float+0x198>
 8002c1c:	f1ba 0f01 	cmp.w	sl, #1
 8002c20:	f47f af3d 	bne.w	8002a9e <_scanf_float+0x66>
 8002c24:	f04f 0a02 	mov.w	sl, #2
 8002c28:	e7d2      	b.n	8002bd0 <_scanf_float+0x198>
 8002c2a:	b975      	cbnz	r5, 8002c4a <_scanf_float+0x212>
 8002c2c:	2f00      	cmp	r7, #0
 8002c2e:	f47f af37 	bne.w	8002aa0 <_scanf_float+0x68>
 8002c32:	6822      	ldr	r2, [r4, #0]
 8002c34:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002c38:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002c3c:	f040 80fe 	bne.w	8002e3c <_scanf_float+0x404>
 8002c40:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002c44:	6022      	str	r2, [r4, #0]
 8002c46:	2501      	movs	r5, #1
 8002c48:	e7c2      	b.n	8002bd0 <_scanf_float+0x198>
 8002c4a:	2d03      	cmp	r5, #3
 8002c4c:	d0e3      	beq.n	8002c16 <_scanf_float+0x1de>
 8002c4e:	2d05      	cmp	r5, #5
 8002c50:	e7df      	b.n	8002c12 <_scanf_float+0x1da>
 8002c52:	2d02      	cmp	r5, #2
 8002c54:	f47f af23 	bne.w	8002a9e <_scanf_float+0x66>
 8002c58:	2503      	movs	r5, #3
 8002c5a:	e7b9      	b.n	8002bd0 <_scanf_float+0x198>
 8002c5c:	2d06      	cmp	r5, #6
 8002c5e:	f47f af1e 	bne.w	8002a9e <_scanf_float+0x66>
 8002c62:	2507      	movs	r5, #7
 8002c64:	e7b4      	b.n	8002bd0 <_scanf_float+0x198>
 8002c66:	6822      	ldr	r2, [r4, #0]
 8002c68:	0591      	lsls	r1, r2, #22
 8002c6a:	f57f af18 	bpl.w	8002a9e <_scanf_float+0x66>
 8002c6e:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8002c72:	6022      	str	r2, [r4, #0]
 8002c74:	9702      	str	r7, [sp, #8]
 8002c76:	e7ab      	b.n	8002bd0 <_scanf_float+0x198>
 8002c78:	6822      	ldr	r2, [r4, #0]
 8002c7a:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8002c7e:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8002c82:	d005      	beq.n	8002c90 <_scanf_float+0x258>
 8002c84:	0550      	lsls	r0, r2, #21
 8002c86:	f57f af0a 	bpl.w	8002a9e <_scanf_float+0x66>
 8002c8a:	2f00      	cmp	r7, #0
 8002c8c:	f000 80d6 	beq.w	8002e3c <_scanf_float+0x404>
 8002c90:	0591      	lsls	r1, r2, #22
 8002c92:	bf58      	it	pl
 8002c94:	9902      	ldrpl	r1, [sp, #8]
 8002c96:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002c9a:	bf58      	it	pl
 8002c9c:	1a79      	subpl	r1, r7, r1
 8002c9e:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8002ca2:	bf58      	it	pl
 8002ca4:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002ca8:	6022      	str	r2, [r4, #0]
 8002caa:	2700      	movs	r7, #0
 8002cac:	e790      	b.n	8002bd0 <_scanf_float+0x198>
 8002cae:	f04f 0a03 	mov.w	sl, #3
 8002cb2:	e78d      	b.n	8002bd0 <_scanf_float+0x198>
 8002cb4:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8002cb8:	4649      	mov	r1, r9
 8002cba:	4640      	mov	r0, r8
 8002cbc:	4798      	blx	r3
 8002cbe:	2800      	cmp	r0, #0
 8002cc0:	f43f aedf 	beq.w	8002a82 <_scanf_float+0x4a>
 8002cc4:	e6eb      	b.n	8002a9e <_scanf_float+0x66>
 8002cc6:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002cca:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002cce:	464a      	mov	r2, r9
 8002cd0:	4640      	mov	r0, r8
 8002cd2:	4798      	blx	r3
 8002cd4:	6923      	ldr	r3, [r4, #16]
 8002cd6:	3b01      	subs	r3, #1
 8002cd8:	6123      	str	r3, [r4, #16]
 8002cda:	e6eb      	b.n	8002ab4 <_scanf_float+0x7c>
 8002cdc:	1e6b      	subs	r3, r5, #1
 8002cde:	2b06      	cmp	r3, #6
 8002ce0:	d824      	bhi.n	8002d2c <_scanf_float+0x2f4>
 8002ce2:	2d02      	cmp	r5, #2
 8002ce4:	d836      	bhi.n	8002d54 <_scanf_float+0x31c>
 8002ce6:	9b01      	ldr	r3, [sp, #4]
 8002ce8:	429e      	cmp	r6, r3
 8002cea:	f67f aee7 	bls.w	8002abc <_scanf_float+0x84>
 8002cee:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002cf2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002cf6:	464a      	mov	r2, r9
 8002cf8:	4640      	mov	r0, r8
 8002cfa:	4798      	blx	r3
 8002cfc:	6923      	ldr	r3, [r4, #16]
 8002cfe:	3b01      	subs	r3, #1
 8002d00:	6123      	str	r3, [r4, #16]
 8002d02:	e7f0      	b.n	8002ce6 <_scanf_float+0x2ae>
 8002d04:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002d08:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8002d0c:	464a      	mov	r2, r9
 8002d0e:	4640      	mov	r0, r8
 8002d10:	4798      	blx	r3
 8002d12:	6923      	ldr	r3, [r4, #16]
 8002d14:	3b01      	subs	r3, #1
 8002d16:	6123      	str	r3, [r4, #16]
 8002d18:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002d1c:	fa5f fa8a 	uxtb.w	sl, sl
 8002d20:	f1ba 0f02 	cmp.w	sl, #2
 8002d24:	d1ee      	bne.n	8002d04 <_scanf_float+0x2cc>
 8002d26:	3d03      	subs	r5, #3
 8002d28:	b2ed      	uxtb	r5, r5
 8002d2a:	1b76      	subs	r6, r6, r5
 8002d2c:	6823      	ldr	r3, [r4, #0]
 8002d2e:	05da      	lsls	r2, r3, #23
 8002d30:	d530      	bpl.n	8002d94 <_scanf_float+0x35c>
 8002d32:	055b      	lsls	r3, r3, #21
 8002d34:	d511      	bpl.n	8002d5a <_scanf_float+0x322>
 8002d36:	9b01      	ldr	r3, [sp, #4]
 8002d38:	429e      	cmp	r6, r3
 8002d3a:	f67f aebf 	bls.w	8002abc <_scanf_float+0x84>
 8002d3e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002d42:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002d46:	464a      	mov	r2, r9
 8002d48:	4640      	mov	r0, r8
 8002d4a:	4798      	blx	r3
 8002d4c:	6923      	ldr	r3, [r4, #16]
 8002d4e:	3b01      	subs	r3, #1
 8002d50:	6123      	str	r3, [r4, #16]
 8002d52:	e7f0      	b.n	8002d36 <_scanf_float+0x2fe>
 8002d54:	46aa      	mov	sl, r5
 8002d56:	46b3      	mov	fp, r6
 8002d58:	e7de      	b.n	8002d18 <_scanf_float+0x2e0>
 8002d5a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002d5e:	6923      	ldr	r3, [r4, #16]
 8002d60:	2965      	cmp	r1, #101	@ 0x65
 8002d62:	f103 33ff 	add.w	r3, r3, #4294967295
 8002d66:	f106 35ff 	add.w	r5, r6, #4294967295
 8002d6a:	6123      	str	r3, [r4, #16]
 8002d6c:	d00c      	beq.n	8002d88 <_scanf_float+0x350>
 8002d6e:	2945      	cmp	r1, #69	@ 0x45
 8002d70:	d00a      	beq.n	8002d88 <_scanf_float+0x350>
 8002d72:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002d76:	464a      	mov	r2, r9
 8002d78:	4640      	mov	r0, r8
 8002d7a:	4798      	blx	r3
 8002d7c:	6923      	ldr	r3, [r4, #16]
 8002d7e:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002d82:	3b01      	subs	r3, #1
 8002d84:	1eb5      	subs	r5, r6, #2
 8002d86:	6123      	str	r3, [r4, #16]
 8002d88:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002d8c:	464a      	mov	r2, r9
 8002d8e:	4640      	mov	r0, r8
 8002d90:	4798      	blx	r3
 8002d92:	462e      	mov	r6, r5
 8002d94:	6822      	ldr	r2, [r4, #0]
 8002d96:	f012 0210 	ands.w	r2, r2, #16
 8002d9a:	d001      	beq.n	8002da0 <_scanf_float+0x368>
 8002d9c:	2000      	movs	r0, #0
 8002d9e:	e68e      	b.n	8002abe <_scanf_float+0x86>
 8002da0:	7032      	strb	r2, [r6, #0]
 8002da2:	6823      	ldr	r3, [r4, #0]
 8002da4:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002da8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002dac:	d125      	bne.n	8002dfa <_scanf_float+0x3c2>
 8002dae:	9b02      	ldr	r3, [sp, #8]
 8002db0:	429f      	cmp	r7, r3
 8002db2:	d00a      	beq.n	8002dca <_scanf_float+0x392>
 8002db4:	1bda      	subs	r2, r3, r7
 8002db6:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8002dba:	429e      	cmp	r6, r3
 8002dbc:	bf28      	it	cs
 8002dbe:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8002dc2:	491f      	ldr	r1, [pc, #124]	@ (8002e40 <_scanf_float+0x408>)
 8002dc4:	4630      	mov	r0, r6
 8002dc6:	f000 f901 	bl	8002fcc <siprintf>
 8002dca:	2200      	movs	r2, #0
 8002dcc:	9901      	ldr	r1, [sp, #4]
 8002dce:	4640      	mov	r0, r8
 8002dd0:	f002 fbd6 	bl	8005580 <_strtod_r>
 8002dd4:	9b03      	ldr	r3, [sp, #12]
 8002dd6:	6825      	ldr	r5, [r4, #0]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	f015 0f02 	tst.w	r5, #2
 8002dde:	4606      	mov	r6, r0
 8002de0:	460f      	mov	r7, r1
 8002de2:	f103 0204 	add.w	r2, r3, #4
 8002de6:	d015      	beq.n	8002e14 <_scanf_float+0x3dc>
 8002de8:	9903      	ldr	r1, [sp, #12]
 8002dea:	600a      	str	r2, [r1, #0]
 8002dec:	681b      	ldr	r3, [r3, #0]
 8002dee:	e9c3 6700 	strd	r6, r7, [r3]
 8002df2:	68e3      	ldr	r3, [r4, #12]
 8002df4:	3301      	adds	r3, #1
 8002df6:	60e3      	str	r3, [r4, #12]
 8002df8:	e7d0      	b.n	8002d9c <_scanf_float+0x364>
 8002dfa:	9b04      	ldr	r3, [sp, #16]
 8002dfc:	2b00      	cmp	r3, #0
 8002dfe:	d0e4      	beq.n	8002dca <_scanf_float+0x392>
 8002e00:	9905      	ldr	r1, [sp, #20]
 8002e02:	230a      	movs	r3, #10
 8002e04:	3101      	adds	r1, #1
 8002e06:	4640      	mov	r0, r8
 8002e08:	f002 fc3a 	bl	8005680 <_strtol_r>
 8002e0c:	9b04      	ldr	r3, [sp, #16]
 8002e0e:	9e05      	ldr	r6, [sp, #20]
 8002e10:	1ac2      	subs	r2, r0, r3
 8002e12:	e7d0      	b.n	8002db6 <_scanf_float+0x37e>
 8002e14:	076d      	lsls	r5, r5, #29
 8002e16:	d4e7      	bmi.n	8002de8 <_scanf_float+0x3b0>
 8002e18:	9d03      	ldr	r5, [sp, #12]
 8002e1a:	602a      	str	r2, [r5, #0]
 8002e1c:	681d      	ldr	r5, [r3, #0]
 8002e1e:	4602      	mov	r2, r0
 8002e20:	460b      	mov	r3, r1
 8002e22:	f7fd fe83 	bl	8000b2c <__aeabi_dcmpun>
 8002e26:	b120      	cbz	r0, 8002e32 <_scanf_float+0x3fa>
 8002e28:	4806      	ldr	r0, [pc, #24]	@ (8002e44 <_scanf_float+0x40c>)
 8002e2a:	f000 f9b5 	bl	8003198 <nanf>
 8002e2e:	6028      	str	r0, [r5, #0]
 8002e30:	e7df      	b.n	8002df2 <_scanf_float+0x3ba>
 8002e32:	4630      	mov	r0, r6
 8002e34:	4639      	mov	r1, r7
 8002e36:	f7fd fed7 	bl	8000be8 <__aeabi_d2f>
 8002e3a:	e7f8      	b.n	8002e2e <_scanf_float+0x3f6>
 8002e3c:	2700      	movs	r7, #0
 8002e3e:	e633      	b.n	8002aa8 <_scanf_float+0x70>
 8002e40:	0800685c 	.word	0x0800685c
 8002e44:	0800699d 	.word	0x0800699d

08002e48 <std>:
 8002e48:	2300      	movs	r3, #0
 8002e4a:	b510      	push	{r4, lr}
 8002e4c:	4604      	mov	r4, r0
 8002e4e:	e9c0 3300 	strd	r3, r3, [r0]
 8002e52:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002e56:	6083      	str	r3, [r0, #8]
 8002e58:	8181      	strh	r1, [r0, #12]
 8002e5a:	6643      	str	r3, [r0, #100]	@ 0x64
 8002e5c:	81c2      	strh	r2, [r0, #14]
 8002e5e:	6183      	str	r3, [r0, #24]
 8002e60:	4619      	mov	r1, r3
 8002e62:	2208      	movs	r2, #8
 8002e64:	305c      	adds	r0, #92	@ 0x5c
 8002e66:	f000 f916 	bl	8003096 <memset>
 8002e6a:	4b0d      	ldr	r3, [pc, #52]	@ (8002ea0 <std+0x58>)
 8002e6c:	6263      	str	r3, [r4, #36]	@ 0x24
 8002e6e:	4b0d      	ldr	r3, [pc, #52]	@ (8002ea4 <std+0x5c>)
 8002e70:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002e72:	4b0d      	ldr	r3, [pc, #52]	@ (8002ea8 <std+0x60>)
 8002e74:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002e76:	4b0d      	ldr	r3, [pc, #52]	@ (8002eac <std+0x64>)
 8002e78:	6323      	str	r3, [r4, #48]	@ 0x30
 8002e7a:	4b0d      	ldr	r3, [pc, #52]	@ (8002eb0 <std+0x68>)
 8002e7c:	6224      	str	r4, [r4, #32]
 8002e7e:	429c      	cmp	r4, r3
 8002e80:	d006      	beq.n	8002e90 <std+0x48>
 8002e82:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002e86:	4294      	cmp	r4, r2
 8002e88:	d002      	beq.n	8002e90 <std+0x48>
 8002e8a:	33d0      	adds	r3, #208	@ 0xd0
 8002e8c:	429c      	cmp	r4, r3
 8002e8e:	d105      	bne.n	8002e9c <std+0x54>
 8002e90:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002e94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e98:	f000 b97a 	b.w	8003190 <__retarget_lock_init_recursive>
 8002e9c:	bd10      	pop	{r4, pc}
 8002e9e:	bf00      	nop
 8002ea0:	08003011 	.word	0x08003011
 8002ea4:	08003033 	.word	0x08003033
 8002ea8:	0800306b 	.word	0x0800306b
 8002eac:	0800308f 	.word	0x0800308f
 8002eb0:	200001f0 	.word	0x200001f0

08002eb4 <stdio_exit_handler>:
 8002eb4:	4a02      	ldr	r2, [pc, #8]	@ (8002ec0 <stdio_exit_handler+0xc>)
 8002eb6:	4903      	ldr	r1, [pc, #12]	@ (8002ec4 <stdio_exit_handler+0x10>)
 8002eb8:	4803      	ldr	r0, [pc, #12]	@ (8002ec8 <stdio_exit_handler+0x14>)
 8002eba:	f000 b869 	b.w	8002f90 <_fwalk_sglue>
 8002ebe:	bf00      	nop
 8002ec0:	20000004 	.word	0x20000004
 8002ec4:	08005a35 	.word	0x08005a35
 8002ec8:	20000014 	.word	0x20000014

08002ecc <cleanup_stdio>:
 8002ecc:	6841      	ldr	r1, [r0, #4]
 8002ece:	4b0c      	ldr	r3, [pc, #48]	@ (8002f00 <cleanup_stdio+0x34>)
 8002ed0:	4299      	cmp	r1, r3
 8002ed2:	b510      	push	{r4, lr}
 8002ed4:	4604      	mov	r4, r0
 8002ed6:	d001      	beq.n	8002edc <cleanup_stdio+0x10>
 8002ed8:	f002 fdac 	bl	8005a34 <_fflush_r>
 8002edc:	68a1      	ldr	r1, [r4, #8]
 8002ede:	4b09      	ldr	r3, [pc, #36]	@ (8002f04 <cleanup_stdio+0x38>)
 8002ee0:	4299      	cmp	r1, r3
 8002ee2:	d002      	beq.n	8002eea <cleanup_stdio+0x1e>
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	f002 fda5 	bl	8005a34 <_fflush_r>
 8002eea:	68e1      	ldr	r1, [r4, #12]
 8002eec:	4b06      	ldr	r3, [pc, #24]	@ (8002f08 <cleanup_stdio+0x3c>)
 8002eee:	4299      	cmp	r1, r3
 8002ef0:	d004      	beq.n	8002efc <cleanup_stdio+0x30>
 8002ef2:	4620      	mov	r0, r4
 8002ef4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ef8:	f002 bd9c 	b.w	8005a34 <_fflush_r>
 8002efc:	bd10      	pop	{r4, pc}
 8002efe:	bf00      	nop
 8002f00:	200001f0 	.word	0x200001f0
 8002f04:	20000258 	.word	0x20000258
 8002f08:	200002c0 	.word	0x200002c0

08002f0c <global_stdio_init.part.0>:
 8002f0c:	b510      	push	{r4, lr}
 8002f0e:	4b0b      	ldr	r3, [pc, #44]	@ (8002f3c <global_stdio_init.part.0+0x30>)
 8002f10:	4c0b      	ldr	r4, [pc, #44]	@ (8002f40 <global_stdio_init.part.0+0x34>)
 8002f12:	4a0c      	ldr	r2, [pc, #48]	@ (8002f44 <global_stdio_init.part.0+0x38>)
 8002f14:	601a      	str	r2, [r3, #0]
 8002f16:	4620      	mov	r0, r4
 8002f18:	2200      	movs	r2, #0
 8002f1a:	2104      	movs	r1, #4
 8002f1c:	f7ff ff94 	bl	8002e48 <std>
 8002f20:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002f24:	2201      	movs	r2, #1
 8002f26:	2109      	movs	r1, #9
 8002f28:	f7ff ff8e 	bl	8002e48 <std>
 8002f2c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002f30:	2202      	movs	r2, #2
 8002f32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002f36:	2112      	movs	r1, #18
 8002f38:	f7ff bf86 	b.w	8002e48 <std>
 8002f3c:	20000328 	.word	0x20000328
 8002f40:	200001f0 	.word	0x200001f0
 8002f44:	08002eb5 	.word	0x08002eb5

08002f48 <__sfp_lock_acquire>:
 8002f48:	4801      	ldr	r0, [pc, #4]	@ (8002f50 <__sfp_lock_acquire+0x8>)
 8002f4a:	f000 b922 	b.w	8003192 <__retarget_lock_acquire_recursive>
 8002f4e:	bf00      	nop
 8002f50:	20000331 	.word	0x20000331

08002f54 <__sfp_lock_release>:
 8002f54:	4801      	ldr	r0, [pc, #4]	@ (8002f5c <__sfp_lock_release+0x8>)
 8002f56:	f000 b91d 	b.w	8003194 <__retarget_lock_release_recursive>
 8002f5a:	bf00      	nop
 8002f5c:	20000331 	.word	0x20000331

08002f60 <__sinit>:
 8002f60:	b510      	push	{r4, lr}
 8002f62:	4604      	mov	r4, r0
 8002f64:	f7ff fff0 	bl	8002f48 <__sfp_lock_acquire>
 8002f68:	6a23      	ldr	r3, [r4, #32]
 8002f6a:	b11b      	cbz	r3, 8002f74 <__sinit+0x14>
 8002f6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002f70:	f7ff bff0 	b.w	8002f54 <__sfp_lock_release>
 8002f74:	4b04      	ldr	r3, [pc, #16]	@ (8002f88 <__sinit+0x28>)
 8002f76:	6223      	str	r3, [r4, #32]
 8002f78:	4b04      	ldr	r3, [pc, #16]	@ (8002f8c <__sinit+0x2c>)
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	2b00      	cmp	r3, #0
 8002f7e:	d1f5      	bne.n	8002f6c <__sinit+0xc>
 8002f80:	f7ff ffc4 	bl	8002f0c <global_stdio_init.part.0>
 8002f84:	e7f2      	b.n	8002f6c <__sinit+0xc>
 8002f86:	bf00      	nop
 8002f88:	08002ecd 	.word	0x08002ecd
 8002f8c:	20000328 	.word	0x20000328

08002f90 <_fwalk_sglue>:
 8002f90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f94:	4607      	mov	r7, r0
 8002f96:	4688      	mov	r8, r1
 8002f98:	4614      	mov	r4, r2
 8002f9a:	2600      	movs	r6, #0
 8002f9c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002fa0:	f1b9 0901 	subs.w	r9, r9, #1
 8002fa4:	d505      	bpl.n	8002fb2 <_fwalk_sglue+0x22>
 8002fa6:	6824      	ldr	r4, [r4, #0]
 8002fa8:	2c00      	cmp	r4, #0
 8002faa:	d1f7      	bne.n	8002f9c <_fwalk_sglue+0xc>
 8002fac:	4630      	mov	r0, r6
 8002fae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002fb2:	89ab      	ldrh	r3, [r5, #12]
 8002fb4:	2b01      	cmp	r3, #1
 8002fb6:	d907      	bls.n	8002fc8 <_fwalk_sglue+0x38>
 8002fb8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002fbc:	3301      	adds	r3, #1
 8002fbe:	d003      	beq.n	8002fc8 <_fwalk_sglue+0x38>
 8002fc0:	4629      	mov	r1, r5
 8002fc2:	4638      	mov	r0, r7
 8002fc4:	47c0      	blx	r8
 8002fc6:	4306      	orrs	r6, r0
 8002fc8:	3568      	adds	r5, #104	@ 0x68
 8002fca:	e7e9      	b.n	8002fa0 <_fwalk_sglue+0x10>

08002fcc <siprintf>:
 8002fcc:	b40e      	push	{r1, r2, r3}
 8002fce:	b510      	push	{r4, lr}
 8002fd0:	b09d      	sub	sp, #116	@ 0x74
 8002fd2:	ab1f      	add	r3, sp, #124	@ 0x7c
 8002fd4:	9002      	str	r0, [sp, #8]
 8002fd6:	9006      	str	r0, [sp, #24]
 8002fd8:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8002fdc:	480a      	ldr	r0, [pc, #40]	@ (8003008 <siprintf+0x3c>)
 8002fde:	9107      	str	r1, [sp, #28]
 8002fe0:	9104      	str	r1, [sp, #16]
 8002fe2:	490a      	ldr	r1, [pc, #40]	@ (800300c <siprintf+0x40>)
 8002fe4:	f853 2b04 	ldr.w	r2, [r3], #4
 8002fe8:	9105      	str	r1, [sp, #20]
 8002fea:	2400      	movs	r4, #0
 8002fec:	a902      	add	r1, sp, #8
 8002fee:	6800      	ldr	r0, [r0, #0]
 8002ff0:	9301      	str	r3, [sp, #4]
 8002ff2:	941b      	str	r4, [sp, #108]	@ 0x6c
 8002ff4:	f002 fba2 	bl	800573c <_svfiprintf_r>
 8002ff8:	9b02      	ldr	r3, [sp, #8]
 8002ffa:	701c      	strb	r4, [r3, #0]
 8002ffc:	b01d      	add	sp, #116	@ 0x74
 8002ffe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003002:	b003      	add	sp, #12
 8003004:	4770      	bx	lr
 8003006:	bf00      	nop
 8003008:	20000010 	.word	0x20000010
 800300c:	ffff0208 	.word	0xffff0208

08003010 <__sread>:
 8003010:	b510      	push	{r4, lr}
 8003012:	460c      	mov	r4, r1
 8003014:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003018:	f000 f86c 	bl	80030f4 <_read_r>
 800301c:	2800      	cmp	r0, #0
 800301e:	bfab      	itete	ge
 8003020:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8003022:	89a3      	ldrhlt	r3, [r4, #12]
 8003024:	181b      	addge	r3, r3, r0
 8003026:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800302a:	bfac      	ite	ge
 800302c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800302e:	81a3      	strhlt	r3, [r4, #12]
 8003030:	bd10      	pop	{r4, pc}

08003032 <__swrite>:
 8003032:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003036:	461f      	mov	r7, r3
 8003038:	898b      	ldrh	r3, [r1, #12]
 800303a:	05db      	lsls	r3, r3, #23
 800303c:	4605      	mov	r5, r0
 800303e:	460c      	mov	r4, r1
 8003040:	4616      	mov	r6, r2
 8003042:	d505      	bpl.n	8003050 <__swrite+0x1e>
 8003044:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003048:	2302      	movs	r3, #2
 800304a:	2200      	movs	r2, #0
 800304c:	f000 f840 	bl	80030d0 <_lseek_r>
 8003050:	89a3      	ldrh	r3, [r4, #12]
 8003052:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003056:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800305a:	81a3      	strh	r3, [r4, #12]
 800305c:	4632      	mov	r2, r6
 800305e:	463b      	mov	r3, r7
 8003060:	4628      	mov	r0, r5
 8003062:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003066:	f000 b857 	b.w	8003118 <_write_r>

0800306a <__sseek>:
 800306a:	b510      	push	{r4, lr}
 800306c:	460c      	mov	r4, r1
 800306e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003072:	f000 f82d 	bl	80030d0 <_lseek_r>
 8003076:	1c43      	adds	r3, r0, #1
 8003078:	89a3      	ldrh	r3, [r4, #12]
 800307a:	bf15      	itete	ne
 800307c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800307e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8003082:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003086:	81a3      	strheq	r3, [r4, #12]
 8003088:	bf18      	it	ne
 800308a:	81a3      	strhne	r3, [r4, #12]
 800308c:	bd10      	pop	{r4, pc}

0800308e <__sclose>:
 800308e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003092:	f000 b80d 	b.w	80030b0 <_close_r>

08003096 <memset>:
 8003096:	4402      	add	r2, r0
 8003098:	4603      	mov	r3, r0
 800309a:	4293      	cmp	r3, r2
 800309c:	d100      	bne.n	80030a0 <memset+0xa>
 800309e:	4770      	bx	lr
 80030a0:	f803 1b01 	strb.w	r1, [r3], #1
 80030a4:	e7f9      	b.n	800309a <memset+0x4>
	...

080030a8 <_localeconv_r>:
 80030a8:	4800      	ldr	r0, [pc, #0]	@ (80030ac <_localeconv_r+0x4>)
 80030aa:	4770      	bx	lr
 80030ac:	20000150 	.word	0x20000150

080030b0 <_close_r>:
 80030b0:	b538      	push	{r3, r4, r5, lr}
 80030b2:	4d06      	ldr	r5, [pc, #24]	@ (80030cc <_close_r+0x1c>)
 80030b4:	2300      	movs	r3, #0
 80030b6:	4604      	mov	r4, r0
 80030b8:	4608      	mov	r0, r1
 80030ba:	602b      	str	r3, [r5, #0]
 80030bc:	f7fd fe86 	bl	8000dcc <_close>
 80030c0:	1c43      	adds	r3, r0, #1
 80030c2:	d102      	bne.n	80030ca <_close_r+0x1a>
 80030c4:	682b      	ldr	r3, [r5, #0]
 80030c6:	b103      	cbz	r3, 80030ca <_close_r+0x1a>
 80030c8:	6023      	str	r3, [r4, #0]
 80030ca:	bd38      	pop	{r3, r4, r5, pc}
 80030cc:	2000032c 	.word	0x2000032c

080030d0 <_lseek_r>:
 80030d0:	b538      	push	{r3, r4, r5, lr}
 80030d2:	4d07      	ldr	r5, [pc, #28]	@ (80030f0 <_lseek_r+0x20>)
 80030d4:	4604      	mov	r4, r0
 80030d6:	4608      	mov	r0, r1
 80030d8:	4611      	mov	r1, r2
 80030da:	2200      	movs	r2, #0
 80030dc:	602a      	str	r2, [r5, #0]
 80030de:	461a      	mov	r2, r3
 80030e0:	f7fd fe98 	bl	8000e14 <_lseek>
 80030e4:	1c43      	adds	r3, r0, #1
 80030e6:	d102      	bne.n	80030ee <_lseek_r+0x1e>
 80030e8:	682b      	ldr	r3, [r5, #0]
 80030ea:	b103      	cbz	r3, 80030ee <_lseek_r+0x1e>
 80030ec:	6023      	str	r3, [r4, #0]
 80030ee:	bd38      	pop	{r3, r4, r5, pc}
 80030f0:	2000032c 	.word	0x2000032c

080030f4 <_read_r>:
 80030f4:	b538      	push	{r3, r4, r5, lr}
 80030f6:	4d07      	ldr	r5, [pc, #28]	@ (8003114 <_read_r+0x20>)
 80030f8:	4604      	mov	r4, r0
 80030fa:	4608      	mov	r0, r1
 80030fc:	4611      	mov	r1, r2
 80030fe:	2200      	movs	r2, #0
 8003100:	602a      	str	r2, [r5, #0]
 8003102:	461a      	mov	r2, r3
 8003104:	f7fd fe29 	bl	8000d5a <_read>
 8003108:	1c43      	adds	r3, r0, #1
 800310a:	d102      	bne.n	8003112 <_read_r+0x1e>
 800310c:	682b      	ldr	r3, [r5, #0]
 800310e:	b103      	cbz	r3, 8003112 <_read_r+0x1e>
 8003110:	6023      	str	r3, [r4, #0]
 8003112:	bd38      	pop	{r3, r4, r5, pc}
 8003114:	2000032c 	.word	0x2000032c

08003118 <_write_r>:
 8003118:	b538      	push	{r3, r4, r5, lr}
 800311a:	4d07      	ldr	r5, [pc, #28]	@ (8003138 <_write_r+0x20>)
 800311c:	4604      	mov	r4, r0
 800311e:	4608      	mov	r0, r1
 8003120:	4611      	mov	r1, r2
 8003122:	2200      	movs	r2, #0
 8003124:	602a      	str	r2, [r5, #0]
 8003126:	461a      	mov	r2, r3
 8003128:	f7fd fe34 	bl	8000d94 <_write>
 800312c:	1c43      	adds	r3, r0, #1
 800312e:	d102      	bne.n	8003136 <_write_r+0x1e>
 8003130:	682b      	ldr	r3, [r5, #0]
 8003132:	b103      	cbz	r3, 8003136 <_write_r+0x1e>
 8003134:	6023      	str	r3, [r4, #0]
 8003136:	bd38      	pop	{r3, r4, r5, pc}
 8003138:	2000032c 	.word	0x2000032c

0800313c <__errno>:
 800313c:	4b01      	ldr	r3, [pc, #4]	@ (8003144 <__errno+0x8>)
 800313e:	6818      	ldr	r0, [r3, #0]
 8003140:	4770      	bx	lr
 8003142:	bf00      	nop
 8003144:	20000010 	.word	0x20000010

08003148 <__libc_init_array>:
 8003148:	b570      	push	{r4, r5, r6, lr}
 800314a:	4d0d      	ldr	r5, [pc, #52]	@ (8003180 <__libc_init_array+0x38>)
 800314c:	4c0d      	ldr	r4, [pc, #52]	@ (8003184 <__libc_init_array+0x3c>)
 800314e:	1b64      	subs	r4, r4, r5
 8003150:	10a4      	asrs	r4, r4, #2
 8003152:	2600      	movs	r6, #0
 8003154:	42a6      	cmp	r6, r4
 8003156:	d109      	bne.n	800316c <__libc_init_array+0x24>
 8003158:	4d0b      	ldr	r5, [pc, #44]	@ (8003188 <__libc_init_array+0x40>)
 800315a:	4c0c      	ldr	r4, [pc, #48]	@ (800318c <__libc_init_array+0x44>)
 800315c:	f003 fb56 	bl	800680c <_init>
 8003160:	1b64      	subs	r4, r4, r5
 8003162:	10a4      	asrs	r4, r4, #2
 8003164:	2600      	movs	r6, #0
 8003166:	42a6      	cmp	r6, r4
 8003168:	d105      	bne.n	8003176 <__libc_init_array+0x2e>
 800316a:	bd70      	pop	{r4, r5, r6, pc}
 800316c:	f855 3b04 	ldr.w	r3, [r5], #4
 8003170:	4798      	blx	r3
 8003172:	3601      	adds	r6, #1
 8003174:	e7ee      	b.n	8003154 <__libc_init_array+0xc>
 8003176:	f855 3b04 	ldr.w	r3, [r5], #4
 800317a:	4798      	blx	r3
 800317c:	3601      	adds	r6, #1
 800317e:	e7f2      	b.n	8003166 <__libc_init_array+0x1e>
 8003180:	08006c5c 	.word	0x08006c5c
 8003184:	08006c5c 	.word	0x08006c5c
 8003188:	08006c5c 	.word	0x08006c5c
 800318c:	08006c60 	.word	0x08006c60

08003190 <__retarget_lock_init_recursive>:
 8003190:	4770      	bx	lr

08003192 <__retarget_lock_acquire_recursive>:
 8003192:	4770      	bx	lr

08003194 <__retarget_lock_release_recursive>:
 8003194:	4770      	bx	lr
	...

08003198 <nanf>:
 8003198:	4800      	ldr	r0, [pc, #0]	@ (800319c <nanf+0x4>)
 800319a:	4770      	bx	lr
 800319c:	7fc00000 	.word	0x7fc00000

080031a0 <quorem>:
 80031a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031a4:	6903      	ldr	r3, [r0, #16]
 80031a6:	690c      	ldr	r4, [r1, #16]
 80031a8:	42a3      	cmp	r3, r4
 80031aa:	4607      	mov	r7, r0
 80031ac:	db7e      	blt.n	80032ac <quorem+0x10c>
 80031ae:	3c01      	subs	r4, #1
 80031b0:	f101 0814 	add.w	r8, r1, #20
 80031b4:	00a3      	lsls	r3, r4, #2
 80031b6:	f100 0514 	add.w	r5, r0, #20
 80031ba:	9300      	str	r3, [sp, #0]
 80031bc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80031c0:	9301      	str	r3, [sp, #4]
 80031c2:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80031c6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80031ca:	3301      	adds	r3, #1
 80031cc:	429a      	cmp	r2, r3
 80031ce:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80031d2:	fbb2 f6f3 	udiv	r6, r2, r3
 80031d6:	d32e      	bcc.n	8003236 <quorem+0x96>
 80031d8:	f04f 0a00 	mov.w	sl, #0
 80031dc:	46c4      	mov	ip, r8
 80031de:	46ae      	mov	lr, r5
 80031e0:	46d3      	mov	fp, sl
 80031e2:	f85c 3b04 	ldr.w	r3, [ip], #4
 80031e6:	b298      	uxth	r0, r3
 80031e8:	fb06 a000 	mla	r0, r6, r0, sl
 80031ec:	0c02      	lsrs	r2, r0, #16
 80031ee:	0c1b      	lsrs	r3, r3, #16
 80031f0:	fb06 2303 	mla	r3, r6, r3, r2
 80031f4:	f8de 2000 	ldr.w	r2, [lr]
 80031f8:	b280      	uxth	r0, r0
 80031fa:	b292      	uxth	r2, r2
 80031fc:	1a12      	subs	r2, r2, r0
 80031fe:	445a      	add	r2, fp
 8003200:	f8de 0000 	ldr.w	r0, [lr]
 8003204:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003208:	b29b      	uxth	r3, r3
 800320a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800320e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8003212:	b292      	uxth	r2, r2
 8003214:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8003218:	45e1      	cmp	r9, ip
 800321a:	f84e 2b04 	str.w	r2, [lr], #4
 800321e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8003222:	d2de      	bcs.n	80031e2 <quorem+0x42>
 8003224:	9b00      	ldr	r3, [sp, #0]
 8003226:	58eb      	ldr	r3, [r5, r3]
 8003228:	b92b      	cbnz	r3, 8003236 <quorem+0x96>
 800322a:	9b01      	ldr	r3, [sp, #4]
 800322c:	3b04      	subs	r3, #4
 800322e:	429d      	cmp	r5, r3
 8003230:	461a      	mov	r2, r3
 8003232:	d32f      	bcc.n	8003294 <quorem+0xf4>
 8003234:	613c      	str	r4, [r7, #16]
 8003236:	4638      	mov	r0, r7
 8003238:	f001 f9c6 	bl	80045c8 <__mcmp>
 800323c:	2800      	cmp	r0, #0
 800323e:	db25      	blt.n	800328c <quorem+0xec>
 8003240:	4629      	mov	r1, r5
 8003242:	2000      	movs	r0, #0
 8003244:	f858 2b04 	ldr.w	r2, [r8], #4
 8003248:	f8d1 c000 	ldr.w	ip, [r1]
 800324c:	fa1f fe82 	uxth.w	lr, r2
 8003250:	fa1f f38c 	uxth.w	r3, ip
 8003254:	eba3 030e 	sub.w	r3, r3, lr
 8003258:	4403      	add	r3, r0
 800325a:	0c12      	lsrs	r2, r2, #16
 800325c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8003260:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8003264:	b29b      	uxth	r3, r3
 8003266:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800326a:	45c1      	cmp	r9, r8
 800326c:	f841 3b04 	str.w	r3, [r1], #4
 8003270:	ea4f 4022 	mov.w	r0, r2, asr #16
 8003274:	d2e6      	bcs.n	8003244 <quorem+0xa4>
 8003276:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800327a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800327e:	b922      	cbnz	r2, 800328a <quorem+0xea>
 8003280:	3b04      	subs	r3, #4
 8003282:	429d      	cmp	r5, r3
 8003284:	461a      	mov	r2, r3
 8003286:	d30b      	bcc.n	80032a0 <quorem+0x100>
 8003288:	613c      	str	r4, [r7, #16]
 800328a:	3601      	adds	r6, #1
 800328c:	4630      	mov	r0, r6
 800328e:	b003      	add	sp, #12
 8003290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003294:	6812      	ldr	r2, [r2, #0]
 8003296:	3b04      	subs	r3, #4
 8003298:	2a00      	cmp	r2, #0
 800329a:	d1cb      	bne.n	8003234 <quorem+0x94>
 800329c:	3c01      	subs	r4, #1
 800329e:	e7c6      	b.n	800322e <quorem+0x8e>
 80032a0:	6812      	ldr	r2, [r2, #0]
 80032a2:	3b04      	subs	r3, #4
 80032a4:	2a00      	cmp	r2, #0
 80032a6:	d1ef      	bne.n	8003288 <quorem+0xe8>
 80032a8:	3c01      	subs	r4, #1
 80032aa:	e7ea      	b.n	8003282 <quorem+0xe2>
 80032ac:	2000      	movs	r0, #0
 80032ae:	e7ee      	b.n	800328e <quorem+0xee>

080032b0 <_dtoa_r>:
 80032b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032b4:	69c7      	ldr	r7, [r0, #28]
 80032b6:	b097      	sub	sp, #92	@ 0x5c
 80032b8:	4614      	mov	r4, r2
 80032ba:	461d      	mov	r5, r3
 80032bc:	e9cd 4506 	strd	r4, r5, [sp, #24]
 80032c0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80032c2:	4681      	mov	r9, r0
 80032c4:	b97f      	cbnz	r7, 80032e6 <_dtoa_r+0x36>
 80032c6:	2010      	movs	r0, #16
 80032c8:	f000 fe0c 	bl	8003ee4 <malloc>
 80032cc:	4602      	mov	r2, r0
 80032ce:	f8c9 001c 	str.w	r0, [r9, #28]
 80032d2:	b920      	cbnz	r0, 80032de <_dtoa_r+0x2e>
 80032d4:	4baa      	ldr	r3, [pc, #680]	@ (8003580 <_dtoa_r+0x2d0>)
 80032d6:	21ef      	movs	r1, #239	@ 0xef
 80032d8:	48aa      	ldr	r0, [pc, #680]	@ (8003584 <_dtoa_r+0x2d4>)
 80032da:	f002 fc23 	bl	8005b24 <__assert_func>
 80032de:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80032e2:	6007      	str	r7, [r0, #0]
 80032e4:	60c7      	str	r7, [r0, #12]
 80032e6:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80032ea:	6819      	ldr	r1, [r3, #0]
 80032ec:	b159      	cbz	r1, 8003306 <_dtoa_r+0x56>
 80032ee:	685a      	ldr	r2, [r3, #4]
 80032f0:	604a      	str	r2, [r1, #4]
 80032f2:	2301      	movs	r3, #1
 80032f4:	4093      	lsls	r3, r2
 80032f6:	608b      	str	r3, [r1, #8]
 80032f8:	4648      	mov	r0, r9
 80032fa:	f000 fee9 	bl	80040d0 <_Bfree>
 80032fe:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003302:	2200      	movs	r2, #0
 8003304:	601a      	str	r2, [r3, #0]
 8003306:	1e2b      	subs	r3, r5, #0
 8003308:	bfb9      	ittee	lt
 800330a:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800330e:	9307      	strlt	r3, [sp, #28]
 8003310:	2300      	movge	r3, #0
 8003312:	6033      	strge	r3, [r6, #0]
 8003314:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8003318:	4b9b      	ldr	r3, [pc, #620]	@ (8003588 <_dtoa_r+0x2d8>)
 800331a:	bfbc      	itt	lt
 800331c:	2201      	movlt	r2, #1
 800331e:	6032      	strlt	r2, [r6, #0]
 8003320:	ea33 0308 	bics.w	r3, r3, r8
 8003324:	d112      	bne.n	800334c <_dtoa_r+0x9c>
 8003326:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8003328:	f242 730f 	movw	r3, #9999	@ 0x270f
 800332c:	6013      	str	r3, [r2, #0]
 800332e:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8003332:	4323      	orrs	r3, r4
 8003334:	f000 855b 	beq.w	8003dee <_dtoa_r+0xb3e>
 8003338:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800333a:	f8df a250 	ldr.w	sl, [pc, #592]	@ 800358c <_dtoa_r+0x2dc>
 800333e:	2b00      	cmp	r3, #0
 8003340:	f000 855d 	beq.w	8003dfe <_dtoa_r+0xb4e>
 8003344:	f10a 0303 	add.w	r3, sl, #3
 8003348:	f000 bd57 	b.w	8003dfa <_dtoa_r+0xb4a>
 800334c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003350:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8003354:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003358:	2200      	movs	r2, #0
 800335a:	2300      	movs	r3, #0
 800335c:	f7fd fbb4 	bl	8000ac8 <__aeabi_dcmpeq>
 8003360:	4607      	mov	r7, r0
 8003362:	b158      	cbz	r0, 800337c <_dtoa_r+0xcc>
 8003364:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8003366:	2301      	movs	r3, #1
 8003368:	6013      	str	r3, [r2, #0]
 800336a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800336c:	b113      	cbz	r3, 8003374 <_dtoa_r+0xc4>
 800336e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003370:	4b87      	ldr	r3, [pc, #540]	@ (8003590 <_dtoa_r+0x2e0>)
 8003372:	6013      	str	r3, [r2, #0]
 8003374:	f8df a21c 	ldr.w	sl, [pc, #540]	@ 8003594 <_dtoa_r+0x2e4>
 8003378:	f000 bd41 	b.w	8003dfe <_dtoa_r+0xb4e>
 800337c:	ab14      	add	r3, sp, #80	@ 0x50
 800337e:	9301      	str	r3, [sp, #4]
 8003380:	ab15      	add	r3, sp, #84	@ 0x54
 8003382:	9300      	str	r3, [sp, #0]
 8003384:	4648      	mov	r0, r9
 8003386:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800338a:	f001 fa35 	bl	80047f8 <__d2b>
 800338e:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8003392:	9003      	str	r0, [sp, #12]
 8003394:	2e00      	cmp	r6, #0
 8003396:	d077      	beq.n	8003488 <_dtoa_r+0x1d8>
 8003398:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800339a:	9712      	str	r7, [sp, #72]	@ 0x48
 800339c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80033a0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80033a4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80033a8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80033ac:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80033b0:	4619      	mov	r1, r3
 80033b2:	2200      	movs	r2, #0
 80033b4:	4b78      	ldr	r3, [pc, #480]	@ (8003598 <_dtoa_r+0x2e8>)
 80033b6:	f7fc ff67 	bl	8000288 <__aeabi_dsub>
 80033ba:	a36b      	add	r3, pc, #428	@ (adr r3, 8003568 <_dtoa_r+0x2b8>)
 80033bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033c0:	f7fd f91a 	bl	80005f8 <__aeabi_dmul>
 80033c4:	a36a      	add	r3, pc, #424	@ (adr r3, 8003570 <_dtoa_r+0x2c0>)
 80033c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033ca:	f7fc ff5f 	bl	800028c <__adddf3>
 80033ce:	4604      	mov	r4, r0
 80033d0:	4630      	mov	r0, r6
 80033d2:	460d      	mov	r5, r1
 80033d4:	f7fd f8a6 	bl	8000524 <__aeabi_i2d>
 80033d8:	a367      	add	r3, pc, #412	@ (adr r3, 8003578 <_dtoa_r+0x2c8>)
 80033da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033de:	f7fd f90b 	bl	80005f8 <__aeabi_dmul>
 80033e2:	4602      	mov	r2, r0
 80033e4:	460b      	mov	r3, r1
 80033e6:	4620      	mov	r0, r4
 80033e8:	4629      	mov	r1, r5
 80033ea:	f7fc ff4f 	bl	800028c <__adddf3>
 80033ee:	4604      	mov	r4, r0
 80033f0:	460d      	mov	r5, r1
 80033f2:	f7fd fbb1 	bl	8000b58 <__aeabi_d2iz>
 80033f6:	2200      	movs	r2, #0
 80033f8:	4607      	mov	r7, r0
 80033fa:	2300      	movs	r3, #0
 80033fc:	4620      	mov	r0, r4
 80033fe:	4629      	mov	r1, r5
 8003400:	f7fd fb6c 	bl	8000adc <__aeabi_dcmplt>
 8003404:	b140      	cbz	r0, 8003418 <_dtoa_r+0x168>
 8003406:	4638      	mov	r0, r7
 8003408:	f7fd f88c 	bl	8000524 <__aeabi_i2d>
 800340c:	4622      	mov	r2, r4
 800340e:	462b      	mov	r3, r5
 8003410:	f7fd fb5a 	bl	8000ac8 <__aeabi_dcmpeq>
 8003414:	b900      	cbnz	r0, 8003418 <_dtoa_r+0x168>
 8003416:	3f01      	subs	r7, #1
 8003418:	2f16      	cmp	r7, #22
 800341a:	d853      	bhi.n	80034c4 <_dtoa_r+0x214>
 800341c:	4b5f      	ldr	r3, [pc, #380]	@ (800359c <_dtoa_r+0x2ec>)
 800341e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003422:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003426:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800342a:	f7fd fb57 	bl	8000adc <__aeabi_dcmplt>
 800342e:	2800      	cmp	r0, #0
 8003430:	d04a      	beq.n	80034c8 <_dtoa_r+0x218>
 8003432:	3f01      	subs	r7, #1
 8003434:	2300      	movs	r3, #0
 8003436:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003438:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800343a:	1b9b      	subs	r3, r3, r6
 800343c:	1e5a      	subs	r2, r3, #1
 800343e:	bf45      	ittet	mi
 8003440:	f1c3 0301 	rsbmi	r3, r3, #1
 8003444:	9304      	strmi	r3, [sp, #16]
 8003446:	2300      	movpl	r3, #0
 8003448:	2300      	movmi	r3, #0
 800344a:	9209      	str	r2, [sp, #36]	@ 0x24
 800344c:	bf54      	ite	pl
 800344e:	9304      	strpl	r3, [sp, #16]
 8003450:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8003452:	2f00      	cmp	r7, #0
 8003454:	db3a      	blt.n	80034cc <_dtoa_r+0x21c>
 8003456:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003458:	970e      	str	r7, [sp, #56]	@ 0x38
 800345a:	443b      	add	r3, r7
 800345c:	9309      	str	r3, [sp, #36]	@ 0x24
 800345e:	2300      	movs	r3, #0
 8003460:	930a      	str	r3, [sp, #40]	@ 0x28
 8003462:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003464:	2b09      	cmp	r3, #9
 8003466:	d864      	bhi.n	8003532 <_dtoa_r+0x282>
 8003468:	2b05      	cmp	r3, #5
 800346a:	bfc4      	itt	gt
 800346c:	3b04      	subgt	r3, #4
 800346e:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8003470:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003472:	f1a3 0302 	sub.w	r3, r3, #2
 8003476:	bfcc      	ite	gt
 8003478:	2400      	movgt	r4, #0
 800347a:	2401      	movle	r4, #1
 800347c:	2b03      	cmp	r3, #3
 800347e:	d864      	bhi.n	800354a <_dtoa_r+0x29a>
 8003480:	e8df f003 	tbb	[pc, r3]
 8003484:	2c385553 	.word	0x2c385553
 8003488:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800348c:	441e      	add	r6, r3
 800348e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8003492:	2b20      	cmp	r3, #32
 8003494:	bfc1      	itttt	gt
 8003496:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800349a:	fa08 f803 	lslgt.w	r8, r8, r3
 800349e:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80034a2:	fa24 f303 	lsrgt.w	r3, r4, r3
 80034a6:	bfd6      	itet	le
 80034a8:	f1c3 0320 	rsble	r3, r3, #32
 80034ac:	ea48 0003 	orrgt.w	r0, r8, r3
 80034b0:	fa04 f003 	lslle.w	r0, r4, r3
 80034b4:	f7fd f826 	bl	8000504 <__aeabi_ui2d>
 80034b8:	2201      	movs	r2, #1
 80034ba:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80034be:	3e01      	subs	r6, #1
 80034c0:	9212      	str	r2, [sp, #72]	@ 0x48
 80034c2:	e775      	b.n	80033b0 <_dtoa_r+0x100>
 80034c4:	2301      	movs	r3, #1
 80034c6:	e7b6      	b.n	8003436 <_dtoa_r+0x186>
 80034c8:	900f      	str	r0, [sp, #60]	@ 0x3c
 80034ca:	e7b5      	b.n	8003438 <_dtoa_r+0x188>
 80034cc:	9b04      	ldr	r3, [sp, #16]
 80034ce:	1bdb      	subs	r3, r3, r7
 80034d0:	9304      	str	r3, [sp, #16]
 80034d2:	427b      	negs	r3, r7
 80034d4:	930a      	str	r3, [sp, #40]	@ 0x28
 80034d6:	2300      	movs	r3, #0
 80034d8:	930e      	str	r3, [sp, #56]	@ 0x38
 80034da:	e7c2      	b.n	8003462 <_dtoa_r+0x1b2>
 80034dc:	2301      	movs	r3, #1
 80034de:	930b      	str	r3, [sp, #44]	@ 0x2c
 80034e0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80034e2:	eb07 0b03 	add.w	fp, r7, r3
 80034e6:	f10b 0301 	add.w	r3, fp, #1
 80034ea:	2b01      	cmp	r3, #1
 80034ec:	9308      	str	r3, [sp, #32]
 80034ee:	bfb8      	it	lt
 80034f0:	2301      	movlt	r3, #1
 80034f2:	e006      	b.n	8003502 <_dtoa_r+0x252>
 80034f4:	2301      	movs	r3, #1
 80034f6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80034f8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	dd28      	ble.n	8003550 <_dtoa_r+0x2a0>
 80034fe:	469b      	mov	fp, r3
 8003500:	9308      	str	r3, [sp, #32]
 8003502:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8003506:	2100      	movs	r1, #0
 8003508:	2204      	movs	r2, #4
 800350a:	f102 0514 	add.w	r5, r2, #20
 800350e:	429d      	cmp	r5, r3
 8003510:	d926      	bls.n	8003560 <_dtoa_r+0x2b0>
 8003512:	6041      	str	r1, [r0, #4]
 8003514:	4648      	mov	r0, r9
 8003516:	f000 fd9b 	bl	8004050 <_Balloc>
 800351a:	4682      	mov	sl, r0
 800351c:	2800      	cmp	r0, #0
 800351e:	d141      	bne.n	80035a4 <_dtoa_r+0x2f4>
 8003520:	4b1f      	ldr	r3, [pc, #124]	@ (80035a0 <_dtoa_r+0x2f0>)
 8003522:	4602      	mov	r2, r0
 8003524:	f240 11af 	movw	r1, #431	@ 0x1af
 8003528:	e6d6      	b.n	80032d8 <_dtoa_r+0x28>
 800352a:	2300      	movs	r3, #0
 800352c:	e7e3      	b.n	80034f6 <_dtoa_r+0x246>
 800352e:	2300      	movs	r3, #0
 8003530:	e7d5      	b.n	80034de <_dtoa_r+0x22e>
 8003532:	2401      	movs	r4, #1
 8003534:	2300      	movs	r3, #0
 8003536:	9320      	str	r3, [sp, #128]	@ 0x80
 8003538:	940b      	str	r4, [sp, #44]	@ 0x2c
 800353a:	f04f 3bff 	mov.w	fp, #4294967295
 800353e:	2200      	movs	r2, #0
 8003540:	f8cd b020 	str.w	fp, [sp, #32]
 8003544:	2312      	movs	r3, #18
 8003546:	9221      	str	r2, [sp, #132]	@ 0x84
 8003548:	e7db      	b.n	8003502 <_dtoa_r+0x252>
 800354a:	2301      	movs	r3, #1
 800354c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800354e:	e7f4      	b.n	800353a <_dtoa_r+0x28a>
 8003550:	f04f 0b01 	mov.w	fp, #1
 8003554:	f8cd b020 	str.w	fp, [sp, #32]
 8003558:	465b      	mov	r3, fp
 800355a:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
 800355e:	e7d0      	b.n	8003502 <_dtoa_r+0x252>
 8003560:	3101      	adds	r1, #1
 8003562:	0052      	lsls	r2, r2, #1
 8003564:	e7d1      	b.n	800350a <_dtoa_r+0x25a>
 8003566:	bf00      	nop
 8003568:	636f4361 	.word	0x636f4361
 800356c:	3fd287a7 	.word	0x3fd287a7
 8003570:	8b60c8b3 	.word	0x8b60c8b3
 8003574:	3fc68a28 	.word	0x3fc68a28
 8003578:	509f79fb 	.word	0x509f79fb
 800357c:	3fd34413 	.word	0x3fd34413
 8003580:	0800686e 	.word	0x0800686e
 8003584:	08006885 	.word	0x08006885
 8003588:	7ff00000 	.word	0x7ff00000
 800358c:	0800686a 	.word	0x0800686a
 8003590:	08006839 	.word	0x08006839
 8003594:	08006838 	.word	0x08006838
 8003598:	3ff80000 	.word	0x3ff80000
 800359c:	08006a38 	.word	0x08006a38
 80035a0:	080068dd 	.word	0x080068dd
 80035a4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80035a8:	6018      	str	r0, [r3, #0]
 80035aa:	9b08      	ldr	r3, [sp, #32]
 80035ac:	2b0e      	cmp	r3, #14
 80035ae:	f200 80a1 	bhi.w	80036f4 <_dtoa_r+0x444>
 80035b2:	2c00      	cmp	r4, #0
 80035b4:	f000 809e 	beq.w	80036f4 <_dtoa_r+0x444>
 80035b8:	2f00      	cmp	r7, #0
 80035ba:	dd33      	ble.n	8003624 <_dtoa_r+0x374>
 80035bc:	4b9c      	ldr	r3, [pc, #624]	@ (8003830 <_dtoa_r+0x580>)
 80035be:	f007 020f 	and.w	r2, r7, #15
 80035c2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80035c6:	e9d3 3400 	ldrd	r3, r4, [r3]
 80035ca:	05f8      	lsls	r0, r7, #23
 80035cc:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
 80035d0:	ea4f 1427 	mov.w	r4, r7, asr #4
 80035d4:	d516      	bpl.n	8003604 <_dtoa_r+0x354>
 80035d6:	4b97      	ldr	r3, [pc, #604]	@ (8003834 <_dtoa_r+0x584>)
 80035d8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80035dc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80035e0:	f7fd f934 	bl	800084c <__aeabi_ddiv>
 80035e4:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80035e8:	f004 040f 	and.w	r4, r4, #15
 80035ec:	2603      	movs	r6, #3
 80035ee:	4d91      	ldr	r5, [pc, #580]	@ (8003834 <_dtoa_r+0x584>)
 80035f0:	b954      	cbnz	r4, 8003608 <_dtoa_r+0x358>
 80035f2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80035f6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80035fa:	f7fd f927 	bl	800084c <__aeabi_ddiv>
 80035fe:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003602:	e028      	b.n	8003656 <_dtoa_r+0x3a6>
 8003604:	2602      	movs	r6, #2
 8003606:	e7f2      	b.n	80035ee <_dtoa_r+0x33e>
 8003608:	07e1      	lsls	r1, r4, #31
 800360a:	d508      	bpl.n	800361e <_dtoa_r+0x36e>
 800360c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003610:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003614:	f7fc fff0 	bl	80005f8 <__aeabi_dmul>
 8003618:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800361c:	3601      	adds	r6, #1
 800361e:	1064      	asrs	r4, r4, #1
 8003620:	3508      	adds	r5, #8
 8003622:	e7e5      	b.n	80035f0 <_dtoa_r+0x340>
 8003624:	f000 80af 	beq.w	8003786 <_dtoa_r+0x4d6>
 8003628:	427c      	negs	r4, r7
 800362a:	4b81      	ldr	r3, [pc, #516]	@ (8003830 <_dtoa_r+0x580>)
 800362c:	4d81      	ldr	r5, [pc, #516]	@ (8003834 <_dtoa_r+0x584>)
 800362e:	f004 020f 	and.w	r2, r4, #15
 8003632:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003636:	e9d3 2300 	ldrd	r2, r3, [r3]
 800363a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800363e:	f7fc ffdb 	bl	80005f8 <__aeabi_dmul>
 8003642:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003646:	1124      	asrs	r4, r4, #4
 8003648:	2300      	movs	r3, #0
 800364a:	2602      	movs	r6, #2
 800364c:	2c00      	cmp	r4, #0
 800364e:	f040 808f 	bne.w	8003770 <_dtoa_r+0x4c0>
 8003652:	2b00      	cmp	r3, #0
 8003654:	d1d3      	bne.n	80035fe <_dtoa_r+0x34e>
 8003656:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003658:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 800365c:	2b00      	cmp	r3, #0
 800365e:	f000 8094 	beq.w	800378a <_dtoa_r+0x4da>
 8003662:	4b75      	ldr	r3, [pc, #468]	@ (8003838 <_dtoa_r+0x588>)
 8003664:	2200      	movs	r2, #0
 8003666:	4620      	mov	r0, r4
 8003668:	4629      	mov	r1, r5
 800366a:	f7fd fa37 	bl	8000adc <__aeabi_dcmplt>
 800366e:	2800      	cmp	r0, #0
 8003670:	f000 808b 	beq.w	800378a <_dtoa_r+0x4da>
 8003674:	9b08      	ldr	r3, [sp, #32]
 8003676:	2b00      	cmp	r3, #0
 8003678:	f000 8087 	beq.w	800378a <_dtoa_r+0x4da>
 800367c:	f1bb 0f00 	cmp.w	fp, #0
 8003680:	dd34      	ble.n	80036ec <_dtoa_r+0x43c>
 8003682:	4620      	mov	r0, r4
 8003684:	4b6d      	ldr	r3, [pc, #436]	@ (800383c <_dtoa_r+0x58c>)
 8003686:	2200      	movs	r2, #0
 8003688:	4629      	mov	r1, r5
 800368a:	f7fc ffb5 	bl	80005f8 <__aeabi_dmul>
 800368e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003692:	f107 38ff 	add.w	r8, r7, #4294967295
 8003696:	3601      	adds	r6, #1
 8003698:	465c      	mov	r4, fp
 800369a:	4630      	mov	r0, r6
 800369c:	f7fc ff42 	bl	8000524 <__aeabi_i2d>
 80036a0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80036a4:	f7fc ffa8 	bl	80005f8 <__aeabi_dmul>
 80036a8:	4b65      	ldr	r3, [pc, #404]	@ (8003840 <_dtoa_r+0x590>)
 80036aa:	2200      	movs	r2, #0
 80036ac:	f7fc fdee 	bl	800028c <__adddf3>
 80036b0:	4605      	mov	r5, r0
 80036b2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80036b6:	2c00      	cmp	r4, #0
 80036b8:	d16a      	bne.n	8003790 <_dtoa_r+0x4e0>
 80036ba:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80036be:	4b61      	ldr	r3, [pc, #388]	@ (8003844 <_dtoa_r+0x594>)
 80036c0:	2200      	movs	r2, #0
 80036c2:	f7fc fde1 	bl	8000288 <__aeabi_dsub>
 80036c6:	4602      	mov	r2, r0
 80036c8:	460b      	mov	r3, r1
 80036ca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80036ce:	462a      	mov	r2, r5
 80036d0:	4633      	mov	r3, r6
 80036d2:	f7fd fa21 	bl	8000b18 <__aeabi_dcmpgt>
 80036d6:	2800      	cmp	r0, #0
 80036d8:	f040 8298 	bne.w	8003c0c <_dtoa_r+0x95c>
 80036dc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80036e0:	462a      	mov	r2, r5
 80036e2:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80036e6:	f7fd f9f9 	bl	8000adc <__aeabi_dcmplt>
 80036ea:	bb38      	cbnz	r0, 800373c <_dtoa_r+0x48c>
 80036ec:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80036f0:	e9cd 3406 	strd	r3, r4, [sp, #24]
 80036f4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80036f6:	2b00      	cmp	r3, #0
 80036f8:	f2c0 8157 	blt.w	80039aa <_dtoa_r+0x6fa>
 80036fc:	2f0e      	cmp	r7, #14
 80036fe:	f300 8154 	bgt.w	80039aa <_dtoa_r+0x6fa>
 8003702:	4b4b      	ldr	r3, [pc, #300]	@ (8003830 <_dtoa_r+0x580>)
 8003704:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003708:	e9d3 3400 	ldrd	r3, r4, [r3]
 800370c:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003710:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003712:	2b00      	cmp	r3, #0
 8003714:	f280 80e5 	bge.w	80038e2 <_dtoa_r+0x632>
 8003718:	9b08      	ldr	r3, [sp, #32]
 800371a:	2b00      	cmp	r3, #0
 800371c:	f300 80e1 	bgt.w	80038e2 <_dtoa_r+0x632>
 8003720:	d10c      	bne.n	800373c <_dtoa_r+0x48c>
 8003722:	4b48      	ldr	r3, [pc, #288]	@ (8003844 <_dtoa_r+0x594>)
 8003724:	2200      	movs	r2, #0
 8003726:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800372a:	f7fc ff65 	bl	80005f8 <__aeabi_dmul>
 800372e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003732:	f7fd f9e7 	bl	8000b04 <__aeabi_dcmpge>
 8003736:	2800      	cmp	r0, #0
 8003738:	f000 8266 	beq.w	8003c08 <_dtoa_r+0x958>
 800373c:	2400      	movs	r4, #0
 800373e:	4625      	mov	r5, r4
 8003740:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003742:	4656      	mov	r6, sl
 8003744:	ea6f 0803 	mvn.w	r8, r3
 8003748:	2700      	movs	r7, #0
 800374a:	4621      	mov	r1, r4
 800374c:	4648      	mov	r0, r9
 800374e:	f000 fcbf 	bl	80040d0 <_Bfree>
 8003752:	2d00      	cmp	r5, #0
 8003754:	f000 80bd 	beq.w	80038d2 <_dtoa_r+0x622>
 8003758:	b12f      	cbz	r7, 8003766 <_dtoa_r+0x4b6>
 800375a:	42af      	cmp	r7, r5
 800375c:	d003      	beq.n	8003766 <_dtoa_r+0x4b6>
 800375e:	4639      	mov	r1, r7
 8003760:	4648      	mov	r0, r9
 8003762:	f000 fcb5 	bl	80040d0 <_Bfree>
 8003766:	4629      	mov	r1, r5
 8003768:	4648      	mov	r0, r9
 800376a:	f000 fcb1 	bl	80040d0 <_Bfree>
 800376e:	e0b0      	b.n	80038d2 <_dtoa_r+0x622>
 8003770:	07e2      	lsls	r2, r4, #31
 8003772:	d505      	bpl.n	8003780 <_dtoa_r+0x4d0>
 8003774:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003778:	f7fc ff3e 	bl	80005f8 <__aeabi_dmul>
 800377c:	3601      	adds	r6, #1
 800377e:	2301      	movs	r3, #1
 8003780:	1064      	asrs	r4, r4, #1
 8003782:	3508      	adds	r5, #8
 8003784:	e762      	b.n	800364c <_dtoa_r+0x39c>
 8003786:	2602      	movs	r6, #2
 8003788:	e765      	b.n	8003656 <_dtoa_r+0x3a6>
 800378a:	9c08      	ldr	r4, [sp, #32]
 800378c:	46b8      	mov	r8, r7
 800378e:	e784      	b.n	800369a <_dtoa_r+0x3ea>
 8003790:	4b27      	ldr	r3, [pc, #156]	@ (8003830 <_dtoa_r+0x580>)
 8003792:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003794:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003798:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800379c:	4454      	add	r4, sl
 800379e:	2900      	cmp	r1, #0
 80037a0:	d054      	beq.n	800384c <_dtoa_r+0x59c>
 80037a2:	4929      	ldr	r1, [pc, #164]	@ (8003848 <_dtoa_r+0x598>)
 80037a4:	2000      	movs	r0, #0
 80037a6:	f7fd f851 	bl	800084c <__aeabi_ddiv>
 80037aa:	4633      	mov	r3, r6
 80037ac:	462a      	mov	r2, r5
 80037ae:	f7fc fd6b 	bl	8000288 <__aeabi_dsub>
 80037b2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80037b6:	4656      	mov	r6, sl
 80037b8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80037bc:	f7fd f9cc 	bl	8000b58 <__aeabi_d2iz>
 80037c0:	4605      	mov	r5, r0
 80037c2:	f7fc feaf 	bl	8000524 <__aeabi_i2d>
 80037c6:	4602      	mov	r2, r0
 80037c8:	460b      	mov	r3, r1
 80037ca:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80037ce:	f7fc fd5b 	bl	8000288 <__aeabi_dsub>
 80037d2:	3530      	adds	r5, #48	@ 0x30
 80037d4:	4602      	mov	r2, r0
 80037d6:	460b      	mov	r3, r1
 80037d8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80037dc:	f806 5b01 	strb.w	r5, [r6], #1
 80037e0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80037e4:	f7fd f97a 	bl	8000adc <__aeabi_dcmplt>
 80037e8:	2800      	cmp	r0, #0
 80037ea:	d172      	bne.n	80038d2 <_dtoa_r+0x622>
 80037ec:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80037f0:	4911      	ldr	r1, [pc, #68]	@ (8003838 <_dtoa_r+0x588>)
 80037f2:	2000      	movs	r0, #0
 80037f4:	f7fc fd48 	bl	8000288 <__aeabi_dsub>
 80037f8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80037fc:	f7fd f96e 	bl	8000adc <__aeabi_dcmplt>
 8003800:	2800      	cmp	r0, #0
 8003802:	f040 80b4 	bne.w	800396e <_dtoa_r+0x6be>
 8003806:	42a6      	cmp	r6, r4
 8003808:	f43f af70 	beq.w	80036ec <_dtoa_r+0x43c>
 800380c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003810:	4b0a      	ldr	r3, [pc, #40]	@ (800383c <_dtoa_r+0x58c>)
 8003812:	2200      	movs	r2, #0
 8003814:	f7fc fef0 	bl	80005f8 <__aeabi_dmul>
 8003818:	4b08      	ldr	r3, [pc, #32]	@ (800383c <_dtoa_r+0x58c>)
 800381a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800381e:	2200      	movs	r2, #0
 8003820:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003824:	f7fc fee8 	bl	80005f8 <__aeabi_dmul>
 8003828:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800382c:	e7c4      	b.n	80037b8 <_dtoa_r+0x508>
 800382e:	bf00      	nop
 8003830:	08006a38 	.word	0x08006a38
 8003834:	08006a10 	.word	0x08006a10
 8003838:	3ff00000 	.word	0x3ff00000
 800383c:	40240000 	.word	0x40240000
 8003840:	401c0000 	.word	0x401c0000
 8003844:	40140000 	.word	0x40140000
 8003848:	3fe00000 	.word	0x3fe00000
 800384c:	4631      	mov	r1, r6
 800384e:	4628      	mov	r0, r5
 8003850:	f7fc fed2 	bl	80005f8 <__aeabi_dmul>
 8003854:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003858:	9413      	str	r4, [sp, #76]	@ 0x4c
 800385a:	4656      	mov	r6, sl
 800385c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003860:	f7fd f97a 	bl	8000b58 <__aeabi_d2iz>
 8003864:	4605      	mov	r5, r0
 8003866:	f7fc fe5d 	bl	8000524 <__aeabi_i2d>
 800386a:	4602      	mov	r2, r0
 800386c:	460b      	mov	r3, r1
 800386e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003872:	f7fc fd09 	bl	8000288 <__aeabi_dsub>
 8003876:	3530      	adds	r5, #48	@ 0x30
 8003878:	f806 5b01 	strb.w	r5, [r6], #1
 800387c:	4602      	mov	r2, r0
 800387e:	460b      	mov	r3, r1
 8003880:	42a6      	cmp	r6, r4
 8003882:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003886:	f04f 0200 	mov.w	r2, #0
 800388a:	d124      	bne.n	80038d6 <_dtoa_r+0x626>
 800388c:	4baf      	ldr	r3, [pc, #700]	@ (8003b4c <_dtoa_r+0x89c>)
 800388e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003892:	f7fc fcfb 	bl	800028c <__adddf3>
 8003896:	4602      	mov	r2, r0
 8003898:	460b      	mov	r3, r1
 800389a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800389e:	f7fd f93b 	bl	8000b18 <__aeabi_dcmpgt>
 80038a2:	2800      	cmp	r0, #0
 80038a4:	d163      	bne.n	800396e <_dtoa_r+0x6be>
 80038a6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80038aa:	49a8      	ldr	r1, [pc, #672]	@ (8003b4c <_dtoa_r+0x89c>)
 80038ac:	2000      	movs	r0, #0
 80038ae:	f7fc fceb 	bl	8000288 <__aeabi_dsub>
 80038b2:	4602      	mov	r2, r0
 80038b4:	460b      	mov	r3, r1
 80038b6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80038ba:	f7fd f90f 	bl	8000adc <__aeabi_dcmplt>
 80038be:	2800      	cmp	r0, #0
 80038c0:	f43f af14 	beq.w	80036ec <_dtoa_r+0x43c>
 80038c4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80038c6:	1e73      	subs	r3, r6, #1
 80038c8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80038ca:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80038ce:	2b30      	cmp	r3, #48	@ 0x30
 80038d0:	d0f8      	beq.n	80038c4 <_dtoa_r+0x614>
 80038d2:	4647      	mov	r7, r8
 80038d4:	e03b      	b.n	800394e <_dtoa_r+0x69e>
 80038d6:	4b9e      	ldr	r3, [pc, #632]	@ (8003b50 <_dtoa_r+0x8a0>)
 80038d8:	f7fc fe8e 	bl	80005f8 <__aeabi_dmul>
 80038dc:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80038e0:	e7bc      	b.n	800385c <_dtoa_r+0x5ac>
 80038e2:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 80038e6:	4656      	mov	r6, sl
 80038e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80038ec:	4620      	mov	r0, r4
 80038ee:	4629      	mov	r1, r5
 80038f0:	f7fc ffac 	bl	800084c <__aeabi_ddiv>
 80038f4:	f7fd f930 	bl	8000b58 <__aeabi_d2iz>
 80038f8:	4680      	mov	r8, r0
 80038fa:	f7fc fe13 	bl	8000524 <__aeabi_i2d>
 80038fe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003902:	f7fc fe79 	bl	80005f8 <__aeabi_dmul>
 8003906:	4602      	mov	r2, r0
 8003908:	460b      	mov	r3, r1
 800390a:	4620      	mov	r0, r4
 800390c:	4629      	mov	r1, r5
 800390e:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8003912:	f7fc fcb9 	bl	8000288 <__aeabi_dsub>
 8003916:	f806 4b01 	strb.w	r4, [r6], #1
 800391a:	9d08      	ldr	r5, [sp, #32]
 800391c:	eba6 040a 	sub.w	r4, r6, sl
 8003920:	42a5      	cmp	r5, r4
 8003922:	4602      	mov	r2, r0
 8003924:	460b      	mov	r3, r1
 8003926:	d133      	bne.n	8003990 <_dtoa_r+0x6e0>
 8003928:	f7fc fcb0 	bl	800028c <__adddf3>
 800392c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003930:	4604      	mov	r4, r0
 8003932:	460d      	mov	r5, r1
 8003934:	f7fd f8f0 	bl	8000b18 <__aeabi_dcmpgt>
 8003938:	b9c0      	cbnz	r0, 800396c <_dtoa_r+0x6bc>
 800393a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800393e:	4620      	mov	r0, r4
 8003940:	4629      	mov	r1, r5
 8003942:	f7fd f8c1 	bl	8000ac8 <__aeabi_dcmpeq>
 8003946:	b110      	cbz	r0, 800394e <_dtoa_r+0x69e>
 8003948:	f018 0f01 	tst.w	r8, #1
 800394c:	d10e      	bne.n	800396c <_dtoa_r+0x6bc>
 800394e:	9903      	ldr	r1, [sp, #12]
 8003950:	4648      	mov	r0, r9
 8003952:	f000 fbbd 	bl	80040d0 <_Bfree>
 8003956:	2300      	movs	r3, #0
 8003958:	7033      	strb	r3, [r6, #0]
 800395a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800395c:	3701      	adds	r7, #1
 800395e:	601f      	str	r7, [r3, #0]
 8003960:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003962:	2b00      	cmp	r3, #0
 8003964:	f000 824b 	beq.w	8003dfe <_dtoa_r+0xb4e>
 8003968:	601e      	str	r6, [r3, #0]
 800396a:	e248      	b.n	8003dfe <_dtoa_r+0xb4e>
 800396c:	46b8      	mov	r8, r7
 800396e:	4633      	mov	r3, r6
 8003970:	461e      	mov	r6, r3
 8003972:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003976:	2a39      	cmp	r2, #57	@ 0x39
 8003978:	d106      	bne.n	8003988 <_dtoa_r+0x6d8>
 800397a:	459a      	cmp	sl, r3
 800397c:	d1f8      	bne.n	8003970 <_dtoa_r+0x6c0>
 800397e:	2230      	movs	r2, #48	@ 0x30
 8003980:	f108 0801 	add.w	r8, r8, #1
 8003984:	f88a 2000 	strb.w	r2, [sl]
 8003988:	781a      	ldrb	r2, [r3, #0]
 800398a:	3201      	adds	r2, #1
 800398c:	701a      	strb	r2, [r3, #0]
 800398e:	e7a0      	b.n	80038d2 <_dtoa_r+0x622>
 8003990:	4b6f      	ldr	r3, [pc, #444]	@ (8003b50 <_dtoa_r+0x8a0>)
 8003992:	2200      	movs	r2, #0
 8003994:	f7fc fe30 	bl	80005f8 <__aeabi_dmul>
 8003998:	2200      	movs	r2, #0
 800399a:	2300      	movs	r3, #0
 800399c:	4604      	mov	r4, r0
 800399e:	460d      	mov	r5, r1
 80039a0:	f7fd f892 	bl	8000ac8 <__aeabi_dcmpeq>
 80039a4:	2800      	cmp	r0, #0
 80039a6:	d09f      	beq.n	80038e8 <_dtoa_r+0x638>
 80039a8:	e7d1      	b.n	800394e <_dtoa_r+0x69e>
 80039aa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80039ac:	2a00      	cmp	r2, #0
 80039ae:	f000 80ea 	beq.w	8003b86 <_dtoa_r+0x8d6>
 80039b2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80039b4:	2a01      	cmp	r2, #1
 80039b6:	f300 80cd 	bgt.w	8003b54 <_dtoa_r+0x8a4>
 80039ba:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80039bc:	2a00      	cmp	r2, #0
 80039be:	f000 80c1 	beq.w	8003b44 <_dtoa_r+0x894>
 80039c2:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80039c6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80039c8:	9e04      	ldr	r6, [sp, #16]
 80039ca:	9a04      	ldr	r2, [sp, #16]
 80039cc:	441a      	add	r2, r3
 80039ce:	9204      	str	r2, [sp, #16]
 80039d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80039d2:	2101      	movs	r1, #1
 80039d4:	441a      	add	r2, r3
 80039d6:	4648      	mov	r0, r9
 80039d8:	9209      	str	r2, [sp, #36]	@ 0x24
 80039da:	f000 fc77 	bl	80042cc <__i2b>
 80039de:	4605      	mov	r5, r0
 80039e0:	b166      	cbz	r6, 80039fc <_dtoa_r+0x74c>
 80039e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039e4:	2b00      	cmp	r3, #0
 80039e6:	dd09      	ble.n	80039fc <_dtoa_r+0x74c>
 80039e8:	42b3      	cmp	r3, r6
 80039ea:	9a04      	ldr	r2, [sp, #16]
 80039ec:	bfa8      	it	ge
 80039ee:	4633      	movge	r3, r6
 80039f0:	1ad2      	subs	r2, r2, r3
 80039f2:	9204      	str	r2, [sp, #16]
 80039f4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80039f6:	1af6      	subs	r6, r6, r3
 80039f8:	1ad3      	subs	r3, r2, r3
 80039fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80039fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80039fe:	b30b      	cbz	r3, 8003a44 <_dtoa_r+0x794>
 8003a00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003a02:	2b00      	cmp	r3, #0
 8003a04:	f000 80c6 	beq.w	8003b94 <_dtoa_r+0x8e4>
 8003a08:	2c00      	cmp	r4, #0
 8003a0a:	f000 80c0 	beq.w	8003b8e <_dtoa_r+0x8de>
 8003a0e:	4629      	mov	r1, r5
 8003a10:	4622      	mov	r2, r4
 8003a12:	4648      	mov	r0, r9
 8003a14:	f000 fd12 	bl	800443c <__pow5mult>
 8003a18:	9a03      	ldr	r2, [sp, #12]
 8003a1a:	4601      	mov	r1, r0
 8003a1c:	4605      	mov	r5, r0
 8003a1e:	4648      	mov	r0, r9
 8003a20:	f000 fc6a 	bl	80042f8 <__multiply>
 8003a24:	9903      	ldr	r1, [sp, #12]
 8003a26:	4680      	mov	r8, r0
 8003a28:	4648      	mov	r0, r9
 8003a2a:	f000 fb51 	bl	80040d0 <_Bfree>
 8003a2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003a30:	1b1b      	subs	r3, r3, r4
 8003a32:	930a      	str	r3, [sp, #40]	@ 0x28
 8003a34:	f000 80b1 	beq.w	8003b9a <_dtoa_r+0x8ea>
 8003a38:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003a3a:	4641      	mov	r1, r8
 8003a3c:	4648      	mov	r0, r9
 8003a3e:	f000 fcfd 	bl	800443c <__pow5mult>
 8003a42:	9003      	str	r0, [sp, #12]
 8003a44:	2101      	movs	r1, #1
 8003a46:	4648      	mov	r0, r9
 8003a48:	f000 fc40 	bl	80042cc <__i2b>
 8003a4c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003a4e:	4604      	mov	r4, r0
 8003a50:	2b00      	cmp	r3, #0
 8003a52:	f000 81d8 	beq.w	8003e06 <_dtoa_r+0xb56>
 8003a56:	461a      	mov	r2, r3
 8003a58:	4601      	mov	r1, r0
 8003a5a:	4648      	mov	r0, r9
 8003a5c:	f000 fcee 	bl	800443c <__pow5mult>
 8003a60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003a62:	2b01      	cmp	r3, #1
 8003a64:	4604      	mov	r4, r0
 8003a66:	f300 809f 	bgt.w	8003ba8 <_dtoa_r+0x8f8>
 8003a6a:	9b06      	ldr	r3, [sp, #24]
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	f040 8097 	bne.w	8003ba0 <_dtoa_r+0x8f0>
 8003a72:	9b07      	ldr	r3, [sp, #28]
 8003a74:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	f040 8093 	bne.w	8003ba4 <_dtoa_r+0x8f4>
 8003a7e:	9b07      	ldr	r3, [sp, #28]
 8003a80:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003a84:	0d1b      	lsrs	r3, r3, #20
 8003a86:	051b      	lsls	r3, r3, #20
 8003a88:	b133      	cbz	r3, 8003a98 <_dtoa_r+0x7e8>
 8003a8a:	9b04      	ldr	r3, [sp, #16]
 8003a8c:	3301      	adds	r3, #1
 8003a8e:	9304      	str	r3, [sp, #16]
 8003a90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a92:	3301      	adds	r3, #1
 8003a94:	9309      	str	r3, [sp, #36]	@ 0x24
 8003a96:	2301      	movs	r3, #1
 8003a98:	930a      	str	r3, [sp, #40]	@ 0x28
 8003a9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003a9c:	2b00      	cmp	r3, #0
 8003a9e:	f000 81b8 	beq.w	8003e12 <_dtoa_r+0xb62>
 8003aa2:	6923      	ldr	r3, [r4, #16]
 8003aa4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003aa8:	6918      	ldr	r0, [r3, #16]
 8003aaa:	f000 fbc3 	bl	8004234 <__hi0bits>
 8003aae:	f1c0 0020 	rsb	r0, r0, #32
 8003ab2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003ab4:	4418      	add	r0, r3
 8003ab6:	f010 001f 	ands.w	r0, r0, #31
 8003aba:	f000 8082 	beq.w	8003bc2 <_dtoa_r+0x912>
 8003abe:	f1c0 0320 	rsb	r3, r0, #32
 8003ac2:	2b04      	cmp	r3, #4
 8003ac4:	dd73      	ble.n	8003bae <_dtoa_r+0x8fe>
 8003ac6:	9b04      	ldr	r3, [sp, #16]
 8003ac8:	f1c0 001c 	rsb	r0, r0, #28
 8003acc:	4403      	add	r3, r0
 8003ace:	9304      	str	r3, [sp, #16]
 8003ad0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003ad2:	4403      	add	r3, r0
 8003ad4:	4406      	add	r6, r0
 8003ad6:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ad8:	9b04      	ldr	r3, [sp, #16]
 8003ada:	2b00      	cmp	r3, #0
 8003adc:	dd05      	ble.n	8003aea <_dtoa_r+0x83a>
 8003ade:	9903      	ldr	r1, [sp, #12]
 8003ae0:	461a      	mov	r2, r3
 8003ae2:	4648      	mov	r0, r9
 8003ae4:	f000 fd04 	bl	80044f0 <__lshift>
 8003ae8:	9003      	str	r0, [sp, #12]
 8003aea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003aec:	2b00      	cmp	r3, #0
 8003aee:	dd05      	ble.n	8003afc <_dtoa_r+0x84c>
 8003af0:	4621      	mov	r1, r4
 8003af2:	461a      	mov	r2, r3
 8003af4:	4648      	mov	r0, r9
 8003af6:	f000 fcfb 	bl	80044f0 <__lshift>
 8003afa:	4604      	mov	r4, r0
 8003afc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	d061      	beq.n	8003bc6 <_dtoa_r+0x916>
 8003b02:	9803      	ldr	r0, [sp, #12]
 8003b04:	4621      	mov	r1, r4
 8003b06:	f000 fd5f 	bl	80045c8 <__mcmp>
 8003b0a:	2800      	cmp	r0, #0
 8003b0c:	da5b      	bge.n	8003bc6 <_dtoa_r+0x916>
 8003b0e:	2300      	movs	r3, #0
 8003b10:	9903      	ldr	r1, [sp, #12]
 8003b12:	220a      	movs	r2, #10
 8003b14:	4648      	mov	r0, r9
 8003b16:	f000 fafd 	bl	8004114 <__multadd>
 8003b1a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003b1c:	9003      	str	r0, [sp, #12]
 8003b1e:	f107 38ff 	add.w	r8, r7, #4294967295
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	f000 8177 	beq.w	8003e16 <_dtoa_r+0xb66>
 8003b28:	4629      	mov	r1, r5
 8003b2a:	2300      	movs	r3, #0
 8003b2c:	220a      	movs	r2, #10
 8003b2e:	4648      	mov	r0, r9
 8003b30:	f000 faf0 	bl	8004114 <__multadd>
 8003b34:	f1bb 0f00 	cmp.w	fp, #0
 8003b38:	4605      	mov	r5, r0
 8003b3a:	dc6f      	bgt.n	8003c1c <_dtoa_r+0x96c>
 8003b3c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003b3e:	2b02      	cmp	r3, #2
 8003b40:	dc49      	bgt.n	8003bd6 <_dtoa_r+0x926>
 8003b42:	e06b      	b.n	8003c1c <_dtoa_r+0x96c>
 8003b44:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003b46:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003b4a:	e73c      	b.n	80039c6 <_dtoa_r+0x716>
 8003b4c:	3fe00000 	.word	0x3fe00000
 8003b50:	40240000 	.word	0x40240000
 8003b54:	9b08      	ldr	r3, [sp, #32]
 8003b56:	1e5c      	subs	r4, r3, #1
 8003b58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003b5a:	42a3      	cmp	r3, r4
 8003b5c:	db09      	blt.n	8003b72 <_dtoa_r+0x8c2>
 8003b5e:	1b1c      	subs	r4, r3, r4
 8003b60:	9b08      	ldr	r3, [sp, #32]
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	f6bf af30 	bge.w	80039c8 <_dtoa_r+0x718>
 8003b68:	9b04      	ldr	r3, [sp, #16]
 8003b6a:	9a08      	ldr	r2, [sp, #32]
 8003b6c:	1a9e      	subs	r6, r3, r2
 8003b6e:	2300      	movs	r3, #0
 8003b70:	e72b      	b.n	80039ca <_dtoa_r+0x71a>
 8003b72:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003b74:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8003b76:	940a      	str	r4, [sp, #40]	@ 0x28
 8003b78:	1ae3      	subs	r3, r4, r3
 8003b7a:	441a      	add	r2, r3
 8003b7c:	9e04      	ldr	r6, [sp, #16]
 8003b7e:	9b08      	ldr	r3, [sp, #32]
 8003b80:	920e      	str	r2, [sp, #56]	@ 0x38
 8003b82:	2400      	movs	r4, #0
 8003b84:	e721      	b.n	80039ca <_dtoa_r+0x71a>
 8003b86:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003b88:	9e04      	ldr	r6, [sp, #16]
 8003b8a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003b8c:	e728      	b.n	80039e0 <_dtoa_r+0x730>
 8003b8e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003b92:	e751      	b.n	8003a38 <_dtoa_r+0x788>
 8003b94:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003b96:	9903      	ldr	r1, [sp, #12]
 8003b98:	e750      	b.n	8003a3c <_dtoa_r+0x78c>
 8003b9a:	f8cd 800c 	str.w	r8, [sp, #12]
 8003b9e:	e751      	b.n	8003a44 <_dtoa_r+0x794>
 8003ba0:	2300      	movs	r3, #0
 8003ba2:	e779      	b.n	8003a98 <_dtoa_r+0x7e8>
 8003ba4:	9b06      	ldr	r3, [sp, #24]
 8003ba6:	e777      	b.n	8003a98 <_dtoa_r+0x7e8>
 8003ba8:	2300      	movs	r3, #0
 8003baa:	930a      	str	r3, [sp, #40]	@ 0x28
 8003bac:	e779      	b.n	8003aa2 <_dtoa_r+0x7f2>
 8003bae:	d093      	beq.n	8003ad8 <_dtoa_r+0x828>
 8003bb0:	9a04      	ldr	r2, [sp, #16]
 8003bb2:	331c      	adds	r3, #28
 8003bb4:	441a      	add	r2, r3
 8003bb6:	9204      	str	r2, [sp, #16]
 8003bb8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003bba:	441a      	add	r2, r3
 8003bbc:	441e      	add	r6, r3
 8003bbe:	9209      	str	r2, [sp, #36]	@ 0x24
 8003bc0:	e78a      	b.n	8003ad8 <_dtoa_r+0x828>
 8003bc2:	4603      	mov	r3, r0
 8003bc4:	e7f4      	b.n	8003bb0 <_dtoa_r+0x900>
 8003bc6:	9b08      	ldr	r3, [sp, #32]
 8003bc8:	2b00      	cmp	r3, #0
 8003bca:	46b8      	mov	r8, r7
 8003bcc:	dc20      	bgt.n	8003c10 <_dtoa_r+0x960>
 8003bce:	469b      	mov	fp, r3
 8003bd0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003bd2:	2b02      	cmp	r3, #2
 8003bd4:	dd1e      	ble.n	8003c14 <_dtoa_r+0x964>
 8003bd6:	f1bb 0f00 	cmp.w	fp, #0
 8003bda:	f47f adb1 	bne.w	8003740 <_dtoa_r+0x490>
 8003bde:	4621      	mov	r1, r4
 8003be0:	465b      	mov	r3, fp
 8003be2:	2205      	movs	r2, #5
 8003be4:	4648      	mov	r0, r9
 8003be6:	f000 fa95 	bl	8004114 <__multadd>
 8003bea:	4601      	mov	r1, r0
 8003bec:	4604      	mov	r4, r0
 8003bee:	9803      	ldr	r0, [sp, #12]
 8003bf0:	f000 fcea 	bl	80045c8 <__mcmp>
 8003bf4:	2800      	cmp	r0, #0
 8003bf6:	f77f ada3 	ble.w	8003740 <_dtoa_r+0x490>
 8003bfa:	4656      	mov	r6, sl
 8003bfc:	2331      	movs	r3, #49	@ 0x31
 8003bfe:	f806 3b01 	strb.w	r3, [r6], #1
 8003c02:	f108 0801 	add.w	r8, r8, #1
 8003c06:	e59f      	b.n	8003748 <_dtoa_r+0x498>
 8003c08:	9c08      	ldr	r4, [sp, #32]
 8003c0a:	46b8      	mov	r8, r7
 8003c0c:	4625      	mov	r5, r4
 8003c0e:	e7f4      	b.n	8003bfa <_dtoa_r+0x94a>
 8003c10:	f8dd b020 	ldr.w	fp, [sp, #32]
 8003c14:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	f000 8101 	beq.w	8003e1e <_dtoa_r+0xb6e>
 8003c1c:	2e00      	cmp	r6, #0
 8003c1e:	dd05      	ble.n	8003c2c <_dtoa_r+0x97c>
 8003c20:	4629      	mov	r1, r5
 8003c22:	4632      	mov	r2, r6
 8003c24:	4648      	mov	r0, r9
 8003c26:	f000 fc63 	bl	80044f0 <__lshift>
 8003c2a:	4605      	mov	r5, r0
 8003c2c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	d05c      	beq.n	8003cec <_dtoa_r+0xa3c>
 8003c32:	6869      	ldr	r1, [r5, #4]
 8003c34:	4648      	mov	r0, r9
 8003c36:	f000 fa0b 	bl	8004050 <_Balloc>
 8003c3a:	4606      	mov	r6, r0
 8003c3c:	b928      	cbnz	r0, 8003c4a <_dtoa_r+0x99a>
 8003c3e:	4b82      	ldr	r3, [pc, #520]	@ (8003e48 <_dtoa_r+0xb98>)
 8003c40:	4602      	mov	r2, r0
 8003c42:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8003c46:	f7ff bb47 	b.w	80032d8 <_dtoa_r+0x28>
 8003c4a:	692a      	ldr	r2, [r5, #16]
 8003c4c:	3202      	adds	r2, #2
 8003c4e:	0092      	lsls	r2, r2, #2
 8003c50:	f105 010c 	add.w	r1, r5, #12
 8003c54:	300c      	adds	r0, #12
 8003c56:	f001 ff51 	bl	8005afc <memcpy>
 8003c5a:	2201      	movs	r2, #1
 8003c5c:	4631      	mov	r1, r6
 8003c5e:	4648      	mov	r0, r9
 8003c60:	f000 fc46 	bl	80044f0 <__lshift>
 8003c64:	f10a 0301 	add.w	r3, sl, #1
 8003c68:	9304      	str	r3, [sp, #16]
 8003c6a:	eb0a 030b 	add.w	r3, sl, fp
 8003c6e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003c70:	9b06      	ldr	r3, [sp, #24]
 8003c72:	f003 0301 	and.w	r3, r3, #1
 8003c76:	462f      	mov	r7, r5
 8003c78:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c7a:	4605      	mov	r5, r0
 8003c7c:	9b04      	ldr	r3, [sp, #16]
 8003c7e:	9803      	ldr	r0, [sp, #12]
 8003c80:	4621      	mov	r1, r4
 8003c82:	f103 3bff 	add.w	fp, r3, #4294967295
 8003c86:	f7ff fa8b 	bl	80031a0 <quorem>
 8003c8a:	4603      	mov	r3, r0
 8003c8c:	3330      	adds	r3, #48	@ 0x30
 8003c8e:	9006      	str	r0, [sp, #24]
 8003c90:	4639      	mov	r1, r7
 8003c92:	9803      	ldr	r0, [sp, #12]
 8003c94:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003c96:	f000 fc97 	bl	80045c8 <__mcmp>
 8003c9a:	462a      	mov	r2, r5
 8003c9c:	9008      	str	r0, [sp, #32]
 8003c9e:	4621      	mov	r1, r4
 8003ca0:	4648      	mov	r0, r9
 8003ca2:	f000 fcad 	bl	8004600 <__mdiff>
 8003ca6:	68c2      	ldr	r2, [r0, #12]
 8003ca8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003caa:	4606      	mov	r6, r0
 8003cac:	bb02      	cbnz	r2, 8003cf0 <_dtoa_r+0xa40>
 8003cae:	4601      	mov	r1, r0
 8003cb0:	9803      	ldr	r0, [sp, #12]
 8003cb2:	f000 fc89 	bl	80045c8 <__mcmp>
 8003cb6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003cb8:	4602      	mov	r2, r0
 8003cba:	4631      	mov	r1, r6
 8003cbc:	4648      	mov	r0, r9
 8003cbe:	e9cd 320b 	strd	r3, r2, [sp, #44]	@ 0x2c
 8003cc2:	f000 fa05 	bl	80040d0 <_Bfree>
 8003cc6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003cc8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003cca:	9e04      	ldr	r6, [sp, #16]
 8003ccc:	ea42 0103 	orr.w	r1, r2, r3
 8003cd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003cd2:	4319      	orrs	r1, r3
 8003cd4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003cd6:	d10d      	bne.n	8003cf4 <_dtoa_r+0xa44>
 8003cd8:	2b39      	cmp	r3, #57	@ 0x39
 8003cda:	d027      	beq.n	8003d2c <_dtoa_r+0xa7c>
 8003cdc:	9a08      	ldr	r2, [sp, #32]
 8003cde:	2a00      	cmp	r2, #0
 8003ce0:	dd01      	ble.n	8003ce6 <_dtoa_r+0xa36>
 8003ce2:	9b06      	ldr	r3, [sp, #24]
 8003ce4:	3331      	adds	r3, #49	@ 0x31
 8003ce6:	f88b 3000 	strb.w	r3, [fp]
 8003cea:	e52e      	b.n	800374a <_dtoa_r+0x49a>
 8003cec:	4628      	mov	r0, r5
 8003cee:	e7b9      	b.n	8003c64 <_dtoa_r+0x9b4>
 8003cf0:	2201      	movs	r2, #1
 8003cf2:	e7e2      	b.n	8003cba <_dtoa_r+0xa0a>
 8003cf4:	9908      	ldr	r1, [sp, #32]
 8003cf6:	2900      	cmp	r1, #0
 8003cf8:	db04      	blt.n	8003d04 <_dtoa_r+0xa54>
 8003cfa:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8003cfc:	4301      	orrs	r1, r0
 8003cfe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003d00:	4301      	orrs	r1, r0
 8003d02:	d120      	bne.n	8003d46 <_dtoa_r+0xa96>
 8003d04:	2a00      	cmp	r2, #0
 8003d06:	ddee      	ble.n	8003ce6 <_dtoa_r+0xa36>
 8003d08:	9903      	ldr	r1, [sp, #12]
 8003d0a:	9304      	str	r3, [sp, #16]
 8003d0c:	2201      	movs	r2, #1
 8003d0e:	4648      	mov	r0, r9
 8003d10:	f000 fbee 	bl	80044f0 <__lshift>
 8003d14:	4621      	mov	r1, r4
 8003d16:	9003      	str	r0, [sp, #12]
 8003d18:	f000 fc56 	bl	80045c8 <__mcmp>
 8003d1c:	2800      	cmp	r0, #0
 8003d1e:	9b04      	ldr	r3, [sp, #16]
 8003d20:	dc02      	bgt.n	8003d28 <_dtoa_r+0xa78>
 8003d22:	d1e0      	bne.n	8003ce6 <_dtoa_r+0xa36>
 8003d24:	07da      	lsls	r2, r3, #31
 8003d26:	d5de      	bpl.n	8003ce6 <_dtoa_r+0xa36>
 8003d28:	2b39      	cmp	r3, #57	@ 0x39
 8003d2a:	d1da      	bne.n	8003ce2 <_dtoa_r+0xa32>
 8003d2c:	2339      	movs	r3, #57	@ 0x39
 8003d2e:	f88b 3000 	strb.w	r3, [fp]
 8003d32:	4633      	mov	r3, r6
 8003d34:	461e      	mov	r6, r3
 8003d36:	3b01      	subs	r3, #1
 8003d38:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003d3c:	2a39      	cmp	r2, #57	@ 0x39
 8003d3e:	d04e      	beq.n	8003dde <_dtoa_r+0xb2e>
 8003d40:	3201      	adds	r2, #1
 8003d42:	701a      	strb	r2, [r3, #0]
 8003d44:	e501      	b.n	800374a <_dtoa_r+0x49a>
 8003d46:	2a00      	cmp	r2, #0
 8003d48:	dd03      	ble.n	8003d52 <_dtoa_r+0xaa2>
 8003d4a:	2b39      	cmp	r3, #57	@ 0x39
 8003d4c:	d0ee      	beq.n	8003d2c <_dtoa_r+0xa7c>
 8003d4e:	3301      	adds	r3, #1
 8003d50:	e7c9      	b.n	8003ce6 <_dtoa_r+0xa36>
 8003d52:	9a04      	ldr	r2, [sp, #16]
 8003d54:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003d56:	f802 3c01 	strb.w	r3, [r2, #-1]
 8003d5a:	428a      	cmp	r2, r1
 8003d5c:	d028      	beq.n	8003db0 <_dtoa_r+0xb00>
 8003d5e:	9903      	ldr	r1, [sp, #12]
 8003d60:	2300      	movs	r3, #0
 8003d62:	220a      	movs	r2, #10
 8003d64:	4648      	mov	r0, r9
 8003d66:	f000 f9d5 	bl	8004114 <__multadd>
 8003d6a:	42af      	cmp	r7, r5
 8003d6c:	9003      	str	r0, [sp, #12]
 8003d6e:	f04f 0300 	mov.w	r3, #0
 8003d72:	f04f 020a 	mov.w	r2, #10
 8003d76:	4639      	mov	r1, r7
 8003d78:	4648      	mov	r0, r9
 8003d7a:	d107      	bne.n	8003d8c <_dtoa_r+0xadc>
 8003d7c:	f000 f9ca 	bl	8004114 <__multadd>
 8003d80:	4607      	mov	r7, r0
 8003d82:	4605      	mov	r5, r0
 8003d84:	9b04      	ldr	r3, [sp, #16]
 8003d86:	3301      	adds	r3, #1
 8003d88:	9304      	str	r3, [sp, #16]
 8003d8a:	e777      	b.n	8003c7c <_dtoa_r+0x9cc>
 8003d8c:	f000 f9c2 	bl	8004114 <__multadd>
 8003d90:	4629      	mov	r1, r5
 8003d92:	4607      	mov	r7, r0
 8003d94:	2300      	movs	r3, #0
 8003d96:	220a      	movs	r2, #10
 8003d98:	4648      	mov	r0, r9
 8003d9a:	f000 f9bb 	bl	8004114 <__multadd>
 8003d9e:	4605      	mov	r5, r0
 8003da0:	e7f0      	b.n	8003d84 <_dtoa_r+0xad4>
 8003da2:	f1bb 0f00 	cmp.w	fp, #0
 8003da6:	bfcc      	ite	gt
 8003da8:	465e      	movgt	r6, fp
 8003daa:	2601      	movle	r6, #1
 8003dac:	4456      	add	r6, sl
 8003dae:	2700      	movs	r7, #0
 8003db0:	9903      	ldr	r1, [sp, #12]
 8003db2:	9304      	str	r3, [sp, #16]
 8003db4:	2201      	movs	r2, #1
 8003db6:	4648      	mov	r0, r9
 8003db8:	f000 fb9a 	bl	80044f0 <__lshift>
 8003dbc:	4621      	mov	r1, r4
 8003dbe:	9003      	str	r0, [sp, #12]
 8003dc0:	f000 fc02 	bl	80045c8 <__mcmp>
 8003dc4:	2800      	cmp	r0, #0
 8003dc6:	dcb4      	bgt.n	8003d32 <_dtoa_r+0xa82>
 8003dc8:	d102      	bne.n	8003dd0 <_dtoa_r+0xb20>
 8003dca:	9b04      	ldr	r3, [sp, #16]
 8003dcc:	07db      	lsls	r3, r3, #31
 8003dce:	d4b0      	bmi.n	8003d32 <_dtoa_r+0xa82>
 8003dd0:	4633      	mov	r3, r6
 8003dd2:	461e      	mov	r6, r3
 8003dd4:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003dd8:	2a30      	cmp	r2, #48	@ 0x30
 8003dda:	d0fa      	beq.n	8003dd2 <_dtoa_r+0xb22>
 8003ddc:	e4b5      	b.n	800374a <_dtoa_r+0x49a>
 8003dde:	459a      	cmp	sl, r3
 8003de0:	d1a8      	bne.n	8003d34 <_dtoa_r+0xa84>
 8003de2:	2331      	movs	r3, #49	@ 0x31
 8003de4:	f108 0801 	add.w	r8, r8, #1
 8003de8:	f88a 3000 	strb.w	r3, [sl]
 8003dec:	e4ad      	b.n	800374a <_dtoa_r+0x49a>
 8003dee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003df0:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8003e4c <_dtoa_r+0xb9c>
 8003df4:	b11b      	cbz	r3, 8003dfe <_dtoa_r+0xb4e>
 8003df6:	f10a 0308 	add.w	r3, sl, #8
 8003dfa:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003dfc:	6013      	str	r3, [r2, #0]
 8003dfe:	4650      	mov	r0, sl
 8003e00:	b017      	add	sp, #92	@ 0x5c
 8003e02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e06:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003e08:	2b01      	cmp	r3, #1
 8003e0a:	f77f ae2e 	ble.w	8003a6a <_dtoa_r+0x7ba>
 8003e0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003e10:	930a      	str	r3, [sp, #40]	@ 0x28
 8003e12:	2001      	movs	r0, #1
 8003e14:	e64d      	b.n	8003ab2 <_dtoa_r+0x802>
 8003e16:	f1bb 0f00 	cmp.w	fp, #0
 8003e1a:	f77f aed9 	ble.w	8003bd0 <_dtoa_r+0x920>
 8003e1e:	4656      	mov	r6, sl
 8003e20:	9803      	ldr	r0, [sp, #12]
 8003e22:	4621      	mov	r1, r4
 8003e24:	f7ff f9bc 	bl	80031a0 <quorem>
 8003e28:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8003e2c:	f806 3b01 	strb.w	r3, [r6], #1
 8003e30:	eba6 020a 	sub.w	r2, r6, sl
 8003e34:	4593      	cmp	fp, r2
 8003e36:	ddb4      	ble.n	8003da2 <_dtoa_r+0xaf2>
 8003e38:	9903      	ldr	r1, [sp, #12]
 8003e3a:	2300      	movs	r3, #0
 8003e3c:	220a      	movs	r2, #10
 8003e3e:	4648      	mov	r0, r9
 8003e40:	f000 f968 	bl	8004114 <__multadd>
 8003e44:	9003      	str	r0, [sp, #12]
 8003e46:	e7eb      	b.n	8003e20 <_dtoa_r+0xb70>
 8003e48:	080068dd 	.word	0x080068dd
 8003e4c:	08006861 	.word	0x08006861

08003e50 <_free_r>:
 8003e50:	b538      	push	{r3, r4, r5, lr}
 8003e52:	4605      	mov	r5, r0
 8003e54:	2900      	cmp	r1, #0
 8003e56:	d041      	beq.n	8003edc <_free_r+0x8c>
 8003e58:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003e5c:	1f0c      	subs	r4, r1, #4
 8003e5e:	2b00      	cmp	r3, #0
 8003e60:	bfb8      	it	lt
 8003e62:	18e4      	addlt	r4, r4, r3
 8003e64:	f000 f8e8 	bl	8004038 <__malloc_lock>
 8003e68:	4a1d      	ldr	r2, [pc, #116]	@ (8003ee0 <_free_r+0x90>)
 8003e6a:	6813      	ldr	r3, [r2, #0]
 8003e6c:	b933      	cbnz	r3, 8003e7c <_free_r+0x2c>
 8003e6e:	6063      	str	r3, [r4, #4]
 8003e70:	6014      	str	r4, [r2, #0]
 8003e72:	4628      	mov	r0, r5
 8003e74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003e78:	f000 b8e4 	b.w	8004044 <__malloc_unlock>
 8003e7c:	42a3      	cmp	r3, r4
 8003e7e:	d908      	bls.n	8003e92 <_free_r+0x42>
 8003e80:	6820      	ldr	r0, [r4, #0]
 8003e82:	1821      	adds	r1, r4, r0
 8003e84:	428b      	cmp	r3, r1
 8003e86:	bf01      	itttt	eq
 8003e88:	6819      	ldreq	r1, [r3, #0]
 8003e8a:	685b      	ldreq	r3, [r3, #4]
 8003e8c:	1809      	addeq	r1, r1, r0
 8003e8e:	6021      	streq	r1, [r4, #0]
 8003e90:	e7ed      	b.n	8003e6e <_free_r+0x1e>
 8003e92:	461a      	mov	r2, r3
 8003e94:	685b      	ldr	r3, [r3, #4]
 8003e96:	b10b      	cbz	r3, 8003e9c <_free_r+0x4c>
 8003e98:	42a3      	cmp	r3, r4
 8003e9a:	d9fa      	bls.n	8003e92 <_free_r+0x42>
 8003e9c:	6811      	ldr	r1, [r2, #0]
 8003e9e:	1850      	adds	r0, r2, r1
 8003ea0:	42a0      	cmp	r0, r4
 8003ea2:	d10b      	bne.n	8003ebc <_free_r+0x6c>
 8003ea4:	6820      	ldr	r0, [r4, #0]
 8003ea6:	4401      	add	r1, r0
 8003ea8:	1850      	adds	r0, r2, r1
 8003eaa:	4283      	cmp	r3, r0
 8003eac:	6011      	str	r1, [r2, #0]
 8003eae:	d1e0      	bne.n	8003e72 <_free_r+0x22>
 8003eb0:	6818      	ldr	r0, [r3, #0]
 8003eb2:	685b      	ldr	r3, [r3, #4]
 8003eb4:	6053      	str	r3, [r2, #4]
 8003eb6:	4408      	add	r0, r1
 8003eb8:	6010      	str	r0, [r2, #0]
 8003eba:	e7da      	b.n	8003e72 <_free_r+0x22>
 8003ebc:	d902      	bls.n	8003ec4 <_free_r+0x74>
 8003ebe:	230c      	movs	r3, #12
 8003ec0:	602b      	str	r3, [r5, #0]
 8003ec2:	e7d6      	b.n	8003e72 <_free_r+0x22>
 8003ec4:	6820      	ldr	r0, [r4, #0]
 8003ec6:	1821      	adds	r1, r4, r0
 8003ec8:	428b      	cmp	r3, r1
 8003eca:	bf04      	itt	eq
 8003ecc:	6819      	ldreq	r1, [r3, #0]
 8003ece:	685b      	ldreq	r3, [r3, #4]
 8003ed0:	6063      	str	r3, [r4, #4]
 8003ed2:	bf04      	itt	eq
 8003ed4:	1809      	addeq	r1, r1, r0
 8003ed6:	6021      	streq	r1, [r4, #0]
 8003ed8:	6054      	str	r4, [r2, #4]
 8003eda:	e7ca      	b.n	8003e72 <_free_r+0x22>
 8003edc:	bd38      	pop	{r3, r4, r5, pc}
 8003ede:	bf00      	nop
 8003ee0:	20000338 	.word	0x20000338

08003ee4 <malloc>:
 8003ee4:	4b02      	ldr	r3, [pc, #8]	@ (8003ef0 <malloc+0xc>)
 8003ee6:	4601      	mov	r1, r0
 8003ee8:	6818      	ldr	r0, [r3, #0]
 8003eea:	f000 b825 	b.w	8003f38 <_malloc_r>
 8003eee:	bf00      	nop
 8003ef0:	20000010 	.word	0x20000010

08003ef4 <sbrk_aligned>:
 8003ef4:	b570      	push	{r4, r5, r6, lr}
 8003ef6:	4e0f      	ldr	r6, [pc, #60]	@ (8003f34 <sbrk_aligned+0x40>)
 8003ef8:	460c      	mov	r4, r1
 8003efa:	6831      	ldr	r1, [r6, #0]
 8003efc:	4605      	mov	r5, r0
 8003efe:	b911      	cbnz	r1, 8003f06 <sbrk_aligned+0x12>
 8003f00:	f001 fdec 	bl	8005adc <_sbrk_r>
 8003f04:	6030      	str	r0, [r6, #0]
 8003f06:	4621      	mov	r1, r4
 8003f08:	4628      	mov	r0, r5
 8003f0a:	f001 fde7 	bl	8005adc <_sbrk_r>
 8003f0e:	1c43      	adds	r3, r0, #1
 8003f10:	d103      	bne.n	8003f1a <sbrk_aligned+0x26>
 8003f12:	f04f 34ff 	mov.w	r4, #4294967295
 8003f16:	4620      	mov	r0, r4
 8003f18:	bd70      	pop	{r4, r5, r6, pc}
 8003f1a:	1cc4      	adds	r4, r0, #3
 8003f1c:	f024 0403 	bic.w	r4, r4, #3
 8003f20:	42a0      	cmp	r0, r4
 8003f22:	d0f8      	beq.n	8003f16 <sbrk_aligned+0x22>
 8003f24:	1a21      	subs	r1, r4, r0
 8003f26:	4628      	mov	r0, r5
 8003f28:	f001 fdd8 	bl	8005adc <_sbrk_r>
 8003f2c:	3001      	adds	r0, #1
 8003f2e:	d1f2      	bne.n	8003f16 <sbrk_aligned+0x22>
 8003f30:	e7ef      	b.n	8003f12 <sbrk_aligned+0x1e>
 8003f32:	bf00      	nop
 8003f34:	20000334 	.word	0x20000334

08003f38 <_malloc_r>:
 8003f38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003f3c:	1ccd      	adds	r5, r1, #3
 8003f3e:	f025 0503 	bic.w	r5, r5, #3
 8003f42:	3508      	adds	r5, #8
 8003f44:	2d0c      	cmp	r5, #12
 8003f46:	bf38      	it	cc
 8003f48:	250c      	movcc	r5, #12
 8003f4a:	2d00      	cmp	r5, #0
 8003f4c:	4606      	mov	r6, r0
 8003f4e:	db01      	blt.n	8003f54 <_malloc_r+0x1c>
 8003f50:	42a9      	cmp	r1, r5
 8003f52:	d904      	bls.n	8003f5e <_malloc_r+0x26>
 8003f54:	230c      	movs	r3, #12
 8003f56:	6033      	str	r3, [r6, #0]
 8003f58:	2000      	movs	r0, #0
 8003f5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003f5e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004034 <_malloc_r+0xfc>
 8003f62:	f000 f869 	bl	8004038 <__malloc_lock>
 8003f66:	f8d8 3000 	ldr.w	r3, [r8]
 8003f6a:	461c      	mov	r4, r3
 8003f6c:	bb44      	cbnz	r4, 8003fc0 <_malloc_r+0x88>
 8003f6e:	4629      	mov	r1, r5
 8003f70:	4630      	mov	r0, r6
 8003f72:	f7ff ffbf 	bl	8003ef4 <sbrk_aligned>
 8003f76:	1c43      	adds	r3, r0, #1
 8003f78:	4604      	mov	r4, r0
 8003f7a:	d158      	bne.n	800402e <_malloc_r+0xf6>
 8003f7c:	f8d8 4000 	ldr.w	r4, [r8]
 8003f80:	4627      	mov	r7, r4
 8003f82:	2f00      	cmp	r7, #0
 8003f84:	d143      	bne.n	800400e <_malloc_r+0xd6>
 8003f86:	2c00      	cmp	r4, #0
 8003f88:	d04b      	beq.n	8004022 <_malloc_r+0xea>
 8003f8a:	6823      	ldr	r3, [r4, #0]
 8003f8c:	4639      	mov	r1, r7
 8003f8e:	4630      	mov	r0, r6
 8003f90:	eb04 0903 	add.w	r9, r4, r3
 8003f94:	f001 fda2 	bl	8005adc <_sbrk_r>
 8003f98:	4581      	cmp	r9, r0
 8003f9a:	d142      	bne.n	8004022 <_malloc_r+0xea>
 8003f9c:	6821      	ldr	r1, [r4, #0]
 8003f9e:	1a6d      	subs	r5, r5, r1
 8003fa0:	4629      	mov	r1, r5
 8003fa2:	4630      	mov	r0, r6
 8003fa4:	f7ff ffa6 	bl	8003ef4 <sbrk_aligned>
 8003fa8:	3001      	adds	r0, #1
 8003faa:	d03a      	beq.n	8004022 <_malloc_r+0xea>
 8003fac:	6823      	ldr	r3, [r4, #0]
 8003fae:	442b      	add	r3, r5
 8003fb0:	6023      	str	r3, [r4, #0]
 8003fb2:	f8d8 3000 	ldr.w	r3, [r8]
 8003fb6:	685a      	ldr	r2, [r3, #4]
 8003fb8:	bb62      	cbnz	r2, 8004014 <_malloc_r+0xdc>
 8003fba:	f8c8 7000 	str.w	r7, [r8]
 8003fbe:	e00f      	b.n	8003fe0 <_malloc_r+0xa8>
 8003fc0:	6822      	ldr	r2, [r4, #0]
 8003fc2:	1b52      	subs	r2, r2, r5
 8003fc4:	d420      	bmi.n	8004008 <_malloc_r+0xd0>
 8003fc6:	2a0b      	cmp	r2, #11
 8003fc8:	d917      	bls.n	8003ffa <_malloc_r+0xc2>
 8003fca:	1961      	adds	r1, r4, r5
 8003fcc:	42a3      	cmp	r3, r4
 8003fce:	6025      	str	r5, [r4, #0]
 8003fd0:	bf18      	it	ne
 8003fd2:	6059      	strne	r1, [r3, #4]
 8003fd4:	6863      	ldr	r3, [r4, #4]
 8003fd6:	bf08      	it	eq
 8003fd8:	f8c8 1000 	streq.w	r1, [r8]
 8003fdc:	5162      	str	r2, [r4, r5]
 8003fde:	604b      	str	r3, [r1, #4]
 8003fe0:	4630      	mov	r0, r6
 8003fe2:	f000 f82f 	bl	8004044 <__malloc_unlock>
 8003fe6:	f104 000b 	add.w	r0, r4, #11
 8003fea:	1d23      	adds	r3, r4, #4
 8003fec:	f020 0007 	bic.w	r0, r0, #7
 8003ff0:	1ac2      	subs	r2, r0, r3
 8003ff2:	bf1c      	itt	ne
 8003ff4:	1a1b      	subne	r3, r3, r0
 8003ff6:	50a3      	strne	r3, [r4, r2]
 8003ff8:	e7af      	b.n	8003f5a <_malloc_r+0x22>
 8003ffa:	6862      	ldr	r2, [r4, #4]
 8003ffc:	42a3      	cmp	r3, r4
 8003ffe:	bf0c      	ite	eq
 8004000:	f8c8 2000 	streq.w	r2, [r8]
 8004004:	605a      	strne	r2, [r3, #4]
 8004006:	e7eb      	b.n	8003fe0 <_malloc_r+0xa8>
 8004008:	4623      	mov	r3, r4
 800400a:	6864      	ldr	r4, [r4, #4]
 800400c:	e7ae      	b.n	8003f6c <_malloc_r+0x34>
 800400e:	463c      	mov	r4, r7
 8004010:	687f      	ldr	r7, [r7, #4]
 8004012:	e7b6      	b.n	8003f82 <_malloc_r+0x4a>
 8004014:	461a      	mov	r2, r3
 8004016:	685b      	ldr	r3, [r3, #4]
 8004018:	42a3      	cmp	r3, r4
 800401a:	d1fb      	bne.n	8004014 <_malloc_r+0xdc>
 800401c:	2300      	movs	r3, #0
 800401e:	6053      	str	r3, [r2, #4]
 8004020:	e7de      	b.n	8003fe0 <_malloc_r+0xa8>
 8004022:	230c      	movs	r3, #12
 8004024:	6033      	str	r3, [r6, #0]
 8004026:	4630      	mov	r0, r6
 8004028:	f000 f80c 	bl	8004044 <__malloc_unlock>
 800402c:	e794      	b.n	8003f58 <_malloc_r+0x20>
 800402e:	6005      	str	r5, [r0, #0]
 8004030:	e7d6      	b.n	8003fe0 <_malloc_r+0xa8>
 8004032:	bf00      	nop
 8004034:	20000338 	.word	0x20000338

08004038 <__malloc_lock>:
 8004038:	4801      	ldr	r0, [pc, #4]	@ (8004040 <__malloc_lock+0x8>)
 800403a:	f7ff b8aa 	b.w	8003192 <__retarget_lock_acquire_recursive>
 800403e:	bf00      	nop
 8004040:	20000330 	.word	0x20000330

08004044 <__malloc_unlock>:
 8004044:	4801      	ldr	r0, [pc, #4]	@ (800404c <__malloc_unlock+0x8>)
 8004046:	f7ff b8a5 	b.w	8003194 <__retarget_lock_release_recursive>
 800404a:	bf00      	nop
 800404c:	20000330 	.word	0x20000330

08004050 <_Balloc>:
 8004050:	b570      	push	{r4, r5, r6, lr}
 8004052:	69c6      	ldr	r6, [r0, #28]
 8004054:	4604      	mov	r4, r0
 8004056:	460d      	mov	r5, r1
 8004058:	b976      	cbnz	r6, 8004078 <_Balloc+0x28>
 800405a:	2010      	movs	r0, #16
 800405c:	f7ff ff42 	bl	8003ee4 <malloc>
 8004060:	4602      	mov	r2, r0
 8004062:	61e0      	str	r0, [r4, #28]
 8004064:	b920      	cbnz	r0, 8004070 <_Balloc+0x20>
 8004066:	4b18      	ldr	r3, [pc, #96]	@ (80040c8 <_Balloc+0x78>)
 8004068:	4818      	ldr	r0, [pc, #96]	@ (80040cc <_Balloc+0x7c>)
 800406a:	216b      	movs	r1, #107	@ 0x6b
 800406c:	f001 fd5a 	bl	8005b24 <__assert_func>
 8004070:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004074:	6006      	str	r6, [r0, #0]
 8004076:	60c6      	str	r6, [r0, #12]
 8004078:	69e6      	ldr	r6, [r4, #28]
 800407a:	68f3      	ldr	r3, [r6, #12]
 800407c:	b183      	cbz	r3, 80040a0 <_Balloc+0x50>
 800407e:	69e3      	ldr	r3, [r4, #28]
 8004080:	68db      	ldr	r3, [r3, #12]
 8004082:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004086:	b9b8      	cbnz	r0, 80040b8 <_Balloc+0x68>
 8004088:	2101      	movs	r1, #1
 800408a:	fa01 f605 	lsl.w	r6, r1, r5
 800408e:	1d72      	adds	r2, r6, #5
 8004090:	0092      	lsls	r2, r2, #2
 8004092:	4620      	mov	r0, r4
 8004094:	f001 fd64 	bl	8005b60 <_calloc_r>
 8004098:	b160      	cbz	r0, 80040b4 <_Balloc+0x64>
 800409a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800409e:	e00e      	b.n	80040be <_Balloc+0x6e>
 80040a0:	2221      	movs	r2, #33	@ 0x21
 80040a2:	2104      	movs	r1, #4
 80040a4:	4620      	mov	r0, r4
 80040a6:	f001 fd5b 	bl	8005b60 <_calloc_r>
 80040aa:	69e3      	ldr	r3, [r4, #28]
 80040ac:	60f0      	str	r0, [r6, #12]
 80040ae:	68db      	ldr	r3, [r3, #12]
 80040b0:	2b00      	cmp	r3, #0
 80040b2:	d1e4      	bne.n	800407e <_Balloc+0x2e>
 80040b4:	2000      	movs	r0, #0
 80040b6:	bd70      	pop	{r4, r5, r6, pc}
 80040b8:	6802      	ldr	r2, [r0, #0]
 80040ba:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80040be:	2300      	movs	r3, #0
 80040c0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80040c4:	e7f7      	b.n	80040b6 <_Balloc+0x66>
 80040c6:	bf00      	nop
 80040c8:	0800686e 	.word	0x0800686e
 80040cc:	080068ee 	.word	0x080068ee

080040d0 <_Bfree>:
 80040d0:	b570      	push	{r4, r5, r6, lr}
 80040d2:	69c6      	ldr	r6, [r0, #28]
 80040d4:	4605      	mov	r5, r0
 80040d6:	460c      	mov	r4, r1
 80040d8:	b976      	cbnz	r6, 80040f8 <_Bfree+0x28>
 80040da:	2010      	movs	r0, #16
 80040dc:	f7ff ff02 	bl	8003ee4 <malloc>
 80040e0:	4602      	mov	r2, r0
 80040e2:	61e8      	str	r0, [r5, #28]
 80040e4:	b920      	cbnz	r0, 80040f0 <_Bfree+0x20>
 80040e6:	4b09      	ldr	r3, [pc, #36]	@ (800410c <_Bfree+0x3c>)
 80040e8:	4809      	ldr	r0, [pc, #36]	@ (8004110 <_Bfree+0x40>)
 80040ea:	218f      	movs	r1, #143	@ 0x8f
 80040ec:	f001 fd1a 	bl	8005b24 <__assert_func>
 80040f0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80040f4:	6006      	str	r6, [r0, #0]
 80040f6:	60c6      	str	r6, [r0, #12]
 80040f8:	b13c      	cbz	r4, 800410a <_Bfree+0x3a>
 80040fa:	69eb      	ldr	r3, [r5, #28]
 80040fc:	6862      	ldr	r2, [r4, #4]
 80040fe:	68db      	ldr	r3, [r3, #12]
 8004100:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004104:	6021      	str	r1, [r4, #0]
 8004106:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800410a:	bd70      	pop	{r4, r5, r6, pc}
 800410c:	0800686e 	.word	0x0800686e
 8004110:	080068ee 	.word	0x080068ee

08004114 <__multadd>:
 8004114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004118:	690d      	ldr	r5, [r1, #16]
 800411a:	4607      	mov	r7, r0
 800411c:	460c      	mov	r4, r1
 800411e:	461e      	mov	r6, r3
 8004120:	f101 0c14 	add.w	ip, r1, #20
 8004124:	2000      	movs	r0, #0
 8004126:	f8dc 3000 	ldr.w	r3, [ip]
 800412a:	b299      	uxth	r1, r3
 800412c:	fb02 6101 	mla	r1, r2, r1, r6
 8004130:	0c1e      	lsrs	r6, r3, #16
 8004132:	0c0b      	lsrs	r3, r1, #16
 8004134:	fb02 3306 	mla	r3, r2, r6, r3
 8004138:	b289      	uxth	r1, r1
 800413a:	3001      	adds	r0, #1
 800413c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004140:	4285      	cmp	r5, r0
 8004142:	f84c 1b04 	str.w	r1, [ip], #4
 8004146:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800414a:	dcec      	bgt.n	8004126 <__multadd+0x12>
 800414c:	b30e      	cbz	r6, 8004192 <__multadd+0x7e>
 800414e:	68a3      	ldr	r3, [r4, #8]
 8004150:	42ab      	cmp	r3, r5
 8004152:	dc19      	bgt.n	8004188 <__multadd+0x74>
 8004154:	6861      	ldr	r1, [r4, #4]
 8004156:	4638      	mov	r0, r7
 8004158:	3101      	adds	r1, #1
 800415a:	f7ff ff79 	bl	8004050 <_Balloc>
 800415e:	4680      	mov	r8, r0
 8004160:	b928      	cbnz	r0, 800416e <__multadd+0x5a>
 8004162:	4602      	mov	r2, r0
 8004164:	4b0c      	ldr	r3, [pc, #48]	@ (8004198 <__multadd+0x84>)
 8004166:	480d      	ldr	r0, [pc, #52]	@ (800419c <__multadd+0x88>)
 8004168:	21ba      	movs	r1, #186	@ 0xba
 800416a:	f001 fcdb 	bl	8005b24 <__assert_func>
 800416e:	6922      	ldr	r2, [r4, #16]
 8004170:	3202      	adds	r2, #2
 8004172:	f104 010c 	add.w	r1, r4, #12
 8004176:	0092      	lsls	r2, r2, #2
 8004178:	300c      	adds	r0, #12
 800417a:	f001 fcbf 	bl	8005afc <memcpy>
 800417e:	4621      	mov	r1, r4
 8004180:	4638      	mov	r0, r7
 8004182:	f7ff ffa5 	bl	80040d0 <_Bfree>
 8004186:	4644      	mov	r4, r8
 8004188:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800418c:	3501      	adds	r5, #1
 800418e:	615e      	str	r6, [r3, #20]
 8004190:	6125      	str	r5, [r4, #16]
 8004192:	4620      	mov	r0, r4
 8004194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004198:	080068dd 	.word	0x080068dd
 800419c:	080068ee 	.word	0x080068ee

080041a0 <__s2b>:
 80041a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80041a4:	460c      	mov	r4, r1
 80041a6:	4615      	mov	r5, r2
 80041a8:	461f      	mov	r7, r3
 80041aa:	2209      	movs	r2, #9
 80041ac:	3308      	adds	r3, #8
 80041ae:	4606      	mov	r6, r0
 80041b0:	fb93 f3f2 	sdiv	r3, r3, r2
 80041b4:	2100      	movs	r1, #0
 80041b6:	2201      	movs	r2, #1
 80041b8:	429a      	cmp	r2, r3
 80041ba:	db09      	blt.n	80041d0 <__s2b+0x30>
 80041bc:	4630      	mov	r0, r6
 80041be:	f7ff ff47 	bl	8004050 <_Balloc>
 80041c2:	b940      	cbnz	r0, 80041d6 <__s2b+0x36>
 80041c4:	4602      	mov	r2, r0
 80041c6:	4b19      	ldr	r3, [pc, #100]	@ (800422c <__s2b+0x8c>)
 80041c8:	4819      	ldr	r0, [pc, #100]	@ (8004230 <__s2b+0x90>)
 80041ca:	21d3      	movs	r1, #211	@ 0xd3
 80041cc:	f001 fcaa 	bl	8005b24 <__assert_func>
 80041d0:	0052      	lsls	r2, r2, #1
 80041d2:	3101      	adds	r1, #1
 80041d4:	e7f0      	b.n	80041b8 <__s2b+0x18>
 80041d6:	9b08      	ldr	r3, [sp, #32]
 80041d8:	6143      	str	r3, [r0, #20]
 80041da:	2d09      	cmp	r5, #9
 80041dc:	f04f 0301 	mov.w	r3, #1
 80041e0:	6103      	str	r3, [r0, #16]
 80041e2:	dd16      	ble.n	8004212 <__s2b+0x72>
 80041e4:	f104 0909 	add.w	r9, r4, #9
 80041e8:	46c8      	mov	r8, r9
 80041ea:	442c      	add	r4, r5
 80041ec:	f818 3b01 	ldrb.w	r3, [r8], #1
 80041f0:	4601      	mov	r1, r0
 80041f2:	3b30      	subs	r3, #48	@ 0x30
 80041f4:	220a      	movs	r2, #10
 80041f6:	4630      	mov	r0, r6
 80041f8:	f7ff ff8c 	bl	8004114 <__multadd>
 80041fc:	45a0      	cmp	r8, r4
 80041fe:	d1f5      	bne.n	80041ec <__s2b+0x4c>
 8004200:	f1a5 0408 	sub.w	r4, r5, #8
 8004204:	444c      	add	r4, r9
 8004206:	1b2d      	subs	r5, r5, r4
 8004208:	1963      	adds	r3, r4, r5
 800420a:	42bb      	cmp	r3, r7
 800420c:	db04      	blt.n	8004218 <__s2b+0x78>
 800420e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004212:	340a      	adds	r4, #10
 8004214:	2509      	movs	r5, #9
 8004216:	e7f6      	b.n	8004206 <__s2b+0x66>
 8004218:	f814 3b01 	ldrb.w	r3, [r4], #1
 800421c:	4601      	mov	r1, r0
 800421e:	3b30      	subs	r3, #48	@ 0x30
 8004220:	220a      	movs	r2, #10
 8004222:	4630      	mov	r0, r6
 8004224:	f7ff ff76 	bl	8004114 <__multadd>
 8004228:	e7ee      	b.n	8004208 <__s2b+0x68>
 800422a:	bf00      	nop
 800422c:	080068dd 	.word	0x080068dd
 8004230:	080068ee 	.word	0x080068ee

08004234 <__hi0bits>:
 8004234:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8004238:	4603      	mov	r3, r0
 800423a:	bf36      	itet	cc
 800423c:	0403      	lslcc	r3, r0, #16
 800423e:	2000      	movcs	r0, #0
 8004240:	2010      	movcc	r0, #16
 8004242:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004246:	bf3c      	itt	cc
 8004248:	021b      	lslcc	r3, r3, #8
 800424a:	3008      	addcc	r0, #8
 800424c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004250:	bf3c      	itt	cc
 8004252:	011b      	lslcc	r3, r3, #4
 8004254:	3004      	addcc	r0, #4
 8004256:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800425a:	bf3c      	itt	cc
 800425c:	009b      	lslcc	r3, r3, #2
 800425e:	3002      	addcc	r0, #2
 8004260:	2b00      	cmp	r3, #0
 8004262:	db05      	blt.n	8004270 <__hi0bits+0x3c>
 8004264:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8004268:	f100 0001 	add.w	r0, r0, #1
 800426c:	bf08      	it	eq
 800426e:	2020      	moveq	r0, #32
 8004270:	4770      	bx	lr

08004272 <__lo0bits>:
 8004272:	6803      	ldr	r3, [r0, #0]
 8004274:	4602      	mov	r2, r0
 8004276:	f013 0007 	ands.w	r0, r3, #7
 800427a:	d00b      	beq.n	8004294 <__lo0bits+0x22>
 800427c:	07d9      	lsls	r1, r3, #31
 800427e:	d421      	bmi.n	80042c4 <__lo0bits+0x52>
 8004280:	0798      	lsls	r0, r3, #30
 8004282:	bf49      	itett	mi
 8004284:	085b      	lsrmi	r3, r3, #1
 8004286:	089b      	lsrpl	r3, r3, #2
 8004288:	2001      	movmi	r0, #1
 800428a:	6013      	strmi	r3, [r2, #0]
 800428c:	bf5c      	itt	pl
 800428e:	6013      	strpl	r3, [r2, #0]
 8004290:	2002      	movpl	r0, #2
 8004292:	4770      	bx	lr
 8004294:	b299      	uxth	r1, r3
 8004296:	b909      	cbnz	r1, 800429c <__lo0bits+0x2a>
 8004298:	0c1b      	lsrs	r3, r3, #16
 800429a:	2010      	movs	r0, #16
 800429c:	b2d9      	uxtb	r1, r3
 800429e:	b909      	cbnz	r1, 80042a4 <__lo0bits+0x32>
 80042a0:	3008      	adds	r0, #8
 80042a2:	0a1b      	lsrs	r3, r3, #8
 80042a4:	0719      	lsls	r1, r3, #28
 80042a6:	bf04      	itt	eq
 80042a8:	091b      	lsreq	r3, r3, #4
 80042aa:	3004      	addeq	r0, #4
 80042ac:	0799      	lsls	r1, r3, #30
 80042ae:	bf04      	itt	eq
 80042b0:	089b      	lsreq	r3, r3, #2
 80042b2:	3002      	addeq	r0, #2
 80042b4:	07d9      	lsls	r1, r3, #31
 80042b6:	d403      	bmi.n	80042c0 <__lo0bits+0x4e>
 80042b8:	085b      	lsrs	r3, r3, #1
 80042ba:	f100 0001 	add.w	r0, r0, #1
 80042be:	d003      	beq.n	80042c8 <__lo0bits+0x56>
 80042c0:	6013      	str	r3, [r2, #0]
 80042c2:	4770      	bx	lr
 80042c4:	2000      	movs	r0, #0
 80042c6:	4770      	bx	lr
 80042c8:	2020      	movs	r0, #32
 80042ca:	4770      	bx	lr

080042cc <__i2b>:
 80042cc:	b510      	push	{r4, lr}
 80042ce:	460c      	mov	r4, r1
 80042d0:	2101      	movs	r1, #1
 80042d2:	f7ff febd 	bl	8004050 <_Balloc>
 80042d6:	4602      	mov	r2, r0
 80042d8:	b928      	cbnz	r0, 80042e6 <__i2b+0x1a>
 80042da:	4b05      	ldr	r3, [pc, #20]	@ (80042f0 <__i2b+0x24>)
 80042dc:	4805      	ldr	r0, [pc, #20]	@ (80042f4 <__i2b+0x28>)
 80042de:	f240 1145 	movw	r1, #325	@ 0x145
 80042e2:	f001 fc1f 	bl	8005b24 <__assert_func>
 80042e6:	2301      	movs	r3, #1
 80042e8:	6144      	str	r4, [r0, #20]
 80042ea:	6103      	str	r3, [r0, #16]
 80042ec:	bd10      	pop	{r4, pc}
 80042ee:	bf00      	nop
 80042f0:	080068dd 	.word	0x080068dd
 80042f4:	080068ee 	.word	0x080068ee

080042f8 <__multiply>:
 80042f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042fc:	4617      	mov	r7, r2
 80042fe:	690a      	ldr	r2, [r1, #16]
 8004300:	693b      	ldr	r3, [r7, #16]
 8004302:	429a      	cmp	r2, r3
 8004304:	bfa8      	it	ge
 8004306:	463b      	movge	r3, r7
 8004308:	4689      	mov	r9, r1
 800430a:	bfa4      	itt	ge
 800430c:	460f      	movge	r7, r1
 800430e:	4699      	movge	r9, r3
 8004310:	693d      	ldr	r5, [r7, #16]
 8004312:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8004316:	68bb      	ldr	r3, [r7, #8]
 8004318:	6879      	ldr	r1, [r7, #4]
 800431a:	eb05 060a 	add.w	r6, r5, sl
 800431e:	42b3      	cmp	r3, r6
 8004320:	b085      	sub	sp, #20
 8004322:	bfb8      	it	lt
 8004324:	3101      	addlt	r1, #1
 8004326:	f7ff fe93 	bl	8004050 <_Balloc>
 800432a:	b930      	cbnz	r0, 800433a <__multiply+0x42>
 800432c:	4602      	mov	r2, r0
 800432e:	4b41      	ldr	r3, [pc, #260]	@ (8004434 <__multiply+0x13c>)
 8004330:	4841      	ldr	r0, [pc, #260]	@ (8004438 <__multiply+0x140>)
 8004332:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8004336:	f001 fbf5 	bl	8005b24 <__assert_func>
 800433a:	f100 0414 	add.w	r4, r0, #20
 800433e:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8004342:	4623      	mov	r3, r4
 8004344:	2200      	movs	r2, #0
 8004346:	4573      	cmp	r3, lr
 8004348:	d320      	bcc.n	800438c <__multiply+0x94>
 800434a:	f107 0814 	add.w	r8, r7, #20
 800434e:	f109 0114 	add.w	r1, r9, #20
 8004352:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8004356:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800435a:	9302      	str	r3, [sp, #8]
 800435c:	1beb      	subs	r3, r5, r7
 800435e:	3b15      	subs	r3, #21
 8004360:	f023 0303 	bic.w	r3, r3, #3
 8004364:	3304      	adds	r3, #4
 8004366:	3715      	adds	r7, #21
 8004368:	42bd      	cmp	r5, r7
 800436a:	bf38      	it	cc
 800436c:	2304      	movcc	r3, #4
 800436e:	9301      	str	r3, [sp, #4]
 8004370:	9b02      	ldr	r3, [sp, #8]
 8004372:	9103      	str	r1, [sp, #12]
 8004374:	428b      	cmp	r3, r1
 8004376:	d80c      	bhi.n	8004392 <__multiply+0x9a>
 8004378:	2e00      	cmp	r6, #0
 800437a:	dd03      	ble.n	8004384 <__multiply+0x8c>
 800437c:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8004380:	2b00      	cmp	r3, #0
 8004382:	d055      	beq.n	8004430 <__multiply+0x138>
 8004384:	6106      	str	r6, [r0, #16]
 8004386:	b005      	add	sp, #20
 8004388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800438c:	f843 2b04 	str.w	r2, [r3], #4
 8004390:	e7d9      	b.n	8004346 <__multiply+0x4e>
 8004392:	f8b1 a000 	ldrh.w	sl, [r1]
 8004396:	f1ba 0f00 	cmp.w	sl, #0
 800439a:	d01f      	beq.n	80043dc <__multiply+0xe4>
 800439c:	46c4      	mov	ip, r8
 800439e:	46a1      	mov	r9, r4
 80043a0:	2700      	movs	r7, #0
 80043a2:	f85c 2b04 	ldr.w	r2, [ip], #4
 80043a6:	f8d9 3000 	ldr.w	r3, [r9]
 80043aa:	fa1f fb82 	uxth.w	fp, r2
 80043ae:	b29b      	uxth	r3, r3
 80043b0:	fb0a 330b 	mla	r3, sl, fp, r3
 80043b4:	443b      	add	r3, r7
 80043b6:	f8d9 7000 	ldr.w	r7, [r9]
 80043ba:	0c12      	lsrs	r2, r2, #16
 80043bc:	0c3f      	lsrs	r7, r7, #16
 80043be:	fb0a 7202 	mla	r2, sl, r2, r7
 80043c2:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 80043c6:	b29b      	uxth	r3, r3
 80043c8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80043cc:	4565      	cmp	r5, ip
 80043ce:	f849 3b04 	str.w	r3, [r9], #4
 80043d2:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80043d6:	d8e4      	bhi.n	80043a2 <__multiply+0xaa>
 80043d8:	9b01      	ldr	r3, [sp, #4]
 80043da:	50e7      	str	r7, [r4, r3]
 80043dc:	9b03      	ldr	r3, [sp, #12]
 80043de:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80043e2:	3104      	adds	r1, #4
 80043e4:	f1b9 0f00 	cmp.w	r9, #0
 80043e8:	d020      	beq.n	800442c <__multiply+0x134>
 80043ea:	6823      	ldr	r3, [r4, #0]
 80043ec:	4647      	mov	r7, r8
 80043ee:	46a4      	mov	ip, r4
 80043f0:	f04f 0a00 	mov.w	sl, #0
 80043f4:	f8b7 b000 	ldrh.w	fp, [r7]
 80043f8:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80043fc:	fb09 220b 	mla	r2, r9, fp, r2
 8004400:	4452      	add	r2, sl
 8004402:	b29b      	uxth	r3, r3
 8004404:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004408:	f84c 3b04 	str.w	r3, [ip], #4
 800440c:	f857 3b04 	ldr.w	r3, [r7], #4
 8004410:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004414:	f8bc 3000 	ldrh.w	r3, [ip]
 8004418:	fb09 330a 	mla	r3, r9, sl, r3
 800441c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8004420:	42bd      	cmp	r5, r7
 8004422:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004426:	d8e5      	bhi.n	80043f4 <__multiply+0xfc>
 8004428:	9a01      	ldr	r2, [sp, #4]
 800442a:	50a3      	str	r3, [r4, r2]
 800442c:	3404      	adds	r4, #4
 800442e:	e79f      	b.n	8004370 <__multiply+0x78>
 8004430:	3e01      	subs	r6, #1
 8004432:	e7a1      	b.n	8004378 <__multiply+0x80>
 8004434:	080068dd 	.word	0x080068dd
 8004438:	080068ee 	.word	0x080068ee

0800443c <__pow5mult>:
 800443c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004440:	4615      	mov	r5, r2
 8004442:	f012 0203 	ands.w	r2, r2, #3
 8004446:	4607      	mov	r7, r0
 8004448:	460e      	mov	r6, r1
 800444a:	d007      	beq.n	800445c <__pow5mult+0x20>
 800444c:	4c25      	ldr	r4, [pc, #148]	@ (80044e4 <__pow5mult+0xa8>)
 800444e:	3a01      	subs	r2, #1
 8004450:	2300      	movs	r3, #0
 8004452:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004456:	f7ff fe5d 	bl	8004114 <__multadd>
 800445a:	4606      	mov	r6, r0
 800445c:	10ad      	asrs	r5, r5, #2
 800445e:	d03d      	beq.n	80044dc <__pow5mult+0xa0>
 8004460:	69fc      	ldr	r4, [r7, #28]
 8004462:	b97c      	cbnz	r4, 8004484 <__pow5mult+0x48>
 8004464:	2010      	movs	r0, #16
 8004466:	f7ff fd3d 	bl	8003ee4 <malloc>
 800446a:	4602      	mov	r2, r0
 800446c:	61f8      	str	r0, [r7, #28]
 800446e:	b928      	cbnz	r0, 800447c <__pow5mult+0x40>
 8004470:	4b1d      	ldr	r3, [pc, #116]	@ (80044e8 <__pow5mult+0xac>)
 8004472:	481e      	ldr	r0, [pc, #120]	@ (80044ec <__pow5mult+0xb0>)
 8004474:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8004478:	f001 fb54 	bl	8005b24 <__assert_func>
 800447c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004480:	6004      	str	r4, [r0, #0]
 8004482:	60c4      	str	r4, [r0, #12]
 8004484:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8004488:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800448c:	b94c      	cbnz	r4, 80044a2 <__pow5mult+0x66>
 800448e:	f240 2171 	movw	r1, #625	@ 0x271
 8004492:	4638      	mov	r0, r7
 8004494:	f7ff ff1a 	bl	80042cc <__i2b>
 8004498:	2300      	movs	r3, #0
 800449a:	f8c8 0008 	str.w	r0, [r8, #8]
 800449e:	4604      	mov	r4, r0
 80044a0:	6003      	str	r3, [r0, #0]
 80044a2:	f04f 0900 	mov.w	r9, #0
 80044a6:	07eb      	lsls	r3, r5, #31
 80044a8:	d50a      	bpl.n	80044c0 <__pow5mult+0x84>
 80044aa:	4631      	mov	r1, r6
 80044ac:	4622      	mov	r2, r4
 80044ae:	4638      	mov	r0, r7
 80044b0:	f7ff ff22 	bl	80042f8 <__multiply>
 80044b4:	4631      	mov	r1, r6
 80044b6:	4680      	mov	r8, r0
 80044b8:	4638      	mov	r0, r7
 80044ba:	f7ff fe09 	bl	80040d0 <_Bfree>
 80044be:	4646      	mov	r6, r8
 80044c0:	106d      	asrs	r5, r5, #1
 80044c2:	d00b      	beq.n	80044dc <__pow5mult+0xa0>
 80044c4:	6820      	ldr	r0, [r4, #0]
 80044c6:	b938      	cbnz	r0, 80044d8 <__pow5mult+0x9c>
 80044c8:	4622      	mov	r2, r4
 80044ca:	4621      	mov	r1, r4
 80044cc:	4638      	mov	r0, r7
 80044ce:	f7ff ff13 	bl	80042f8 <__multiply>
 80044d2:	6020      	str	r0, [r4, #0]
 80044d4:	f8c0 9000 	str.w	r9, [r0]
 80044d8:	4604      	mov	r4, r0
 80044da:	e7e4      	b.n	80044a6 <__pow5mult+0x6a>
 80044dc:	4630      	mov	r0, r6
 80044de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80044e2:	bf00      	nop
 80044e4:	08006a00 	.word	0x08006a00
 80044e8:	0800686e 	.word	0x0800686e
 80044ec:	080068ee 	.word	0x080068ee

080044f0 <__lshift>:
 80044f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044f4:	460c      	mov	r4, r1
 80044f6:	6849      	ldr	r1, [r1, #4]
 80044f8:	6923      	ldr	r3, [r4, #16]
 80044fa:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80044fe:	68a3      	ldr	r3, [r4, #8]
 8004500:	4607      	mov	r7, r0
 8004502:	4691      	mov	r9, r2
 8004504:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004508:	f108 0601 	add.w	r6, r8, #1
 800450c:	42b3      	cmp	r3, r6
 800450e:	db0b      	blt.n	8004528 <__lshift+0x38>
 8004510:	4638      	mov	r0, r7
 8004512:	f7ff fd9d 	bl	8004050 <_Balloc>
 8004516:	4605      	mov	r5, r0
 8004518:	b948      	cbnz	r0, 800452e <__lshift+0x3e>
 800451a:	4602      	mov	r2, r0
 800451c:	4b28      	ldr	r3, [pc, #160]	@ (80045c0 <__lshift+0xd0>)
 800451e:	4829      	ldr	r0, [pc, #164]	@ (80045c4 <__lshift+0xd4>)
 8004520:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8004524:	f001 fafe 	bl	8005b24 <__assert_func>
 8004528:	3101      	adds	r1, #1
 800452a:	005b      	lsls	r3, r3, #1
 800452c:	e7ee      	b.n	800450c <__lshift+0x1c>
 800452e:	2300      	movs	r3, #0
 8004530:	f100 0114 	add.w	r1, r0, #20
 8004534:	f100 0210 	add.w	r2, r0, #16
 8004538:	4618      	mov	r0, r3
 800453a:	4553      	cmp	r3, sl
 800453c:	db33      	blt.n	80045a6 <__lshift+0xb6>
 800453e:	6920      	ldr	r0, [r4, #16]
 8004540:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004544:	f104 0314 	add.w	r3, r4, #20
 8004548:	f019 091f 	ands.w	r9, r9, #31
 800454c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004550:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004554:	d02b      	beq.n	80045ae <__lshift+0xbe>
 8004556:	f1c9 0e20 	rsb	lr, r9, #32
 800455a:	468a      	mov	sl, r1
 800455c:	2200      	movs	r2, #0
 800455e:	6818      	ldr	r0, [r3, #0]
 8004560:	fa00 f009 	lsl.w	r0, r0, r9
 8004564:	4310      	orrs	r0, r2
 8004566:	f84a 0b04 	str.w	r0, [sl], #4
 800456a:	f853 2b04 	ldr.w	r2, [r3], #4
 800456e:	459c      	cmp	ip, r3
 8004570:	fa22 f20e 	lsr.w	r2, r2, lr
 8004574:	d8f3      	bhi.n	800455e <__lshift+0x6e>
 8004576:	ebac 0304 	sub.w	r3, ip, r4
 800457a:	3b15      	subs	r3, #21
 800457c:	f023 0303 	bic.w	r3, r3, #3
 8004580:	3304      	adds	r3, #4
 8004582:	f104 0015 	add.w	r0, r4, #21
 8004586:	4560      	cmp	r0, ip
 8004588:	bf88      	it	hi
 800458a:	2304      	movhi	r3, #4
 800458c:	50ca      	str	r2, [r1, r3]
 800458e:	b10a      	cbz	r2, 8004594 <__lshift+0xa4>
 8004590:	f108 0602 	add.w	r6, r8, #2
 8004594:	3e01      	subs	r6, #1
 8004596:	4638      	mov	r0, r7
 8004598:	612e      	str	r6, [r5, #16]
 800459a:	4621      	mov	r1, r4
 800459c:	f7ff fd98 	bl	80040d0 <_Bfree>
 80045a0:	4628      	mov	r0, r5
 80045a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80045a6:	f842 0f04 	str.w	r0, [r2, #4]!
 80045aa:	3301      	adds	r3, #1
 80045ac:	e7c5      	b.n	800453a <__lshift+0x4a>
 80045ae:	3904      	subs	r1, #4
 80045b0:	f853 2b04 	ldr.w	r2, [r3], #4
 80045b4:	f841 2f04 	str.w	r2, [r1, #4]!
 80045b8:	459c      	cmp	ip, r3
 80045ba:	d8f9      	bhi.n	80045b0 <__lshift+0xc0>
 80045bc:	e7ea      	b.n	8004594 <__lshift+0xa4>
 80045be:	bf00      	nop
 80045c0:	080068dd 	.word	0x080068dd
 80045c4:	080068ee 	.word	0x080068ee

080045c8 <__mcmp>:
 80045c8:	690a      	ldr	r2, [r1, #16]
 80045ca:	4603      	mov	r3, r0
 80045cc:	6900      	ldr	r0, [r0, #16]
 80045ce:	1a80      	subs	r0, r0, r2
 80045d0:	b530      	push	{r4, r5, lr}
 80045d2:	d10e      	bne.n	80045f2 <__mcmp+0x2a>
 80045d4:	3314      	adds	r3, #20
 80045d6:	3114      	adds	r1, #20
 80045d8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80045dc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80045e0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80045e4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80045e8:	4295      	cmp	r5, r2
 80045ea:	d003      	beq.n	80045f4 <__mcmp+0x2c>
 80045ec:	d205      	bcs.n	80045fa <__mcmp+0x32>
 80045ee:	f04f 30ff 	mov.w	r0, #4294967295
 80045f2:	bd30      	pop	{r4, r5, pc}
 80045f4:	42a3      	cmp	r3, r4
 80045f6:	d3f3      	bcc.n	80045e0 <__mcmp+0x18>
 80045f8:	e7fb      	b.n	80045f2 <__mcmp+0x2a>
 80045fa:	2001      	movs	r0, #1
 80045fc:	e7f9      	b.n	80045f2 <__mcmp+0x2a>
	...

08004600 <__mdiff>:
 8004600:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004604:	4689      	mov	r9, r1
 8004606:	4606      	mov	r6, r0
 8004608:	4611      	mov	r1, r2
 800460a:	4648      	mov	r0, r9
 800460c:	4614      	mov	r4, r2
 800460e:	f7ff ffdb 	bl	80045c8 <__mcmp>
 8004612:	1e05      	subs	r5, r0, #0
 8004614:	d112      	bne.n	800463c <__mdiff+0x3c>
 8004616:	4629      	mov	r1, r5
 8004618:	4630      	mov	r0, r6
 800461a:	f7ff fd19 	bl	8004050 <_Balloc>
 800461e:	4602      	mov	r2, r0
 8004620:	b928      	cbnz	r0, 800462e <__mdiff+0x2e>
 8004622:	4b3e      	ldr	r3, [pc, #248]	@ (800471c <__mdiff+0x11c>)
 8004624:	f240 2137 	movw	r1, #567	@ 0x237
 8004628:	483d      	ldr	r0, [pc, #244]	@ (8004720 <__mdiff+0x120>)
 800462a:	f001 fa7b 	bl	8005b24 <__assert_func>
 800462e:	2301      	movs	r3, #1
 8004630:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004634:	4610      	mov	r0, r2
 8004636:	b003      	add	sp, #12
 8004638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800463c:	bfbc      	itt	lt
 800463e:	464b      	movlt	r3, r9
 8004640:	46a1      	movlt	r9, r4
 8004642:	4630      	mov	r0, r6
 8004644:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004648:	bfba      	itte	lt
 800464a:	461c      	movlt	r4, r3
 800464c:	2501      	movlt	r5, #1
 800464e:	2500      	movge	r5, #0
 8004650:	f7ff fcfe 	bl	8004050 <_Balloc>
 8004654:	4602      	mov	r2, r0
 8004656:	b918      	cbnz	r0, 8004660 <__mdiff+0x60>
 8004658:	4b30      	ldr	r3, [pc, #192]	@ (800471c <__mdiff+0x11c>)
 800465a:	f240 2145 	movw	r1, #581	@ 0x245
 800465e:	e7e3      	b.n	8004628 <__mdiff+0x28>
 8004660:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004664:	6926      	ldr	r6, [r4, #16]
 8004666:	60c5      	str	r5, [r0, #12]
 8004668:	f109 0310 	add.w	r3, r9, #16
 800466c:	f109 0514 	add.w	r5, r9, #20
 8004670:	f104 0e14 	add.w	lr, r4, #20
 8004674:	f100 0b14 	add.w	fp, r0, #20
 8004678:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800467c:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8004680:	9301      	str	r3, [sp, #4]
 8004682:	46d9      	mov	r9, fp
 8004684:	f04f 0c00 	mov.w	ip, #0
 8004688:	9b01      	ldr	r3, [sp, #4]
 800468a:	f85e 0b04 	ldr.w	r0, [lr], #4
 800468e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8004692:	9301      	str	r3, [sp, #4]
 8004694:	b281      	uxth	r1, r0
 8004696:	fa1f f38a 	uxth.w	r3, sl
 800469a:	1a5b      	subs	r3, r3, r1
 800469c:	0c00      	lsrs	r0, r0, #16
 800469e:	4463      	add	r3, ip
 80046a0:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80046a4:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80046a8:	b29b      	uxth	r3, r3
 80046aa:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80046ae:	4576      	cmp	r6, lr
 80046b0:	f849 3b04 	str.w	r3, [r9], #4
 80046b4:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80046b8:	d8e6      	bhi.n	8004688 <__mdiff+0x88>
 80046ba:	1b33      	subs	r3, r6, r4
 80046bc:	3b15      	subs	r3, #21
 80046be:	f023 0303 	bic.w	r3, r3, #3
 80046c2:	3415      	adds	r4, #21
 80046c4:	3304      	adds	r3, #4
 80046c6:	42a6      	cmp	r6, r4
 80046c8:	bf38      	it	cc
 80046ca:	2304      	movcc	r3, #4
 80046cc:	441d      	add	r5, r3
 80046ce:	445b      	add	r3, fp
 80046d0:	461e      	mov	r6, r3
 80046d2:	462c      	mov	r4, r5
 80046d4:	4544      	cmp	r4, r8
 80046d6:	d30e      	bcc.n	80046f6 <__mdiff+0xf6>
 80046d8:	f108 0103 	add.w	r1, r8, #3
 80046dc:	1b49      	subs	r1, r1, r5
 80046de:	f021 0103 	bic.w	r1, r1, #3
 80046e2:	3d03      	subs	r5, #3
 80046e4:	45a8      	cmp	r8, r5
 80046e6:	bf38      	it	cc
 80046e8:	2100      	movcc	r1, #0
 80046ea:	440b      	add	r3, r1
 80046ec:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80046f0:	b191      	cbz	r1, 8004718 <__mdiff+0x118>
 80046f2:	6117      	str	r7, [r2, #16]
 80046f4:	e79e      	b.n	8004634 <__mdiff+0x34>
 80046f6:	f854 1b04 	ldr.w	r1, [r4], #4
 80046fa:	46e6      	mov	lr, ip
 80046fc:	0c08      	lsrs	r0, r1, #16
 80046fe:	fa1c fc81 	uxtah	ip, ip, r1
 8004702:	4471      	add	r1, lr
 8004704:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8004708:	b289      	uxth	r1, r1
 800470a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800470e:	f846 1b04 	str.w	r1, [r6], #4
 8004712:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004716:	e7dd      	b.n	80046d4 <__mdiff+0xd4>
 8004718:	3f01      	subs	r7, #1
 800471a:	e7e7      	b.n	80046ec <__mdiff+0xec>
 800471c:	080068dd 	.word	0x080068dd
 8004720:	080068ee 	.word	0x080068ee

08004724 <__ulp>:
 8004724:	4b0e      	ldr	r3, [pc, #56]	@ (8004760 <__ulp+0x3c>)
 8004726:	400b      	ands	r3, r1
 8004728:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800472c:	2b00      	cmp	r3, #0
 800472e:	dc08      	bgt.n	8004742 <__ulp+0x1e>
 8004730:	425b      	negs	r3, r3
 8004732:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8004736:	ea4f 5223 	mov.w	r2, r3, asr #20
 800473a:	da04      	bge.n	8004746 <__ulp+0x22>
 800473c:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8004740:	4113      	asrs	r3, r2
 8004742:	2200      	movs	r2, #0
 8004744:	e008      	b.n	8004758 <__ulp+0x34>
 8004746:	f1a2 0314 	sub.w	r3, r2, #20
 800474a:	2b1e      	cmp	r3, #30
 800474c:	bfda      	itte	le
 800474e:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8004752:	40da      	lsrle	r2, r3
 8004754:	2201      	movgt	r2, #1
 8004756:	2300      	movs	r3, #0
 8004758:	4619      	mov	r1, r3
 800475a:	4610      	mov	r0, r2
 800475c:	4770      	bx	lr
 800475e:	bf00      	nop
 8004760:	7ff00000 	.word	0x7ff00000

08004764 <__b2d>:
 8004764:	6902      	ldr	r2, [r0, #16]
 8004766:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004768:	f100 0614 	add.w	r6, r0, #20
 800476c:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8004770:	4f20      	ldr	r7, [pc, #128]	@ (80047f4 <__b2d+0x90>)
 8004772:	f852 4c04 	ldr.w	r4, [r2, #-4]
 8004776:	4620      	mov	r0, r4
 8004778:	f7ff fd5c 	bl	8004234 <__hi0bits>
 800477c:	4603      	mov	r3, r0
 800477e:	2b0a      	cmp	r3, #10
 8004780:	f1c0 0020 	rsb	r0, r0, #32
 8004784:	f1a2 0504 	sub.w	r5, r2, #4
 8004788:	6008      	str	r0, [r1, #0]
 800478a:	dc13      	bgt.n	80047b4 <__b2d+0x50>
 800478c:	42ae      	cmp	r6, r5
 800478e:	bf38      	it	cc
 8004790:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8004794:	f1c3 0c0b 	rsb	ip, r3, #11
 8004798:	bf28      	it	cs
 800479a:	2200      	movcs	r2, #0
 800479c:	3315      	adds	r3, #21
 800479e:	fa24 fe0c 	lsr.w	lr, r4, ip
 80047a2:	fa04 f303 	lsl.w	r3, r4, r3
 80047a6:	fa22 f20c 	lsr.w	r2, r2, ip
 80047aa:	ea4e 0107 	orr.w	r1, lr, r7
 80047ae:	431a      	orrs	r2, r3
 80047b0:	4610      	mov	r0, r2
 80047b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80047b4:	42ae      	cmp	r6, r5
 80047b6:	bf36      	itet	cc
 80047b8:	f1a2 0508 	subcc.w	r5, r2, #8
 80047bc:	2200      	movcs	r2, #0
 80047be:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 80047c2:	3b0b      	subs	r3, #11
 80047c4:	d012      	beq.n	80047ec <__b2d+0x88>
 80047c6:	f1c3 0720 	rsb	r7, r3, #32
 80047ca:	fa22 f107 	lsr.w	r1, r2, r7
 80047ce:	409c      	lsls	r4, r3
 80047d0:	430c      	orrs	r4, r1
 80047d2:	42b5      	cmp	r5, r6
 80047d4:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 80047d8:	bf8c      	ite	hi
 80047da:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 80047de:	2400      	movls	r4, #0
 80047e0:	409a      	lsls	r2, r3
 80047e2:	40fc      	lsrs	r4, r7
 80047e4:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 80047e8:	4322      	orrs	r2, r4
 80047ea:	e7e1      	b.n	80047b0 <__b2d+0x4c>
 80047ec:	ea44 0107 	orr.w	r1, r4, r7
 80047f0:	e7de      	b.n	80047b0 <__b2d+0x4c>
 80047f2:	bf00      	nop
 80047f4:	3ff00000 	.word	0x3ff00000

080047f8 <__d2b>:
 80047f8:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 80047fc:	2101      	movs	r1, #1
 80047fe:	9e08      	ldr	r6, [sp, #32]
 8004800:	4690      	mov	r8, r2
 8004802:	4699      	mov	r9, r3
 8004804:	f7ff fc24 	bl	8004050 <_Balloc>
 8004808:	4604      	mov	r4, r0
 800480a:	b930      	cbnz	r0, 800481a <__d2b+0x22>
 800480c:	4602      	mov	r2, r0
 800480e:	4b24      	ldr	r3, [pc, #144]	@ (80048a0 <__d2b+0xa8>)
 8004810:	4824      	ldr	r0, [pc, #144]	@ (80048a4 <__d2b+0xac>)
 8004812:	f240 310f 	movw	r1, #783	@ 0x30f
 8004816:	f001 f985 	bl	8005b24 <__assert_func>
 800481a:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800481e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004822:	b10d      	cbz	r5, 8004828 <__d2b+0x30>
 8004824:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004828:	9301      	str	r3, [sp, #4]
 800482a:	f1b8 0300 	subs.w	r3, r8, #0
 800482e:	d024      	beq.n	800487a <__d2b+0x82>
 8004830:	4668      	mov	r0, sp
 8004832:	9300      	str	r3, [sp, #0]
 8004834:	f7ff fd1d 	bl	8004272 <__lo0bits>
 8004838:	e9dd 1200 	ldrd	r1, r2, [sp]
 800483c:	b1d8      	cbz	r0, 8004876 <__d2b+0x7e>
 800483e:	f1c0 0320 	rsb	r3, r0, #32
 8004842:	fa02 f303 	lsl.w	r3, r2, r3
 8004846:	430b      	orrs	r3, r1
 8004848:	40c2      	lsrs	r2, r0
 800484a:	6163      	str	r3, [r4, #20]
 800484c:	9201      	str	r2, [sp, #4]
 800484e:	9b01      	ldr	r3, [sp, #4]
 8004850:	61a3      	str	r3, [r4, #24]
 8004852:	2b00      	cmp	r3, #0
 8004854:	bf0c      	ite	eq
 8004856:	2201      	moveq	r2, #1
 8004858:	2202      	movne	r2, #2
 800485a:	6122      	str	r2, [r4, #16]
 800485c:	b1ad      	cbz	r5, 800488a <__d2b+0x92>
 800485e:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8004862:	4405      	add	r5, r0
 8004864:	6035      	str	r5, [r6, #0]
 8004866:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800486a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800486c:	6018      	str	r0, [r3, #0]
 800486e:	4620      	mov	r0, r4
 8004870:	b002      	add	sp, #8
 8004872:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8004876:	6161      	str	r1, [r4, #20]
 8004878:	e7e9      	b.n	800484e <__d2b+0x56>
 800487a:	a801      	add	r0, sp, #4
 800487c:	f7ff fcf9 	bl	8004272 <__lo0bits>
 8004880:	9b01      	ldr	r3, [sp, #4]
 8004882:	6163      	str	r3, [r4, #20]
 8004884:	3020      	adds	r0, #32
 8004886:	2201      	movs	r2, #1
 8004888:	e7e7      	b.n	800485a <__d2b+0x62>
 800488a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800488e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8004892:	6030      	str	r0, [r6, #0]
 8004894:	6918      	ldr	r0, [r3, #16]
 8004896:	f7ff fccd 	bl	8004234 <__hi0bits>
 800489a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800489e:	e7e4      	b.n	800486a <__d2b+0x72>
 80048a0:	080068dd 	.word	0x080068dd
 80048a4:	080068ee 	.word	0x080068ee

080048a8 <__ratio>:
 80048a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048ac:	b085      	sub	sp, #20
 80048ae:	e9cd 1000 	strd	r1, r0, [sp]
 80048b2:	a902      	add	r1, sp, #8
 80048b4:	f7ff ff56 	bl	8004764 <__b2d>
 80048b8:	468b      	mov	fp, r1
 80048ba:	4606      	mov	r6, r0
 80048bc:	460f      	mov	r7, r1
 80048be:	9800      	ldr	r0, [sp, #0]
 80048c0:	a903      	add	r1, sp, #12
 80048c2:	f7ff ff4f 	bl	8004764 <__b2d>
 80048c6:	9b01      	ldr	r3, [sp, #4]
 80048c8:	4689      	mov	r9, r1
 80048ca:	460d      	mov	r5, r1
 80048cc:	6919      	ldr	r1, [r3, #16]
 80048ce:	9b00      	ldr	r3, [sp, #0]
 80048d0:	691b      	ldr	r3, [r3, #16]
 80048d2:	1ac9      	subs	r1, r1, r3
 80048d4:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 80048d8:	1a9b      	subs	r3, r3, r2
 80048da:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 80048de:	2b00      	cmp	r3, #0
 80048e0:	bfcd      	iteet	gt
 80048e2:	463a      	movgt	r2, r7
 80048e4:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80048e8:	462a      	movle	r2, r5
 80048ea:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 80048ee:	bfd8      	it	le
 80048f0:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 80048f4:	4604      	mov	r4, r0
 80048f6:	4622      	mov	r2, r4
 80048f8:	464b      	mov	r3, r9
 80048fa:	4630      	mov	r0, r6
 80048fc:	4659      	mov	r1, fp
 80048fe:	f7fb ffa5 	bl	800084c <__aeabi_ddiv>
 8004902:	b005      	add	sp, #20
 8004904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004908 <__copybits>:
 8004908:	3901      	subs	r1, #1
 800490a:	b570      	push	{r4, r5, r6, lr}
 800490c:	1149      	asrs	r1, r1, #5
 800490e:	6914      	ldr	r4, [r2, #16]
 8004910:	3101      	adds	r1, #1
 8004912:	f102 0314 	add.w	r3, r2, #20
 8004916:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800491a:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800491e:	1f05      	subs	r5, r0, #4
 8004920:	42a3      	cmp	r3, r4
 8004922:	d30c      	bcc.n	800493e <__copybits+0x36>
 8004924:	1aa3      	subs	r3, r4, r2
 8004926:	3b11      	subs	r3, #17
 8004928:	f023 0303 	bic.w	r3, r3, #3
 800492c:	3211      	adds	r2, #17
 800492e:	42a2      	cmp	r2, r4
 8004930:	bf88      	it	hi
 8004932:	2300      	movhi	r3, #0
 8004934:	4418      	add	r0, r3
 8004936:	2300      	movs	r3, #0
 8004938:	4288      	cmp	r0, r1
 800493a:	d305      	bcc.n	8004948 <__copybits+0x40>
 800493c:	bd70      	pop	{r4, r5, r6, pc}
 800493e:	f853 6b04 	ldr.w	r6, [r3], #4
 8004942:	f845 6f04 	str.w	r6, [r5, #4]!
 8004946:	e7eb      	b.n	8004920 <__copybits+0x18>
 8004948:	f840 3b04 	str.w	r3, [r0], #4
 800494c:	e7f4      	b.n	8004938 <__copybits+0x30>

0800494e <__any_on>:
 800494e:	f100 0214 	add.w	r2, r0, #20
 8004952:	6900      	ldr	r0, [r0, #16]
 8004954:	114b      	asrs	r3, r1, #5
 8004956:	4298      	cmp	r0, r3
 8004958:	b510      	push	{r4, lr}
 800495a:	db11      	blt.n	8004980 <__any_on+0x32>
 800495c:	dd0a      	ble.n	8004974 <__any_on+0x26>
 800495e:	f011 011f 	ands.w	r1, r1, #31
 8004962:	d007      	beq.n	8004974 <__any_on+0x26>
 8004964:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004968:	fa24 f001 	lsr.w	r0, r4, r1
 800496c:	fa00 f101 	lsl.w	r1, r0, r1
 8004970:	428c      	cmp	r4, r1
 8004972:	d10b      	bne.n	800498c <__any_on+0x3e>
 8004974:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004978:	4293      	cmp	r3, r2
 800497a:	d803      	bhi.n	8004984 <__any_on+0x36>
 800497c:	2000      	movs	r0, #0
 800497e:	bd10      	pop	{r4, pc}
 8004980:	4603      	mov	r3, r0
 8004982:	e7f7      	b.n	8004974 <__any_on+0x26>
 8004984:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004988:	2900      	cmp	r1, #0
 800498a:	d0f5      	beq.n	8004978 <__any_on+0x2a>
 800498c:	2001      	movs	r0, #1
 800498e:	e7f6      	b.n	800497e <__any_on+0x30>

08004990 <sulp>:
 8004990:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004994:	460f      	mov	r7, r1
 8004996:	4690      	mov	r8, r2
 8004998:	f7ff fec4 	bl	8004724 <__ulp>
 800499c:	4604      	mov	r4, r0
 800499e:	460d      	mov	r5, r1
 80049a0:	f1b8 0f00 	cmp.w	r8, #0
 80049a4:	d011      	beq.n	80049ca <sulp+0x3a>
 80049a6:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80049aa:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	dd0b      	ble.n	80049ca <sulp+0x3a>
 80049b2:	051b      	lsls	r3, r3, #20
 80049b4:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 80049b8:	2400      	movs	r4, #0
 80049ba:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 80049be:	4622      	mov	r2, r4
 80049c0:	462b      	mov	r3, r5
 80049c2:	f7fb fe19 	bl	80005f8 <__aeabi_dmul>
 80049c6:	4604      	mov	r4, r0
 80049c8:	460d      	mov	r5, r1
 80049ca:	4620      	mov	r0, r4
 80049cc:	4629      	mov	r1, r5
 80049ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80049d2:	0000      	movs	r0, r0
 80049d4:	0000      	movs	r0, r0
	...

080049d8 <_strtod_l>:
 80049d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049dc:	b09f      	sub	sp, #124	@ 0x7c
 80049de:	460c      	mov	r4, r1
 80049e0:	9217      	str	r2, [sp, #92]	@ 0x5c
 80049e2:	2200      	movs	r2, #0
 80049e4:	921a      	str	r2, [sp, #104]	@ 0x68
 80049e6:	9005      	str	r0, [sp, #20]
 80049e8:	f04f 0a00 	mov.w	sl, #0
 80049ec:	f04f 0b00 	mov.w	fp, #0
 80049f0:	460a      	mov	r2, r1
 80049f2:	9219      	str	r2, [sp, #100]	@ 0x64
 80049f4:	7811      	ldrb	r1, [r2, #0]
 80049f6:	292b      	cmp	r1, #43	@ 0x2b
 80049f8:	d048      	beq.n	8004a8c <_strtod_l+0xb4>
 80049fa:	d836      	bhi.n	8004a6a <_strtod_l+0x92>
 80049fc:	290d      	cmp	r1, #13
 80049fe:	d830      	bhi.n	8004a62 <_strtod_l+0x8a>
 8004a00:	2908      	cmp	r1, #8
 8004a02:	d830      	bhi.n	8004a66 <_strtod_l+0x8e>
 8004a04:	2900      	cmp	r1, #0
 8004a06:	d039      	beq.n	8004a7c <_strtod_l+0xa4>
 8004a08:	2200      	movs	r2, #0
 8004a0a:	920e      	str	r2, [sp, #56]	@ 0x38
 8004a0c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8004a0e:	782a      	ldrb	r2, [r5, #0]
 8004a10:	2a30      	cmp	r2, #48	@ 0x30
 8004a12:	f040 80b0 	bne.w	8004b76 <_strtod_l+0x19e>
 8004a16:	786a      	ldrb	r2, [r5, #1]
 8004a18:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004a1c:	2a58      	cmp	r2, #88	@ 0x58
 8004a1e:	d16c      	bne.n	8004afa <_strtod_l+0x122>
 8004a20:	9302      	str	r3, [sp, #8]
 8004a22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004a24:	9301      	str	r3, [sp, #4]
 8004a26:	ab1a      	add	r3, sp, #104	@ 0x68
 8004a28:	9300      	str	r3, [sp, #0]
 8004a2a:	4a8e      	ldr	r2, [pc, #568]	@ (8004c64 <_strtod_l+0x28c>)
 8004a2c:	9805      	ldr	r0, [sp, #20]
 8004a2e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004a30:	a919      	add	r1, sp, #100	@ 0x64
 8004a32:	f001 f911 	bl	8005c58 <__gethex>
 8004a36:	f010 060f 	ands.w	r6, r0, #15
 8004a3a:	4604      	mov	r4, r0
 8004a3c:	d005      	beq.n	8004a4a <_strtod_l+0x72>
 8004a3e:	2e06      	cmp	r6, #6
 8004a40:	d126      	bne.n	8004a90 <_strtod_l+0xb8>
 8004a42:	3501      	adds	r5, #1
 8004a44:	2300      	movs	r3, #0
 8004a46:	9519      	str	r5, [sp, #100]	@ 0x64
 8004a48:	930e      	str	r3, [sp, #56]	@ 0x38
 8004a4a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004a4c:	2b00      	cmp	r3, #0
 8004a4e:	f040 857e 	bne.w	800554e <_strtod_l+0xb76>
 8004a52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004a54:	b1bb      	cbz	r3, 8004a86 <_strtod_l+0xae>
 8004a56:	4650      	mov	r0, sl
 8004a58:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8004a5c:	b01f      	add	sp, #124	@ 0x7c
 8004a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a62:	2920      	cmp	r1, #32
 8004a64:	d1d0      	bne.n	8004a08 <_strtod_l+0x30>
 8004a66:	3201      	adds	r2, #1
 8004a68:	e7c3      	b.n	80049f2 <_strtod_l+0x1a>
 8004a6a:	292d      	cmp	r1, #45	@ 0x2d
 8004a6c:	d1cc      	bne.n	8004a08 <_strtod_l+0x30>
 8004a6e:	2101      	movs	r1, #1
 8004a70:	910e      	str	r1, [sp, #56]	@ 0x38
 8004a72:	1c51      	adds	r1, r2, #1
 8004a74:	9119      	str	r1, [sp, #100]	@ 0x64
 8004a76:	7852      	ldrb	r2, [r2, #1]
 8004a78:	2a00      	cmp	r2, #0
 8004a7a:	d1c7      	bne.n	8004a0c <_strtod_l+0x34>
 8004a7c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004a7e:	9419      	str	r4, [sp, #100]	@ 0x64
 8004a80:	2b00      	cmp	r3, #0
 8004a82:	f040 8562 	bne.w	800554a <_strtod_l+0xb72>
 8004a86:	4650      	mov	r0, sl
 8004a88:	4659      	mov	r1, fp
 8004a8a:	e7e7      	b.n	8004a5c <_strtod_l+0x84>
 8004a8c:	2100      	movs	r1, #0
 8004a8e:	e7ef      	b.n	8004a70 <_strtod_l+0x98>
 8004a90:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004a92:	b13a      	cbz	r2, 8004aa4 <_strtod_l+0xcc>
 8004a94:	2135      	movs	r1, #53	@ 0x35
 8004a96:	a81c      	add	r0, sp, #112	@ 0x70
 8004a98:	f7ff ff36 	bl	8004908 <__copybits>
 8004a9c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004a9e:	9805      	ldr	r0, [sp, #20]
 8004aa0:	f7ff fb16 	bl	80040d0 <_Bfree>
 8004aa4:	3e01      	subs	r6, #1
 8004aa6:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8004aa8:	2e04      	cmp	r6, #4
 8004aaa:	d806      	bhi.n	8004aba <_strtod_l+0xe2>
 8004aac:	e8df f006 	tbb	[pc, r6]
 8004ab0:	201d0314 	.word	0x201d0314
 8004ab4:	14          	.byte	0x14
 8004ab5:	00          	.byte	0x00
 8004ab6:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8004aba:	05e1      	lsls	r1, r4, #23
 8004abc:	bf48      	it	mi
 8004abe:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8004ac2:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004ac6:	0d1b      	lsrs	r3, r3, #20
 8004ac8:	051b      	lsls	r3, r3, #20
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	d1bd      	bne.n	8004a4a <_strtod_l+0x72>
 8004ace:	f7fe fb35 	bl	800313c <__errno>
 8004ad2:	2322      	movs	r3, #34	@ 0x22
 8004ad4:	6003      	str	r3, [r0, #0]
 8004ad6:	e7b8      	b.n	8004a4a <_strtod_l+0x72>
 8004ad8:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004adc:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8004ae0:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8004ae4:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004ae8:	e7e7      	b.n	8004aba <_strtod_l+0xe2>
 8004aea:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 8004c68 <_strtod_l+0x290>
 8004aee:	e7e4      	b.n	8004aba <_strtod_l+0xe2>
 8004af0:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8004af4:	f04f 3aff 	mov.w	sl, #4294967295
 8004af8:	e7df      	b.n	8004aba <_strtod_l+0xe2>
 8004afa:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004afc:	1c5a      	adds	r2, r3, #1
 8004afe:	9219      	str	r2, [sp, #100]	@ 0x64
 8004b00:	785b      	ldrb	r3, [r3, #1]
 8004b02:	2b30      	cmp	r3, #48	@ 0x30
 8004b04:	d0f9      	beq.n	8004afa <_strtod_l+0x122>
 8004b06:	2b00      	cmp	r3, #0
 8004b08:	d09f      	beq.n	8004a4a <_strtod_l+0x72>
 8004b0a:	2301      	movs	r3, #1
 8004b0c:	2700      	movs	r7, #0
 8004b0e:	9308      	str	r3, [sp, #32]
 8004b10:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004b12:	930c      	str	r3, [sp, #48]	@ 0x30
 8004b14:	970b      	str	r7, [sp, #44]	@ 0x2c
 8004b16:	46b9      	mov	r9, r7
 8004b18:	220a      	movs	r2, #10
 8004b1a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8004b1c:	7805      	ldrb	r5, [r0, #0]
 8004b1e:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8004b22:	b2d9      	uxtb	r1, r3
 8004b24:	2909      	cmp	r1, #9
 8004b26:	d928      	bls.n	8004b7a <_strtod_l+0x1a2>
 8004b28:	4950      	ldr	r1, [pc, #320]	@ (8004c6c <_strtod_l+0x294>)
 8004b2a:	2201      	movs	r2, #1
 8004b2c:	f000 ffc4 	bl	8005ab8 <strncmp>
 8004b30:	2800      	cmp	r0, #0
 8004b32:	d032      	beq.n	8004b9a <_strtod_l+0x1c2>
 8004b34:	2000      	movs	r0, #0
 8004b36:	462a      	mov	r2, r5
 8004b38:	900a      	str	r0, [sp, #40]	@ 0x28
 8004b3a:	464d      	mov	r5, r9
 8004b3c:	4603      	mov	r3, r0
 8004b3e:	2a65      	cmp	r2, #101	@ 0x65
 8004b40:	d001      	beq.n	8004b46 <_strtod_l+0x16e>
 8004b42:	2a45      	cmp	r2, #69	@ 0x45
 8004b44:	d114      	bne.n	8004b70 <_strtod_l+0x198>
 8004b46:	b91d      	cbnz	r5, 8004b50 <_strtod_l+0x178>
 8004b48:	9a08      	ldr	r2, [sp, #32]
 8004b4a:	4302      	orrs	r2, r0
 8004b4c:	d096      	beq.n	8004a7c <_strtod_l+0xa4>
 8004b4e:	2500      	movs	r5, #0
 8004b50:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8004b52:	1c62      	adds	r2, r4, #1
 8004b54:	9219      	str	r2, [sp, #100]	@ 0x64
 8004b56:	7862      	ldrb	r2, [r4, #1]
 8004b58:	2a2b      	cmp	r2, #43	@ 0x2b
 8004b5a:	d07a      	beq.n	8004c52 <_strtod_l+0x27a>
 8004b5c:	2a2d      	cmp	r2, #45	@ 0x2d
 8004b5e:	d07e      	beq.n	8004c5e <_strtod_l+0x286>
 8004b60:	f04f 0c00 	mov.w	ip, #0
 8004b64:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8004b68:	2909      	cmp	r1, #9
 8004b6a:	f240 8085 	bls.w	8004c78 <_strtod_l+0x2a0>
 8004b6e:	9419      	str	r4, [sp, #100]	@ 0x64
 8004b70:	f04f 0800 	mov.w	r8, #0
 8004b74:	e0a5      	b.n	8004cc2 <_strtod_l+0x2ea>
 8004b76:	2300      	movs	r3, #0
 8004b78:	e7c8      	b.n	8004b0c <_strtod_l+0x134>
 8004b7a:	f1b9 0f08 	cmp.w	r9, #8
 8004b7e:	bfd8      	it	le
 8004b80:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8004b82:	f100 0001 	add.w	r0, r0, #1
 8004b86:	bfda      	itte	le
 8004b88:	fb02 3301 	mlale	r3, r2, r1, r3
 8004b8c:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8004b8e:	fb02 3707 	mlagt	r7, r2, r7, r3
 8004b92:	f109 0901 	add.w	r9, r9, #1
 8004b96:	9019      	str	r0, [sp, #100]	@ 0x64
 8004b98:	e7bf      	b.n	8004b1a <_strtod_l+0x142>
 8004b9a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004b9c:	1c5a      	adds	r2, r3, #1
 8004b9e:	9219      	str	r2, [sp, #100]	@ 0x64
 8004ba0:	785a      	ldrb	r2, [r3, #1]
 8004ba2:	f1b9 0f00 	cmp.w	r9, #0
 8004ba6:	d03b      	beq.n	8004c20 <_strtod_l+0x248>
 8004ba8:	900a      	str	r0, [sp, #40]	@ 0x28
 8004baa:	464d      	mov	r5, r9
 8004bac:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8004bb0:	2b09      	cmp	r3, #9
 8004bb2:	d912      	bls.n	8004bda <_strtod_l+0x202>
 8004bb4:	2301      	movs	r3, #1
 8004bb6:	e7c2      	b.n	8004b3e <_strtod_l+0x166>
 8004bb8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004bba:	1c5a      	adds	r2, r3, #1
 8004bbc:	9219      	str	r2, [sp, #100]	@ 0x64
 8004bbe:	785a      	ldrb	r2, [r3, #1]
 8004bc0:	3001      	adds	r0, #1
 8004bc2:	2a30      	cmp	r2, #48	@ 0x30
 8004bc4:	d0f8      	beq.n	8004bb8 <_strtod_l+0x1e0>
 8004bc6:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8004bca:	2b08      	cmp	r3, #8
 8004bcc:	f200 84c4 	bhi.w	8005558 <_strtod_l+0xb80>
 8004bd0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004bd2:	900a      	str	r0, [sp, #40]	@ 0x28
 8004bd4:	2000      	movs	r0, #0
 8004bd6:	930c      	str	r3, [sp, #48]	@ 0x30
 8004bd8:	4605      	mov	r5, r0
 8004bda:	3a30      	subs	r2, #48	@ 0x30
 8004bdc:	f100 0301 	add.w	r3, r0, #1
 8004be0:	d018      	beq.n	8004c14 <_strtod_l+0x23c>
 8004be2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004be4:	4419      	add	r1, r3
 8004be6:	910a      	str	r1, [sp, #40]	@ 0x28
 8004be8:	462e      	mov	r6, r5
 8004bea:	f04f 0e0a 	mov.w	lr, #10
 8004bee:	1c71      	adds	r1, r6, #1
 8004bf0:	eba1 0c05 	sub.w	ip, r1, r5
 8004bf4:	4563      	cmp	r3, ip
 8004bf6:	dc15      	bgt.n	8004c24 <_strtod_l+0x24c>
 8004bf8:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8004bfc:	182b      	adds	r3, r5, r0
 8004bfe:	2b08      	cmp	r3, #8
 8004c00:	f105 0501 	add.w	r5, r5, #1
 8004c04:	4405      	add	r5, r0
 8004c06:	dc1a      	bgt.n	8004c3e <_strtod_l+0x266>
 8004c08:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004c0a:	230a      	movs	r3, #10
 8004c0c:	fb03 2301 	mla	r3, r3, r1, r2
 8004c10:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004c12:	2300      	movs	r3, #0
 8004c14:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004c16:	1c51      	adds	r1, r2, #1
 8004c18:	9119      	str	r1, [sp, #100]	@ 0x64
 8004c1a:	7852      	ldrb	r2, [r2, #1]
 8004c1c:	4618      	mov	r0, r3
 8004c1e:	e7c5      	b.n	8004bac <_strtod_l+0x1d4>
 8004c20:	4648      	mov	r0, r9
 8004c22:	e7ce      	b.n	8004bc2 <_strtod_l+0x1ea>
 8004c24:	2e08      	cmp	r6, #8
 8004c26:	dc05      	bgt.n	8004c34 <_strtod_l+0x25c>
 8004c28:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004c2a:	fb0e f606 	mul.w	r6, lr, r6
 8004c2e:	960b      	str	r6, [sp, #44]	@ 0x2c
 8004c30:	460e      	mov	r6, r1
 8004c32:	e7dc      	b.n	8004bee <_strtod_l+0x216>
 8004c34:	2910      	cmp	r1, #16
 8004c36:	bfd8      	it	le
 8004c38:	fb0e f707 	mulle.w	r7, lr, r7
 8004c3c:	e7f8      	b.n	8004c30 <_strtod_l+0x258>
 8004c3e:	2b0f      	cmp	r3, #15
 8004c40:	bfdc      	itt	le
 8004c42:	230a      	movle	r3, #10
 8004c44:	fb03 2707 	mlale	r7, r3, r7, r2
 8004c48:	e7e3      	b.n	8004c12 <_strtod_l+0x23a>
 8004c4a:	2300      	movs	r3, #0
 8004c4c:	930a      	str	r3, [sp, #40]	@ 0x28
 8004c4e:	2301      	movs	r3, #1
 8004c50:	e77a      	b.n	8004b48 <_strtod_l+0x170>
 8004c52:	f04f 0c00 	mov.w	ip, #0
 8004c56:	1ca2      	adds	r2, r4, #2
 8004c58:	9219      	str	r2, [sp, #100]	@ 0x64
 8004c5a:	78a2      	ldrb	r2, [r4, #2]
 8004c5c:	e782      	b.n	8004b64 <_strtod_l+0x18c>
 8004c5e:	f04f 0c01 	mov.w	ip, #1
 8004c62:	e7f8      	b.n	8004c56 <_strtod_l+0x27e>
 8004c64:	08006b14 	.word	0x08006b14
 8004c68:	7ff00000 	.word	0x7ff00000
 8004c6c:	08006947 	.word	0x08006947
 8004c70:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004c72:	1c51      	adds	r1, r2, #1
 8004c74:	9119      	str	r1, [sp, #100]	@ 0x64
 8004c76:	7852      	ldrb	r2, [r2, #1]
 8004c78:	2a30      	cmp	r2, #48	@ 0x30
 8004c7a:	d0f9      	beq.n	8004c70 <_strtod_l+0x298>
 8004c7c:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8004c80:	2908      	cmp	r1, #8
 8004c82:	f63f af75 	bhi.w	8004b70 <_strtod_l+0x198>
 8004c86:	3a30      	subs	r2, #48	@ 0x30
 8004c88:	9209      	str	r2, [sp, #36]	@ 0x24
 8004c8a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004c8c:	920f      	str	r2, [sp, #60]	@ 0x3c
 8004c8e:	f04f 080a 	mov.w	r8, #10
 8004c92:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004c94:	1c56      	adds	r6, r2, #1
 8004c96:	9619      	str	r6, [sp, #100]	@ 0x64
 8004c98:	7852      	ldrb	r2, [r2, #1]
 8004c9a:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8004c9e:	f1be 0f09 	cmp.w	lr, #9
 8004ca2:	d939      	bls.n	8004d18 <_strtod_l+0x340>
 8004ca4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8004ca6:	1a76      	subs	r6, r6, r1
 8004ca8:	2e08      	cmp	r6, #8
 8004caa:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8004cae:	dc03      	bgt.n	8004cb8 <_strtod_l+0x2e0>
 8004cb0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004cb2:	4588      	cmp	r8, r1
 8004cb4:	bfa8      	it	ge
 8004cb6:	4688      	movge	r8, r1
 8004cb8:	f1bc 0f00 	cmp.w	ip, #0
 8004cbc:	d001      	beq.n	8004cc2 <_strtod_l+0x2ea>
 8004cbe:	f1c8 0800 	rsb	r8, r8, #0
 8004cc2:	2d00      	cmp	r5, #0
 8004cc4:	d14e      	bne.n	8004d64 <_strtod_l+0x38c>
 8004cc6:	9908      	ldr	r1, [sp, #32]
 8004cc8:	4308      	orrs	r0, r1
 8004cca:	f47f aebe 	bne.w	8004a4a <_strtod_l+0x72>
 8004cce:	2b00      	cmp	r3, #0
 8004cd0:	f47f aed4 	bne.w	8004a7c <_strtod_l+0xa4>
 8004cd4:	2a69      	cmp	r2, #105	@ 0x69
 8004cd6:	d028      	beq.n	8004d2a <_strtod_l+0x352>
 8004cd8:	dc25      	bgt.n	8004d26 <_strtod_l+0x34e>
 8004cda:	2a49      	cmp	r2, #73	@ 0x49
 8004cdc:	d025      	beq.n	8004d2a <_strtod_l+0x352>
 8004cde:	2a4e      	cmp	r2, #78	@ 0x4e
 8004ce0:	f47f aecc 	bne.w	8004a7c <_strtod_l+0xa4>
 8004ce4:	4999      	ldr	r1, [pc, #612]	@ (8004f4c <_strtod_l+0x574>)
 8004ce6:	a819      	add	r0, sp, #100	@ 0x64
 8004ce8:	f001 f9d8 	bl	800609c <__match>
 8004cec:	2800      	cmp	r0, #0
 8004cee:	f43f aec5 	beq.w	8004a7c <_strtod_l+0xa4>
 8004cf2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004cf4:	781b      	ldrb	r3, [r3, #0]
 8004cf6:	2b28      	cmp	r3, #40	@ 0x28
 8004cf8:	d12e      	bne.n	8004d58 <_strtod_l+0x380>
 8004cfa:	4995      	ldr	r1, [pc, #596]	@ (8004f50 <_strtod_l+0x578>)
 8004cfc:	aa1c      	add	r2, sp, #112	@ 0x70
 8004cfe:	a819      	add	r0, sp, #100	@ 0x64
 8004d00:	f001 f9e0 	bl	80060c4 <__hexnan>
 8004d04:	2805      	cmp	r0, #5
 8004d06:	d127      	bne.n	8004d58 <_strtod_l+0x380>
 8004d08:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004d0a:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8004d0e:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8004d12:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8004d16:	e698      	b.n	8004a4a <_strtod_l+0x72>
 8004d18:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004d1a:	fb08 2101 	mla	r1, r8, r1, r2
 8004d1e:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8004d22:	9209      	str	r2, [sp, #36]	@ 0x24
 8004d24:	e7b5      	b.n	8004c92 <_strtod_l+0x2ba>
 8004d26:	2a6e      	cmp	r2, #110	@ 0x6e
 8004d28:	e7da      	b.n	8004ce0 <_strtod_l+0x308>
 8004d2a:	498a      	ldr	r1, [pc, #552]	@ (8004f54 <_strtod_l+0x57c>)
 8004d2c:	a819      	add	r0, sp, #100	@ 0x64
 8004d2e:	f001 f9b5 	bl	800609c <__match>
 8004d32:	2800      	cmp	r0, #0
 8004d34:	f43f aea2 	beq.w	8004a7c <_strtod_l+0xa4>
 8004d38:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004d3a:	4987      	ldr	r1, [pc, #540]	@ (8004f58 <_strtod_l+0x580>)
 8004d3c:	3b01      	subs	r3, #1
 8004d3e:	a819      	add	r0, sp, #100	@ 0x64
 8004d40:	9319      	str	r3, [sp, #100]	@ 0x64
 8004d42:	f001 f9ab 	bl	800609c <__match>
 8004d46:	b910      	cbnz	r0, 8004d4e <_strtod_l+0x376>
 8004d48:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004d4a:	3301      	adds	r3, #1
 8004d4c:	9319      	str	r3, [sp, #100]	@ 0x64
 8004d4e:	f8df b20c 	ldr.w	fp, [pc, #524]	@ 8004f5c <_strtod_l+0x584>
 8004d52:	f04f 0a00 	mov.w	sl, #0
 8004d56:	e678      	b.n	8004a4a <_strtod_l+0x72>
 8004d58:	4881      	ldr	r0, [pc, #516]	@ (8004f60 <_strtod_l+0x588>)
 8004d5a:	f000 fedd 	bl	8005b18 <nan>
 8004d5e:	4682      	mov	sl, r0
 8004d60:	468b      	mov	fp, r1
 8004d62:	e672      	b.n	8004a4a <_strtod_l+0x72>
 8004d64:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004d66:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004d68:	eba8 0303 	sub.w	r3, r8, r3
 8004d6c:	f1b9 0f00 	cmp.w	r9, #0
 8004d70:	bf08      	it	eq
 8004d72:	46a9      	moveq	r9, r5
 8004d74:	2d10      	cmp	r5, #16
 8004d76:	9309      	str	r3, [sp, #36]	@ 0x24
 8004d78:	462c      	mov	r4, r5
 8004d7a:	bfa8      	it	ge
 8004d7c:	2410      	movge	r4, #16
 8004d7e:	f7fb fbc1 	bl	8000504 <__aeabi_ui2d>
 8004d82:	2d09      	cmp	r5, #9
 8004d84:	4682      	mov	sl, r0
 8004d86:	468b      	mov	fp, r1
 8004d88:	dc11      	bgt.n	8004dae <_strtod_l+0x3d6>
 8004d8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004d8c:	2b00      	cmp	r3, #0
 8004d8e:	f43f ae5c 	beq.w	8004a4a <_strtod_l+0x72>
 8004d92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004d94:	dd76      	ble.n	8004e84 <_strtod_l+0x4ac>
 8004d96:	2b16      	cmp	r3, #22
 8004d98:	dc5d      	bgt.n	8004e56 <_strtod_l+0x47e>
 8004d9a:	4972      	ldr	r1, [pc, #456]	@ (8004f64 <_strtod_l+0x58c>)
 8004d9c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004da0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004da4:	4652      	mov	r2, sl
 8004da6:	465b      	mov	r3, fp
 8004da8:	f7fb fc26 	bl	80005f8 <__aeabi_dmul>
 8004dac:	e7d7      	b.n	8004d5e <_strtod_l+0x386>
 8004dae:	4b6d      	ldr	r3, [pc, #436]	@ (8004f64 <_strtod_l+0x58c>)
 8004db0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004db4:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8004db8:	f7fb fc1e 	bl	80005f8 <__aeabi_dmul>
 8004dbc:	4682      	mov	sl, r0
 8004dbe:	4638      	mov	r0, r7
 8004dc0:	468b      	mov	fp, r1
 8004dc2:	f7fb fb9f 	bl	8000504 <__aeabi_ui2d>
 8004dc6:	4602      	mov	r2, r0
 8004dc8:	460b      	mov	r3, r1
 8004dca:	4650      	mov	r0, sl
 8004dcc:	4659      	mov	r1, fp
 8004dce:	f7fb fa5d 	bl	800028c <__adddf3>
 8004dd2:	2d0f      	cmp	r5, #15
 8004dd4:	4682      	mov	sl, r0
 8004dd6:	468b      	mov	fp, r1
 8004dd8:	ddd7      	ble.n	8004d8a <_strtod_l+0x3b2>
 8004dda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004ddc:	1b2c      	subs	r4, r5, r4
 8004dde:	441c      	add	r4, r3
 8004de0:	2c00      	cmp	r4, #0
 8004de2:	f340 8093 	ble.w	8004f0c <_strtod_l+0x534>
 8004de6:	f014 030f 	ands.w	r3, r4, #15
 8004dea:	d00a      	beq.n	8004e02 <_strtod_l+0x42a>
 8004dec:	495d      	ldr	r1, [pc, #372]	@ (8004f64 <_strtod_l+0x58c>)
 8004dee:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004df2:	4652      	mov	r2, sl
 8004df4:	465b      	mov	r3, fp
 8004df6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004dfa:	f7fb fbfd 	bl	80005f8 <__aeabi_dmul>
 8004dfe:	4682      	mov	sl, r0
 8004e00:	468b      	mov	fp, r1
 8004e02:	f034 040f 	bics.w	r4, r4, #15
 8004e06:	d073      	beq.n	8004ef0 <_strtod_l+0x518>
 8004e08:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8004e0c:	dd49      	ble.n	8004ea2 <_strtod_l+0x4ca>
 8004e0e:	2400      	movs	r4, #0
 8004e10:	46a0      	mov	r8, r4
 8004e12:	940b      	str	r4, [sp, #44]	@ 0x2c
 8004e14:	46a1      	mov	r9, r4
 8004e16:	9a05      	ldr	r2, [sp, #20]
 8004e18:	f8df b140 	ldr.w	fp, [pc, #320]	@ 8004f5c <_strtod_l+0x584>
 8004e1c:	2322      	movs	r3, #34	@ 0x22
 8004e1e:	6013      	str	r3, [r2, #0]
 8004e20:	f04f 0a00 	mov.w	sl, #0
 8004e24:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004e26:	2b00      	cmp	r3, #0
 8004e28:	f43f ae0f 	beq.w	8004a4a <_strtod_l+0x72>
 8004e2c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004e2e:	9805      	ldr	r0, [sp, #20]
 8004e30:	f7ff f94e 	bl	80040d0 <_Bfree>
 8004e34:	9805      	ldr	r0, [sp, #20]
 8004e36:	4649      	mov	r1, r9
 8004e38:	f7ff f94a 	bl	80040d0 <_Bfree>
 8004e3c:	9805      	ldr	r0, [sp, #20]
 8004e3e:	4641      	mov	r1, r8
 8004e40:	f7ff f946 	bl	80040d0 <_Bfree>
 8004e44:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004e46:	9805      	ldr	r0, [sp, #20]
 8004e48:	f7ff f942 	bl	80040d0 <_Bfree>
 8004e4c:	9805      	ldr	r0, [sp, #20]
 8004e4e:	4621      	mov	r1, r4
 8004e50:	f7ff f93e 	bl	80040d0 <_Bfree>
 8004e54:	e5f9      	b.n	8004a4a <_strtod_l+0x72>
 8004e56:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004e58:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8004e5c:	4293      	cmp	r3, r2
 8004e5e:	dbbc      	blt.n	8004dda <_strtod_l+0x402>
 8004e60:	4c40      	ldr	r4, [pc, #256]	@ (8004f64 <_strtod_l+0x58c>)
 8004e62:	f1c5 050f 	rsb	r5, r5, #15
 8004e66:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004e6a:	4652      	mov	r2, sl
 8004e6c:	465b      	mov	r3, fp
 8004e6e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004e72:	f7fb fbc1 	bl	80005f8 <__aeabi_dmul>
 8004e76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004e78:	1b5d      	subs	r5, r3, r5
 8004e7a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004e7e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004e82:	e791      	b.n	8004da8 <_strtod_l+0x3d0>
 8004e84:	3316      	adds	r3, #22
 8004e86:	dba8      	blt.n	8004dda <_strtod_l+0x402>
 8004e88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004e8a:	eba3 0808 	sub.w	r8, r3, r8
 8004e8e:	4b35      	ldr	r3, [pc, #212]	@ (8004f64 <_strtod_l+0x58c>)
 8004e90:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8004e94:	e9d8 2300 	ldrd	r2, r3, [r8]
 8004e98:	4650      	mov	r0, sl
 8004e9a:	4659      	mov	r1, fp
 8004e9c:	f7fb fcd6 	bl	800084c <__aeabi_ddiv>
 8004ea0:	e75d      	b.n	8004d5e <_strtod_l+0x386>
 8004ea2:	2300      	movs	r3, #0
 8004ea4:	4f30      	ldr	r7, [pc, #192]	@ (8004f68 <_strtod_l+0x590>)
 8004ea6:	1124      	asrs	r4, r4, #4
 8004ea8:	4650      	mov	r0, sl
 8004eaa:	4659      	mov	r1, fp
 8004eac:	461e      	mov	r6, r3
 8004eae:	2c01      	cmp	r4, #1
 8004eb0:	dc21      	bgt.n	8004ef6 <_strtod_l+0x51e>
 8004eb2:	b10b      	cbz	r3, 8004eb8 <_strtod_l+0x4e0>
 8004eb4:	4682      	mov	sl, r0
 8004eb6:	468b      	mov	fp, r1
 8004eb8:	492b      	ldr	r1, [pc, #172]	@ (8004f68 <_strtod_l+0x590>)
 8004eba:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8004ebe:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8004ec2:	4652      	mov	r2, sl
 8004ec4:	465b      	mov	r3, fp
 8004ec6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004eca:	f7fb fb95 	bl	80005f8 <__aeabi_dmul>
 8004ece:	4b23      	ldr	r3, [pc, #140]	@ (8004f5c <_strtod_l+0x584>)
 8004ed0:	460a      	mov	r2, r1
 8004ed2:	400b      	ands	r3, r1
 8004ed4:	4925      	ldr	r1, [pc, #148]	@ (8004f6c <_strtod_l+0x594>)
 8004ed6:	428b      	cmp	r3, r1
 8004ed8:	4682      	mov	sl, r0
 8004eda:	d898      	bhi.n	8004e0e <_strtod_l+0x436>
 8004edc:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8004ee0:	428b      	cmp	r3, r1
 8004ee2:	bf86      	itte	hi
 8004ee4:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 8004f70 <_strtod_l+0x598>
 8004ee8:	f04f 3aff 	movhi.w	sl, #4294967295
 8004eec:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8004ef0:	2300      	movs	r3, #0
 8004ef2:	9308      	str	r3, [sp, #32]
 8004ef4:	e076      	b.n	8004fe4 <_strtod_l+0x60c>
 8004ef6:	07e2      	lsls	r2, r4, #31
 8004ef8:	d504      	bpl.n	8004f04 <_strtod_l+0x52c>
 8004efa:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004efe:	f7fb fb7b 	bl	80005f8 <__aeabi_dmul>
 8004f02:	2301      	movs	r3, #1
 8004f04:	3601      	adds	r6, #1
 8004f06:	1064      	asrs	r4, r4, #1
 8004f08:	3708      	adds	r7, #8
 8004f0a:	e7d0      	b.n	8004eae <_strtod_l+0x4d6>
 8004f0c:	d0f0      	beq.n	8004ef0 <_strtod_l+0x518>
 8004f0e:	4264      	negs	r4, r4
 8004f10:	f014 020f 	ands.w	r2, r4, #15
 8004f14:	d00a      	beq.n	8004f2c <_strtod_l+0x554>
 8004f16:	4b13      	ldr	r3, [pc, #76]	@ (8004f64 <_strtod_l+0x58c>)
 8004f18:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004f1c:	4650      	mov	r0, sl
 8004f1e:	4659      	mov	r1, fp
 8004f20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f24:	f7fb fc92 	bl	800084c <__aeabi_ddiv>
 8004f28:	4682      	mov	sl, r0
 8004f2a:	468b      	mov	fp, r1
 8004f2c:	1124      	asrs	r4, r4, #4
 8004f2e:	d0df      	beq.n	8004ef0 <_strtod_l+0x518>
 8004f30:	2c1f      	cmp	r4, #31
 8004f32:	dd1f      	ble.n	8004f74 <_strtod_l+0x59c>
 8004f34:	2400      	movs	r4, #0
 8004f36:	46a0      	mov	r8, r4
 8004f38:	940b      	str	r4, [sp, #44]	@ 0x2c
 8004f3a:	46a1      	mov	r9, r4
 8004f3c:	9a05      	ldr	r2, [sp, #20]
 8004f3e:	2322      	movs	r3, #34	@ 0x22
 8004f40:	f04f 0a00 	mov.w	sl, #0
 8004f44:	f04f 0b00 	mov.w	fp, #0
 8004f48:	6013      	str	r3, [r2, #0]
 8004f4a:	e76b      	b.n	8004e24 <_strtod_l+0x44c>
 8004f4c:	08006835 	.word	0x08006835
 8004f50:	08006b00 	.word	0x08006b00
 8004f54:	0800682d 	.word	0x0800682d
 8004f58:	08006864 	.word	0x08006864
 8004f5c:	7ff00000 	.word	0x7ff00000
 8004f60:	0800699d 	.word	0x0800699d
 8004f64:	08006a38 	.word	0x08006a38
 8004f68:	08006a10 	.word	0x08006a10
 8004f6c:	7ca00000 	.word	0x7ca00000
 8004f70:	7fefffff 	.word	0x7fefffff
 8004f74:	f014 0310 	ands.w	r3, r4, #16
 8004f78:	bf18      	it	ne
 8004f7a:	236a      	movne	r3, #106	@ 0x6a
 8004f7c:	4e78      	ldr	r6, [pc, #480]	@ (8005160 <_strtod_l+0x788>)
 8004f7e:	9308      	str	r3, [sp, #32]
 8004f80:	4650      	mov	r0, sl
 8004f82:	4659      	mov	r1, fp
 8004f84:	2300      	movs	r3, #0
 8004f86:	07e7      	lsls	r7, r4, #31
 8004f88:	d504      	bpl.n	8004f94 <_strtod_l+0x5bc>
 8004f8a:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004f8e:	f7fb fb33 	bl	80005f8 <__aeabi_dmul>
 8004f92:	2301      	movs	r3, #1
 8004f94:	1064      	asrs	r4, r4, #1
 8004f96:	f106 0608 	add.w	r6, r6, #8
 8004f9a:	d1f4      	bne.n	8004f86 <_strtod_l+0x5ae>
 8004f9c:	b10b      	cbz	r3, 8004fa2 <_strtod_l+0x5ca>
 8004f9e:	4682      	mov	sl, r0
 8004fa0:	468b      	mov	fp, r1
 8004fa2:	9b08      	ldr	r3, [sp, #32]
 8004fa4:	b1b3      	cbz	r3, 8004fd4 <_strtod_l+0x5fc>
 8004fa6:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004faa:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	4659      	mov	r1, fp
 8004fb2:	dd0f      	ble.n	8004fd4 <_strtod_l+0x5fc>
 8004fb4:	2b1f      	cmp	r3, #31
 8004fb6:	dd58      	ble.n	800506a <_strtod_l+0x692>
 8004fb8:	2b34      	cmp	r3, #52	@ 0x34
 8004fba:	bfde      	ittt	le
 8004fbc:	f04f 33ff 	movle.w	r3, #4294967295
 8004fc0:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8004fc4:	4093      	lslle	r3, r2
 8004fc6:	f04f 0a00 	mov.w	sl, #0
 8004fca:	bfcc      	ite	gt
 8004fcc:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8004fd0:	ea03 0b01 	andle.w	fp, r3, r1
 8004fd4:	2200      	movs	r2, #0
 8004fd6:	2300      	movs	r3, #0
 8004fd8:	4650      	mov	r0, sl
 8004fda:	4659      	mov	r1, fp
 8004fdc:	f7fb fd74 	bl	8000ac8 <__aeabi_dcmpeq>
 8004fe0:	2800      	cmp	r0, #0
 8004fe2:	d1a7      	bne.n	8004f34 <_strtod_l+0x55c>
 8004fe4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004fe6:	9300      	str	r3, [sp, #0]
 8004fe8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8004fea:	9805      	ldr	r0, [sp, #20]
 8004fec:	462b      	mov	r3, r5
 8004fee:	464a      	mov	r2, r9
 8004ff0:	f7ff f8d6 	bl	80041a0 <__s2b>
 8004ff4:	900b      	str	r0, [sp, #44]	@ 0x2c
 8004ff6:	2800      	cmp	r0, #0
 8004ff8:	f43f af09 	beq.w	8004e0e <_strtod_l+0x436>
 8004ffc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004ffe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005000:	2a00      	cmp	r2, #0
 8005002:	eba3 0308 	sub.w	r3, r3, r8
 8005006:	bfa8      	it	ge
 8005008:	2300      	movge	r3, #0
 800500a:	9312      	str	r3, [sp, #72]	@ 0x48
 800500c:	2400      	movs	r4, #0
 800500e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8005012:	9316      	str	r3, [sp, #88]	@ 0x58
 8005014:	46a0      	mov	r8, r4
 8005016:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005018:	9805      	ldr	r0, [sp, #20]
 800501a:	6859      	ldr	r1, [r3, #4]
 800501c:	f7ff f818 	bl	8004050 <_Balloc>
 8005020:	4681      	mov	r9, r0
 8005022:	2800      	cmp	r0, #0
 8005024:	f43f aef7 	beq.w	8004e16 <_strtod_l+0x43e>
 8005028:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800502a:	691a      	ldr	r2, [r3, #16]
 800502c:	3202      	adds	r2, #2
 800502e:	f103 010c 	add.w	r1, r3, #12
 8005032:	0092      	lsls	r2, r2, #2
 8005034:	300c      	adds	r0, #12
 8005036:	f000 fd61 	bl	8005afc <memcpy>
 800503a:	ab1c      	add	r3, sp, #112	@ 0x70
 800503c:	9301      	str	r3, [sp, #4]
 800503e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8005040:	9300      	str	r3, [sp, #0]
 8005042:	9805      	ldr	r0, [sp, #20]
 8005044:	4652      	mov	r2, sl
 8005046:	465b      	mov	r3, fp
 8005048:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800504c:	f7ff fbd4 	bl	80047f8 <__d2b>
 8005050:	901a      	str	r0, [sp, #104]	@ 0x68
 8005052:	2800      	cmp	r0, #0
 8005054:	f43f aedf 	beq.w	8004e16 <_strtod_l+0x43e>
 8005058:	9805      	ldr	r0, [sp, #20]
 800505a:	2101      	movs	r1, #1
 800505c:	f7ff f936 	bl	80042cc <__i2b>
 8005060:	4680      	mov	r8, r0
 8005062:	b948      	cbnz	r0, 8005078 <_strtod_l+0x6a0>
 8005064:	f04f 0800 	mov.w	r8, #0
 8005068:	e6d5      	b.n	8004e16 <_strtod_l+0x43e>
 800506a:	f04f 32ff 	mov.w	r2, #4294967295
 800506e:	fa02 f303 	lsl.w	r3, r2, r3
 8005072:	ea03 0a0a 	and.w	sl, r3, sl
 8005076:	e7ad      	b.n	8004fd4 <_strtod_l+0x5fc>
 8005078:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 800507a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800507c:	2d00      	cmp	r5, #0
 800507e:	bfab      	itete	ge
 8005080:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8005082:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8005084:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8005086:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8005088:	bfac      	ite	ge
 800508a:	18ef      	addge	r7, r5, r3
 800508c:	1b5e      	sublt	r6, r3, r5
 800508e:	9b08      	ldr	r3, [sp, #32]
 8005090:	1aed      	subs	r5, r5, r3
 8005092:	4415      	add	r5, r2
 8005094:	4b33      	ldr	r3, [pc, #204]	@ (8005164 <_strtod_l+0x78c>)
 8005096:	3d01      	subs	r5, #1
 8005098:	429d      	cmp	r5, r3
 800509a:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800509e:	da50      	bge.n	8005142 <_strtod_l+0x76a>
 80050a0:	1b5b      	subs	r3, r3, r5
 80050a2:	2b1f      	cmp	r3, #31
 80050a4:	eba2 0203 	sub.w	r2, r2, r3
 80050a8:	f04f 0101 	mov.w	r1, #1
 80050ac:	dc3d      	bgt.n	800512a <_strtod_l+0x752>
 80050ae:	fa01 f303 	lsl.w	r3, r1, r3
 80050b2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80050b4:	2300      	movs	r3, #0
 80050b6:	9310      	str	r3, [sp, #64]	@ 0x40
 80050b8:	18bd      	adds	r5, r7, r2
 80050ba:	9b08      	ldr	r3, [sp, #32]
 80050bc:	42af      	cmp	r7, r5
 80050be:	4416      	add	r6, r2
 80050c0:	441e      	add	r6, r3
 80050c2:	463b      	mov	r3, r7
 80050c4:	bfa8      	it	ge
 80050c6:	462b      	movge	r3, r5
 80050c8:	42b3      	cmp	r3, r6
 80050ca:	bfa8      	it	ge
 80050cc:	4633      	movge	r3, r6
 80050ce:	2b00      	cmp	r3, #0
 80050d0:	bfc2      	ittt	gt
 80050d2:	1aed      	subgt	r5, r5, r3
 80050d4:	1af6      	subgt	r6, r6, r3
 80050d6:	1aff      	subgt	r7, r7, r3
 80050d8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80050da:	2b00      	cmp	r3, #0
 80050dc:	dd16      	ble.n	800510c <_strtod_l+0x734>
 80050de:	4641      	mov	r1, r8
 80050e0:	9805      	ldr	r0, [sp, #20]
 80050e2:	461a      	mov	r2, r3
 80050e4:	f7ff f9aa 	bl	800443c <__pow5mult>
 80050e8:	4680      	mov	r8, r0
 80050ea:	2800      	cmp	r0, #0
 80050ec:	d0ba      	beq.n	8005064 <_strtod_l+0x68c>
 80050ee:	4601      	mov	r1, r0
 80050f0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80050f2:	9805      	ldr	r0, [sp, #20]
 80050f4:	f7ff f900 	bl	80042f8 <__multiply>
 80050f8:	900a      	str	r0, [sp, #40]	@ 0x28
 80050fa:	2800      	cmp	r0, #0
 80050fc:	f43f ae8b 	beq.w	8004e16 <_strtod_l+0x43e>
 8005100:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005102:	9805      	ldr	r0, [sp, #20]
 8005104:	f7fe ffe4 	bl	80040d0 <_Bfree>
 8005108:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800510a:	931a      	str	r3, [sp, #104]	@ 0x68
 800510c:	2d00      	cmp	r5, #0
 800510e:	dc1d      	bgt.n	800514c <_strtod_l+0x774>
 8005110:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005112:	2b00      	cmp	r3, #0
 8005114:	dd28      	ble.n	8005168 <_strtod_l+0x790>
 8005116:	4649      	mov	r1, r9
 8005118:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800511a:	9805      	ldr	r0, [sp, #20]
 800511c:	f7ff f98e 	bl	800443c <__pow5mult>
 8005120:	4681      	mov	r9, r0
 8005122:	bb08      	cbnz	r0, 8005168 <_strtod_l+0x790>
 8005124:	f04f 0900 	mov.w	r9, #0
 8005128:	e675      	b.n	8004e16 <_strtod_l+0x43e>
 800512a:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800512e:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8005132:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8005136:	35e2      	adds	r5, #226	@ 0xe2
 8005138:	fa01 f305 	lsl.w	r3, r1, r5
 800513c:	9310      	str	r3, [sp, #64]	@ 0x40
 800513e:	9113      	str	r1, [sp, #76]	@ 0x4c
 8005140:	e7ba      	b.n	80050b8 <_strtod_l+0x6e0>
 8005142:	2300      	movs	r3, #0
 8005144:	9310      	str	r3, [sp, #64]	@ 0x40
 8005146:	2301      	movs	r3, #1
 8005148:	9313      	str	r3, [sp, #76]	@ 0x4c
 800514a:	e7b5      	b.n	80050b8 <_strtod_l+0x6e0>
 800514c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800514e:	9805      	ldr	r0, [sp, #20]
 8005150:	462a      	mov	r2, r5
 8005152:	f7ff f9cd 	bl	80044f0 <__lshift>
 8005156:	901a      	str	r0, [sp, #104]	@ 0x68
 8005158:	2800      	cmp	r0, #0
 800515a:	d1d9      	bne.n	8005110 <_strtod_l+0x738>
 800515c:	e65b      	b.n	8004e16 <_strtod_l+0x43e>
 800515e:	bf00      	nop
 8005160:	08006b28 	.word	0x08006b28
 8005164:	fffffc02 	.word	0xfffffc02
 8005168:	2e00      	cmp	r6, #0
 800516a:	dd07      	ble.n	800517c <_strtod_l+0x7a4>
 800516c:	4649      	mov	r1, r9
 800516e:	9805      	ldr	r0, [sp, #20]
 8005170:	4632      	mov	r2, r6
 8005172:	f7ff f9bd 	bl	80044f0 <__lshift>
 8005176:	4681      	mov	r9, r0
 8005178:	2800      	cmp	r0, #0
 800517a:	d0d3      	beq.n	8005124 <_strtod_l+0x74c>
 800517c:	2f00      	cmp	r7, #0
 800517e:	dd08      	ble.n	8005192 <_strtod_l+0x7ba>
 8005180:	4641      	mov	r1, r8
 8005182:	9805      	ldr	r0, [sp, #20]
 8005184:	463a      	mov	r2, r7
 8005186:	f7ff f9b3 	bl	80044f0 <__lshift>
 800518a:	4680      	mov	r8, r0
 800518c:	2800      	cmp	r0, #0
 800518e:	f43f ae42 	beq.w	8004e16 <_strtod_l+0x43e>
 8005192:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005194:	9805      	ldr	r0, [sp, #20]
 8005196:	464a      	mov	r2, r9
 8005198:	f7ff fa32 	bl	8004600 <__mdiff>
 800519c:	4604      	mov	r4, r0
 800519e:	2800      	cmp	r0, #0
 80051a0:	f43f ae39 	beq.w	8004e16 <_strtod_l+0x43e>
 80051a4:	68c3      	ldr	r3, [r0, #12]
 80051a6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80051a8:	2300      	movs	r3, #0
 80051aa:	60c3      	str	r3, [r0, #12]
 80051ac:	4641      	mov	r1, r8
 80051ae:	f7ff fa0b 	bl	80045c8 <__mcmp>
 80051b2:	2800      	cmp	r0, #0
 80051b4:	da3d      	bge.n	8005232 <_strtod_l+0x85a>
 80051b6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80051b8:	ea53 030a 	orrs.w	r3, r3, sl
 80051bc:	d163      	bne.n	8005286 <_strtod_l+0x8ae>
 80051be:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80051c2:	2b00      	cmp	r3, #0
 80051c4:	d15f      	bne.n	8005286 <_strtod_l+0x8ae>
 80051c6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80051ca:	0d1b      	lsrs	r3, r3, #20
 80051cc:	051b      	lsls	r3, r3, #20
 80051ce:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80051d2:	d958      	bls.n	8005286 <_strtod_l+0x8ae>
 80051d4:	6963      	ldr	r3, [r4, #20]
 80051d6:	b913      	cbnz	r3, 80051de <_strtod_l+0x806>
 80051d8:	6923      	ldr	r3, [r4, #16]
 80051da:	2b01      	cmp	r3, #1
 80051dc:	dd53      	ble.n	8005286 <_strtod_l+0x8ae>
 80051de:	4621      	mov	r1, r4
 80051e0:	2201      	movs	r2, #1
 80051e2:	9805      	ldr	r0, [sp, #20]
 80051e4:	f7ff f984 	bl	80044f0 <__lshift>
 80051e8:	4641      	mov	r1, r8
 80051ea:	4604      	mov	r4, r0
 80051ec:	f7ff f9ec 	bl	80045c8 <__mcmp>
 80051f0:	2800      	cmp	r0, #0
 80051f2:	dd48      	ble.n	8005286 <_strtod_l+0x8ae>
 80051f4:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80051f8:	9a08      	ldr	r2, [sp, #32]
 80051fa:	0d1b      	lsrs	r3, r3, #20
 80051fc:	051b      	lsls	r3, r3, #20
 80051fe:	2a00      	cmp	r2, #0
 8005200:	d062      	beq.n	80052c8 <_strtod_l+0x8f0>
 8005202:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8005206:	d85f      	bhi.n	80052c8 <_strtod_l+0x8f0>
 8005208:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800520c:	f67f ae96 	bls.w	8004f3c <_strtod_l+0x564>
 8005210:	4ba3      	ldr	r3, [pc, #652]	@ (80054a0 <_strtod_l+0xac8>)
 8005212:	4650      	mov	r0, sl
 8005214:	4659      	mov	r1, fp
 8005216:	2200      	movs	r2, #0
 8005218:	f7fb f9ee 	bl	80005f8 <__aeabi_dmul>
 800521c:	4ba1      	ldr	r3, [pc, #644]	@ (80054a4 <_strtod_l+0xacc>)
 800521e:	400b      	ands	r3, r1
 8005220:	4682      	mov	sl, r0
 8005222:	468b      	mov	fp, r1
 8005224:	2b00      	cmp	r3, #0
 8005226:	f47f ae01 	bne.w	8004e2c <_strtod_l+0x454>
 800522a:	9a05      	ldr	r2, [sp, #20]
 800522c:	2322      	movs	r3, #34	@ 0x22
 800522e:	6013      	str	r3, [r2, #0]
 8005230:	e5fc      	b.n	8004e2c <_strtod_l+0x454>
 8005232:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8005236:	d165      	bne.n	8005304 <_strtod_l+0x92c>
 8005238:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800523a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800523e:	b35a      	cbz	r2, 8005298 <_strtod_l+0x8c0>
 8005240:	4a99      	ldr	r2, [pc, #612]	@ (80054a8 <_strtod_l+0xad0>)
 8005242:	4293      	cmp	r3, r2
 8005244:	d12b      	bne.n	800529e <_strtod_l+0x8c6>
 8005246:	9b08      	ldr	r3, [sp, #32]
 8005248:	4651      	mov	r1, sl
 800524a:	b303      	cbz	r3, 800528e <_strtod_l+0x8b6>
 800524c:	4b95      	ldr	r3, [pc, #596]	@ (80054a4 <_strtod_l+0xacc>)
 800524e:	465a      	mov	r2, fp
 8005250:	4013      	ands	r3, r2
 8005252:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8005256:	f04f 32ff 	mov.w	r2, #4294967295
 800525a:	d81b      	bhi.n	8005294 <_strtod_l+0x8bc>
 800525c:	0d1b      	lsrs	r3, r3, #20
 800525e:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8005262:	fa02 f303 	lsl.w	r3, r2, r3
 8005266:	4299      	cmp	r1, r3
 8005268:	d119      	bne.n	800529e <_strtod_l+0x8c6>
 800526a:	4b90      	ldr	r3, [pc, #576]	@ (80054ac <_strtod_l+0xad4>)
 800526c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800526e:	429a      	cmp	r2, r3
 8005270:	d102      	bne.n	8005278 <_strtod_l+0x8a0>
 8005272:	3101      	adds	r1, #1
 8005274:	f43f adcf 	beq.w	8004e16 <_strtod_l+0x43e>
 8005278:	4b8a      	ldr	r3, [pc, #552]	@ (80054a4 <_strtod_l+0xacc>)
 800527a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800527c:	401a      	ands	r2, r3
 800527e:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8005282:	f04f 0a00 	mov.w	sl, #0
 8005286:	9b08      	ldr	r3, [sp, #32]
 8005288:	2b00      	cmp	r3, #0
 800528a:	d1c1      	bne.n	8005210 <_strtod_l+0x838>
 800528c:	e5ce      	b.n	8004e2c <_strtod_l+0x454>
 800528e:	f04f 33ff 	mov.w	r3, #4294967295
 8005292:	e7e8      	b.n	8005266 <_strtod_l+0x88e>
 8005294:	4613      	mov	r3, r2
 8005296:	e7e6      	b.n	8005266 <_strtod_l+0x88e>
 8005298:	ea53 030a 	orrs.w	r3, r3, sl
 800529c:	d0aa      	beq.n	80051f4 <_strtod_l+0x81c>
 800529e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80052a0:	b1db      	cbz	r3, 80052da <_strtod_l+0x902>
 80052a2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80052a4:	4213      	tst	r3, r2
 80052a6:	d0ee      	beq.n	8005286 <_strtod_l+0x8ae>
 80052a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80052aa:	9a08      	ldr	r2, [sp, #32]
 80052ac:	4650      	mov	r0, sl
 80052ae:	4659      	mov	r1, fp
 80052b0:	b1bb      	cbz	r3, 80052e2 <_strtod_l+0x90a>
 80052b2:	f7ff fb6d 	bl	8004990 <sulp>
 80052b6:	4602      	mov	r2, r0
 80052b8:	460b      	mov	r3, r1
 80052ba:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80052be:	f7fa ffe5 	bl	800028c <__adddf3>
 80052c2:	4682      	mov	sl, r0
 80052c4:	468b      	mov	fp, r1
 80052c6:	e7de      	b.n	8005286 <_strtod_l+0x8ae>
 80052c8:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80052cc:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80052d0:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80052d4:	f04f 3aff 	mov.w	sl, #4294967295
 80052d8:	e7d5      	b.n	8005286 <_strtod_l+0x8ae>
 80052da:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80052dc:	ea13 0f0a 	tst.w	r3, sl
 80052e0:	e7e1      	b.n	80052a6 <_strtod_l+0x8ce>
 80052e2:	f7ff fb55 	bl	8004990 <sulp>
 80052e6:	4602      	mov	r2, r0
 80052e8:	460b      	mov	r3, r1
 80052ea:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80052ee:	f7fa ffcb 	bl	8000288 <__aeabi_dsub>
 80052f2:	2200      	movs	r2, #0
 80052f4:	2300      	movs	r3, #0
 80052f6:	4682      	mov	sl, r0
 80052f8:	468b      	mov	fp, r1
 80052fa:	f7fb fbe5 	bl	8000ac8 <__aeabi_dcmpeq>
 80052fe:	2800      	cmp	r0, #0
 8005300:	d0c1      	beq.n	8005286 <_strtod_l+0x8ae>
 8005302:	e61b      	b.n	8004f3c <_strtod_l+0x564>
 8005304:	4641      	mov	r1, r8
 8005306:	4620      	mov	r0, r4
 8005308:	f7ff face 	bl	80048a8 <__ratio>
 800530c:	2200      	movs	r2, #0
 800530e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8005312:	4606      	mov	r6, r0
 8005314:	460f      	mov	r7, r1
 8005316:	f7fb fbeb 	bl	8000af0 <__aeabi_dcmple>
 800531a:	2800      	cmp	r0, #0
 800531c:	d06d      	beq.n	80053fa <_strtod_l+0xa22>
 800531e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005320:	2b00      	cmp	r3, #0
 8005322:	d178      	bne.n	8005416 <_strtod_l+0xa3e>
 8005324:	f1ba 0f00 	cmp.w	sl, #0
 8005328:	d156      	bne.n	80053d8 <_strtod_l+0xa00>
 800532a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800532c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005330:	2b00      	cmp	r3, #0
 8005332:	d158      	bne.n	80053e6 <_strtod_l+0xa0e>
 8005334:	4b5e      	ldr	r3, [pc, #376]	@ (80054b0 <_strtod_l+0xad8>)
 8005336:	2200      	movs	r2, #0
 8005338:	4630      	mov	r0, r6
 800533a:	4639      	mov	r1, r7
 800533c:	f7fb fbce 	bl	8000adc <__aeabi_dcmplt>
 8005340:	2800      	cmp	r0, #0
 8005342:	d157      	bne.n	80053f4 <_strtod_l+0xa1c>
 8005344:	4630      	mov	r0, r6
 8005346:	4639      	mov	r1, r7
 8005348:	4b5a      	ldr	r3, [pc, #360]	@ (80054b4 <_strtod_l+0xadc>)
 800534a:	2200      	movs	r2, #0
 800534c:	f7fb f954 	bl	80005f8 <__aeabi_dmul>
 8005350:	4606      	mov	r6, r0
 8005352:	460f      	mov	r7, r1
 8005354:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8005358:	9606      	str	r6, [sp, #24]
 800535a:	9307      	str	r3, [sp, #28]
 800535c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005360:	4d50      	ldr	r5, [pc, #320]	@ (80054a4 <_strtod_l+0xacc>)
 8005362:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005366:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005368:	401d      	ands	r5, r3
 800536a:	4b53      	ldr	r3, [pc, #332]	@ (80054b8 <_strtod_l+0xae0>)
 800536c:	429d      	cmp	r5, r3
 800536e:	f040 80a9 	bne.w	80054c4 <_strtod_l+0xaec>
 8005372:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005374:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 8005378:	4650      	mov	r0, sl
 800537a:	4659      	mov	r1, fp
 800537c:	f7ff f9d2 	bl	8004724 <__ulp>
 8005380:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005384:	f7fb f938 	bl	80005f8 <__aeabi_dmul>
 8005388:	4652      	mov	r2, sl
 800538a:	465b      	mov	r3, fp
 800538c:	f7fa ff7e 	bl	800028c <__adddf3>
 8005390:	460b      	mov	r3, r1
 8005392:	4944      	ldr	r1, [pc, #272]	@ (80054a4 <_strtod_l+0xacc>)
 8005394:	4a49      	ldr	r2, [pc, #292]	@ (80054bc <_strtod_l+0xae4>)
 8005396:	4019      	ands	r1, r3
 8005398:	4291      	cmp	r1, r2
 800539a:	4682      	mov	sl, r0
 800539c:	d942      	bls.n	8005424 <_strtod_l+0xa4c>
 800539e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80053a0:	4b42      	ldr	r3, [pc, #264]	@ (80054ac <_strtod_l+0xad4>)
 80053a2:	429a      	cmp	r2, r3
 80053a4:	d103      	bne.n	80053ae <_strtod_l+0x9d6>
 80053a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80053a8:	3301      	adds	r3, #1
 80053aa:	f43f ad34 	beq.w	8004e16 <_strtod_l+0x43e>
 80053ae:	f8df b0fc 	ldr.w	fp, [pc, #252]	@ 80054ac <_strtod_l+0xad4>
 80053b2:	f04f 3aff 	mov.w	sl, #4294967295
 80053b6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80053b8:	9805      	ldr	r0, [sp, #20]
 80053ba:	f7fe fe89 	bl	80040d0 <_Bfree>
 80053be:	9805      	ldr	r0, [sp, #20]
 80053c0:	4649      	mov	r1, r9
 80053c2:	f7fe fe85 	bl	80040d0 <_Bfree>
 80053c6:	9805      	ldr	r0, [sp, #20]
 80053c8:	4641      	mov	r1, r8
 80053ca:	f7fe fe81 	bl	80040d0 <_Bfree>
 80053ce:	9805      	ldr	r0, [sp, #20]
 80053d0:	4621      	mov	r1, r4
 80053d2:	f7fe fe7d 	bl	80040d0 <_Bfree>
 80053d6:	e61e      	b.n	8005016 <_strtod_l+0x63e>
 80053d8:	f1ba 0f01 	cmp.w	sl, #1
 80053dc:	d103      	bne.n	80053e6 <_strtod_l+0xa0e>
 80053de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	f43f adab 	beq.w	8004f3c <_strtod_l+0x564>
 80053e6:	4b36      	ldr	r3, [pc, #216]	@ (80054c0 <_strtod_l+0xae8>)
 80053e8:	4f31      	ldr	r7, [pc, #196]	@ (80054b0 <_strtod_l+0xad8>)
 80053ea:	2200      	movs	r2, #0
 80053ec:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80053f0:	2600      	movs	r6, #0
 80053f2:	e7b3      	b.n	800535c <_strtod_l+0x984>
 80053f4:	4f2f      	ldr	r7, [pc, #188]	@ (80054b4 <_strtod_l+0xadc>)
 80053f6:	2600      	movs	r6, #0
 80053f8:	e7ac      	b.n	8005354 <_strtod_l+0x97c>
 80053fa:	4b2e      	ldr	r3, [pc, #184]	@ (80054b4 <_strtod_l+0xadc>)
 80053fc:	4630      	mov	r0, r6
 80053fe:	4639      	mov	r1, r7
 8005400:	2200      	movs	r2, #0
 8005402:	f7fb f8f9 	bl	80005f8 <__aeabi_dmul>
 8005406:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005408:	4606      	mov	r6, r0
 800540a:	460f      	mov	r7, r1
 800540c:	2b00      	cmp	r3, #0
 800540e:	d0a1      	beq.n	8005354 <_strtod_l+0x97c>
 8005410:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8005414:	e7a2      	b.n	800535c <_strtod_l+0x984>
 8005416:	4b26      	ldr	r3, [pc, #152]	@ (80054b0 <_strtod_l+0xad8>)
 8005418:	2200      	movs	r2, #0
 800541a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800541e:	4616      	mov	r6, r2
 8005420:	461f      	mov	r7, r3
 8005422:	e79b      	b.n	800535c <_strtod_l+0x984>
 8005424:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 8005428:	9b08      	ldr	r3, [sp, #32]
 800542a:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 800542e:	2b00      	cmp	r3, #0
 8005430:	d1c1      	bne.n	80053b6 <_strtod_l+0x9de>
 8005432:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005436:	0d1b      	lsrs	r3, r3, #20
 8005438:	051b      	lsls	r3, r3, #20
 800543a:	429d      	cmp	r5, r3
 800543c:	d1bb      	bne.n	80053b6 <_strtod_l+0x9de>
 800543e:	4630      	mov	r0, r6
 8005440:	4639      	mov	r1, r7
 8005442:	f7fb fc21 	bl	8000c88 <__aeabi_d2lz>
 8005446:	f7fb f8a9 	bl	800059c <__aeabi_l2d>
 800544a:	4602      	mov	r2, r0
 800544c:	460b      	mov	r3, r1
 800544e:	4630      	mov	r0, r6
 8005450:	4639      	mov	r1, r7
 8005452:	f7fa ff19 	bl	8000288 <__aeabi_dsub>
 8005456:	460b      	mov	r3, r1
 8005458:	4602      	mov	r2, r0
 800545a:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800545e:	f3cb 0613 	ubfx	r6, fp, #0, #20
 8005462:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005464:	ea46 060a 	orr.w	r6, r6, sl
 8005468:	431e      	orrs	r6, r3
 800546a:	d068      	beq.n	800553e <_strtod_l+0xb66>
 800546c:	a308      	add	r3, pc, #32	@ (adr r3, 8005490 <_strtod_l+0xab8>)
 800546e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005472:	f7fb fb33 	bl	8000adc <__aeabi_dcmplt>
 8005476:	2800      	cmp	r0, #0
 8005478:	f47f acd8 	bne.w	8004e2c <_strtod_l+0x454>
 800547c:	a306      	add	r3, pc, #24	@ (adr r3, 8005498 <_strtod_l+0xac0>)
 800547e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005482:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005486:	f7fb fb47 	bl	8000b18 <__aeabi_dcmpgt>
 800548a:	2800      	cmp	r0, #0
 800548c:	d093      	beq.n	80053b6 <_strtod_l+0x9de>
 800548e:	e4cd      	b.n	8004e2c <_strtod_l+0x454>
 8005490:	94a03595 	.word	0x94a03595
 8005494:	3fdfffff 	.word	0x3fdfffff
 8005498:	35afe535 	.word	0x35afe535
 800549c:	3fe00000 	.word	0x3fe00000
 80054a0:	39500000 	.word	0x39500000
 80054a4:	7ff00000 	.word	0x7ff00000
 80054a8:	000fffff 	.word	0x000fffff
 80054ac:	7fefffff 	.word	0x7fefffff
 80054b0:	3ff00000 	.word	0x3ff00000
 80054b4:	3fe00000 	.word	0x3fe00000
 80054b8:	7fe00000 	.word	0x7fe00000
 80054bc:	7c9fffff 	.word	0x7c9fffff
 80054c0:	bff00000 	.word	0xbff00000
 80054c4:	9b08      	ldr	r3, [sp, #32]
 80054c6:	b323      	cbz	r3, 8005512 <_strtod_l+0xb3a>
 80054c8:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 80054cc:	d821      	bhi.n	8005512 <_strtod_l+0xb3a>
 80054ce:	a328      	add	r3, pc, #160	@ (adr r3, 8005570 <_strtod_l+0xb98>)
 80054d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054d4:	4630      	mov	r0, r6
 80054d6:	4639      	mov	r1, r7
 80054d8:	f7fb fb0a 	bl	8000af0 <__aeabi_dcmple>
 80054dc:	b1a0      	cbz	r0, 8005508 <_strtod_l+0xb30>
 80054de:	4639      	mov	r1, r7
 80054e0:	4630      	mov	r0, r6
 80054e2:	f7fb fb61 	bl	8000ba8 <__aeabi_d2uiz>
 80054e6:	2801      	cmp	r0, #1
 80054e8:	bf38      	it	cc
 80054ea:	2001      	movcc	r0, #1
 80054ec:	f7fb f80a 	bl	8000504 <__aeabi_ui2d>
 80054f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80054f2:	4606      	mov	r6, r0
 80054f4:	460f      	mov	r7, r1
 80054f6:	b9fb      	cbnz	r3, 8005538 <_strtod_l+0xb60>
 80054f8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80054fc:	9014      	str	r0, [sp, #80]	@ 0x50
 80054fe:	9315      	str	r3, [sp, #84]	@ 0x54
 8005500:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8005504:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005508:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800550a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800550e:	1b5b      	subs	r3, r3, r5
 8005510:	9311      	str	r3, [sp, #68]	@ 0x44
 8005512:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005516:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800551a:	f7ff f903 	bl	8004724 <__ulp>
 800551e:	4602      	mov	r2, r0
 8005520:	460b      	mov	r3, r1
 8005522:	4650      	mov	r0, sl
 8005524:	4659      	mov	r1, fp
 8005526:	f7fb f867 	bl	80005f8 <__aeabi_dmul>
 800552a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800552e:	f7fa fead 	bl	800028c <__adddf3>
 8005532:	4682      	mov	sl, r0
 8005534:	468b      	mov	fp, r1
 8005536:	e777      	b.n	8005428 <_strtod_l+0xa50>
 8005538:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800553c:	e7e0      	b.n	8005500 <_strtod_l+0xb28>
 800553e:	a30e      	add	r3, pc, #56	@ (adr r3, 8005578 <_strtod_l+0xba0>)
 8005540:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005544:	f7fb faca 	bl	8000adc <__aeabi_dcmplt>
 8005548:	e79f      	b.n	800548a <_strtod_l+0xab2>
 800554a:	2300      	movs	r3, #0
 800554c:	930e      	str	r3, [sp, #56]	@ 0x38
 800554e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8005550:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005552:	6013      	str	r3, [r2, #0]
 8005554:	f7ff ba7d 	b.w	8004a52 <_strtod_l+0x7a>
 8005558:	2a65      	cmp	r2, #101	@ 0x65
 800555a:	f43f ab76 	beq.w	8004c4a <_strtod_l+0x272>
 800555e:	2a45      	cmp	r2, #69	@ 0x45
 8005560:	f43f ab73 	beq.w	8004c4a <_strtod_l+0x272>
 8005564:	2301      	movs	r3, #1
 8005566:	f7ff bbae 	b.w	8004cc6 <_strtod_l+0x2ee>
 800556a:	bf00      	nop
 800556c:	f3af 8000 	nop.w
 8005570:	ffc00000 	.word	0xffc00000
 8005574:	41dfffff 	.word	0x41dfffff
 8005578:	94a03595 	.word	0x94a03595
 800557c:	3fcfffff 	.word	0x3fcfffff

08005580 <_strtod_r>:
 8005580:	4b01      	ldr	r3, [pc, #4]	@ (8005588 <_strtod_r+0x8>)
 8005582:	f7ff ba29 	b.w	80049d8 <_strtod_l>
 8005586:	bf00      	nop
 8005588:	20000060 	.word	0x20000060

0800558c <_strtol_l.isra.0>:
 800558c:	2b24      	cmp	r3, #36	@ 0x24
 800558e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005592:	4686      	mov	lr, r0
 8005594:	4690      	mov	r8, r2
 8005596:	d801      	bhi.n	800559c <_strtol_l.isra.0+0x10>
 8005598:	2b01      	cmp	r3, #1
 800559a:	d106      	bne.n	80055aa <_strtol_l.isra.0+0x1e>
 800559c:	f7fd fdce 	bl	800313c <__errno>
 80055a0:	2316      	movs	r3, #22
 80055a2:	6003      	str	r3, [r0, #0]
 80055a4:	2000      	movs	r0, #0
 80055a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80055aa:	4834      	ldr	r0, [pc, #208]	@ (800567c <_strtol_l.isra.0+0xf0>)
 80055ac:	460d      	mov	r5, r1
 80055ae:	462a      	mov	r2, r5
 80055b0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80055b4:	5d06      	ldrb	r6, [r0, r4]
 80055b6:	f016 0608 	ands.w	r6, r6, #8
 80055ba:	d1f8      	bne.n	80055ae <_strtol_l.isra.0+0x22>
 80055bc:	2c2d      	cmp	r4, #45	@ 0x2d
 80055be:	d110      	bne.n	80055e2 <_strtol_l.isra.0+0x56>
 80055c0:	782c      	ldrb	r4, [r5, #0]
 80055c2:	2601      	movs	r6, #1
 80055c4:	1c95      	adds	r5, r2, #2
 80055c6:	f033 0210 	bics.w	r2, r3, #16
 80055ca:	d115      	bne.n	80055f8 <_strtol_l.isra.0+0x6c>
 80055cc:	2c30      	cmp	r4, #48	@ 0x30
 80055ce:	d10d      	bne.n	80055ec <_strtol_l.isra.0+0x60>
 80055d0:	782a      	ldrb	r2, [r5, #0]
 80055d2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80055d6:	2a58      	cmp	r2, #88	@ 0x58
 80055d8:	d108      	bne.n	80055ec <_strtol_l.isra.0+0x60>
 80055da:	786c      	ldrb	r4, [r5, #1]
 80055dc:	3502      	adds	r5, #2
 80055de:	2310      	movs	r3, #16
 80055e0:	e00a      	b.n	80055f8 <_strtol_l.isra.0+0x6c>
 80055e2:	2c2b      	cmp	r4, #43	@ 0x2b
 80055e4:	bf04      	itt	eq
 80055e6:	782c      	ldrbeq	r4, [r5, #0]
 80055e8:	1c95      	addeq	r5, r2, #2
 80055ea:	e7ec      	b.n	80055c6 <_strtol_l.isra.0+0x3a>
 80055ec:	2b00      	cmp	r3, #0
 80055ee:	d1f6      	bne.n	80055de <_strtol_l.isra.0+0x52>
 80055f0:	2c30      	cmp	r4, #48	@ 0x30
 80055f2:	bf14      	ite	ne
 80055f4:	230a      	movne	r3, #10
 80055f6:	2308      	moveq	r3, #8
 80055f8:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 80055fc:	f10c 3cff 	add.w	ip, ip, #4294967295
 8005600:	2200      	movs	r2, #0
 8005602:	fbbc f9f3 	udiv	r9, ip, r3
 8005606:	4610      	mov	r0, r2
 8005608:	fb03 ca19 	mls	sl, r3, r9, ip
 800560c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8005610:	2f09      	cmp	r7, #9
 8005612:	d80f      	bhi.n	8005634 <_strtol_l.isra.0+0xa8>
 8005614:	463c      	mov	r4, r7
 8005616:	42a3      	cmp	r3, r4
 8005618:	dd1b      	ble.n	8005652 <_strtol_l.isra.0+0xc6>
 800561a:	1c57      	adds	r7, r2, #1
 800561c:	d007      	beq.n	800562e <_strtol_l.isra.0+0xa2>
 800561e:	4581      	cmp	r9, r0
 8005620:	d314      	bcc.n	800564c <_strtol_l.isra.0+0xc0>
 8005622:	d101      	bne.n	8005628 <_strtol_l.isra.0+0x9c>
 8005624:	45a2      	cmp	sl, r4
 8005626:	db11      	blt.n	800564c <_strtol_l.isra.0+0xc0>
 8005628:	fb00 4003 	mla	r0, r0, r3, r4
 800562c:	2201      	movs	r2, #1
 800562e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005632:	e7eb      	b.n	800560c <_strtol_l.isra.0+0x80>
 8005634:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005638:	2f19      	cmp	r7, #25
 800563a:	d801      	bhi.n	8005640 <_strtol_l.isra.0+0xb4>
 800563c:	3c37      	subs	r4, #55	@ 0x37
 800563e:	e7ea      	b.n	8005616 <_strtol_l.isra.0+0x8a>
 8005640:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8005644:	2f19      	cmp	r7, #25
 8005646:	d804      	bhi.n	8005652 <_strtol_l.isra.0+0xc6>
 8005648:	3c57      	subs	r4, #87	@ 0x57
 800564a:	e7e4      	b.n	8005616 <_strtol_l.isra.0+0x8a>
 800564c:	f04f 32ff 	mov.w	r2, #4294967295
 8005650:	e7ed      	b.n	800562e <_strtol_l.isra.0+0xa2>
 8005652:	1c53      	adds	r3, r2, #1
 8005654:	d108      	bne.n	8005668 <_strtol_l.isra.0+0xdc>
 8005656:	2322      	movs	r3, #34	@ 0x22
 8005658:	f8ce 3000 	str.w	r3, [lr]
 800565c:	4660      	mov	r0, ip
 800565e:	f1b8 0f00 	cmp.w	r8, #0
 8005662:	d0a0      	beq.n	80055a6 <_strtol_l.isra.0+0x1a>
 8005664:	1e69      	subs	r1, r5, #1
 8005666:	e006      	b.n	8005676 <_strtol_l.isra.0+0xea>
 8005668:	b106      	cbz	r6, 800566c <_strtol_l.isra.0+0xe0>
 800566a:	4240      	negs	r0, r0
 800566c:	f1b8 0f00 	cmp.w	r8, #0
 8005670:	d099      	beq.n	80055a6 <_strtol_l.isra.0+0x1a>
 8005672:	2a00      	cmp	r2, #0
 8005674:	d1f6      	bne.n	8005664 <_strtol_l.isra.0+0xd8>
 8005676:	f8c8 1000 	str.w	r1, [r8]
 800567a:	e794      	b.n	80055a6 <_strtol_l.isra.0+0x1a>
 800567c:	08006b51 	.word	0x08006b51

08005680 <_strtol_r>:
 8005680:	f7ff bf84 	b.w	800558c <_strtol_l.isra.0>

08005684 <__ssputs_r>:
 8005684:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005688:	688e      	ldr	r6, [r1, #8]
 800568a:	461f      	mov	r7, r3
 800568c:	42be      	cmp	r6, r7
 800568e:	680b      	ldr	r3, [r1, #0]
 8005690:	4682      	mov	sl, r0
 8005692:	460c      	mov	r4, r1
 8005694:	4690      	mov	r8, r2
 8005696:	d82d      	bhi.n	80056f4 <__ssputs_r+0x70>
 8005698:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800569c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80056a0:	d026      	beq.n	80056f0 <__ssputs_r+0x6c>
 80056a2:	6965      	ldr	r5, [r4, #20]
 80056a4:	6909      	ldr	r1, [r1, #16]
 80056a6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80056aa:	eba3 0901 	sub.w	r9, r3, r1
 80056ae:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80056b2:	1c7b      	adds	r3, r7, #1
 80056b4:	444b      	add	r3, r9
 80056b6:	106d      	asrs	r5, r5, #1
 80056b8:	429d      	cmp	r5, r3
 80056ba:	bf38      	it	cc
 80056bc:	461d      	movcc	r5, r3
 80056be:	0553      	lsls	r3, r2, #21
 80056c0:	d527      	bpl.n	8005712 <__ssputs_r+0x8e>
 80056c2:	4629      	mov	r1, r5
 80056c4:	f7fe fc38 	bl	8003f38 <_malloc_r>
 80056c8:	4606      	mov	r6, r0
 80056ca:	b360      	cbz	r0, 8005726 <__ssputs_r+0xa2>
 80056cc:	6921      	ldr	r1, [r4, #16]
 80056ce:	464a      	mov	r2, r9
 80056d0:	f000 fa14 	bl	8005afc <memcpy>
 80056d4:	89a3      	ldrh	r3, [r4, #12]
 80056d6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80056da:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80056de:	81a3      	strh	r3, [r4, #12]
 80056e0:	6126      	str	r6, [r4, #16]
 80056e2:	6165      	str	r5, [r4, #20]
 80056e4:	444e      	add	r6, r9
 80056e6:	eba5 0509 	sub.w	r5, r5, r9
 80056ea:	6026      	str	r6, [r4, #0]
 80056ec:	60a5      	str	r5, [r4, #8]
 80056ee:	463e      	mov	r6, r7
 80056f0:	42be      	cmp	r6, r7
 80056f2:	d900      	bls.n	80056f6 <__ssputs_r+0x72>
 80056f4:	463e      	mov	r6, r7
 80056f6:	6820      	ldr	r0, [r4, #0]
 80056f8:	4632      	mov	r2, r6
 80056fa:	4641      	mov	r1, r8
 80056fc:	f000 f9c2 	bl	8005a84 <memmove>
 8005700:	68a3      	ldr	r3, [r4, #8]
 8005702:	1b9b      	subs	r3, r3, r6
 8005704:	60a3      	str	r3, [r4, #8]
 8005706:	6823      	ldr	r3, [r4, #0]
 8005708:	4433      	add	r3, r6
 800570a:	6023      	str	r3, [r4, #0]
 800570c:	2000      	movs	r0, #0
 800570e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005712:	462a      	mov	r2, r5
 8005714:	f000 fd83 	bl	800621e <_realloc_r>
 8005718:	4606      	mov	r6, r0
 800571a:	2800      	cmp	r0, #0
 800571c:	d1e0      	bne.n	80056e0 <__ssputs_r+0x5c>
 800571e:	6921      	ldr	r1, [r4, #16]
 8005720:	4650      	mov	r0, sl
 8005722:	f7fe fb95 	bl	8003e50 <_free_r>
 8005726:	230c      	movs	r3, #12
 8005728:	f8ca 3000 	str.w	r3, [sl]
 800572c:	89a3      	ldrh	r3, [r4, #12]
 800572e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005732:	81a3      	strh	r3, [r4, #12]
 8005734:	f04f 30ff 	mov.w	r0, #4294967295
 8005738:	e7e9      	b.n	800570e <__ssputs_r+0x8a>
	...

0800573c <_svfiprintf_r>:
 800573c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005740:	4698      	mov	r8, r3
 8005742:	898b      	ldrh	r3, [r1, #12]
 8005744:	061b      	lsls	r3, r3, #24
 8005746:	b09d      	sub	sp, #116	@ 0x74
 8005748:	4607      	mov	r7, r0
 800574a:	460d      	mov	r5, r1
 800574c:	4614      	mov	r4, r2
 800574e:	d510      	bpl.n	8005772 <_svfiprintf_r+0x36>
 8005750:	690b      	ldr	r3, [r1, #16]
 8005752:	b973      	cbnz	r3, 8005772 <_svfiprintf_r+0x36>
 8005754:	2140      	movs	r1, #64	@ 0x40
 8005756:	f7fe fbef 	bl	8003f38 <_malloc_r>
 800575a:	6028      	str	r0, [r5, #0]
 800575c:	6128      	str	r0, [r5, #16]
 800575e:	b930      	cbnz	r0, 800576e <_svfiprintf_r+0x32>
 8005760:	230c      	movs	r3, #12
 8005762:	603b      	str	r3, [r7, #0]
 8005764:	f04f 30ff 	mov.w	r0, #4294967295
 8005768:	b01d      	add	sp, #116	@ 0x74
 800576a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800576e:	2340      	movs	r3, #64	@ 0x40
 8005770:	616b      	str	r3, [r5, #20]
 8005772:	2300      	movs	r3, #0
 8005774:	9309      	str	r3, [sp, #36]	@ 0x24
 8005776:	2320      	movs	r3, #32
 8005778:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800577c:	f8cd 800c 	str.w	r8, [sp, #12]
 8005780:	2330      	movs	r3, #48	@ 0x30
 8005782:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005920 <_svfiprintf_r+0x1e4>
 8005786:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800578a:	f04f 0901 	mov.w	r9, #1
 800578e:	4623      	mov	r3, r4
 8005790:	469a      	mov	sl, r3
 8005792:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005796:	b10a      	cbz	r2, 800579c <_svfiprintf_r+0x60>
 8005798:	2a25      	cmp	r2, #37	@ 0x25
 800579a:	d1f9      	bne.n	8005790 <_svfiprintf_r+0x54>
 800579c:	ebba 0b04 	subs.w	fp, sl, r4
 80057a0:	d00b      	beq.n	80057ba <_svfiprintf_r+0x7e>
 80057a2:	465b      	mov	r3, fp
 80057a4:	4622      	mov	r2, r4
 80057a6:	4629      	mov	r1, r5
 80057a8:	4638      	mov	r0, r7
 80057aa:	f7ff ff6b 	bl	8005684 <__ssputs_r>
 80057ae:	3001      	adds	r0, #1
 80057b0:	f000 80a7 	beq.w	8005902 <_svfiprintf_r+0x1c6>
 80057b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80057b6:	445a      	add	r2, fp
 80057b8:	9209      	str	r2, [sp, #36]	@ 0x24
 80057ba:	f89a 3000 	ldrb.w	r3, [sl]
 80057be:	2b00      	cmp	r3, #0
 80057c0:	f000 809f 	beq.w	8005902 <_svfiprintf_r+0x1c6>
 80057c4:	2300      	movs	r3, #0
 80057c6:	f04f 32ff 	mov.w	r2, #4294967295
 80057ca:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80057ce:	f10a 0a01 	add.w	sl, sl, #1
 80057d2:	9304      	str	r3, [sp, #16]
 80057d4:	9307      	str	r3, [sp, #28]
 80057d6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80057da:	931a      	str	r3, [sp, #104]	@ 0x68
 80057dc:	4654      	mov	r4, sl
 80057de:	2205      	movs	r2, #5
 80057e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80057e4:	484e      	ldr	r0, [pc, #312]	@ (8005920 <_svfiprintf_r+0x1e4>)
 80057e6:	f7fa fcf3 	bl	80001d0 <memchr>
 80057ea:	9a04      	ldr	r2, [sp, #16]
 80057ec:	b9d8      	cbnz	r0, 8005826 <_svfiprintf_r+0xea>
 80057ee:	06d0      	lsls	r0, r2, #27
 80057f0:	bf44      	itt	mi
 80057f2:	2320      	movmi	r3, #32
 80057f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80057f8:	0711      	lsls	r1, r2, #28
 80057fa:	bf44      	itt	mi
 80057fc:	232b      	movmi	r3, #43	@ 0x2b
 80057fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005802:	f89a 3000 	ldrb.w	r3, [sl]
 8005806:	2b2a      	cmp	r3, #42	@ 0x2a
 8005808:	d015      	beq.n	8005836 <_svfiprintf_r+0xfa>
 800580a:	9a07      	ldr	r2, [sp, #28]
 800580c:	4654      	mov	r4, sl
 800580e:	2000      	movs	r0, #0
 8005810:	f04f 0c0a 	mov.w	ip, #10
 8005814:	4621      	mov	r1, r4
 8005816:	f811 3b01 	ldrb.w	r3, [r1], #1
 800581a:	3b30      	subs	r3, #48	@ 0x30
 800581c:	2b09      	cmp	r3, #9
 800581e:	d94b      	bls.n	80058b8 <_svfiprintf_r+0x17c>
 8005820:	b1b0      	cbz	r0, 8005850 <_svfiprintf_r+0x114>
 8005822:	9207      	str	r2, [sp, #28]
 8005824:	e014      	b.n	8005850 <_svfiprintf_r+0x114>
 8005826:	eba0 0308 	sub.w	r3, r0, r8
 800582a:	fa09 f303 	lsl.w	r3, r9, r3
 800582e:	4313      	orrs	r3, r2
 8005830:	9304      	str	r3, [sp, #16]
 8005832:	46a2      	mov	sl, r4
 8005834:	e7d2      	b.n	80057dc <_svfiprintf_r+0xa0>
 8005836:	9b03      	ldr	r3, [sp, #12]
 8005838:	1d19      	adds	r1, r3, #4
 800583a:	681b      	ldr	r3, [r3, #0]
 800583c:	9103      	str	r1, [sp, #12]
 800583e:	2b00      	cmp	r3, #0
 8005840:	bfbb      	ittet	lt
 8005842:	425b      	neglt	r3, r3
 8005844:	f042 0202 	orrlt.w	r2, r2, #2
 8005848:	9307      	strge	r3, [sp, #28]
 800584a:	9307      	strlt	r3, [sp, #28]
 800584c:	bfb8      	it	lt
 800584e:	9204      	strlt	r2, [sp, #16]
 8005850:	7823      	ldrb	r3, [r4, #0]
 8005852:	2b2e      	cmp	r3, #46	@ 0x2e
 8005854:	d10a      	bne.n	800586c <_svfiprintf_r+0x130>
 8005856:	7863      	ldrb	r3, [r4, #1]
 8005858:	2b2a      	cmp	r3, #42	@ 0x2a
 800585a:	d132      	bne.n	80058c2 <_svfiprintf_r+0x186>
 800585c:	9b03      	ldr	r3, [sp, #12]
 800585e:	1d1a      	adds	r2, r3, #4
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	9203      	str	r2, [sp, #12]
 8005864:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005868:	3402      	adds	r4, #2
 800586a:	9305      	str	r3, [sp, #20]
 800586c:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8005924 <_svfiprintf_r+0x1e8>
 8005870:	7821      	ldrb	r1, [r4, #0]
 8005872:	2203      	movs	r2, #3
 8005874:	4650      	mov	r0, sl
 8005876:	f7fa fcab 	bl	80001d0 <memchr>
 800587a:	b138      	cbz	r0, 800588c <_svfiprintf_r+0x150>
 800587c:	9b04      	ldr	r3, [sp, #16]
 800587e:	eba0 000a 	sub.w	r0, r0, sl
 8005882:	2240      	movs	r2, #64	@ 0x40
 8005884:	4082      	lsls	r2, r0
 8005886:	4313      	orrs	r3, r2
 8005888:	3401      	adds	r4, #1
 800588a:	9304      	str	r3, [sp, #16]
 800588c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005890:	4825      	ldr	r0, [pc, #148]	@ (8005928 <_svfiprintf_r+0x1ec>)
 8005892:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005896:	2206      	movs	r2, #6
 8005898:	f7fa fc9a 	bl	80001d0 <memchr>
 800589c:	2800      	cmp	r0, #0
 800589e:	d036      	beq.n	800590e <_svfiprintf_r+0x1d2>
 80058a0:	4b22      	ldr	r3, [pc, #136]	@ (800592c <_svfiprintf_r+0x1f0>)
 80058a2:	bb1b      	cbnz	r3, 80058ec <_svfiprintf_r+0x1b0>
 80058a4:	9b03      	ldr	r3, [sp, #12]
 80058a6:	3307      	adds	r3, #7
 80058a8:	f023 0307 	bic.w	r3, r3, #7
 80058ac:	3308      	adds	r3, #8
 80058ae:	9303      	str	r3, [sp, #12]
 80058b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80058b2:	4433      	add	r3, r6
 80058b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80058b6:	e76a      	b.n	800578e <_svfiprintf_r+0x52>
 80058b8:	fb0c 3202 	mla	r2, ip, r2, r3
 80058bc:	460c      	mov	r4, r1
 80058be:	2001      	movs	r0, #1
 80058c0:	e7a8      	b.n	8005814 <_svfiprintf_r+0xd8>
 80058c2:	2300      	movs	r3, #0
 80058c4:	3401      	adds	r4, #1
 80058c6:	9305      	str	r3, [sp, #20]
 80058c8:	4619      	mov	r1, r3
 80058ca:	f04f 0c0a 	mov.w	ip, #10
 80058ce:	4620      	mov	r0, r4
 80058d0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80058d4:	3a30      	subs	r2, #48	@ 0x30
 80058d6:	2a09      	cmp	r2, #9
 80058d8:	d903      	bls.n	80058e2 <_svfiprintf_r+0x1a6>
 80058da:	2b00      	cmp	r3, #0
 80058dc:	d0c6      	beq.n	800586c <_svfiprintf_r+0x130>
 80058de:	9105      	str	r1, [sp, #20]
 80058e0:	e7c4      	b.n	800586c <_svfiprintf_r+0x130>
 80058e2:	fb0c 2101 	mla	r1, ip, r1, r2
 80058e6:	4604      	mov	r4, r0
 80058e8:	2301      	movs	r3, #1
 80058ea:	e7f0      	b.n	80058ce <_svfiprintf_r+0x192>
 80058ec:	ab03      	add	r3, sp, #12
 80058ee:	9300      	str	r3, [sp, #0]
 80058f0:	462a      	mov	r2, r5
 80058f2:	4b0f      	ldr	r3, [pc, #60]	@ (8005930 <_svfiprintf_r+0x1f4>)
 80058f4:	a904      	add	r1, sp, #16
 80058f6:	4638      	mov	r0, r7
 80058f8:	f7fc fce6 	bl	80022c8 <_printf_float>
 80058fc:	1c42      	adds	r2, r0, #1
 80058fe:	4606      	mov	r6, r0
 8005900:	d1d6      	bne.n	80058b0 <_svfiprintf_r+0x174>
 8005902:	89ab      	ldrh	r3, [r5, #12]
 8005904:	065b      	lsls	r3, r3, #25
 8005906:	f53f af2d 	bmi.w	8005764 <_svfiprintf_r+0x28>
 800590a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800590c:	e72c      	b.n	8005768 <_svfiprintf_r+0x2c>
 800590e:	ab03      	add	r3, sp, #12
 8005910:	9300      	str	r3, [sp, #0]
 8005912:	462a      	mov	r2, r5
 8005914:	4b06      	ldr	r3, [pc, #24]	@ (8005930 <_svfiprintf_r+0x1f4>)
 8005916:	a904      	add	r1, sp, #16
 8005918:	4638      	mov	r0, r7
 800591a:	f7fc ff6f 	bl	80027fc <_printf_i>
 800591e:	e7ed      	b.n	80058fc <_svfiprintf_r+0x1c0>
 8005920:	08006949 	.word	0x08006949
 8005924:	0800694f 	.word	0x0800694f
 8005928:	08006953 	.word	0x08006953
 800592c:	080022c9 	.word	0x080022c9
 8005930:	08005685 	.word	0x08005685

08005934 <__sflush_r>:
 8005934:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800593a:	0716      	lsls	r6, r2, #28
 800593c:	4605      	mov	r5, r0
 800593e:	460c      	mov	r4, r1
 8005940:	d454      	bmi.n	80059ec <__sflush_r+0xb8>
 8005942:	684b      	ldr	r3, [r1, #4]
 8005944:	2b00      	cmp	r3, #0
 8005946:	dc02      	bgt.n	800594e <__sflush_r+0x1a>
 8005948:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800594a:	2b00      	cmp	r3, #0
 800594c:	dd48      	ble.n	80059e0 <__sflush_r+0xac>
 800594e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005950:	2e00      	cmp	r6, #0
 8005952:	d045      	beq.n	80059e0 <__sflush_r+0xac>
 8005954:	2300      	movs	r3, #0
 8005956:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800595a:	682f      	ldr	r7, [r5, #0]
 800595c:	6a21      	ldr	r1, [r4, #32]
 800595e:	602b      	str	r3, [r5, #0]
 8005960:	d030      	beq.n	80059c4 <__sflush_r+0x90>
 8005962:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005964:	89a3      	ldrh	r3, [r4, #12]
 8005966:	0759      	lsls	r1, r3, #29
 8005968:	d505      	bpl.n	8005976 <__sflush_r+0x42>
 800596a:	6863      	ldr	r3, [r4, #4]
 800596c:	1ad2      	subs	r2, r2, r3
 800596e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005970:	b10b      	cbz	r3, 8005976 <__sflush_r+0x42>
 8005972:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005974:	1ad2      	subs	r2, r2, r3
 8005976:	2300      	movs	r3, #0
 8005978:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800597a:	6a21      	ldr	r1, [r4, #32]
 800597c:	4628      	mov	r0, r5
 800597e:	47b0      	blx	r6
 8005980:	1c43      	adds	r3, r0, #1
 8005982:	89a3      	ldrh	r3, [r4, #12]
 8005984:	d106      	bne.n	8005994 <__sflush_r+0x60>
 8005986:	6829      	ldr	r1, [r5, #0]
 8005988:	291d      	cmp	r1, #29
 800598a:	d82b      	bhi.n	80059e4 <__sflush_r+0xb0>
 800598c:	4a28      	ldr	r2, [pc, #160]	@ (8005a30 <__sflush_r+0xfc>)
 800598e:	40ca      	lsrs	r2, r1
 8005990:	07d6      	lsls	r6, r2, #31
 8005992:	d527      	bpl.n	80059e4 <__sflush_r+0xb0>
 8005994:	2200      	movs	r2, #0
 8005996:	6062      	str	r2, [r4, #4]
 8005998:	04d9      	lsls	r1, r3, #19
 800599a:	6922      	ldr	r2, [r4, #16]
 800599c:	6022      	str	r2, [r4, #0]
 800599e:	d504      	bpl.n	80059aa <__sflush_r+0x76>
 80059a0:	1c42      	adds	r2, r0, #1
 80059a2:	d101      	bne.n	80059a8 <__sflush_r+0x74>
 80059a4:	682b      	ldr	r3, [r5, #0]
 80059a6:	b903      	cbnz	r3, 80059aa <__sflush_r+0x76>
 80059a8:	6560      	str	r0, [r4, #84]	@ 0x54
 80059aa:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80059ac:	602f      	str	r7, [r5, #0]
 80059ae:	b1b9      	cbz	r1, 80059e0 <__sflush_r+0xac>
 80059b0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80059b4:	4299      	cmp	r1, r3
 80059b6:	d002      	beq.n	80059be <__sflush_r+0x8a>
 80059b8:	4628      	mov	r0, r5
 80059ba:	f7fe fa49 	bl	8003e50 <_free_r>
 80059be:	2300      	movs	r3, #0
 80059c0:	6363      	str	r3, [r4, #52]	@ 0x34
 80059c2:	e00d      	b.n	80059e0 <__sflush_r+0xac>
 80059c4:	2301      	movs	r3, #1
 80059c6:	4628      	mov	r0, r5
 80059c8:	47b0      	blx	r6
 80059ca:	4602      	mov	r2, r0
 80059cc:	1c50      	adds	r0, r2, #1
 80059ce:	d1c9      	bne.n	8005964 <__sflush_r+0x30>
 80059d0:	682b      	ldr	r3, [r5, #0]
 80059d2:	2b00      	cmp	r3, #0
 80059d4:	d0c6      	beq.n	8005964 <__sflush_r+0x30>
 80059d6:	2b1d      	cmp	r3, #29
 80059d8:	d001      	beq.n	80059de <__sflush_r+0xaa>
 80059da:	2b16      	cmp	r3, #22
 80059dc:	d11d      	bne.n	8005a1a <__sflush_r+0xe6>
 80059de:	602f      	str	r7, [r5, #0]
 80059e0:	2000      	movs	r0, #0
 80059e2:	e021      	b.n	8005a28 <__sflush_r+0xf4>
 80059e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80059e8:	b21b      	sxth	r3, r3
 80059ea:	e01a      	b.n	8005a22 <__sflush_r+0xee>
 80059ec:	690f      	ldr	r7, [r1, #16]
 80059ee:	2f00      	cmp	r7, #0
 80059f0:	d0f6      	beq.n	80059e0 <__sflush_r+0xac>
 80059f2:	0793      	lsls	r3, r2, #30
 80059f4:	680e      	ldr	r6, [r1, #0]
 80059f6:	bf08      	it	eq
 80059f8:	694b      	ldreq	r3, [r1, #20]
 80059fa:	600f      	str	r7, [r1, #0]
 80059fc:	bf18      	it	ne
 80059fe:	2300      	movne	r3, #0
 8005a00:	1bf6      	subs	r6, r6, r7
 8005a02:	608b      	str	r3, [r1, #8]
 8005a04:	2e00      	cmp	r6, #0
 8005a06:	ddeb      	ble.n	80059e0 <__sflush_r+0xac>
 8005a08:	6a21      	ldr	r1, [r4, #32]
 8005a0a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8005a0e:	4633      	mov	r3, r6
 8005a10:	463a      	mov	r2, r7
 8005a12:	4628      	mov	r0, r5
 8005a14:	47e0      	blx	ip
 8005a16:	2800      	cmp	r0, #0
 8005a18:	dc07      	bgt.n	8005a2a <__sflush_r+0xf6>
 8005a1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005a1e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005a22:	81a3      	strh	r3, [r4, #12]
 8005a24:	f04f 30ff 	mov.w	r0, #4294967295
 8005a28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005a2a:	4407      	add	r7, r0
 8005a2c:	1a36      	subs	r6, r6, r0
 8005a2e:	e7e9      	b.n	8005a04 <__sflush_r+0xd0>
 8005a30:	20400001 	.word	0x20400001

08005a34 <_fflush_r>:
 8005a34:	b538      	push	{r3, r4, r5, lr}
 8005a36:	690b      	ldr	r3, [r1, #16]
 8005a38:	4605      	mov	r5, r0
 8005a3a:	460c      	mov	r4, r1
 8005a3c:	b913      	cbnz	r3, 8005a44 <_fflush_r+0x10>
 8005a3e:	2500      	movs	r5, #0
 8005a40:	4628      	mov	r0, r5
 8005a42:	bd38      	pop	{r3, r4, r5, pc}
 8005a44:	b118      	cbz	r0, 8005a4e <_fflush_r+0x1a>
 8005a46:	6a03      	ldr	r3, [r0, #32]
 8005a48:	b90b      	cbnz	r3, 8005a4e <_fflush_r+0x1a>
 8005a4a:	f7fd fa89 	bl	8002f60 <__sinit>
 8005a4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005a52:	2b00      	cmp	r3, #0
 8005a54:	d0f3      	beq.n	8005a3e <_fflush_r+0xa>
 8005a56:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005a58:	07d0      	lsls	r0, r2, #31
 8005a5a:	d404      	bmi.n	8005a66 <_fflush_r+0x32>
 8005a5c:	0599      	lsls	r1, r3, #22
 8005a5e:	d402      	bmi.n	8005a66 <_fflush_r+0x32>
 8005a60:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005a62:	f7fd fb96 	bl	8003192 <__retarget_lock_acquire_recursive>
 8005a66:	4628      	mov	r0, r5
 8005a68:	4621      	mov	r1, r4
 8005a6a:	f7ff ff63 	bl	8005934 <__sflush_r>
 8005a6e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005a70:	07da      	lsls	r2, r3, #31
 8005a72:	4605      	mov	r5, r0
 8005a74:	d4e4      	bmi.n	8005a40 <_fflush_r+0xc>
 8005a76:	89a3      	ldrh	r3, [r4, #12]
 8005a78:	059b      	lsls	r3, r3, #22
 8005a7a:	d4e1      	bmi.n	8005a40 <_fflush_r+0xc>
 8005a7c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005a7e:	f7fd fb89 	bl	8003194 <__retarget_lock_release_recursive>
 8005a82:	e7dd      	b.n	8005a40 <_fflush_r+0xc>

08005a84 <memmove>:
 8005a84:	4288      	cmp	r0, r1
 8005a86:	b510      	push	{r4, lr}
 8005a88:	eb01 0402 	add.w	r4, r1, r2
 8005a8c:	d902      	bls.n	8005a94 <memmove+0x10>
 8005a8e:	4284      	cmp	r4, r0
 8005a90:	4623      	mov	r3, r4
 8005a92:	d807      	bhi.n	8005aa4 <memmove+0x20>
 8005a94:	1e43      	subs	r3, r0, #1
 8005a96:	42a1      	cmp	r1, r4
 8005a98:	d008      	beq.n	8005aac <memmove+0x28>
 8005a9a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005a9e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005aa2:	e7f8      	b.n	8005a96 <memmove+0x12>
 8005aa4:	4402      	add	r2, r0
 8005aa6:	4601      	mov	r1, r0
 8005aa8:	428a      	cmp	r2, r1
 8005aaa:	d100      	bne.n	8005aae <memmove+0x2a>
 8005aac:	bd10      	pop	{r4, pc}
 8005aae:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005ab2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005ab6:	e7f7      	b.n	8005aa8 <memmove+0x24>

08005ab8 <strncmp>:
 8005ab8:	b510      	push	{r4, lr}
 8005aba:	b16a      	cbz	r2, 8005ad8 <strncmp+0x20>
 8005abc:	3901      	subs	r1, #1
 8005abe:	1884      	adds	r4, r0, r2
 8005ac0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005ac4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8005ac8:	429a      	cmp	r2, r3
 8005aca:	d103      	bne.n	8005ad4 <strncmp+0x1c>
 8005acc:	42a0      	cmp	r0, r4
 8005ace:	d001      	beq.n	8005ad4 <strncmp+0x1c>
 8005ad0:	2a00      	cmp	r2, #0
 8005ad2:	d1f5      	bne.n	8005ac0 <strncmp+0x8>
 8005ad4:	1ad0      	subs	r0, r2, r3
 8005ad6:	bd10      	pop	{r4, pc}
 8005ad8:	4610      	mov	r0, r2
 8005ada:	e7fc      	b.n	8005ad6 <strncmp+0x1e>

08005adc <_sbrk_r>:
 8005adc:	b538      	push	{r3, r4, r5, lr}
 8005ade:	4d06      	ldr	r5, [pc, #24]	@ (8005af8 <_sbrk_r+0x1c>)
 8005ae0:	2300      	movs	r3, #0
 8005ae2:	4604      	mov	r4, r0
 8005ae4:	4608      	mov	r0, r1
 8005ae6:	602b      	str	r3, [r5, #0]
 8005ae8:	f7fb f9a0 	bl	8000e2c <_sbrk>
 8005aec:	1c43      	adds	r3, r0, #1
 8005aee:	d102      	bne.n	8005af6 <_sbrk_r+0x1a>
 8005af0:	682b      	ldr	r3, [r5, #0]
 8005af2:	b103      	cbz	r3, 8005af6 <_sbrk_r+0x1a>
 8005af4:	6023      	str	r3, [r4, #0]
 8005af6:	bd38      	pop	{r3, r4, r5, pc}
 8005af8:	2000032c 	.word	0x2000032c

08005afc <memcpy>:
 8005afc:	440a      	add	r2, r1
 8005afe:	4291      	cmp	r1, r2
 8005b00:	f100 33ff 	add.w	r3, r0, #4294967295
 8005b04:	d100      	bne.n	8005b08 <memcpy+0xc>
 8005b06:	4770      	bx	lr
 8005b08:	b510      	push	{r4, lr}
 8005b0a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005b0e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005b12:	4291      	cmp	r1, r2
 8005b14:	d1f9      	bne.n	8005b0a <memcpy+0xe>
 8005b16:	bd10      	pop	{r4, pc}

08005b18 <nan>:
 8005b18:	4901      	ldr	r1, [pc, #4]	@ (8005b20 <nan+0x8>)
 8005b1a:	2000      	movs	r0, #0
 8005b1c:	4770      	bx	lr
 8005b1e:	bf00      	nop
 8005b20:	7ff80000 	.word	0x7ff80000

08005b24 <__assert_func>:
 8005b24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005b26:	4614      	mov	r4, r2
 8005b28:	461a      	mov	r2, r3
 8005b2a:	4b09      	ldr	r3, [pc, #36]	@ (8005b50 <__assert_func+0x2c>)
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	4605      	mov	r5, r0
 8005b30:	68d8      	ldr	r0, [r3, #12]
 8005b32:	b14c      	cbz	r4, 8005b48 <__assert_func+0x24>
 8005b34:	4b07      	ldr	r3, [pc, #28]	@ (8005b54 <__assert_func+0x30>)
 8005b36:	9100      	str	r1, [sp, #0]
 8005b38:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005b3c:	4906      	ldr	r1, [pc, #24]	@ (8005b58 <__assert_func+0x34>)
 8005b3e:	462b      	mov	r3, r5
 8005b40:	f000 fba8 	bl	8006294 <fiprintf>
 8005b44:	f000 fbb8 	bl	80062b8 <abort>
 8005b48:	4b04      	ldr	r3, [pc, #16]	@ (8005b5c <__assert_func+0x38>)
 8005b4a:	461c      	mov	r4, r3
 8005b4c:	e7f3      	b.n	8005b36 <__assert_func+0x12>
 8005b4e:	bf00      	nop
 8005b50:	20000010 	.word	0x20000010
 8005b54:	08006962 	.word	0x08006962
 8005b58:	0800696f 	.word	0x0800696f
 8005b5c:	0800699d 	.word	0x0800699d

08005b60 <_calloc_r>:
 8005b60:	b570      	push	{r4, r5, r6, lr}
 8005b62:	fba1 5402 	umull	r5, r4, r1, r2
 8005b66:	b934      	cbnz	r4, 8005b76 <_calloc_r+0x16>
 8005b68:	4629      	mov	r1, r5
 8005b6a:	f7fe f9e5 	bl	8003f38 <_malloc_r>
 8005b6e:	4606      	mov	r6, r0
 8005b70:	b928      	cbnz	r0, 8005b7e <_calloc_r+0x1e>
 8005b72:	4630      	mov	r0, r6
 8005b74:	bd70      	pop	{r4, r5, r6, pc}
 8005b76:	220c      	movs	r2, #12
 8005b78:	6002      	str	r2, [r0, #0]
 8005b7a:	2600      	movs	r6, #0
 8005b7c:	e7f9      	b.n	8005b72 <_calloc_r+0x12>
 8005b7e:	462a      	mov	r2, r5
 8005b80:	4621      	mov	r1, r4
 8005b82:	f7fd fa88 	bl	8003096 <memset>
 8005b86:	e7f4      	b.n	8005b72 <_calloc_r+0x12>

08005b88 <rshift>:
 8005b88:	6903      	ldr	r3, [r0, #16]
 8005b8a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005b8e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005b92:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005b96:	f100 0414 	add.w	r4, r0, #20
 8005b9a:	dd45      	ble.n	8005c28 <rshift+0xa0>
 8005b9c:	f011 011f 	ands.w	r1, r1, #31
 8005ba0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005ba4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005ba8:	d10c      	bne.n	8005bc4 <rshift+0x3c>
 8005baa:	f100 0710 	add.w	r7, r0, #16
 8005bae:	4629      	mov	r1, r5
 8005bb0:	42b1      	cmp	r1, r6
 8005bb2:	d334      	bcc.n	8005c1e <rshift+0x96>
 8005bb4:	1a9b      	subs	r3, r3, r2
 8005bb6:	009b      	lsls	r3, r3, #2
 8005bb8:	1eea      	subs	r2, r5, #3
 8005bba:	4296      	cmp	r6, r2
 8005bbc:	bf38      	it	cc
 8005bbe:	2300      	movcc	r3, #0
 8005bc0:	4423      	add	r3, r4
 8005bc2:	e015      	b.n	8005bf0 <rshift+0x68>
 8005bc4:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005bc8:	f1c1 0820 	rsb	r8, r1, #32
 8005bcc:	40cf      	lsrs	r7, r1
 8005bce:	f105 0e04 	add.w	lr, r5, #4
 8005bd2:	46a1      	mov	r9, r4
 8005bd4:	4576      	cmp	r6, lr
 8005bd6:	46f4      	mov	ip, lr
 8005bd8:	d815      	bhi.n	8005c06 <rshift+0x7e>
 8005bda:	1a9a      	subs	r2, r3, r2
 8005bdc:	0092      	lsls	r2, r2, #2
 8005bde:	3a04      	subs	r2, #4
 8005be0:	3501      	adds	r5, #1
 8005be2:	42ae      	cmp	r6, r5
 8005be4:	bf38      	it	cc
 8005be6:	2200      	movcc	r2, #0
 8005be8:	18a3      	adds	r3, r4, r2
 8005bea:	50a7      	str	r7, [r4, r2]
 8005bec:	b107      	cbz	r7, 8005bf0 <rshift+0x68>
 8005bee:	3304      	adds	r3, #4
 8005bf0:	1b1a      	subs	r2, r3, r4
 8005bf2:	42a3      	cmp	r3, r4
 8005bf4:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005bf8:	bf08      	it	eq
 8005bfa:	2300      	moveq	r3, #0
 8005bfc:	6102      	str	r2, [r0, #16]
 8005bfe:	bf08      	it	eq
 8005c00:	6143      	streq	r3, [r0, #20]
 8005c02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005c06:	f8dc c000 	ldr.w	ip, [ip]
 8005c0a:	fa0c fc08 	lsl.w	ip, ip, r8
 8005c0e:	ea4c 0707 	orr.w	r7, ip, r7
 8005c12:	f849 7b04 	str.w	r7, [r9], #4
 8005c16:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005c1a:	40cf      	lsrs	r7, r1
 8005c1c:	e7da      	b.n	8005bd4 <rshift+0x4c>
 8005c1e:	f851 cb04 	ldr.w	ip, [r1], #4
 8005c22:	f847 cf04 	str.w	ip, [r7, #4]!
 8005c26:	e7c3      	b.n	8005bb0 <rshift+0x28>
 8005c28:	4623      	mov	r3, r4
 8005c2a:	e7e1      	b.n	8005bf0 <rshift+0x68>

08005c2c <__hexdig_fun>:
 8005c2c:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8005c30:	2b09      	cmp	r3, #9
 8005c32:	d802      	bhi.n	8005c3a <__hexdig_fun+0xe>
 8005c34:	3820      	subs	r0, #32
 8005c36:	b2c0      	uxtb	r0, r0
 8005c38:	4770      	bx	lr
 8005c3a:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005c3e:	2b05      	cmp	r3, #5
 8005c40:	d801      	bhi.n	8005c46 <__hexdig_fun+0x1a>
 8005c42:	3847      	subs	r0, #71	@ 0x47
 8005c44:	e7f7      	b.n	8005c36 <__hexdig_fun+0xa>
 8005c46:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005c4a:	2b05      	cmp	r3, #5
 8005c4c:	d801      	bhi.n	8005c52 <__hexdig_fun+0x26>
 8005c4e:	3827      	subs	r0, #39	@ 0x27
 8005c50:	e7f1      	b.n	8005c36 <__hexdig_fun+0xa>
 8005c52:	2000      	movs	r0, #0
 8005c54:	4770      	bx	lr
	...

08005c58 <__gethex>:
 8005c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c5c:	b085      	sub	sp, #20
 8005c5e:	468a      	mov	sl, r1
 8005c60:	9302      	str	r3, [sp, #8]
 8005c62:	680b      	ldr	r3, [r1, #0]
 8005c64:	9001      	str	r0, [sp, #4]
 8005c66:	4690      	mov	r8, r2
 8005c68:	1c9c      	adds	r4, r3, #2
 8005c6a:	46a1      	mov	r9, r4
 8005c6c:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005c70:	2830      	cmp	r0, #48	@ 0x30
 8005c72:	d0fa      	beq.n	8005c6a <__gethex+0x12>
 8005c74:	eba9 0303 	sub.w	r3, r9, r3
 8005c78:	f1a3 0b02 	sub.w	fp, r3, #2
 8005c7c:	f7ff ffd6 	bl	8005c2c <__hexdig_fun>
 8005c80:	4605      	mov	r5, r0
 8005c82:	2800      	cmp	r0, #0
 8005c84:	d168      	bne.n	8005d58 <__gethex+0x100>
 8005c86:	49a0      	ldr	r1, [pc, #640]	@ (8005f08 <__gethex+0x2b0>)
 8005c88:	2201      	movs	r2, #1
 8005c8a:	4648      	mov	r0, r9
 8005c8c:	f7ff ff14 	bl	8005ab8 <strncmp>
 8005c90:	4607      	mov	r7, r0
 8005c92:	2800      	cmp	r0, #0
 8005c94:	d167      	bne.n	8005d66 <__gethex+0x10e>
 8005c96:	f899 0001 	ldrb.w	r0, [r9, #1]
 8005c9a:	4626      	mov	r6, r4
 8005c9c:	f7ff ffc6 	bl	8005c2c <__hexdig_fun>
 8005ca0:	2800      	cmp	r0, #0
 8005ca2:	d062      	beq.n	8005d6a <__gethex+0x112>
 8005ca4:	4623      	mov	r3, r4
 8005ca6:	7818      	ldrb	r0, [r3, #0]
 8005ca8:	2830      	cmp	r0, #48	@ 0x30
 8005caa:	4699      	mov	r9, r3
 8005cac:	f103 0301 	add.w	r3, r3, #1
 8005cb0:	d0f9      	beq.n	8005ca6 <__gethex+0x4e>
 8005cb2:	f7ff ffbb 	bl	8005c2c <__hexdig_fun>
 8005cb6:	fab0 f580 	clz	r5, r0
 8005cba:	096d      	lsrs	r5, r5, #5
 8005cbc:	f04f 0b01 	mov.w	fp, #1
 8005cc0:	464a      	mov	r2, r9
 8005cc2:	4616      	mov	r6, r2
 8005cc4:	3201      	adds	r2, #1
 8005cc6:	7830      	ldrb	r0, [r6, #0]
 8005cc8:	f7ff ffb0 	bl	8005c2c <__hexdig_fun>
 8005ccc:	2800      	cmp	r0, #0
 8005cce:	d1f8      	bne.n	8005cc2 <__gethex+0x6a>
 8005cd0:	498d      	ldr	r1, [pc, #564]	@ (8005f08 <__gethex+0x2b0>)
 8005cd2:	2201      	movs	r2, #1
 8005cd4:	4630      	mov	r0, r6
 8005cd6:	f7ff feef 	bl	8005ab8 <strncmp>
 8005cda:	2800      	cmp	r0, #0
 8005cdc:	d13f      	bne.n	8005d5e <__gethex+0x106>
 8005cde:	b944      	cbnz	r4, 8005cf2 <__gethex+0x9a>
 8005ce0:	1c74      	adds	r4, r6, #1
 8005ce2:	4622      	mov	r2, r4
 8005ce4:	4616      	mov	r6, r2
 8005ce6:	3201      	adds	r2, #1
 8005ce8:	7830      	ldrb	r0, [r6, #0]
 8005cea:	f7ff ff9f 	bl	8005c2c <__hexdig_fun>
 8005cee:	2800      	cmp	r0, #0
 8005cf0:	d1f8      	bne.n	8005ce4 <__gethex+0x8c>
 8005cf2:	1ba4      	subs	r4, r4, r6
 8005cf4:	00a7      	lsls	r7, r4, #2
 8005cf6:	7833      	ldrb	r3, [r6, #0]
 8005cf8:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8005cfc:	2b50      	cmp	r3, #80	@ 0x50
 8005cfe:	d13e      	bne.n	8005d7e <__gethex+0x126>
 8005d00:	7873      	ldrb	r3, [r6, #1]
 8005d02:	2b2b      	cmp	r3, #43	@ 0x2b
 8005d04:	d033      	beq.n	8005d6e <__gethex+0x116>
 8005d06:	2b2d      	cmp	r3, #45	@ 0x2d
 8005d08:	d034      	beq.n	8005d74 <__gethex+0x11c>
 8005d0a:	1c71      	adds	r1, r6, #1
 8005d0c:	2400      	movs	r4, #0
 8005d0e:	7808      	ldrb	r0, [r1, #0]
 8005d10:	f7ff ff8c 	bl	8005c2c <__hexdig_fun>
 8005d14:	1e43      	subs	r3, r0, #1
 8005d16:	b2db      	uxtb	r3, r3
 8005d18:	2b18      	cmp	r3, #24
 8005d1a:	d830      	bhi.n	8005d7e <__gethex+0x126>
 8005d1c:	f1a0 0210 	sub.w	r2, r0, #16
 8005d20:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005d24:	f7ff ff82 	bl	8005c2c <__hexdig_fun>
 8005d28:	f100 3cff 	add.w	ip, r0, #4294967295
 8005d2c:	fa5f fc8c 	uxtb.w	ip, ip
 8005d30:	f1bc 0f18 	cmp.w	ip, #24
 8005d34:	f04f 030a 	mov.w	r3, #10
 8005d38:	d91e      	bls.n	8005d78 <__gethex+0x120>
 8005d3a:	b104      	cbz	r4, 8005d3e <__gethex+0xe6>
 8005d3c:	4252      	negs	r2, r2
 8005d3e:	4417      	add	r7, r2
 8005d40:	f8ca 1000 	str.w	r1, [sl]
 8005d44:	b1ed      	cbz	r5, 8005d82 <__gethex+0x12a>
 8005d46:	f1bb 0f00 	cmp.w	fp, #0
 8005d4a:	bf0c      	ite	eq
 8005d4c:	2506      	moveq	r5, #6
 8005d4e:	2500      	movne	r5, #0
 8005d50:	4628      	mov	r0, r5
 8005d52:	b005      	add	sp, #20
 8005d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d58:	2500      	movs	r5, #0
 8005d5a:	462c      	mov	r4, r5
 8005d5c:	e7b0      	b.n	8005cc0 <__gethex+0x68>
 8005d5e:	2c00      	cmp	r4, #0
 8005d60:	d1c7      	bne.n	8005cf2 <__gethex+0x9a>
 8005d62:	4627      	mov	r7, r4
 8005d64:	e7c7      	b.n	8005cf6 <__gethex+0x9e>
 8005d66:	464e      	mov	r6, r9
 8005d68:	462f      	mov	r7, r5
 8005d6a:	2501      	movs	r5, #1
 8005d6c:	e7c3      	b.n	8005cf6 <__gethex+0x9e>
 8005d6e:	2400      	movs	r4, #0
 8005d70:	1cb1      	adds	r1, r6, #2
 8005d72:	e7cc      	b.n	8005d0e <__gethex+0xb6>
 8005d74:	2401      	movs	r4, #1
 8005d76:	e7fb      	b.n	8005d70 <__gethex+0x118>
 8005d78:	fb03 0002 	mla	r0, r3, r2, r0
 8005d7c:	e7ce      	b.n	8005d1c <__gethex+0xc4>
 8005d7e:	4631      	mov	r1, r6
 8005d80:	e7de      	b.n	8005d40 <__gethex+0xe8>
 8005d82:	eba6 0309 	sub.w	r3, r6, r9
 8005d86:	3b01      	subs	r3, #1
 8005d88:	4629      	mov	r1, r5
 8005d8a:	2b07      	cmp	r3, #7
 8005d8c:	dc0a      	bgt.n	8005da4 <__gethex+0x14c>
 8005d8e:	9801      	ldr	r0, [sp, #4]
 8005d90:	f7fe f95e 	bl	8004050 <_Balloc>
 8005d94:	4604      	mov	r4, r0
 8005d96:	b940      	cbnz	r0, 8005daa <__gethex+0x152>
 8005d98:	4b5c      	ldr	r3, [pc, #368]	@ (8005f0c <__gethex+0x2b4>)
 8005d9a:	4602      	mov	r2, r0
 8005d9c:	21e4      	movs	r1, #228	@ 0xe4
 8005d9e:	485c      	ldr	r0, [pc, #368]	@ (8005f10 <__gethex+0x2b8>)
 8005da0:	f7ff fec0 	bl	8005b24 <__assert_func>
 8005da4:	3101      	adds	r1, #1
 8005da6:	105b      	asrs	r3, r3, #1
 8005da8:	e7ef      	b.n	8005d8a <__gethex+0x132>
 8005daa:	f100 0a14 	add.w	sl, r0, #20
 8005dae:	2300      	movs	r3, #0
 8005db0:	4655      	mov	r5, sl
 8005db2:	469b      	mov	fp, r3
 8005db4:	45b1      	cmp	r9, r6
 8005db6:	d337      	bcc.n	8005e28 <__gethex+0x1d0>
 8005db8:	f845 bb04 	str.w	fp, [r5], #4
 8005dbc:	eba5 050a 	sub.w	r5, r5, sl
 8005dc0:	10ad      	asrs	r5, r5, #2
 8005dc2:	6125      	str	r5, [r4, #16]
 8005dc4:	4658      	mov	r0, fp
 8005dc6:	f7fe fa35 	bl	8004234 <__hi0bits>
 8005dca:	016d      	lsls	r5, r5, #5
 8005dcc:	f8d8 6000 	ldr.w	r6, [r8]
 8005dd0:	1a2d      	subs	r5, r5, r0
 8005dd2:	42b5      	cmp	r5, r6
 8005dd4:	dd54      	ble.n	8005e80 <__gethex+0x228>
 8005dd6:	1bad      	subs	r5, r5, r6
 8005dd8:	4629      	mov	r1, r5
 8005dda:	4620      	mov	r0, r4
 8005ddc:	f7fe fdb7 	bl	800494e <__any_on>
 8005de0:	4681      	mov	r9, r0
 8005de2:	b178      	cbz	r0, 8005e04 <__gethex+0x1ac>
 8005de4:	1e6b      	subs	r3, r5, #1
 8005de6:	1159      	asrs	r1, r3, #5
 8005de8:	f003 021f 	and.w	r2, r3, #31
 8005dec:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005df0:	f04f 0901 	mov.w	r9, #1
 8005df4:	fa09 f202 	lsl.w	r2, r9, r2
 8005df8:	420a      	tst	r2, r1
 8005dfa:	d003      	beq.n	8005e04 <__gethex+0x1ac>
 8005dfc:	454b      	cmp	r3, r9
 8005dfe:	dc36      	bgt.n	8005e6e <__gethex+0x216>
 8005e00:	f04f 0902 	mov.w	r9, #2
 8005e04:	4629      	mov	r1, r5
 8005e06:	4620      	mov	r0, r4
 8005e08:	f7ff febe 	bl	8005b88 <rshift>
 8005e0c:	442f      	add	r7, r5
 8005e0e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005e12:	42bb      	cmp	r3, r7
 8005e14:	da42      	bge.n	8005e9c <__gethex+0x244>
 8005e16:	9801      	ldr	r0, [sp, #4]
 8005e18:	4621      	mov	r1, r4
 8005e1a:	f7fe f959 	bl	80040d0 <_Bfree>
 8005e1e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005e20:	2300      	movs	r3, #0
 8005e22:	6013      	str	r3, [r2, #0]
 8005e24:	25a3      	movs	r5, #163	@ 0xa3
 8005e26:	e793      	b.n	8005d50 <__gethex+0xf8>
 8005e28:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005e2c:	2a2e      	cmp	r2, #46	@ 0x2e
 8005e2e:	d012      	beq.n	8005e56 <__gethex+0x1fe>
 8005e30:	2b20      	cmp	r3, #32
 8005e32:	d104      	bne.n	8005e3e <__gethex+0x1e6>
 8005e34:	f845 bb04 	str.w	fp, [r5], #4
 8005e38:	f04f 0b00 	mov.w	fp, #0
 8005e3c:	465b      	mov	r3, fp
 8005e3e:	7830      	ldrb	r0, [r6, #0]
 8005e40:	9303      	str	r3, [sp, #12]
 8005e42:	f7ff fef3 	bl	8005c2c <__hexdig_fun>
 8005e46:	9b03      	ldr	r3, [sp, #12]
 8005e48:	f000 000f 	and.w	r0, r0, #15
 8005e4c:	4098      	lsls	r0, r3
 8005e4e:	ea4b 0b00 	orr.w	fp, fp, r0
 8005e52:	3304      	adds	r3, #4
 8005e54:	e7ae      	b.n	8005db4 <__gethex+0x15c>
 8005e56:	45b1      	cmp	r9, r6
 8005e58:	d8ea      	bhi.n	8005e30 <__gethex+0x1d8>
 8005e5a:	492b      	ldr	r1, [pc, #172]	@ (8005f08 <__gethex+0x2b0>)
 8005e5c:	9303      	str	r3, [sp, #12]
 8005e5e:	2201      	movs	r2, #1
 8005e60:	4630      	mov	r0, r6
 8005e62:	f7ff fe29 	bl	8005ab8 <strncmp>
 8005e66:	9b03      	ldr	r3, [sp, #12]
 8005e68:	2800      	cmp	r0, #0
 8005e6a:	d1e1      	bne.n	8005e30 <__gethex+0x1d8>
 8005e6c:	e7a2      	b.n	8005db4 <__gethex+0x15c>
 8005e6e:	1ea9      	subs	r1, r5, #2
 8005e70:	4620      	mov	r0, r4
 8005e72:	f7fe fd6c 	bl	800494e <__any_on>
 8005e76:	2800      	cmp	r0, #0
 8005e78:	d0c2      	beq.n	8005e00 <__gethex+0x1a8>
 8005e7a:	f04f 0903 	mov.w	r9, #3
 8005e7e:	e7c1      	b.n	8005e04 <__gethex+0x1ac>
 8005e80:	da09      	bge.n	8005e96 <__gethex+0x23e>
 8005e82:	1b75      	subs	r5, r6, r5
 8005e84:	4621      	mov	r1, r4
 8005e86:	9801      	ldr	r0, [sp, #4]
 8005e88:	462a      	mov	r2, r5
 8005e8a:	f7fe fb31 	bl	80044f0 <__lshift>
 8005e8e:	1b7f      	subs	r7, r7, r5
 8005e90:	4604      	mov	r4, r0
 8005e92:	f100 0a14 	add.w	sl, r0, #20
 8005e96:	f04f 0900 	mov.w	r9, #0
 8005e9a:	e7b8      	b.n	8005e0e <__gethex+0x1b6>
 8005e9c:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005ea0:	42bd      	cmp	r5, r7
 8005ea2:	dd6f      	ble.n	8005f84 <__gethex+0x32c>
 8005ea4:	1bed      	subs	r5, r5, r7
 8005ea6:	42ae      	cmp	r6, r5
 8005ea8:	dc34      	bgt.n	8005f14 <__gethex+0x2bc>
 8005eaa:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005eae:	2b02      	cmp	r3, #2
 8005eb0:	d022      	beq.n	8005ef8 <__gethex+0x2a0>
 8005eb2:	2b03      	cmp	r3, #3
 8005eb4:	d024      	beq.n	8005f00 <__gethex+0x2a8>
 8005eb6:	2b01      	cmp	r3, #1
 8005eb8:	d115      	bne.n	8005ee6 <__gethex+0x28e>
 8005eba:	42ae      	cmp	r6, r5
 8005ebc:	d113      	bne.n	8005ee6 <__gethex+0x28e>
 8005ebe:	2e01      	cmp	r6, #1
 8005ec0:	d10b      	bne.n	8005eda <__gethex+0x282>
 8005ec2:	9a02      	ldr	r2, [sp, #8]
 8005ec4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005ec8:	6013      	str	r3, [r2, #0]
 8005eca:	2301      	movs	r3, #1
 8005ecc:	6123      	str	r3, [r4, #16]
 8005ece:	f8ca 3000 	str.w	r3, [sl]
 8005ed2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005ed4:	2562      	movs	r5, #98	@ 0x62
 8005ed6:	601c      	str	r4, [r3, #0]
 8005ed8:	e73a      	b.n	8005d50 <__gethex+0xf8>
 8005eda:	1e71      	subs	r1, r6, #1
 8005edc:	4620      	mov	r0, r4
 8005ede:	f7fe fd36 	bl	800494e <__any_on>
 8005ee2:	2800      	cmp	r0, #0
 8005ee4:	d1ed      	bne.n	8005ec2 <__gethex+0x26a>
 8005ee6:	9801      	ldr	r0, [sp, #4]
 8005ee8:	4621      	mov	r1, r4
 8005eea:	f7fe f8f1 	bl	80040d0 <_Bfree>
 8005eee:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005ef0:	2300      	movs	r3, #0
 8005ef2:	6013      	str	r3, [r2, #0]
 8005ef4:	2550      	movs	r5, #80	@ 0x50
 8005ef6:	e72b      	b.n	8005d50 <__gethex+0xf8>
 8005ef8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005efa:	2b00      	cmp	r3, #0
 8005efc:	d1f3      	bne.n	8005ee6 <__gethex+0x28e>
 8005efe:	e7e0      	b.n	8005ec2 <__gethex+0x26a>
 8005f00:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005f02:	2b00      	cmp	r3, #0
 8005f04:	d1dd      	bne.n	8005ec2 <__gethex+0x26a>
 8005f06:	e7ee      	b.n	8005ee6 <__gethex+0x28e>
 8005f08:	08006947 	.word	0x08006947
 8005f0c:	080068dd 	.word	0x080068dd
 8005f10:	0800699e 	.word	0x0800699e
 8005f14:	1e6f      	subs	r7, r5, #1
 8005f16:	f1b9 0f00 	cmp.w	r9, #0
 8005f1a:	d130      	bne.n	8005f7e <__gethex+0x326>
 8005f1c:	b127      	cbz	r7, 8005f28 <__gethex+0x2d0>
 8005f1e:	4639      	mov	r1, r7
 8005f20:	4620      	mov	r0, r4
 8005f22:	f7fe fd14 	bl	800494e <__any_on>
 8005f26:	4681      	mov	r9, r0
 8005f28:	117a      	asrs	r2, r7, #5
 8005f2a:	2301      	movs	r3, #1
 8005f2c:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8005f30:	f007 071f 	and.w	r7, r7, #31
 8005f34:	40bb      	lsls	r3, r7
 8005f36:	4213      	tst	r3, r2
 8005f38:	4629      	mov	r1, r5
 8005f3a:	4620      	mov	r0, r4
 8005f3c:	bf18      	it	ne
 8005f3e:	f049 0902 	orrne.w	r9, r9, #2
 8005f42:	f7ff fe21 	bl	8005b88 <rshift>
 8005f46:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8005f4a:	1b76      	subs	r6, r6, r5
 8005f4c:	2502      	movs	r5, #2
 8005f4e:	f1b9 0f00 	cmp.w	r9, #0
 8005f52:	d047      	beq.n	8005fe4 <__gethex+0x38c>
 8005f54:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005f58:	2b02      	cmp	r3, #2
 8005f5a:	d015      	beq.n	8005f88 <__gethex+0x330>
 8005f5c:	2b03      	cmp	r3, #3
 8005f5e:	d017      	beq.n	8005f90 <__gethex+0x338>
 8005f60:	2b01      	cmp	r3, #1
 8005f62:	d109      	bne.n	8005f78 <__gethex+0x320>
 8005f64:	f019 0f02 	tst.w	r9, #2
 8005f68:	d006      	beq.n	8005f78 <__gethex+0x320>
 8005f6a:	f8da 3000 	ldr.w	r3, [sl]
 8005f6e:	ea49 0903 	orr.w	r9, r9, r3
 8005f72:	f019 0f01 	tst.w	r9, #1
 8005f76:	d10e      	bne.n	8005f96 <__gethex+0x33e>
 8005f78:	f045 0510 	orr.w	r5, r5, #16
 8005f7c:	e032      	b.n	8005fe4 <__gethex+0x38c>
 8005f7e:	f04f 0901 	mov.w	r9, #1
 8005f82:	e7d1      	b.n	8005f28 <__gethex+0x2d0>
 8005f84:	2501      	movs	r5, #1
 8005f86:	e7e2      	b.n	8005f4e <__gethex+0x2f6>
 8005f88:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005f8a:	f1c3 0301 	rsb	r3, r3, #1
 8005f8e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005f90:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005f92:	2b00      	cmp	r3, #0
 8005f94:	d0f0      	beq.n	8005f78 <__gethex+0x320>
 8005f96:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005f9a:	f104 0314 	add.w	r3, r4, #20
 8005f9e:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8005fa2:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8005fa6:	f04f 0c00 	mov.w	ip, #0
 8005faa:	4618      	mov	r0, r3
 8005fac:	f853 2b04 	ldr.w	r2, [r3], #4
 8005fb0:	f1b2 3fff 	cmp.w	r2, #4294967295
 8005fb4:	d01b      	beq.n	8005fee <__gethex+0x396>
 8005fb6:	3201      	adds	r2, #1
 8005fb8:	6002      	str	r2, [r0, #0]
 8005fba:	2d02      	cmp	r5, #2
 8005fbc:	f104 0314 	add.w	r3, r4, #20
 8005fc0:	d13c      	bne.n	800603c <__gethex+0x3e4>
 8005fc2:	f8d8 2000 	ldr.w	r2, [r8]
 8005fc6:	3a01      	subs	r2, #1
 8005fc8:	42b2      	cmp	r2, r6
 8005fca:	d109      	bne.n	8005fe0 <__gethex+0x388>
 8005fcc:	1171      	asrs	r1, r6, #5
 8005fce:	2201      	movs	r2, #1
 8005fd0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005fd4:	f006 061f 	and.w	r6, r6, #31
 8005fd8:	fa02 f606 	lsl.w	r6, r2, r6
 8005fdc:	421e      	tst	r6, r3
 8005fde:	d13a      	bne.n	8006056 <__gethex+0x3fe>
 8005fe0:	f045 0520 	orr.w	r5, r5, #32
 8005fe4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005fe6:	601c      	str	r4, [r3, #0]
 8005fe8:	9b02      	ldr	r3, [sp, #8]
 8005fea:	601f      	str	r7, [r3, #0]
 8005fec:	e6b0      	b.n	8005d50 <__gethex+0xf8>
 8005fee:	4299      	cmp	r1, r3
 8005ff0:	f843 cc04 	str.w	ip, [r3, #-4]
 8005ff4:	d8d9      	bhi.n	8005faa <__gethex+0x352>
 8005ff6:	68a3      	ldr	r3, [r4, #8]
 8005ff8:	459b      	cmp	fp, r3
 8005ffa:	db17      	blt.n	800602c <__gethex+0x3d4>
 8005ffc:	6861      	ldr	r1, [r4, #4]
 8005ffe:	9801      	ldr	r0, [sp, #4]
 8006000:	3101      	adds	r1, #1
 8006002:	f7fe f825 	bl	8004050 <_Balloc>
 8006006:	4681      	mov	r9, r0
 8006008:	b918      	cbnz	r0, 8006012 <__gethex+0x3ba>
 800600a:	4b1a      	ldr	r3, [pc, #104]	@ (8006074 <__gethex+0x41c>)
 800600c:	4602      	mov	r2, r0
 800600e:	2184      	movs	r1, #132	@ 0x84
 8006010:	e6c5      	b.n	8005d9e <__gethex+0x146>
 8006012:	6922      	ldr	r2, [r4, #16]
 8006014:	3202      	adds	r2, #2
 8006016:	f104 010c 	add.w	r1, r4, #12
 800601a:	0092      	lsls	r2, r2, #2
 800601c:	300c      	adds	r0, #12
 800601e:	f7ff fd6d 	bl	8005afc <memcpy>
 8006022:	4621      	mov	r1, r4
 8006024:	9801      	ldr	r0, [sp, #4]
 8006026:	f7fe f853 	bl	80040d0 <_Bfree>
 800602a:	464c      	mov	r4, r9
 800602c:	6923      	ldr	r3, [r4, #16]
 800602e:	1c5a      	adds	r2, r3, #1
 8006030:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006034:	6122      	str	r2, [r4, #16]
 8006036:	2201      	movs	r2, #1
 8006038:	615a      	str	r2, [r3, #20]
 800603a:	e7be      	b.n	8005fba <__gethex+0x362>
 800603c:	6922      	ldr	r2, [r4, #16]
 800603e:	455a      	cmp	r2, fp
 8006040:	dd0b      	ble.n	800605a <__gethex+0x402>
 8006042:	2101      	movs	r1, #1
 8006044:	4620      	mov	r0, r4
 8006046:	f7ff fd9f 	bl	8005b88 <rshift>
 800604a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800604e:	3701      	adds	r7, #1
 8006050:	42bb      	cmp	r3, r7
 8006052:	f6ff aee0 	blt.w	8005e16 <__gethex+0x1be>
 8006056:	2501      	movs	r5, #1
 8006058:	e7c2      	b.n	8005fe0 <__gethex+0x388>
 800605a:	f016 061f 	ands.w	r6, r6, #31
 800605e:	d0fa      	beq.n	8006056 <__gethex+0x3fe>
 8006060:	4453      	add	r3, sl
 8006062:	f1c6 0620 	rsb	r6, r6, #32
 8006066:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800606a:	f7fe f8e3 	bl	8004234 <__hi0bits>
 800606e:	42b0      	cmp	r0, r6
 8006070:	dbe7      	blt.n	8006042 <__gethex+0x3ea>
 8006072:	e7f0      	b.n	8006056 <__gethex+0x3fe>
 8006074:	080068dd 	.word	0x080068dd

08006078 <L_shift>:
 8006078:	f1c2 0208 	rsb	r2, r2, #8
 800607c:	0092      	lsls	r2, r2, #2
 800607e:	b570      	push	{r4, r5, r6, lr}
 8006080:	f1c2 0620 	rsb	r6, r2, #32
 8006084:	6843      	ldr	r3, [r0, #4]
 8006086:	6804      	ldr	r4, [r0, #0]
 8006088:	fa03 f506 	lsl.w	r5, r3, r6
 800608c:	432c      	orrs	r4, r5
 800608e:	40d3      	lsrs	r3, r2
 8006090:	6004      	str	r4, [r0, #0]
 8006092:	f840 3f04 	str.w	r3, [r0, #4]!
 8006096:	4288      	cmp	r0, r1
 8006098:	d3f4      	bcc.n	8006084 <L_shift+0xc>
 800609a:	bd70      	pop	{r4, r5, r6, pc}

0800609c <__match>:
 800609c:	b530      	push	{r4, r5, lr}
 800609e:	6803      	ldr	r3, [r0, #0]
 80060a0:	3301      	adds	r3, #1
 80060a2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80060a6:	b914      	cbnz	r4, 80060ae <__match+0x12>
 80060a8:	6003      	str	r3, [r0, #0]
 80060aa:	2001      	movs	r0, #1
 80060ac:	bd30      	pop	{r4, r5, pc}
 80060ae:	f813 2b01 	ldrb.w	r2, [r3], #1
 80060b2:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80060b6:	2d19      	cmp	r5, #25
 80060b8:	bf98      	it	ls
 80060ba:	3220      	addls	r2, #32
 80060bc:	42a2      	cmp	r2, r4
 80060be:	d0f0      	beq.n	80060a2 <__match+0x6>
 80060c0:	2000      	movs	r0, #0
 80060c2:	e7f3      	b.n	80060ac <__match+0x10>

080060c4 <__hexnan>:
 80060c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060c8:	680b      	ldr	r3, [r1, #0]
 80060ca:	6801      	ldr	r1, [r0, #0]
 80060cc:	115e      	asrs	r6, r3, #5
 80060ce:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80060d2:	f013 031f 	ands.w	r3, r3, #31
 80060d6:	b087      	sub	sp, #28
 80060d8:	bf18      	it	ne
 80060da:	3604      	addne	r6, #4
 80060dc:	2500      	movs	r5, #0
 80060de:	1f37      	subs	r7, r6, #4
 80060e0:	4682      	mov	sl, r0
 80060e2:	4690      	mov	r8, r2
 80060e4:	9301      	str	r3, [sp, #4]
 80060e6:	f846 5c04 	str.w	r5, [r6, #-4]
 80060ea:	46b9      	mov	r9, r7
 80060ec:	463c      	mov	r4, r7
 80060ee:	9502      	str	r5, [sp, #8]
 80060f0:	46ab      	mov	fp, r5
 80060f2:	784a      	ldrb	r2, [r1, #1]
 80060f4:	1c4b      	adds	r3, r1, #1
 80060f6:	9303      	str	r3, [sp, #12]
 80060f8:	b342      	cbz	r2, 800614c <__hexnan+0x88>
 80060fa:	4610      	mov	r0, r2
 80060fc:	9105      	str	r1, [sp, #20]
 80060fe:	9204      	str	r2, [sp, #16]
 8006100:	f7ff fd94 	bl	8005c2c <__hexdig_fun>
 8006104:	2800      	cmp	r0, #0
 8006106:	d151      	bne.n	80061ac <__hexnan+0xe8>
 8006108:	9a04      	ldr	r2, [sp, #16]
 800610a:	9905      	ldr	r1, [sp, #20]
 800610c:	2a20      	cmp	r2, #32
 800610e:	d818      	bhi.n	8006142 <__hexnan+0x7e>
 8006110:	9b02      	ldr	r3, [sp, #8]
 8006112:	459b      	cmp	fp, r3
 8006114:	dd13      	ble.n	800613e <__hexnan+0x7a>
 8006116:	454c      	cmp	r4, r9
 8006118:	d206      	bcs.n	8006128 <__hexnan+0x64>
 800611a:	2d07      	cmp	r5, #7
 800611c:	dc04      	bgt.n	8006128 <__hexnan+0x64>
 800611e:	462a      	mov	r2, r5
 8006120:	4649      	mov	r1, r9
 8006122:	4620      	mov	r0, r4
 8006124:	f7ff ffa8 	bl	8006078 <L_shift>
 8006128:	4544      	cmp	r4, r8
 800612a:	d952      	bls.n	80061d2 <__hexnan+0x10e>
 800612c:	2300      	movs	r3, #0
 800612e:	f1a4 0904 	sub.w	r9, r4, #4
 8006132:	f844 3c04 	str.w	r3, [r4, #-4]
 8006136:	f8cd b008 	str.w	fp, [sp, #8]
 800613a:	464c      	mov	r4, r9
 800613c:	461d      	mov	r5, r3
 800613e:	9903      	ldr	r1, [sp, #12]
 8006140:	e7d7      	b.n	80060f2 <__hexnan+0x2e>
 8006142:	2a29      	cmp	r2, #41	@ 0x29
 8006144:	d157      	bne.n	80061f6 <__hexnan+0x132>
 8006146:	3102      	adds	r1, #2
 8006148:	f8ca 1000 	str.w	r1, [sl]
 800614c:	f1bb 0f00 	cmp.w	fp, #0
 8006150:	d051      	beq.n	80061f6 <__hexnan+0x132>
 8006152:	454c      	cmp	r4, r9
 8006154:	d206      	bcs.n	8006164 <__hexnan+0xa0>
 8006156:	2d07      	cmp	r5, #7
 8006158:	dc04      	bgt.n	8006164 <__hexnan+0xa0>
 800615a:	462a      	mov	r2, r5
 800615c:	4649      	mov	r1, r9
 800615e:	4620      	mov	r0, r4
 8006160:	f7ff ff8a 	bl	8006078 <L_shift>
 8006164:	4544      	cmp	r4, r8
 8006166:	d936      	bls.n	80061d6 <__hexnan+0x112>
 8006168:	f1a8 0204 	sub.w	r2, r8, #4
 800616c:	4623      	mov	r3, r4
 800616e:	f853 1b04 	ldr.w	r1, [r3], #4
 8006172:	f842 1f04 	str.w	r1, [r2, #4]!
 8006176:	429f      	cmp	r7, r3
 8006178:	d2f9      	bcs.n	800616e <__hexnan+0xaa>
 800617a:	1b3b      	subs	r3, r7, r4
 800617c:	f023 0303 	bic.w	r3, r3, #3
 8006180:	3304      	adds	r3, #4
 8006182:	3401      	adds	r4, #1
 8006184:	3e03      	subs	r6, #3
 8006186:	42b4      	cmp	r4, r6
 8006188:	bf88      	it	hi
 800618a:	2304      	movhi	r3, #4
 800618c:	4443      	add	r3, r8
 800618e:	2200      	movs	r2, #0
 8006190:	f843 2b04 	str.w	r2, [r3], #4
 8006194:	429f      	cmp	r7, r3
 8006196:	d2fb      	bcs.n	8006190 <__hexnan+0xcc>
 8006198:	683b      	ldr	r3, [r7, #0]
 800619a:	b91b      	cbnz	r3, 80061a4 <__hexnan+0xe0>
 800619c:	4547      	cmp	r7, r8
 800619e:	d128      	bne.n	80061f2 <__hexnan+0x12e>
 80061a0:	2301      	movs	r3, #1
 80061a2:	603b      	str	r3, [r7, #0]
 80061a4:	2005      	movs	r0, #5
 80061a6:	b007      	add	sp, #28
 80061a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061ac:	3501      	adds	r5, #1
 80061ae:	2d08      	cmp	r5, #8
 80061b0:	f10b 0b01 	add.w	fp, fp, #1
 80061b4:	dd06      	ble.n	80061c4 <__hexnan+0x100>
 80061b6:	4544      	cmp	r4, r8
 80061b8:	d9c1      	bls.n	800613e <__hexnan+0x7a>
 80061ba:	2300      	movs	r3, #0
 80061bc:	f844 3c04 	str.w	r3, [r4, #-4]
 80061c0:	2501      	movs	r5, #1
 80061c2:	3c04      	subs	r4, #4
 80061c4:	6822      	ldr	r2, [r4, #0]
 80061c6:	f000 000f 	and.w	r0, r0, #15
 80061ca:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80061ce:	6020      	str	r0, [r4, #0]
 80061d0:	e7b5      	b.n	800613e <__hexnan+0x7a>
 80061d2:	2508      	movs	r5, #8
 80061d4:	e7b3      	b.n	800613e <__hexnan+0x7a>
 80061d6:	9b01      	ldr	r3, [sp, #4]
 80061d8:	2b00      	cmp	r3, #0
 80061da:	d0dd      	beq.n	8006198 <__hexnan+0xd4>
 80061dc:	f1c3 0320 	rsb	r3, r3, #32
 80061e0:	f04f 32ff 	mov.w	r2, #4294967295
 80061e4:	40da      	lsrs	r2, r3
 80061e6:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80061ea:	4013      	ands	r3, r2
 80061ec:	f846 3c04 	str.w	r3, [r6, #-4]
 80061f0:	e7d2      	b.n	8006198 <__hexnan+0xd4>
 80061f2:	3f04      	subs	r7, #4
 80061f4:	e7d0      	b.n	8006198 <__hexnan+0xd4>
 80061f6:	2004      	movs	r0, #4
 80061f8:	e7d5      	b.n	80061a6 <__hexnan+0xe2>

080061fa <__ascii_mbtowc>:
 80061fa:	b082      	sub	sp, #8
 80061fc:	b901      	cbnz	r1, 8006200 <__ascii_mbtowc+0x6>
 80061fe:	a901      	add	r1, sp, #4
 8006200:	b142      	cbz	r2, 8006214 <__ascii_mbtowc+0x1a>
 8006202:	b14b      	cbz	r3, 8006218 <__ascii_mbtowc+0x1e>
 8006204:	7813      	ldrb	r3, [r2, #0]
 8006206:	600b      	str	r3, [r1, #0]
 8006208:	7812      	ldrb	r2, [r2, #0]
 800620a:	1e10      	subs	r0, r2, #0
 800620c:	bf18      	it	ne
 800620e:	2001      	movne	r0, #1
 8006210:	b002      	add	sp, #8
 8006212:	4770      	bx	lr
 8006214:	4610      	mov	r0, r2
 8006216:	e7fb      	b.n	8006210 <__ascii_mbtowc+0x16>
 8006218:	f06f 0001 	mvn.w	r0, #1
 800621c:	e7f8      	b.n	8006210 <__ascii_mbtowc+0x16>

0800621e <_realloc_r>:
 800621e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006222:	4607      	mov	r7, r0
 8006224:	4614      	mov	r4, r2
 8006226:	460d      	mov	r5, r1
 8006228:	b921      	cbnz	r1, 8006234 <_realloc_r+0x16>
 800622a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800622e:	4611      	mov	r1, r2
 8006230:	f7fd be82 	b.w	8003f38 <_malloc_r>
 8006234:	b92a      	cbnz	r2, 8006242 <_realloc_r+0x24>
 8006236:	f7fd fe0b 	bl	8003e50 <_free_r>
 800623a:	4625      	mov	r5, r4
 800623c:	4628      	mov	r0, r5
 800623e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006242:	f000 f840 	bl	80062c6 <_malloc_usable_size_r>
 8006246:	4284      	cmp	r4, r0
 8006248:	4606      	mov	r6, r0
 800624a:	d802      	bhi.n	8006252 <_realloc_r+0x34>
 800624c:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8006250:	d8f4      	bhi.n	800623c <_realloc_r+0x1e>
 8006252:	4621      	mov	r1, r4
 8006254:	4638      	mov	r0, r7
 8006256:	f7fd fe6f 	bl	8003f38 <_malloc_r>
 800625a:	4680      	mov	r8, r0
 800625c:	b908      	cbnz	r0, 8006262 <_realloc_r+0x44>
 800625e:	4645      	mov	r5, r8
 8006260:	e7ec      	b.n	800623c <_realloc_r+0x1e>
 8006262:	42b4      	cmp	r4, r6
 8006264:	4622      	mov	r2, r4
 8006266:	4629      	mov	r1, r5
 8006268:	bf28      	it	cs
 800626a:	4632      	movcs	r2, r6
 800626c:	f7ff fc46 	bl	8005afc <memcpy>
 8006270:	4629      	mov	r1, r5
 8006272:	4638      	mov	r0, r7
 8006274:	f7fd fdec 	bl	8003e50 <_free_r>
 8006278:	e7f1      	b.n	800625e <_realloc_r+0x40>

0800627a <__ascii_wctomb>:
 800627a:	4603      	mov	r3, r0
 800627c:	4608      	mov	r0, r1
 800627e:	b141      	cbz	r1, 8006292 <__ascii_wctomb+0x18>
 8006280:	2aff      	cmp	r2, #255	@ 0xff
 8006282:	d904      	bls.n	800628e <__ascii_wctomb+0x14>
 8006284:	228a      	movs	r2, #138	@ 0x8a
 8006286:	601a      	str	r2, [r3, #0]
 8006288:	f04f 30ff 	mov.w	r0, #4294967295
 800628c:	4770      	bx	lr
 800628e:	700a      	strb	r2, [r1, #0]
 8006290:	2001      	movs	r0, #1
 8006292:	4770      	bx	lr

08006294 <fiprintf>:
 8006294:	b40e      	push	{r1, r2, r3}
 8006296:	b503      	push	{r0, r1, lr}
 8006298:	4601      	mov	r1, r0
 800629a:	ab03      	add	r3, sp, #12
 800629c:	4805      	ldr	r0, [pc, #20]	@ (80062b4 <fiprintf+0x20>)
 800629e:	f853 2b04 	ldr.w	r2, [r3], #4
 80062a2:	6800      	ldr	r0, [r0, #0]
 80062a4:	9301      	str	r3, [sp, #4]
 80062a6:	f000 f83d 	bl	8006324 <_vfiprintf_r>
 80062aa:	b002      	add	sp, #8
 80062ac:	f85d eb04 	ldr.w	lr, [sp], #4
 80062b0:	b003      	add	sp, #12
 80062b2:	4770      	bx	lr
 80062b4:	20000010 	.word	0x20000010

080062b8 <abort>:
 80062b8:	b508      	push	{r3, lr}
 80062ba:	2006      	movs	r0, #6
 80062bc:	f000 fa06 	bl	80066cc <raise>
 80062c0:	2001      	movs	r0, #1
 80062c2:	f7fa fd3f 	bl	8000d44 <_exit>

080062c6 <_malloc_usable_size_r>:
 80062c6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80062ca:	1f18      	subs	r0, r3, #4
 80062cc:	2b00      	cmp	r3, #0
 80062ce:	bfbc      	itt	lt
 80062d0:	580b      	ldrlt	r3, [r1, r0]
 80062d2:	18c0      	addlt	r0, r0, r3
 80062d4:	4770      	bx	lr

080062d6 <__sfputc_r>:
 80062d6:	6893      	ldr	r3, [r2, #8]
 80062d8:	3b01      	subs	r3, #1
 80062da:	2b00      	cmp	r3, #0
 80062dc:	b410      	push	{r4}
 80062de:	6093      	str	r3, [r2, #8]
 80062e0:	da07      	bge.n	80062f2 <__sfputc_r+0x1c>
 80062e2:	6994      	ldr	r4, [r2, #24]
 80062e4:	42a3      	cmp	r3, r4
 80062e6:	db01      	blt.n	80062ec <__sfputc_r+0x16>
 80062e8:	290a      	cmp	r1, #10
 80062ea:	d102      	bne.n	80062f2 <__sfputc_r+0x1c>
 80062ec:	bc10      	pop	{r4}
 80062ee:	f000 b931 	b.w	8006554 <__swbuf_r>
 80062f2:	6813      	ldr	r3, [r2, #0]
 80062f4:	1c58      	adds	r0, r3, #1
 80062f6:	6010      	str	r0, [r2, #0]
 80062f8:	7019      	strb	r1, [r3, #0]
 80062fa:	4608      	mov	r0, r1
 80062fc:	bc10      	pop	{r4}
 80062fe:	4770      	bx	lr

08006300 <__sfputs_r>:
 8006300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006302:	4606      	mov	r6, r0
 8006304:	460f      	mov	r7, r1
 8006306:	4614      	mov	r4, r2
 8006308:	18d5      	adds	r5, r2, r3
 800630a:	42ac      	cmp	r4, r5
 800630c:	d101      	bne.n	8006312 <__sfputs_r+0x12>
 800630e:	2000      	movs	r0, #0
 8006310:	e007      	b.n	8006322 <__sfputs_r+0x22>
 8006312:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006316:	463a      	mov	r2, r7
 8006318:	4630      	mov	r0, r6
 800631a:	f7ff ffdc 	bl	80062d6 <__sfputc_r>
 800631e:	1c43      	adds	r3, r0, #1
 8006320:	d1f3      	bne.n	800630a <__sfputs_r+0xa>
 8006322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006324 <_vfiprintf_r>:
 8006324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006328:	460d      	mov	r5, r1
 800632a:	b09d      	sub	sp, #116	@ 0x74
 800632c:	4614      	mov	r4, r2
 800632e:	4698      	mov	r8, r3
 8006330:	4606      	mov	r6, r0
 8006332:	b118      	cbz	r0, 800633c <_vfiprintf_r+0x18>
 8006334:	6a03      	ldr	r3, [r0, #32]
 8006336:	b90b      	cbnz	r3, 800633c <_vfiprintf_r+0x18>
 8006338:	f7fc fe12 	bl	8002f60 <__sinit>
 800633c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800633e:	07d9      	lsls	r1, r3, #31
 8006340:	d405      	bmi.n	800634e <_vfiprintf_r+0x2a>
 8006342:	89ab      	ldrh	r3, [r5, #12]
 8006344:	059a      	lsls	r2, r3, #22
 8006346:	d402      	bmi.n	800634e <_vfiprintf_r+0x2a>
 8006348:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800634a:	f7fc ff22 	bl	8003192 <__retarget_lock_acquire_recursive>
 800634e:	89ab      	ldrh	r3, [r5, #12]
 8006350:	071b      	lsls	r3, r3, #28
 8006352:	d501      	bpl.n	8006358 <_vfiprintf_r+0x34>
 8006354:	692b      	ldr	r3, [r5, #16]
 8006356:	b99b      	cbnz	r3, 8006380 <_vfiprintf_r+0x5c>
 8006358:	4629      	mov	r1, r5
 800635a:	4630      	mov	r0, r6
 800635c:	f000 f938 	bl	80065d0 <__swsetup_r>
 8006360:	b170      	cbz	r0, 8006380 <_vfiprintf_r+0x5c>
 8006362:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006364:	07dc      	lsls	r4, r3, #31
 8006366:	d504      	bpl.n	8006372 <_vfiprintf_r+0x4e>
 8006368:	f04f 30ff 	mov.w	r0, #4294967295
 800636c:	b01d      	add	sp, #116	@ 0x74
 800636e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006372:	89ab      	ldrh	r3, [r5, #12]
 8006374:	0598      	lsls	r0, r3, #22
 8006376:	d4f7      	bmi.n	8006368 <_vfiprintf_r+0x44>
 8006378:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800637a:	f7fc ff0b 	bl	8003194 <__retarget_lock_release_recursive>
 800637e:	e7f3      	b.n	8006368 <_vfiprintf_r+0x44>
 8006380:	2300      	movs	r3, #0
 8006382:	9309      	str	r3, [sp, #36]	@ 0x24
 8006384:	2320      	movs	r3, #32
 8006386:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800638a:	f8cd 800c 	str.w	r8, [sp, #12]
 800638e:	2330      	movs	r3, #48	@ 0x30
 8006390:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8006540 <_vfiprintf_r+0x21c>
 8006394:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006398:	f04f 0901 	mov.w	r9, #1
 800639c:	4623      	mov	r3, r4
 800639e:	469a      	mov	sl, r3
 80063a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80063a4:	b10a      	cbz	r2, 80063aa <_vfiprintf_r+0x86>
 80063a6:	2a25      	cmp	r2, #37	@ 0x25
 80063a8:	d1f9      	bne.n	800639e <_vfiprintf_r+0x7a>
 80063aa:	ebba 0b04 	subs.w	fp, sl, r4
 80063ae:	d00b      	beq.n	80063c8 <_vfiprintf_r+0xa4>
 80063b0:	465b      	mov	r3, fp
 80063b2:	4622      	mov	r2, r4
 80063b4:	4629      	mov	r1, r5
 80063b6:	4630      	mov	r0, r6
 80063b8:	f7ff ffa2 	bl	8006300 <__sfputs_r>
 80063bc:	3001      	adds	r0, #1
 80063be:	f000 80a7 	beq.w	8006510 <_vfiprintf_r+0x1ec>
 80063c2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80063c4:	445a      	add	r2, fp
 80063c6:	9209      	str	r2, [sp, #36]	@ 0x24
 80063c8:	f89a 3000 	ldrb.w	r3, [sl]
 80063cc:	2b00      	cmp	r3, #0
 80063ce:	f000 809f 	beq.w	8006510 <_vfiprintf_r+0x1ec>
 80063d2:	2300      	movs	r3, #0
 80063d4:	f04f 32ff 	mov.w	r2, #4294967295
 80063d8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80063dc:	f10a 0a01 	add.w	sl, sl, #1
 80063e0:	9304      	str	r3, [sp, #16]
 80063e2:	9307      	str	r3, [sp, #28]
 80063e4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80063e8:	931a      	str	r3, [sp, #104]	@ 0x68
 80063ea:	4654      	mov	r4, sl
 80063ec:	2205      	movs	r2, #5
 80063ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80063f2:	4853      	ldr	r0, [pc, #332]	@ (8006540 <_vfiprintf_r+0x21c>)
 80063f4:	f7f9 feec 	bl	80001d0 <memchr>
 80063f8:	9a04      	ldr	r2, [sp, #16]
 80063fa:	b9d8      	cbnz	r0, 8006434 <_vfiprintf_r+0x110>
 80063fc:	06d1      	lsls	r1, r2, #27
 80063fe:	bf44      	itt	mi
 8006400:	2320      	movmi	r3, #32
 8006402:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006406:	0713      	lsls	r3, r2, #28
 8006408:	bf44      	itt	mi
 800640a:	232b      	movmi	r3, #43	@ 0x2b
 800640c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006410:	f89a 3000 	ldrb.w	r3, [sl]
 8006414:	2b2a      	cmp	r3, #42	@ 0x2a
 8006416:	d015      	beq.n	8006444 <_vfiprintf_r+0x120>
 8006418:	9a07      	ldr	r2, [sp, #28]
 800641a:	4654      	mov	r4, sl
 800641c:	2000      	movs	r0, #0
 800641e:	f04f 0c0a 	mov.w	ip, #10
 8006422:	4621      	mov	r1, r4
 8006424:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006428:	3b30      	subs	r3, #48	@ 0x30
 800642a:	2b09      	cmp	r3, #9
 800642c:	d94b      	bls.n	80064c6 <_vfiprintf_r+0x1a2>
 800642e:	b1b0      	cbz	r0, 800645e <_vfiprintf_r+0x13a>
 8006430:	9207      	str	r2, [sp, #28]
 8006432:	e014      	b.n	800645e <_vfiprintf_r+0x13a>
 8006434:	eba0 0308 	sub.w	r3, r0, r8
 8006438:	fa09 f303 	lsl.w	r3, r9, r3
 800643c:	4313      	orrs	r3, r2
 800643e:	9304      	str	r3, [sp, #16]
 8006440:	46a2      	mov	sl, r4
 8006442:	e7d2      	b.n	80063ea <_vfiprintf_r+0xc6>
 8006444:	9b03      	ldr	r3, [sp, #12]
 8006446:	1d19      	adds	r1, r3, #4
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	9103      	str	r1, [sp, #12]
 800644c:	2b00      	cmp	r3, #0
 800644e:	bfbb      	ittet	lt
 8006450:	425b      	neglt	r3, r3
 8006452:	f042 0202 	orrlt.w	r2, r2, #2
 8006456:	9307      	strge	r3, [sp, #28]
 8006458:	9307      	strlt	r3, [sp, #28]
 800645a:	bfb8      	it	lt
 800645c:	9204      	strlt	r2, [sp, #16]
 800645e:	7823      	ldrb	r3, [r4, #0]
 8006460:	2b2e      	cmp	r3, #46	@ 0x2e
 8006462:	d10a      	bne.n	800647a <_vfiprintf_r+0x156>
 8006464:	7863      	ldrb	r3, [r4, #1]
 8006466:	2b2a      	cmp	r3, #42	@ 0x2a
 8006468:	d132      	bne.n	80064d0 <_vfiprintf_r+0x1ac>
 800646a:	9b03      	ldr	r3, [sp, #12]
 800646c:	1d1a      	adds	r2, r3, #4
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	9203      	str	r2, [sp, #12]
 8006472:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006476:	3402      	adds	r4, #2
 8006478:	9305      	str	r3, [sp, #20]
 800647a:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8006544 <_vfiprintf_r+0x220>
 800647e:	7821      	ldrb	r1, [r4, #0]
 8006480:	2203      	movs	r2, #3
 8006482:	4650      	mov	r0, sl
 8006484:	f7f9 fea4 	bl	80001d0 <memchr>
 8006488:	b138      	cbz	r0, 800649a <_vfiprintf_r+0x176>
 800648a:	9b04      	ldr	r3, [sp, #16]
 800648c:	eba0 000a 	sub.w	r0, r0, sl
 8006490:	2240      	movs	r2, #64	@ 0x40
 8006492:	4082      	lsls	r2, r0
 8006494:	4313      	orrs	r3, r2
 8006496:	3401      	adds	r4, #1
 8006498:	9304      	str	r3, [sp, #16]
 800649a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800649e:	482a      	ldr	r0, [pc, #168]	@ (8006548 <_vfiprintf_r+0x224>)
 80064a0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80064a4:	2206      	movs	r2, #6
 80064a6:	f7f9 fe93 	bl	80001d0 <memchr>
 80064aa:	2800      	cmp	r0, #0
 80064ac:	d03f      	beq.n	800652e <_vfiprintf_r+0x20a>
 80064ae:	4b27      	ldr	r3, [pc, #156]	@ (800654c <_vfiprintf_r+0x228>)
 80064b0:	bb1b      	cbnz	r3, 80064fa <_vfiprintf_r+0x1d6>
 80064b2:	9b03      	ldr	r3, [sp, #12]
 80064b4:	3307      	adds	r3, #7
 80064b6:	f023 0307 	bic.w	r3, r3, #7
 80064ba:	3308      	adds	r3, #8
 80064bc:	9303      	str	r3, [sp, #12]
 80064be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80064c0:	443b      	add	r3, r7
 80064c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80064c4:	e76a      	b.n	800639c <_vfiprintf_r+0x78>
 80064c6:	fb0c 3202 	mla	r2, ip, r2, r3
 80064ca:	460c      	mov	r4, r1
 80064cc:	2001      	movs	r0, #1
 80064ce:	e7a8      	b.n	8006422 <_vfiprintf_r+0xfe>
 80064d0:	2300      	movs	r3, #0
 80064d2:	3401      	adds	r4, #1
 80064d4:	9305      	str	r3, [sp, #20]
 80064d6:	4619      	mov	r1, r3
 80064d8:	f04f 0c0a 	mov.w	ip, #10
 80064dc:	4620      	mov	r0, r4
 80064de:	f810 2b01 	ldrb.w	r2, [r0], #1
 80064e2:	3a30      	subs	r2, #48	@ 0x30
 80064e4:	2a09      	cmp	r2, #9
 80064e6:	d903      	bls.n	80064f0 <_vfiprintf_r+0x1cc>
 80064e8:	2b00      	cmp	r3, #0
 80064ea:	d0c6      	beq.n	800647a <_vfiprintf_r+0x156>
 80064ec:	9105      	str	r1, [sp, #20]
 80064ee:	e7c4      	b.n	800647a <_vfiprintf_r+0x156>
 80064f0:	fb0c 2101 	mla	r1, ip, r1, r2
 80064f4:	4604      	mov	r4, r0
 80064f6:	2301      	movs	r3, #1
 80064f8:	e7f0      	b.n	80064dc <_vfiprintf_r+0x1b8>
 80064fa:	ab03      	add	r3, sp, #12
 80064fc:	9300      	str	r3, [sp, #0]
 80064fe:	462a      	mov	r2, r5
 8006500:	4b13      	ldr	r3, [pc, #76]	@ (8006550 <_vfiprintf_r+0x22c>)
 8006502:	a904      	add	r1, sp, #16
 8006504:	4630      	mov	r0, r6
 8006506:	f7fb fedf 	bl	80022c8 <_printf_float>
 800650a:	4607      	mov	r7, r0
 800650c:	1c78      	adds	r0, r7, #1
 800650e:	d1d6      	bne.n	80064be <_vfiprintf_r+0x19a>
 8006510:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006512:	07d9      	lsls	r1, r3, #31
 8006514:	d405      	bmi.n	8006522 <_vfiprintf_r+0x1fe>
 8006516:	89ab      	ldrh	r3, [r5, #12]
 8006518:	059a      	lsls	r2, r3, #22
 800651a:	d402      	bmi.n	8006522 <_vfiprintf_r+0x1fe>
 800651c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800651e:	f7fc fe39 	bl	8003194 <__retarget_lock_release_recursive>
 8006522:	89ab      	ldrh	r3, [r5, #12]
 8006524:	065b      	lsls	r3, r3, #25
 8006526:	f53f af1f 	bmi.w	8006368 <_vfiprintf_r+0x44>
 800652a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800652c:	e71e      	b.n	800636c <_vfiprintf_r+0x48>
 800652e:	ab03      	add	r3, sp, #12
 8006530:	9300      	str	r3, [sp, #0]
 8006532:	462a      	mov	r2, r5
 8006534:	4b06      	ldr	r3, [pc, #24]	@ (8006550 <_vfiprintf_r+0x22c>)
 8006536:	a904      	add	r1, sp, #16
 8006538:	4630      	mov	r0, r6
 800653a:	f7fc f95f 	bl	80027fc <_printf_i>
 800653e:	e7e4      	b.n	800650a <_vfiprintf_r+0x1e6>
 8006540:	08006949 	.word	0x08006949
 8006544:	0800694f 	.word	0x0800694f
 8006548:	08006953 	.word	0x08006953
 800654c:	080022c9 	.word	0x080022c9
 8006550:	08006301 	.word	0x08006301

08006554 <__swbuf_r>:
 8006554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006556:	460e      	mov	r6, r1
 8006558:	4614      	mov	r4, r2
 800655a:	4605      	mov	r5, r0
 800655c:	b118      	cbz	r0, 8006566 <__swbuf_r+0x12>
 800655e:	6a03      	ldr	r3, [r0, #32]
 8006560:	b90b      	cbnz	r3, 8006566 <__swbuf_r+0x12>
 8006562:	f7fc fcfd 	bl	8002f60 <__sinit>
 8006566:	69a3      	ldr	r3, [r4, #24]
 8006568:	60a3      	str	r3, [r4, #8]
 800656a:	89a3      	ldrh	r3, [r4, #12]
 800656c:	071a      	lsls	r2, r3, #28
 800656e:	d501      	bpl.n	8006574 <__swbuf_r+0x20>
 8006570:	6923      	ldr	r3, [r4, #16]
 8006572:	b943      	cbnz	r3, 8006586 <__swbuf_r+0x32>
 8006574:	4621      	mov	r1, r4
 8006576:	4628      	mov	r0, r5
 8006578:	f000 f82a 	bl	80065d0 <__swsetup_r>
 800657c:	b118      	cbz	r0, 8006586 <__swbuf_r+0x32>
 800657e:	f04f 37ff 	mov.w	r7, #4294967295
 8006582:	4638      	mov	r0, r7
 8006584:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006586:	6823      	ldr	r3, [r4, #0]
 8006588:	6922      	ldr	r2, [r4, #16]
 800658a:	1a98      	subs	r0, r3, r2
 800658c:	6963      	ldr	r3, [r4, #20]
 800658e:	b2f6      	uxtb	r6, r6
 8006590:	4283      	cmp	r3, r0
 8006592:	4637      	mov	r7, r6
 8006594:	dc05      	bgt.n	80065a2 <__swbuf_r+0x4e>
 8006596:	4621      	mov	r1, r4
 8006598:	4628      	mov	r0, r5
 800659a:	f7ff fa4b 	bl	8005a34 <_fflush_r>
 800659e:	2800      	cmp	r0, #0
 80065a0:	d1ed      	bne.n	800657e <__swbuf_r+0x2a>
 80065a2:	68a3      	ldr	r3, [r4, #8]
 80065a4:	3b01      	subs	r3, #1
 80065a6:	60a3      	str	r3, [r4, #8]
 80065a8:	6823      	ldr	r3, [r4, #0]
 80065aa:	1c5a      	adds	r2, r3, #1
 80065ac:	6022      	str	r2, [r4, #0]
 80065ae:	701e      	strb	r6, [r3, #0]
 80065b0:	6962      	ldr	r2, [r4, #20]
 80065b2:	1c43      	adds	r3, r0, #1
 80065b4:	429a      	cmp	r2, r3
 80065b6:	d004      	beq.n	80065c2 <__swbuf_r+0x6e>
 80065b8:	89a3      	ldrh	r3, [r4, #12]
 80065ba:	07db      	lsls	r3, r3, #31
 80065bc:	d5e1      	bpl.n	8006582 <__swbuf_r+0x2e>
 80065be:	2e0a      	cmp	r6, #10
 80065c0:	d1df      	bne.n	8006582 <__swbuf_r+0x2e>
 80065c2:	4621      	mov	r1, r4
 80065c4:	4628      	mov	r0, r5
 80065c6:	f7ff fa35 	bl	8005a34 <_fflush_r>
 80065ca:	2800      	cmp	r0, #0
 80065cc:	d0d9      	beq.n	8006582 <__swbuf_r+0x2e>
 80065ce:	e7d6      	b.n	800657e <__swbuf_r+0x2a>

080065d0 <__swsetup_r>:
 80065d0:	b538      	push	{r3, r4, r5, lr}
 80065d2:	4b29      	ldr	r3, [pc, #164]	@ (8006678 <__swsetup_r+0xa8>)
 80065d4:	4605      	mov	r5, r0
 80065d6:	6818      	ldr	r0, [r3, #0]
 80065d8:	460c      	mov	r4, r1
 80065da:	b118      	cbz	r0, 80065e4 <__swsetup_r+0x14>
 80065dc:	6a03      	ldr	r3, [r0, #32]
 80065de:	b90b      	cbnz	r3, 80065e4 <__swsetup_r+0x14>
 80065e0:	f7fc fcbe 	bl	8002f60 <__sinit>
 80065e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80065e8:	0719      	lsls	r1, r3, #28
 80065ea:	d422      	bmi.n	8006632 <__swsetup_r+0x62>
 80065ec:	06da      	lsls	r2, r3, #27
 80065ee:	d407      	bmi.n	8006600 <__swsetup_r+0x30>
 80065f0:	2209      	movs	r2, #9
 80065f2:	602a      	str	r2, [r5, #0]
 80065f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80065f8:	81a3      	strh	r3, [r4, #12]
 80065fa:	f04f 30ff 	mov.w	r0, #4294967295
 80065fe:	e033      	b.n	8006668 <__swsetup_r+0x98>
 8006600:	0758      	lsls	r0, r3, #29
 8006602:	d512      	bpl.n	800662a <__swsetup_r+0x5a>
 8006604:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006606:	b141      	cbz	r1, 800661a <__swsetup_r+0x4a>
 8006608:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800660c:	4299      	cmp	r1, r3
 800660e:	d002      	beq.n	8006616 <__swsetup_r+0x46>
 8006610:	4628      	mov	r0, r5
 8006612:	f7fd fc1d 	bl	8003e50 <_free_r>
 8006616:	2300      	movs	r3, #0
 8006618:	6363      	str	r3, [r4, #52]	@ 0x34
 800661a:	89a3      	ldrh	r3, [r4, #12]
 800661c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006620:	81a3      	strh	r3, [r4, #12]
 8006622:	2300      	movs	r3, #0
 8006624:	6063      	str	r3, [r4, #4]
 8006626:	6923      	ldr	r3, [r4, #16]
 8006628:	6023      	str	r3, [r4, #0]
 800662a:	89a3      	ldrh	r3, [r4, #12]
 800662c:	f043 0308 	orr.w	r3, r3, #8
 8006630:	81a3      	strh	r3, [r4, #12]
 8006632:	6923      	ldr	r3, [r4, #16]
 8006634:	b94b      	cbnz	r3, 800664a <__swsetup_r+0x7a>
 8006636:	89a3      	ldrh	r3, [r4, #12]
 8006638:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800663c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006640:	d003      	beq.n	800664a <__swsetup_r+0x7a>
 8006642:	4621      	mov	r1, r4
 8006644:	4628      	mov	r0, r5
 8006646:	f000 f883 	bl	8006750 <__smakebuf_r>
 800664a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800664e:	f013 0201 	ands.w	r2, r3, #1
 8006652:	d00a      	beq.n	800666a <__swsetup_r+0x9a>
 8006654:	2200      	movs	r2, #0
 8006656:	60a2      	str	r2, [r4, #8]
 8006658:	6962      	ldr	r2, [r4, #20]
 800665a:	4252      	negs	r2, r2
 800665c:	61a2      	str	r2, [r4, #24]
 800665e:	6922      	ldr	r2, [r4, #16]
 8006660:	b942      	cbnz	r2, 8006674 <__swsetup_r+0xa4>
 8006662:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006666:	d1c5      	bne.n	80065f4 <__swsetup_r+0x24>
 8006668:	bd38      	pop	{r3, r4, r5, pc}
 800666a:	0799      	lsls	r1, r3, #30
 800666c:	bf58      	it	pl
 800666e:	6962      	ldrpl	r2, [r4, #20]
 8006670:	60a2      	str	r2, [r4, #8]
 8006672:	e7f4      	b.n	800665e <__swsetup_r+0x8e>
 8006674:	2000      	movs	r0, #0
 8006676:	e7f7      	b.n	8006668 <__swsetup_r+0x98>
 8006678:	20000010 	.word	0x20000010

0800667c <_raise_r>:
 800667c:	291f      	cmp	r1, #31
 800667e:	b538      	push	{r3, r4, r5, lr}
 8006680:	4605      	mov	r5, r0
 8006682:	460c      	mov	r4, r1
 8006684:	d904      	bls.n	8006690 <_raise_r+0x14>
 8006686:	2316      	movs	r3, #22
 8006688:	6003      	str	r3, [r0, #0]
 800668a:	f04f 30ff 	mov.w	r0, #4294967295
 800668e:	bd38      	pop	{r3, r4, r5, pc}
 8006690:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006692:	b112      	cbz	r2, 800669a <_raise_r+0x1e>
 8006694:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006698:	b94b      	cbnz	r3, 80066ae <_raise_r+0x32>
 800669a:	4628      	mov	r0, r5
 800669c:	f000 f830 	bl	8006700 <_getpid_r>
 80066a0:	4622      	mov	r2, r4
 80066a2:	4601      	mov	r1, r0
 80066a4:	4628      	mov	r0, r5
 80066a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80066aa:	f000 b817 	b.w	80066dc <_kill_r>
 80066ae:	2b01      	cmp	r3, #1
 80066b0:	d00a      	beq.n	80066c8 <_raise_r+0x4c>
 80066b2:	1c59      	adds	r1, r3, #1
 80066b4:	d103      	bne.n	80066be <_raise_r+0x42>
 80066b6:	2316      	movs	r3, #22
 80066b8:	6003      	str	r3, [r0, #0]
 80066ba:	2001      	movs	r0, #1
 80066bc:	e7e7      	b.n	800668e <_raise_r+0x12>
 80066be:	2100      	movs	r1, #0
 80066c0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80066c4:	4620      	mov	r0, r4
 80066c6:	4798      	blx	r3
 80066c8:	2000      	movs	r0, #0
 80066ca:	e7e0      	b.n	800668e <_raise_r+0x12>

080066cc <raise>:
 80066cc:	4b02      	ldr	r3, [pc, #8]	@ (80066d8 <raise+0xc>)
 80066ce:	4601      	mov	r1, r0
 80066d0:	6818      	ldr	r0, [r3, #0]
 80066d2:	f7ff bfd3 	b.w	800667c <_raise_r>
 80066d6:	bf00      	nop
 80066d8:	20000010 	.word	0x20000010

080066dc <_kill_r>:
 80066dc:	b538      	push	{r3, r4, r5, lr}
 80066de:	4d07      	ldr	r5, [pc, #28]	@ (80066fc <_kill_r+0x20>)
 80066e0:	2300      	movs	r3, #0
 80066e2:	4604      	mov	r4, r0
 80066e4:	4608      	mov	r0, r1
 80066e6:	4611      	mov	r1, r2
 80066e8:	602b      	str	r3, [r5, #0]
 80066ea:	f7fa fb1b 	bl	8000d24 <_kill>
 80066ee:	1c43      	adds	r3, r0, #1
 80066f0:	d102      	bne.n	80066f8 <_kill_r+0x1c>
 80066f2:	682b      	ldr	r3, [r5, #0]
 80066f4:	b103      	cbz	r3, 80066f8 <_kill_r+0x1c>
 80066f6:	6023      	str	r3, [r4, #0]
 80066f8:	bd38      	pop	{r3, r4, r5, pc}
 80066fa:	bf00      	nop
 80066fc:	2000032c 	.word	0x2000032c

08006700 <_getpid_r>:
 8006700:	f7fa bb09 	b.w	8000d16 <_getpid>

08006704 <__swhatbuf_r>:
 8006704:	b570      	push	{r4, r5, r6, lr}
 8006706:	460c      	mov	r4, r1
 8006708:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800670c:	2900      	cmp	r1, #0
 800670e:	b096      	sub	sp, #88	@ 0x58
 8006710:	4615      	mov	r5, r2
 8006712:	461e      	mov	r6, r3
 8006714:	da0d      	bge.n	8006732 <__swhatbuf_r+0x2e>
 8006716:	89a3      	ldrh	r3, [r4, #12]
 8006718:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800671c:	f04f 0100 	mov.w	r1, #0
 8006720:	bf14      	ite	ne
 8006722:	2340      	movne	r3, #64	@ 0x40
 8006724:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006728:	2000      	movs	r0, #0
 800672a:	6031      	str	r1, [r6, #0]
 800672c:	602b      	str	r3, [r5, #0]
 800672e:	b016      	add	sp, #88	@ 0x58
 8006730:	bd70      	pop	{r4, r5, r6, pc}
 8006732:	466a      	mov	r2, sp
 8006734:	f000 f848 	bl	80067c8 <_fstat_r>
 8006738:	2800      	cmp	r0, #0
 800673a:	dbec      	blt.n	8006716 <__swhatbuf_r+0x12>
 800673c:	9901      	ldr	r1, [sp, #4]
 800673e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006742:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006746:	4259      	negs	r1, r3
 8006748:	4159      	adcs	r1, r3
 800674a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800674e:	e7eb      	b.n	8006728 <__swhatbuf_r+0x24>

08006750 <__smakebuf_r>:
 8006750:	898b      	ldrh	r3, [r1, #12]
 8006752:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006754:	079d      	lsls	r5, r3, #30
 8006756:	4606      	mov	r6, r0
 8006758:	460c      	mov	r4, r1
 800675a:	d507      	bpl.n	800676c <__smakebuf_r+0x1c>
 800675c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006760:	6023      	str	r3, [r4, #0]
 8006762:	6123      	str	r3, [r4, #16]
 8006764:	2301      	movs	r3, #1
 8006766:	6163      	str	r3, [r4, #20]
 8006768:	b003      	add	sp, #12
 800676a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800676c:	ab01      	add	r3, sp, #4
 800676e:	466a      	mov	r2, sp
 8006770:	f7ff ffc8 	bl	8006704 <__swhatbuf_r>
 8006774:	9f00      	ldr	r7, [sp, #0]
 8006776:	4605      	mov	r5, r0
 8006778:	4639      	mov	r1, r7
 800677a:	4630      	mov	r0, r6
 800677c:	f7fd fbdc 	bl	8003f38 <_malloc_r>
 8006780:	b948      	cbnz	r0, 8006796 <__smakebuf_r+0x46>
 8006782:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006786:	059a      	lsls	r2, r3, #22
 8006788:	d4ee      	bmi.n	8006768 <__smakebuf_r+0x18>
 800678a:	f023 0303 	bic.w	r3, r3, #3
 800678e:	f043 0302 	orr.w	r3, r3, #2
 8006792:	81a3      	strh	r3, [r4, #12]
 8006794:	e7e2      	b.n	800675c <__smakebuf_r+0xc>
 8006796:	89a3      	ldrh	r3, [r4, #12]
 8006798:	6020      	str	r0, [r4, #0]
 800679a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800679e:	81a3      	strh	r3, [r4, #12]
 80067a0:	9b01      	ldr	r3, [sp, #4]
 80067a2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80067a6:	b15b      	cbz	r3, 80067c0 <__smakebuf_r+0x70>
 80067a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80067ac:	4630      	mov	r0, r6
 80067ae:	f000 f81d 	bl	80067ec <_isatty_r>
 80067b2:	b128      	cbz	r0, 80067c0 <__smakebuf_r+0x70>
 80067b4:	89a3      	ldrh	r3, [r4, #12]
 80067b6:	f023 0303 	bic.w	r3, r3, #3
 80067ba:	f043 0301 	orr.w	r3, r3, #1
 80067be:	81a3      	strh	r3, [r4, #12]
 80067c0:	89a3      	ldrh	r3, [r4, #12]
 80067c2:	431d      	orrs	r5, r3
 80067c4:	81a5      	strh	r5, [r4, #12]
 80067c6:	e7cf      	b.n	8006768 <__smakebuf_r+0x18>

080067c8 <_fstat_r>:
 80067c8:	b538      	push	{r3, r4, r5, lr}
 80067ca:	4d07      	ldr	r5, [pc, #28]	@ (80067e8 <_fstat_r+0x20>)
 80067cc:	2300      	movs	r3, #0
 80067ce:	4604      	mov	r4, r0
 80067d0:	4608      	mov	r0, r1
 80067d2:	4611      	mov	r1, r2
 80067d4:	602b      	str	r3, [r5, #0]
 80067d6:	f7fa fb04 	bl	8000de2 <_fstat>
 80067da:	1c43      	adds	r3, r0, #1
 80067dc:	d102      	bne.n	80067e4 <_fstat_r+0x1c>
 80067de:	682b      	ldr	r3, [r5, #0]
 80067e0:	b103      	cbz	r3, 80067e4 <_fstat_r+0x1c>
 80067e2:	6023      	str	r3, [r4, #0]
 80067e4:	bd38      	pop	{r3, r4, r5, pc}
 80067e6:	bf00      	nop
 80067e8:	2000032c 	.word	0x2000032c

080067ec <_isatty_r>:
 80067ec:	b538      	push	{r3, r4, r5, lr}
 80067ee:	4d06      	ldr	r5, [pc, #24]	@ (8006808 <_isatty_r+0x1c>)
 80067f0:	2300      	movs	r3, #0
 80067f2:	4604      	mov	r4, r0
 80067f4:	4608      	mov	r0, r1
 80067f6:	602b      	str	r3, [r5, #0]
 80067f8:	f7fa fb02 	bl	8000e00 <_isatty>
 80067fc:	1c43      	adds	r3, r0, #1
 80067fe:	d102      	bne.n	8006806 <_isatty_r+0x1a>
 8006800:	682b      	ldr	r3, [r5, #0]
 8006802:	b103      	cbz	r3, 8006806 <_isatty_r+0x1a>
 8006804:	6023      	str	r3, [r4, #0]
 8006806:	bd38      	pop	{r3, r4, r5, pc}
 8006808:	2000032c 	.word	0x2000032c

0800680c <_init>:
 800680c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800680e:	bf00      	nop
 8006810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006812:	bc08      	pop	{r3}
 8006814:	469e      	mov	lr, r3
 8006816:	4770      	bx	lr

08006818 <_fini>:
 8006818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800681a:	bf00      	nop
 800681c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800681e:	bc08      	pop	{r3}
 8006820:	469e      	mov	lr, r3
 8006822:	4770      	bx	lr
