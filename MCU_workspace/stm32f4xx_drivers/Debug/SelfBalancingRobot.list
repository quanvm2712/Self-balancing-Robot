
SelfBalancingRobot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006f94  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000046c  08007128  08007128  00008128  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007594  08007594  000091dc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08007594  08007594  00008594  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800759c  0800759c  000091dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800759c  0800759c  0000859c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080075a0  080075a0  000085a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001dc  20000000  080075a4  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000091dc  2**0
                  CONTENTS
 10 .bss          000001dc  200001e0  200001e0  000091e0  2**3
                  ALLOC
 11 ._user_heap_stack 00000604  200003bc  200003bc  000091e0  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000091dc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002f3a  00000000  00000000  00009206  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000be9  00000000  00000000  0000c140  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000390  00000000  00000000  0000cd30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000295  00000000  00000000  0000d0c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000043a5  00000000  00000000  0000d355  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00004e3d  00000000  00000000  000116fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000f554  00000000  00000000  00016537  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00025a8b  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000024a0  00000000  00000000  00025ad0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000065  00000000  00000000  00027f70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001e0 	.word	0x200001e0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800710c 	.word	0x0800710c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001e4 	.word	0x200001e4
 80001cc:	0800710c 	.word	0x0800710c

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_frsub>:
 8000c88:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000c8c:	e002      	b.n	8000c94 <__addsf3>
 8000c8e:	bf00      	nop

08000c90 <__aeabi_fsub>:
 8000c90:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000c94 <__addsf3>:
 8000c94:	0042      	lsls	r2, r0, #1
 8000c96:	bf1f      	itttt	ne
 8000c98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000c9c:	ea92 0f03 	teqne	r2, r3
 8000ca0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ca4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ca8:	d06a      	beq.n	8000d80 <__addsf3+0xec>
 8000caa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000cae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000cb2:	bfc1      	itttt	gt
 8000cb4:	18d2      	addgt	r2, r2, r3
 8000cb6:	4041      	eorgt	r1, r0
 8000cb8:	4048      	eorgt	r0, r1
 8000cba:	4041      	eorgt	r1, r0
 8000cbc:	bfb8      	it	lt
 8000cbe:	425b      	neglt	r3, r3
 8000cc0:	2b19      	cmp	r3, #25
 8000cc2:	bf88      	it	hi
 8000cc4:	4770      	bxhi	lr
 8000cc6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000cca:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cce:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000cd2:	bf18      	it	ne
 8000cd4:	4240      	negne	r0, r0
 8000cd6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000cda:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000cde:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000ce2:	bf18      	it	ne
 8000ce4:	4249      	negne	r1, r1
 8000ce6:	ea92 0f03 	teq	r2, r3
 8000cea:	d03f      	beq.n	8000d6c <__addsf3+0xd8>
 8000cec:	f1a2 0201 	sub.w	r2, r2, #1
 8000cf0:	fa41 fc03 	asr.w	ip, r1, r3
 8000cf4:	eb10 000c 	adds.w	r0, r0, ip
 8000cf8:	f1c3 0320 	rsb	r3, r3, #32
 8000cfc:	fa01 f103 	lsl.w	r1, r1, r3
 8000d00:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d04:	d502      	bpl.n	8000d0c <__addsf3+0x78>
 8000d06:	4249      	negs	r1, r1
 8000d08:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000d0c:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000d10:	d313      	bcc.n	8000d3a <__addsf3+0xa6>
 8000d12:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000d16:	d306      	bcc.n	8000d26 <__addsf3+0x92>
 8000d18:	0840      	lsrs	r0, r0, #1
 8000d1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000d1e:	f102 0201 	add.w	r2, r2, #1
 8000d22:	2afe      	cmp	r2, #254	@ 0xfe
 8000d24:	d251      	bcs.n	8000dca <__addsf3+0x136>
 8000d26:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000d2a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d2e:	bf08      	it	eq
 8000d30:	f020 0001 	biceq.w	r0, r0, #1
 8000d34:	ea40 0003 	orr.w	r0, r0, r3
 8000d38:	4770      	bx	lr
 8000d3a:	0049      	lsls	r1, r1, #1
 8000d3c:	eb40 0000 	adc.w	r0, r0, r0
 8000d40:	3a01      	subs	r2, #1
 8000d42:	bf28      	it	cs
 8000d44:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000d48:	d2ed      	bcs.n	8000d26 <__addsf3+0x92>
 8000d4a:	fab0 fc80 	clz	ip, r0
 8000d4e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000d52:	ebb2 020c 	subs.w	r2, r2, ip
 8000d56:	fa00 f00c 	lsl.w	r0, r0, ip
 8000d5a:	bfaa      	itet	ge
 8000d5c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000d60:	4252      	neglt	r2, r2
 8000d62:	4318      	orrge	r0, r3
 8000d64:	bfbc      	itt	lt
 8000d66:	40d0      	lsrlt	r0, r2
 8000d68:	4318      	orrlt	r0, r3
 8000d6a:	4770      	bx	lr
 8000d6c:	f092 0f00 	teq	r2, #0
 8000d70:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000d74:	bf06      	itte	eq
 8000d76:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000d7a:	3201      	addeq	r2, #1
 8000d7c:	3b01      	subne	r3, #1
 8000d7e:	e7b5      	b.n	8000cec <__addsf3+0x58>
 8000d80:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000d84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000d88:	bf18      	it	ne
 8000d8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d8e:	d021      	beq.n	8000dd4 <__addsf3+0x140>
 8000d90:	ea92 0f03 	teq	r2, r3
 8000d94:	d004      	beq.n	8000da0 <__addsf3+0x10c>
 8000d96:	f092 0f00 	teq	r2, #0
 8000d9a:	bf08      	it	eq
 8000d9c:	4608      	moveq	r0, r1
 8000d9e:	4770      	bx	lr
 8000da0:	ea90 0f01 	teq	r0, r1
 8000da4:	bf1c      	itt	ne
 8000da6:	2000      	movne	r0, #0
 8000da8:	4770      	bxne	lr
 8000daa:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000dae:	d104      	bne.n	8000dba <__addsf3+0x126>
 8000db0:	0040      	lsls	r0, r0, #1
 8000db2:	bf28      	it	cs
 8000db4:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000db8:	4770      	bx	lr
 8000dba:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000dbe:	bf3c      	itt	cc
 8000dc0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000dc4:	4770      	bxcc	lr
 8000dc6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000dca:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000dce:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000dd2:	4770      	bx	lr
 8000dd4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000dd8:	bf16      	itet	ne
 8000dda:	4608      	movne	r0, r1
 8000ddc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000de0:	4601      	movne	r1, r0
 8000de2:	0242      	lsls	r2, r0, #9
 8000de4:	bf06      	itte	eq
 8000de6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000dea:	ea90 0f01 	teqeq	r0, r1
 8000dee:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000df2:	4770      	bx	lr

08000df4 <__aeabi_ui2f>:
 8000df4:	f04f 0300 	mov.w	r3, #0
 8000df8:	e004      	b.n	8000e04 <__aeabi_i2f+0x8>
 8000dfa:	bf00      	nop

08000dfc <__aeabi_i2f>:
 8000dfc:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000e00:	bf48      	it	mi
 8000e02:	4240      	negmi	r0, r0
 8000e04:	ea5f 0c00 	movs.w	ip, r0
 8000e08:	bf08      	it	eq
 8000e0a:	4770      	bxeq	lr
 8000e0c:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000e10:	4601      	mov	r1, r0
 8000e12:	f04f 0000 	mov.w	r0, #0
 8000e16:	e01c      	b.n	8000e52 <__aeabi_l2f+0x2a>

08000e18 <__aeabi_ul2f>:
 8000e18:	ea50 0201 	orrs.w	r2, r0, r1
 8000e1c:	bf08      	it	eq
 8000e1e:	4770      	bxeq	lr
 8000e20:	f04f 0300 	mov.w	r3, #0
 8000e24:	e00a      	b.n	8000e3c <__aeabi_l2f+0x14>
 8000e26:	bf00      	nop

08000e28 <__aeabi_l2f>:
 8000e28:	ea50 0201 	orrs.w	r2, r0, r1
 8000e2c:	bf08      	it	eq
 8000e2e:	4770      	bxeq	lr
 8000e30:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000e34:	d502      	bpl.n	8000e3c <__aeabi_l2f+0x14>
 8000e36:	4240      	negs	r0, r0
 8000e38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e3c:	ea5f 0c01 	movs.w	ip, r1
 8000e40:	bf02      	ittt	eq
 8000e42:	4684      	moveq	ip, r0
 8000e44:	4601      	moveq	r1, r0
 8000e46:	2000      	moveq	r0, #0
 8000e48:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000e4c:	bf08      	it	eq
 8000e4e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000e52:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000e56:	fabc f28c 	clz	r2, ip
 8000e5a:	3a08      	subs	r2, #8
 8000e5c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000e60:	db10      	blt.n	8000e84 <__aeabi_l2f+0x5c>
 8000e62:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e66:	4463      	add	r3, ip
 8000e68:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e6c:	f1c2 0220 	rsb	r2, r2, #32
 8000e70:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000e74:	fa20 f202 	lsr.w	r2, r0, r2
 8000e78:	eb43 0002 	adc.w	r0, r3, r2
 8000e7c:	bf08      	it	eq
 8000e7e:	f020 0001 	biceq.w	r0, r0, #1
 8000e82:	4770      	bx	lr
 8000e84:	f102 0220 	add.w	r2, r2, #32
 8000e88:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e8c:	f1c2 0220 	rsb	r2, r2, #32
 8000e90:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000e94:	fa21 f202 	lsr.w	r2, r1, r2
 8000e98:	eb43 0002 	adc.w	r0, r3, r2
 8000e9c:	bf08      	it	eq
 8000e9e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ea2:	4770      	bx	lr

08000ea4 <__aeabi_fmul>:
 8000ea4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000ea8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eac:	bf1e      	ittt	ne
 8000eae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000eb2:	ea92 0f0c 	teqne	r2, ip
 8000eb6:	ea93 0f0c 	teqne	r3, ip
 8000eba:	d06f      	beq.n	8000f9c <__aeabi_fmul+0xf8>
 8000ebc:	441a      	add	r2, r3
 8000ebe:	ea80 0c01 	eor.w	ip, r0, r1
 8000ec2:	0240      	lsls	r0, r0, #9
 8000ec4:	bf18      	it	ne
 8000ec6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000eca:	d01e      	beq.n	8000f0a <__aeabi_fmul+0x66>
 8000ecc:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000ed0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000ed4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000ed8:	fba0 3101 	umull	r3, r1, r0, r1
 8000edc:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000ee0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000ee4:	bf3e      	ittt	cc
 8000ee6:	0049      	lslcc	r1, r1, #1
 8000ee8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000eec:	005b      	lslcc	r3, r3, #1
 8000eee:	ea40 0001 	orr.w	r0, r0, r1
 8000ef2:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000ef6:	2afd      	cmp	r2, #253	@ 0xfd
 8000ef8:	d81d      	bhi.n	8000f36 <__aeabi_fmul+0x92>
 8000efa:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000efe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f02:	bf08      	it	eq
 8000f04:	f020 0001 	biceq.w	r0, r0, #1
 8000f08:	4770      	bx	lr
 8000f0a:	f090 0f00 	teq	r0, #0
 8000f0e:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f12:	bf08      	it	eq
 8000f14:	0249      	lsleq	r1, r1, #9
 8000f16:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f1a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000f1e:	3a7f      	subs	r2, #127	@ 0x7f
 8000f20:	bfc2      	ittt	gt
 8000f22:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f26:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f2a:	4770      	bxgt	lr
 8000f2c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f30:	f04f 0300 	mov.w	r3, #0
 8000f34:	3a01      	subs	r2, #1
 8000f36:	dc5d      	bgt.n	8000ff4 <__aeabi_fmul+0x150>
 8000f38:	f112 0f19 	cmn.w	r2, #25
 8000f3c:	bfdc      	itt	le
 8000f3e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000f42:	4770      	bxle	lr
 8000f44:	f1c2 0200 	rsb	r2, r2, #0
 8000f48:	0041      	lsls	r1, r0, #1
 8000f4a:	fa21 f102 	lsr.w	r1, r1, r2
 8000f4e:	f1c2 0220 	rsb	r2, r2, #32
 8000f52:	fa00 fc02 	lsl.w	ip, r0, r2
 8000f56:	ea5f 0031 	movs.w	r0, r1, rrx
 8000f5a:	f140 0000 	adc.w	r0, r0, #0
 8000f5e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000f62:	bf08      	it	eq
 8000f64:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000f68:	4770      	bx	lr
 8000f6a:	f092 0f00 	teq	r2, #0
 8000f6e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000f72:	bf02      	ittt	eq
 8000f74:	0040      	lsleq	r0, r0, #1
 8000f76:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000f7a:	3a01      	subeq	r2, #1
 8000f7c:	d0f9      	beq.n	8000f72 <__aeabi_fmul+0xce>
 8000f7e:	ea40 000c 	orr.w	r0, r0, ip
 8000f82:	f093 0f00 	teq	r3, #0
 8000f86:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000f8a:	bf02      	ittt	eq
 8000f8c:	0049      	lsleq	r1, r1, #1
 8000f8e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000f92:	3b01      	subeq	r3, #1
 8000f94:	d0f9      	beq.n	8000f8a <__aeabi_fmul+0xe6>
 8000f96:	ea41 010c 	orr.w	r1, r1, ip
 8000f9a:	e78f      	b.n	8000ebc <__aeabi_fmul+0x18>
 8000f9c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000fa0:	ea92 0f0c 	teq	r2, ip
 8000fa4:	bf18      	it	ne
 8000fa6:	ea93 0f0c 	teqne	r3, ip
 8000faa:	d00a      	beq.n	8000fc2 <__aeabi_fmul+0x11e>
 8000fac:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000fb0:	bf18      	it	ne
 8000fb2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000fb6:	d1d8      	bne.n	8000f6a <__aeabi_fmul+0xc6>
 8000fb8:	ea80 0001 	eor.w	r0, r0, r1
 8000fbc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000fc0:	4770      	bx	lr
 8000fc2:	f090 0f00 	teq	r0, #0
 8000fc6:	bf17      	itett	ne
 8000fc8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000fcc:	4608      	moveq	r0, r1
 8000fce:	f091 0f00 	teqne	r1, #0
 8000fd2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000fd6:	d014      	beq.n	8001002 <__aeabi_fmul+0x15e>
 8000fd8:	ea92 0f0c 	teq	r2, ip
 8000fdc:	d101      	bne.n	8000fe2 <__aeabi_fmul+0x13e>
 8000fde:	0242      	lsls	r2, r0, #9
 8000fe0:	d10f      	bne.n	8001002 <__aeabi_fmul+0x15e>
 8000fe2:	ea93 0f0c 	teq	r3, ip
 8000fe6:	d103      	bne.n	8000ff0 <__aeabi_fmul+0x14c>
 8000fe8:	024b      	lsls	r3, r1, #9
 8000fea:	bf18      	it	ne
 8000fec:	4608      	movne	r0, r1
 8000fee:	d108      	bne.n	8001002 <__aeabi_fmul+0x15e>
 8000ff0:	ea80 0001 	eor.w	r0, r0, r1
 8000ff4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ff8:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ffc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8001000:	4770      	bx	lr
 8001002:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8001006:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 800100a:	4770      	bx	lr

0800100c <__aeabi_fdiv>:
 800100c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8001010:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8001014:	bf1e      	ittt	ne
 8001016:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800101a:	ea92 0f0c 	teqne	r2, ip
 800101e:	ea93 0f0c 	teqne	r3, ip
 8001022:	d069      	beq.n	80010f8 <__aeabi_fdiv+0xec>
 8001024:	eba2 0203 	sub.w	r2, r2, r3
 8001028:	ea80 0c01 	eor.w	ip, r0, r1
 800102c:	0249      	lsls	r1, r1, #9
 800102e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8001032:	d037      	beq.n	80010a4 <__aeabi_fdiv+0x98>
 8001034:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8001038:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 800103c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8001040:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8001044:	428b      	cmp	r3, r1
 8001046:	bf38      	it	cc
 8001048:	005b      	lslcc	r3, r3, #1
 800104a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 800104e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8001052:	428b      	cmp	r3, r1
 8001054:	bf24      	itt	cs
 8001056:	1a5b      	subcs	r3, r3, r1
 8001058:	ea40 000c 	orrcs.w	r0, r0, ip
 800105c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8001060:	bf24      	itt	cs
 8001062:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8001066:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800106a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 800106e:	bf24      	itt	cs
 8001070:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8001074:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8001078:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 800107c:	bf24      	itt	cs
 800107e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8001082:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8001086:	011b      	lsls	r3, r3, #4
 8001088:	bf18      	it	ne
 800108a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 800108e:	d1e0      	bne.n	8001052 <__aeabi_fdiv+0x46>
 8001090:	2afd      	cmp	r2, #253	@ 0xfd
 8001092:	f63f af50 	bhi.w	8000f36 <__aeabi_fmul+0x92>
 8001096:	428b      	cmp	r3, r1
 8001098:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800109c:	bf08      	it	eq
 800109e:	f020 0001 	biceq.w	r0, r0, #1
 80010a2:	4770      	bx	lr
 80010a4:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80010a8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80010ac:	327f      	adds	r2, #127	@ 0x7f
 80010ae:	bfc2      	ittt	gt
 80010b0:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 80010b4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80010b8:	4770      	bxgt	lr
 80010ba:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80010be:	f04f 0300 	mov.w	r3, #0
 80010c2:	3a01      	subs	r2, #1
 80010c4:	e737      	b.n	8000f36 <__aeabi_fmul+0x92>
 80010c6:	f092 0f00 	teq	r2, #0
 80010ca:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 80010ce:	bf02      	ittt	eq
 80010d0:	0040      	lsleq	r0, r0, #1
 80010d2:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 80010d6:	3a01      	subeq	r2, #1
 80010d8:	d0f9      	beq.n	80010ce <__aeabi_fdiv+0xc2>
 80010da:	ea40 000c 	orr.w	r0, r0, ip
 80010de:	f093 0f00 	teq	r3, #0
 80010e2:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 80010e6:	bf02      	ittt	eq
 80010e8:	0049      	lsleq	r1, r1, #1
 80010ea:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 80010ee:	3b01      	subeq	r3, #1
 80010f0:	d0f9      	beq.n	80010e6 <__aeabi_fdiv+0xda>
 80010f2:	ea41 010c 	orr.w	r1, r1, ip
 80010f6:	e795      	b.n	8001024 <__aeabi_fdiv+0x18>
 80010f8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80010fc:	ea92 0f0c 	teq	r2, ip
 8001100:	d108      	bne.n	8001114 <__aeabi_fdiv+0x108>
 8001102:	0242      	lsls	r2, r0, #9
 8001104:	f47f af7d 	bne.w	8001002 <__aeabi_fmul+0x15e>
 8001108:	ea93 0f0c 	teq	r3, ip
 800110c:	f47f af70 	bne.w	8000ff0 <__aeabi_fmul+0x14c>
 8001110:	4608      	mov	r0, r1
 8001112:	e776      	b.n	8001002 <__aeabi_fmul+0x15e>
 8001114:	ea93 0f0c 	teq	r3, ip
 8001118:	d104      	bne.n	8001124 <__aeabi_fdiv+0x118>
 800111a:	024b      	lsls	r3, r1, #9
 800111c:	f43f af4c 	beq.w	8000fb8 <__aeabi_fmul+0x114>
 8001120:	4608      	mov	r0, r1
 8001122:	e76e      	b.n	8001002 <__aeabi_fmul+0x15e>
 8001124:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001128:	bf18      	it	ne
 800112a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800112e:	d1ca      	bne.n	80010c6 <__aeabi_fdiv+0xba>
 8001130:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001134:	f47f af5c 	bne.w	8000ff0 <__aeabi_fmul+0x14c>
 8001138:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800113c:	f47f af3c 	bne.w	8000fb8 <__aeabi_fmul+0x114>
 8001140:	e75f      	b.n	8001002 <__aeabi_fmul+0x15e>
 8001142:	bf00      	nop

08001144 <__gesf2>:
 8001144:	f04f 3cff 	mov.w	ip, #4294967295
 8001148:	e006      	b.n	8001158 <__cmpsf2+0x4>
 800114a:	bf00      	nop

0800114c <__lesf2>:
 800114c:	f04f 0c01 	mov.w	ip, #1
 8001150:	e002      	b.n	8001158 <__cmpsf2+0x4>
 8001152:	bf00      	nop

08001154 <__cmpsf2>:
 8001154:	f04f 0c01 	mov.w	ip, #1
 8001158:	f84d cd04 	str.w	ip, [sp, #-4]!
 800115c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001160:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001164:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001168:	bf18      	it	ne
 800116a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800116e:	d011      	beq.n	8001194 <__cmpsf2+0x40>
 8001170:	b001      	add	sp, #4
 8001172:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001176:	bf18      	it	ne
 8001178:	ea90 0f01 	teqne	r0, r1
 800117c:	bf58      	it	pl
 800117e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001182:	bf88      	it	hi
 8001184:	17c8      	asrhi	r0, r1, #31
 8001186:	bf38      	it	cc
 8001188:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800118c:	bf18      	it	ne
 800118e:	f040 0001 	orrne.w	r0, r0, #1
 8001192:	4770      	bx	lr
 8001194:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001198:	d102      	bne.n	80011a0 <__cmpsf2+0x4c>
 800119a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800119e:	d105      	bne.n	80011ac <__cmpsf2+0x58>
 80011a0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80011a4:	d1e4      	bne.n	8001170 <__cmpsf2+0x1c>
 80011a6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80011aa:	d0e1      	beq.n	8001170 <__cmpsf2+0x1c>
 80011ac:	f85d 0b04 	ldr.w	r0, [sp], #4
 80011b0:	4770      	bx	lr
 80011b2:	bf00      	nop

080011b4 <__aeabi_cfrcmple>:
 80011b4:	4684      	mov	ip, r0
 80011b6:	4608      	mov	r0, r1
 80011b8:	4661      	mov	r1, ip
 80011ba:	e7ff      	b.n	80011bc <__aeabi_cfcmpeq>

080011bc <__aeabi_cfcmpeq>:
 80011bc:	b50f      	push	{r0, r1, r2, r3, lr}
 80011be:	f7ff ffc9 	bl	8001154 <__cmpsf2>
 80011c2:	2800      	cmp	r0, #0
 80011c4:	bf48      	it	mi
 80011c6:	f110 0f00 	cmnmi.w	r0, #0
 80011ca:	bd0f      	pop	{r0, r1, r2, r3, pc}

080011cc <__aeabi_fcmpeq>:
 80011cc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80011d0:	f7ff fff4 	bl	80011bc <__aeabi_cfcmpeq>
 80011d4:	bf0c      	ite	eq
 80011d6:	2001      	moveq	r0, #1
 80011d8:	2000      	movne	r0, #0
 80011da:	f85d fb08 	ldr.w	pc, [sp], #8
 80011de:	bf00      	nop

080011e0 <__aeabi_fcmplt>:
 80011e0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80011e4:	f7ff ffea 	bl	80011bc <__aeabi_cfcmpeq>
 80011e8:	bf34      	ite	cc
 80011ea:	2001      	movcc	r0, #1
 80011ec:	2000      	movcs	r0, #0
 80011ee:	f85d fb08 	ldr.w	pc, [sp], #8
 80011f2:	bf00      	nop

080011f4 <__aeabi_fcmple>:
 80011f4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80011f8:	f7ff ffe0 	bl	80011bc <__aeabi_cfcmpeq>
 80011fc:	bf94      	ite	ls
 80011fe:	2001      	movls	r0, #1
 8001200:	2000      	movhi	r0, #0
 8001202:	f85d fb08 	ldr.w	pc, [sp], #8
 8001206:	bf00      	nop

08001208 <__aeabi_fcmpge>:
 8001208:	f84d ed08 	str.w	lr, [sp, #-8]!
 800120c:	f7ff ffd2 	bl	80011b4 <__aeabi_cfrcmple>
 8001210:	bf94      	ite	ls
 8001212:	2001      	movls	r0, #1
 8001214:	2000      	movhi	r0, #0
 8001216:	f85d fb08 	ldr.w	pc, [sp], #8
 800121a:	bf00      	nop

0800121c <__aeabi_fcmpgt>:
 800121c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001220:	f7ff ffc8 	bl	80011b4 <__aeabi_cfrcmple>
 8001224:	bf34      	ite	cc
 8001226:	2001      	movcc	r0, #1
 8001228:	2000      	movcs	r0, #0
 800122a:	f85d fb08 	ldr.w	pc, [sp], #8
 800122e:	bf00      	nop

08001230 <__aeabi_fcmpun>:
 8001230:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001234:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001238:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 800123c:	d102      	bne.n	8001244 <__aeabi_fcmpun+0x14>
 800123e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8001242:	d108      	bne.n	8001256 <__aeabi_fcmpun+0x26>
 8001244:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8001248:	d102      	bne.n	8001250 <__aeabi_fcmpun+0x20>
 800124a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 800124e:	d102      	bne.n	8001256 <__aeabi_fcmpun+0x26>
 8001250:	f04f 0000 	mov.w	r0, #0
 8001254:	4770      	bx	lr
 8001256:	f04f 0001 	mov.w	r0, #1
 800125a:	4770      	bx	lr

0800125c <__aeabi_d2lz>:
 800125c:	b538      	push	{r3, r4, r5, lr}
 800125e:	2200      	movs	r2, #0
 8001260:	2300      	movs	r3, #0
 8001262:	4604      	mov	r4, r0
 8001264:	460d      	mov	r5, r1
 8001266:	f7ff fc39 	bl	8000adc <__aeabi_dcmplt>
 800126a:	b928      	cbnz	r0, 8001278 <__aeabi_d2lz+0x1c>
 800126c:	4620      	mov	r0, r4
 800126e:	4629      	mov	r1, r5
 8001270:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001274:	f000 b80a 	b.w	800128c <__aeabi_d2ulz>
 8001278:	4620      	mov	r0, r4
 800127a:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 800127e:	f000 f805 	bl	800128c <__aeabi_d2ulz>
 8001282:	4240      	negs	r0, r0
 8001284:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001288:	bd38      	pop	{r3, r4, r5, pc}
 800128a:	bf00      	nop

0800128c <__aeabi_d2ulz>:
 800128c:	b5d0      	push	{r4, r6, r7, lr}
 800128e:	4b0c      	ldr	r3, [pc, #48]	@ (80012c0 <__aeabi_d2ulz+0x34>)
 8001290:	2200      	movs	r2, #0
 8001292:	4606      	mov	r6, r0
 8001294:	460f      	mov	r7, r1
 8001296:	f7ff f9af 	bl	80005f8 <__aeabi_dmul>
 800129a:	f7ff fc85 	bl	8000ba8 <__aeabi_d2uiz>
 800129e:	4604      	mov	r4, r0
 80012a0:	f7ff f930 	bl	8000504 <__aeabi_ui2d>
 80012a4:	4b07      	ldr	r3, [pc, #28]	@ (80012c4 <__aeabi_d2ulz+0x38>)
 80012a6:	2200      	movs	r2, #0
 80012a8:	f7ff f9a6 	bl	80005f8 <__aeabi_dmul>
 80012ac:	4602      	mov	r2, r0
 80012ae:	460b      	mov	r3, r1
 80012b0:	4630      	mov	r0, r6
 80012b2:	4639      	mov	r1, r7
 80012b4:	f7fe ffe8 	bl	8000288 <__aeabi_dsub>
 80012b8:	f7ff fc76 	bl	8000ba8 <__aeabi_d2uiz>
 80012bc:	4621      	mov	r1, r4
 80012be:	bdd0      	pop	{r4, r6, r7, pc}
 80012c0:	3df00000 	.word	0x3df00000
 80012c4:	41f00000 	.word	0x41f00000

080012c8 <DWT_Init>:
I2C_HandleTypeDef hi2c1;
MPU6050_Data sensor_data;
MPU6050_ConvertedData converted_data;
double test;
void DWT_Init(void)
{
 80012c8:	b480      	push	{r7}
 80012ca:	af00      	add	r7, sp, #0
    DEMCR |= DEMCR_TRCENA;         // Enable trace (cần thiết để DWT hoạt động)
 80012cc:	4b09      	ldr	r3, [pc, #36]	@ (80012f4 <DWT_Init+0x2c>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	4a08      	ldr	r2, [pc, #32]	@ (80012f4 <DWT_Init+0x2c>)
 80012d2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80012d6:	6013      	str	r3, [r2, #0]
    DWT_CYCCNT = 0;                // Reset counter
 80012d8:	4b07      	ldr	r3, [pc, #28]	@ (80012f8 <DWT_Init+0x30>)
 80012da:	2200      	movs	r2, #0
 80012dc:	601a      	str	r2, [r3, #0]
    DWT_CTRL |= DWT_CTRL_CYCCNTENA; // Enable cycle counter
 80012de:	4b07      	ldr	r3, [pc, #28]	@ (80012fc <DWT_Init+0x34>)
 80012e0:	681b      	ldr	r3, [r3, #0]
 80012e2:	4a06      	ldr	r2, [pc, #24]	@ (80012fc <DWT_Init+0x34>)
 80012e4:	f043 0301 	orr.w	r3, r3, #1
 80012e8:	6013      	str	r3, [r2, #0]
}
 80012ea:	bf00      	nop
 80012ec:	46bd      	mov	sp, r7
 80012ee:	bc80      	pop	{r7}
 80012f0:	4770      	bx	lr
 80012f2:	bf00      	nop
 80012f4:	e000edfc 	.word	0xe000edfc
 80012f8:	e0001004 	.word	0xe0001004
 80012fc:	e0001000 	.word	0xe0001000

08001300 <main>:
int main(void){
 8001300:	b5b0      	push	{r4, r5, r7, lr}
 8001302:	b086      	sub	sp, #24
 8001304:	af02      	add	r7, sp, #8
	DWT_Init();
 8001306:	f7ff ffdf 	bl	80012c8 <DWT_Init>

	I2C1_Init(&hi2c1);
 800130a:	4820      	ldr	r0, [pc, #128]	@ (800138c <main+0x8c>)
 800130c:	f000 fbb8 	bl	8001a80 <I2C1_Init>
	if (MPU6050_Init(&hi2c1) != I2C_OK)
 8001310:	481e      	ldr	r0, [pc, #120]	@ (800138c <main+0x8c>)
 8001312:	f000 ff86 	bl	8002222 <MPU6050_Init>
 8001316:	4603      	mov	r3, r0
 8001318:	2b00      	cmp	r3, #0
 800131a:	d001      	beq.n	8001320 <main+0x20>
	{
		Error_Handler();
 800131c:	f000 f842 	bl	80013a4 <Error_Handler>
	}

	uint32_t prev = DWT_CYCCNT;
 8001320:	4b1b      	ldr	r3, [pc, #108]	@ (8001390 <main+0x90>)
 8001322:	681b      	ldr	r3, [r3, #0]
 8001324:	60fb      	str	r3, [r7, #12]

	while (1)
	{
		uint32_t now = DWT_CYCCNT;
 8001326:	4b1a      	ldr	r3, [pc, #104]	@ (8001390 <main+0x90>)
 8001328:	681b      	ldr	r3, [r3, #0]
 800132a:	60bb      	str	r3, [r7, #8]
		float dt = (now - prev) / (float)SystemCoreClock; // đơn vị: giây
 800132c:	68ba      	ldr	r2, [r7, #8]
 800132e:	68fb      	ldr	r3, [r7, #12]
 8001330:	1ad3      	subs	r3, r2, r3
 8001332:	4618      	mov	r0, r3
 8001334:	f7ff fd5e 	bl	8000df4 <__aeabi_ui2f>
 8001338:	4603      	mov	r3, r0
 800133a:	4916      	ldr	r1, [pc, #88]	@ (8001394 <main+0x94>)
 800133c:	4618      	mov	r0, r3
 800133e:	f7ff fe65 	bl	800100c <__aeabi_fdiv>
 8001342:	4603      	mov	r3, r0
 8001344:	607b      	str	r3, [r7, #4]
		prev = now;
 8001346:	68bb      	ldr	r3, [r7, #8]
 8001348:	60fb      	str	r3, [r7, #12]

		if (MPU6050_ReadData(&hi2c1, &sensor_data) == I2C_OK)
 800134a:	4913      	ldr	r1, [pc, #76]	@ (8001398 <main+0x98>)
 800134c:	480f      	ldr	r0, [pc, #60]	@ (800138c <main+0x8c>)
 800134e:	f000 ffc5 	bl	80022dc <MPU6050_ReadData>
 8001352:	4603      	mov	r3, r0
 8001354:	2b00      	cmp	r3, #0
 8001356:	d1e6      	bne.n	8001326 <main+0x26>
		{
			MPU6050_ConvertData(&sensor_data, &converted_data);
 8001358:	4910      	ldr	r1, [pc, #64]	@ (800139c <main+0x9c>)
 800135a:	480f      	ldr	r0, [pc, #60]	@ (8001398 <main+0x98>)
 800135c:	f001 f814 	bl	8002388 <MPU6050_ConvertData>
			test = MPU6050_GetAngle(&converted_data, test, dt);
 8001360:	4b0f      	ldr	r3, [pc, #60]	@ (80013a0 <main+0xa0>)
 8001362:	e9d3 4500 	ldrd	r4, r5, [r3]
 8001366:	6878      	ldr	r0, [r7, #4]
 8001368:	f7ff f8ee 	bl	8000548 <__aeabi_f2d>
 800136c:	4602      	mov	r2, r0
 800136e:	460b      	mov	r3, r1
 8001370:	e9cd 2300 	strd	r2, r3, [sp]
 8001374:	4622      	mov	r2, r4
 8001376:	462b      	mov	r3, r5
 8001378:	4808      	ldr	r0, [pc, #32]	@ (800139c <main+0x9c>)
 800137a:	f001 f895 	bl	80024a8 <MPU6050_GetAngle>
 800137e:	4602      	mov	r2, r0
 8001380:	460b      	mov	r3, r1
 8001382:	4907      	ldr	r1, [pc, #28]	@ (80013a0 <main+0xa0>)
 8001384:	e9c1 2300 	strd	r2, r3, [r1]
	{
 8001388:	e7cd      	b.n	8001326 <main+0x26>
 800138a:	bf00      	nop
 800138c:	200001fc 	.word	0x200001fc
 8001390:	e0001004 	.word	0xe0001004
 8001394:	4b742400 	.word	0x4b742400
 8001398:	20000224 	.word	0x20000224
 800139c:	20000230 	.word	0x20000230
 80013a0:	20000260 	.word	0x20000260

080013a4 <Error_Handler>:
		}
	}
}

void Error_Handler(void)
{
 80013a4:	b480      	push	{r7}
 80013a6:	af00      	add	r7, sp, #0
	while(1);
 80013a8:	bf00      	nop
 80013aa:	e7fd      	b.n	80013a8 <Error_Handler+0x4>

080013ac <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80013ac:	b480      	push	{r7}
 80013ae:	af00      	add	r7, sp, #0
  return 1;
 80013b0:	2301      	movs	r3, #1
}
 80013b2:	4618      	mov	r0, r3
 80013b4:	46bd      	mov	sp, r7
 80013b6:	bc80      	pop	{r7}
 80013b8:	4770      	bx	lr

080013ba <_kill>:

int _kill(int pid, int sig)
{
 80013ba:	b580      	push	{r7, lr}
 80013bc:	b082      	sub	sp, #8
 80013be:	af00      	add	r7, sp, #0
 80013c0:	6078      	str	r0, [r7, #4]
 80013c2:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80013c4:	f002 f916 	bl	80035f4 <__errno>
 80013c8:	4603      	mov	r3, r0
 80013ca:	2216      	movs	r2, #22
 80013cc:	601a      	str	r2, [r3, #0]
  return -1;
 80013ce:	f04f 33ff 	mov.w	r3, #4294967295
}
 80013d2:	4618      	mov	r0, r3
 80013d4:	3708      	adds	r7, #8
 80013d6:	46bd      	mov	sp, r7
 80013d8:	bd80      	pop	{r7, pc}

080013da <_exit>:

void _exit (int status)
{
 80013da:	b580      	push	{r7, lr}
 80013dc:	b082      	sub	sp, #8
 80013de:	af00      	add	r7, sp, #0
 80013e0:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80013e2:	f04f 31ff 	mov.w	r1, #4294967295
 80013e6:	6878      	ldr	r0, [r7, #4]
 80013e8:	f7ff ffe7 	bl	80013ba <_kill>
  while (1) {}    /* Make sure we hang here */
 80013ec:	bf00      	nop
 80013ee:	e7fd      	b.n	80013ec <_exit+0x12>

080013f0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b086      	sub	sp, #24
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	60f8      	str	r0, [r7, #12]
 80013f8:	60b9      	str	r1, [r7, #8]
 80013fa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013fc:	2300      	movs	r3, #0
 80013fe:	617b      	str	r3, [r7, #20]
 8001400:	e00a      	b.n	8001418 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001402:	f3af 8000 	nop.w
 8001406:	4601      	mov	r1, r0
 8001408:	68bb      	ldr	r3, [r7, #8]
 800140a:	1c5a      	adds	r2, r3, #1
 800140c:	60ba      	str	r2, [r7, #8]
 800140e:	b2ca      	uxtb	r2, r1
 8001410:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001412:	697b      	ldr	r3, [r7, #20]
 8001414:	3301      	adds	r3, #1
 8001416:	617b      	str	r3, [r7, #20]
 8001418:	697a      	ldr	r2, [r7, #20]
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	429a      	cmp	r2, r3
 800141e:	dbf0      	blt.n	8001402 <_read+0x12>
  }

  return len;
 8001420:	687b      	ldr	r3, [r7, #4]
}
 8001422:	4618      	mov	r0, r3
 8001424:	3718      	adds	r7, #24
 8001426:	46bd      	mov	sp, r7
 8001428:	bd80      	pop	{r7, pc}

0800142a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800142a:	b580      	push	{r7, lr}
 800142c:	b086      	sub	sp, #24
 800142e:	af00      	add	r7, sp, #0
 8001430:	60f8      	str	r0, [r7, #12]
 8001432:	60b9      	str	r1, [r7, #8]
 8001434:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001436:	2300      	movs	r3, #0
 8001438:	617b      	str	r3, [r7, #20]
 800143a:	e009      	b.n	8001450 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800143c:	68bb      	ldr	r3, [r7, #8]
 800143e:	1c5a      	adds	r2, r3, #1
 8001440:	60ba      	str	r2, [r7, #8]
 8001442:	781b      	ldrb	r3, [r3, #0]
 8001444:	4618      	mov	r0, r3
 8001446:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800144a:	697b      	ldr	r3, [r7, #20]
 800144c:	3301      	adds	r3, #1
 800144e:	617b      	str	r3, [r7, #20]
 8001450:	697a      	ldr	r2, [r7, #20]
 8001452:	687b      	ldr	r3, [r7, #4]
 8001454:	429a      	cmp	r2, r3
 8001456:	dbf1      	blt.n	800143c <_write+0x12>
  }
  return len;
 8001458:	687b      	ldr	r3, [r7, #4]
}
 800145a:	4618      	mov	r0, r3
 800145c:	3718      	adds	r7, #24
 800145e:	46bd      	mov	sp, r7
 8001460:	bd80      	pop	{r7, pc}

08001462 <_close>:

int _close(int file)
{
 8001462:	b480      	push	{r7}
 8001464:	b083      	sub	sp, #12
 8001466:	af00      	add	r7, sp, #0
 8001468:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800146a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800146e:	4618      	mov	r0, r3
 8001470:	370c      	adds	r7, #12
 8001472:	46bd      	mov	sp, r7
 8001474:	bc80      	pop	{r7}
 8001476:	4770      	bx	lr

08001478 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001478:	b480      	push	{r7}
 800147a:	b083      	sub	sp, #12
 800147c:	af00      	add	r7, sp, #0
 800147e:	6078      	str	r0, [r7, #4]
 8001480:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001482:	683b      	ldr	r3, [r7, #0]
 8001484:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001488:	605a      	str	r2, [r3, #4]
  return 0;
 800148a:	2300      	movs	r3, #0
}
 800148c:	4618      	mov	r0, r3
 800148e:	370c      	adds	r7, #12
 8001490:	46bd      	mov	sp, r7
 8001492:	bc80      	pop	{r7}
 8001494:	4770      	bx	lr

08001496 <_isatty>:

int _isatty(int file)
{
 8001496:	b480      	push	{r7}
 8001498:	b083      	sub	sp, #12
 800149a:	af00      	add	r7, sp, #0
 800149c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800149e:	2301      	movs	r3, #1
}
 80014a0:	4618      	mov	r0, r3
 80014a2:	370c      	adds	r7, #12
 80014a4:	46bd      	mov	sp, r7
 80014a6:	bc80      	pop	{r7}
 80014a8:	4770      	bx	lr

080014aa <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80014aa:	b480      	push	{r7}
 80014ac:	b085      	sub	sp, #20
 80014ae:	af00      	add	r7, sp, #0
 80014b0:	60f8      	str	r0, [r7, #12]
 80014b2:	60b9      	str	r1, [r7, #8]
 80014b4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80014b6:	2300      	movs	r3, #0
}
 80014b8:	4618      	mov	r0, r3
 80014ba:	3714      	adds	r7, #20
 80014bc:	46bd      	mov	sp, r7
 80014be:	bc80      	pop	{r7}
 80014c0:	4770      	bx	lr
	...

080014c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80014c4:	b580      	push	{r7, lr}
 80014c6:	b086      	sub	sp, #24
 80014c8:	af00      	add	r7, sp, #0
 80014ca:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80014cc:	4a14      	ldr	r2, [pc, #80]	@ (8001520 <_sbrk+0x5c>)
 80014ce:	4b15      	ldr	r3, [pc, #84]	@ (8001524 <_sbrk+0x60>)
 80014d0:	1ad3      	subs	r3, r2, r3
 80014d2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80014d4:	697b      	ldr	r3, [r7, #20]
 80014d6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80014d8:	4b13      	ldr	r3, [pc, #76]	@ (8001528 <_sbrk+0x64>)
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	2b00      	cmp	r3, #0
 80014de:	d102      	bne.n	80014e6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80014e0:	4b11      	ldr	r3, [pc, #68]	@ (8001528 <_sbrk+0x64>)
 80014e2:	4a12      	ldr	r2, [pc, #72]	@ (800152c <_sbrk+0x68>)
 80014e4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80014e6:	4b10      	ldr	r3, [pc, #64]	@ (8001528 <_sbrk+0x64>)
 80014e8:	681a      	ldr	r2, [r3, #0]
 80014ea:	687b      	ldr	r3, [r7, #4]
 80014ec:	4413      	add	r3, r2
 80014ee:	693a      	ldr	r2, [r7, #16]
 80014f0:	429a      	cmp	r2, r3
 80014f2:	d207      	bcs.n	8001504 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80014f4:	f002 f87e 	bl	80035f4 <__errno>
 80014f8:	4603      	mov	r3, r0
 80014fa:	220c      	movs	r2, #12
 80014fc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80014fe:	f04f 33ff 	mov.w	r3, #4294967295
 8001502:	e009      	b.n	8001518 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001504:	4b08      	ldr	r3, [pc, #32]	@ (8001528 <_sbrk+0x64>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800150a:	4b07      	ldr	r3, [pc, #28]	@ (8001528 <_sbrk+0x64>)
 800150c:	681a      	ldr	r2, [r3, #0]
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	4413      	add	r3, r2
 8001512:	4a05      	ldr	r2, [pc, #20]	@ (8001528 <_sbrk+0x64>)
 8001514:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001516:	68fb      	ldr	r3, [r7, #12]
}
 8001518:	4618      	mov	r0, r3
 800151a:	3718      	adds	r7, #24
 800151c:	46bd      	mov	sp, r7
 800151e:	bd80      	pop	{r7, pc}
 8001520:	20020000 	.word	0x20020000
 8001524:	00000400 	.word	0x00000400
 8001528:	20000268 	.word	0x20000268
 800152c:	200003c0 	.word	0x200003c0

08001530 <SysTick_Handler>:
 * @brief SysTick interrupt handler, called every 1 ms.
 * Increments the global tick counter.
 * @param None
 * @retval None
 */
void SysTick_Handler(void){
 8001530:	b480      	push	{r7}
 8001532:	af00      	add	r7, sp, #0
	ticks++;
 8001534:	4b04      	ldr	r3, [pc, #16]	@ (8001548 <SysTick_Handler+0x18>)
 8001536:	681b      	ldr	r3, [r3, #0]
 8001538:	3301      	adds	r3, #1
 800153a:	4a03      	ldr	r2, [pc, #12]	@ (8001548 <SysTick_Handler+0x18>)
 800153c:	6013      	str	r3, [r2, #0]
}
 800153e:	bf00      	nop
 8001540:	46bd      	mov	sp, r7
 8001542:	bc80      	pop	{r7}
 8001544:	4770      	bx	lr
 8001546:	bf00      	nop
 8001548:	2000026c 	.word	0x2000026c

0800154c <GPIO_PeriClockControl>:
  * @param  GPIOx where x can be (A..I) to select the GPIO peripheral .
  * @param  clockState Specifies whether to ENABLE or DISABLE of the clock for the given GPIO peripheral.
  * @retval None
  */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t clockState)
{
 800154c:	b480      	push	{r7}
 800154e:	b083      	sub	sp, #12
 8001550:	af00      	add	r7, sp, #0
 8001552:	6078      	str	r0, [r7, #4]
 8001554:	460b      	mov	r3, r1
 8001556:	70fb      	strb	r3, [r7, #3]
    if (clockState == ENABLE) {
 8001558:	78fb      	ldrb	r3, [r7, #3]
 800155a:	2b01      	cmp	r3, #1
 800155c:	d162      	bne.n	8001624 <GPIO_PeriClockControl+0xd8>
        if (pGPIOx == GPIOA) {
 800155e:	687b      	ldr	r3, [r7, #4]
 8001560:	4a64      	ldr	r2, [pc, #400]	@ (80016f4 <GPIO_PeriClockControl+0x1a8>)
 8001562:	4293      	cmp	r3, r2
 8001564:	d106      	bne.n	8001574 <GPIO_PeriClockControl+0x28>
            GPIOA_CLK_ENABLE();
 8001566:	4b64      	ldr	r3, [pc, #400]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001568:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800156a:	4a63      	ldr	r2, [pc, #396]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 800156c:	f043 0301 	orr.w	r3, r3, #1
 8001570:	6313      	str	r3, [r2, #48]	@ 0x30
            GPIOH_CLK_DISABLE();
        }else if (pGPIOx == GPIOI) {
            GPIOI_CLK_DISABLE();
        }
    }
}
 8001572:	e0b9      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOB) {
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	4a61      	ldr	r2, [pc, #388]	@ (80016fc <GPIO_PeriClockControl+0x1b0>)
 8001578:	4293      	cmp	r3, r2
 800157a:	d106      	bne.n	800158a <GPIO_PeriClockControl+0x3e>
            GPIOB_CLK_ENABLE();
 800157c:	4b5e      	ldr	r3, [pc, #376]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 800157e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001580:	4a5d      	ldr	r2, [pc, #372]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001582:	f043 0302 	orr.w	r3, r3, #2
 8001586:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001588:	e0ae      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOC) {
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	4a5c      	ldr	r2, [pc, #368]	@ (8001700 <GPIO_PeriClockControl+0x1b4>)
 800158e:	4293      	cmp	r3, r2
 8001590:	d106      	bne.n	80015a0 <GPIO_PeriClockControl+0x54>
            GPIOC_CLK_ENABLE();
 8001592:	4b59      	ldr	r3, [pc, #356]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001594:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001596:	4a58      	ldr	r2, [pc, #352]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001598:	f043 0304 	orr.w	r3, r3, #4
 800159c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800159e:	e0a3      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOD) {
 80015a0:	687b      	ldr	r3, [r7, #4]
 80015a2:	4a58      	ldr	r2, [pc, #352]	@ (8001704 <GPIO_PeriClockControl+0x1b8>)
 80015a4:	4293      	cmp	r3, r2
 80015a6:	d106      	bne.n	80015b6 <GPIO_PeriClockControl+0x6a>
            GPIOD_CLK_ENABLE();
 80015a8:	4b53      	ldr	r3, [pc, #332]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80015aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015ac:	4a52      	ldr	r2, [pc, #328]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80015ae:	f043 0308 	orr.w	r3, r3, #8
 80015b2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80015b4:	e098      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOE) {
 80015b6:	687b      	ldr	r3, [r7, #4]
 80015b8:	4a53      	ldr	r2, [pc, #332]	@ (8001708 <GPIO_PeriClockControl+0x1bc>)
 80015ba:	4293      	cmp	r3, r2
 80015bc:	d106      	bne.n	80015cc <GPIO_PeriClockControl+0x80>
            GPIOE_CLK_ENABLE();
 80015be:	4b4e      	ldr	r3, [pc, #312]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80015c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015c2:	4a4d      	ldr	r2, [pc, #308]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80015c4:	f043 0310 	orr.w	r3, r3, #16
 80015c8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80015ca:	e08d      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOF) {
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	4a4f      	ldr	r2, [pc, #316]	@ (800170c <GPIO_PeriClockControl+0x1c0>)
 80015d0:	4293      	cmp	r3, r2
 80015d2:	d106      	bne.n	80015e2 <GPIO_PeriClockControl+0x96>
            GPIOF_CLK_ENABLE();
 80015d4:	4b48      	ldr	r3, [pc, #288]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80015d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015d8:	4a47      	ldr	r2, [pc, #284]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80015da:	f043 0320 	orr.w	r3, r3, #32
 80015de:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80015e0:	e082      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOG) {
 80015e2:	687b      	ldr	r3, [r7, #4]
 80015e4:	4a4a      	ldr	r2, [pc, #296]	@ (8001710 <GPIO_PeriClockControl+0x1c4>)
 80015e6:	4293      	cmp	r3, r2
 80015e8:	d106      	bne.n	80015f8 <GPIO_PeriClockControl+0xac>
            GPIOG_CLK_ENABLE();
 80015ea:	4b43      	ldr	r3, [pc, #268]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80015ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015ee:	4a42      	ldr	r2, [pc, #264]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80015f0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80015f4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80015f6:	e077      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOH) {
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	4a46      	ldr	r2, [pc, #280]	@ (8001714 <GPIO_PeriClockControl+0x1c8>)
 80015fc:	4293      	cmp	r3, r2
 80015fe:	d106      	bne.n	800160e <GPIO_PeriClockControl+0xc2>
            GPIOH_CLK_ENABLE();
 8001600:	4b3d      	ldr	r3, [pc, #244]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001602:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001604:	4a3c      	ldr	r2, [pc, #240]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001606:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800160a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800160c:	e06c      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOI) {
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	4a41      	ldr	r2, [pc, #260]	@ (8001718 <GPIO_PeriClockControl+0x1cc>)
 8001612:	4293      	cmp	r3, r2
 8001614:	d168      	bne.n	80016e8 <GPIO_PeriClockControl+0x19c>
            GPIOI_CLK_ENABLE();
 8001616:	4b38      	ldr	r3, [pc, #224]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001618:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800161a:	4a37      	ldr	r2, [pc, #220]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 800161c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001620:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001622:	e061      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        if (pGPIOx == GPIOA) {
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	4a33      	ldr	r2, [pc, #204]	@ (80016f4 <GPIO_PeriClockControl+0x1a8>)
 8001628:	4293      	cmp	r3, r2
 800162a:	d106      	bne.n	800163a <GPIO_PeriClockControl+0xee>
            GPIOA_CLK_DISABLE();
 800162c:	4b32      	ldr	r3, [pc, #200]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 800162e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001630:	4a31      	ldr	r2, [pc, #196]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001632:	f023 0301 	bic.w	r3, r3, #1
 8001636:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001638:	e056      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOB) {
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	4a2f      	ldr	r2, [pc, #188]	@ (80016fc <GPIO_PeriClockControl+0x1b0>)
 800163e:	4293      	cmp	r3, r2
 8001640:	d106      	bne.n	8001650 <GPIO_PeriClockControl+0x104>
            GPIOB_CLK_DISABLE();
 8001642:	4b2d      	ldr	r3, [pc, #180]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001644:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001646:	4a2c      	ldr	r2, [pc, #176]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001648:	f023 0302 	bic.w	r3, r3, #2
 800164c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800164e:	e04b      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOC) {
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	4a2b      	ldr	r2, [pc, #172]	@ (8001700 <GPIO_PeriClockControl+0x1b4>)
 8001654:	4293      	cmp	r3, r2
 8001656:	d106      	bne.n	8001666 <GPIO_PeriClockControl+0x11a>
            GPIOC_CLK_DISABLE();
 8001658:	4b27      	ldr	r3, [pc, #156]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 800165a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800165c:	4a26      	ldr	r2, [pc, #152]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 800165e:	f023 0304 	bic.w	r3, r3, #4
 8001662:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001664:	e040      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOD) {
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	4a26      	ldr	r2, [pc, #152]	@ (8001704 <GPIO_PeriClockControl+0x1b8>)
 800166a:	4293      	cmp	r3, r2
 800166c:	d106      	bne.n	800167c <GPIO_PeriClockControl+0x130>
            GPIOD_CLK_DISABLE();
 800166e:	4b22      	ldr	r3, [pc, #136]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001670:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001672:	4a21      	ldr	r2, [pc, #132]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001674:	f023 0308 	bic.w	r3, r3, #8
 8001678:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800167a:	e035      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOE) {
 800167c:	687b      	ldr	r3, [r7, #4]
 800167e:	4a22      	ldr	r2, [pc, #136]	@ (8001708 <GPIO_PeriClockControl+0x1bc>)
 8001680:	4293      	cmp	r3, r2
 8001682:	d106      	bne.n	8001692 <GPIO_PeriClockControl+0x146>
            GPIOE_CLK_DISABLE();
 8001684:	4b1c      	ldr	r3, [pc, #112]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 8001686:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001688:	4a1b      	ldr	r2, [pc, #108]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 800168a:	f023 0310 	bic.w	r3, r3, #16
 800168e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001690:	e02a      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOF) {
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	4a1d      	ldr	r2, [pc, #116]	@ (800170c <GPIO_PeriClockControl+0x1c0>)
 8001696:	4293      	cmp	r3, r2
 8001698:	d106      	bne.n	80016a8 <GPIO_PeriClockControl+0x15c>
            GPIOF_CLK_DISABLE();
 800169a:	4b17      	ldr	r3, [pc, #92]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 800169c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800169e:	4a16      	ldr	r2, [pc, #88]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80016a0:	f023 0320 	bic.w	r3, r3, #32
 80016a4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80016a6:	e01f      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOG) {
 80016a8:	687b      	ldr	r3, [r7, #4]
 80016aa:	4a19      	ldr	r2, [pc, #100]	@ (8001710 <GPIO_PeriClockControl+0x1c4>)
 80016ac:	4293      	cmp	r3, r2
 80016ae:	d106      	bne.n	80016be <GPIO_PeriClockControl+0x172>
            GPIOG_CLK_DISABLE();
 80016b0:	4b11      	ldr	r3, [pc, #68]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80016b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016b4:	4a10      	ldr	r2, [pc, #64]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80016b6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80016ba:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80016bc:	e014      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOH) {
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	4a14      	ldr	r2, [pc, #80]	@ (8001714 <GPIO_PeriClockControl+0x1c8>)
 80016c2:	4293      	cmp	r3, r2
 80016c4:	d106      	bne.n	80016d4 <GPIO_PeriClockControl+0x188>
            GPIOH_CLK_DISABLE();
 80016c6:	4b0c      	ldr	r3, [pc, #48]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80016c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ca:	4a0b      	ldr	r2, [pc, #44]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80016cc:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80016d0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80016d2:	e009      	b.n	80016e8 <GPIO_PeriClockControl+0x19c>
        }else if (pGPIOx == GPIOI) {
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	4a10      	ldr	r2, [pc, #64]	@ (8001718 <GPIO_PeriClockControl+0x1cc>)
 80016d8:	4293      	cmp	r3, r2
 80016da:	d105      	bne.n	80016e8 <GPIO_PeriClockControl+0x19c>
            GPIOI_CLK_DISABLE();
 80016dc:	4b06      	ldr	r3, [pc, #24]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80016de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016e0:	4a05      	ldr	r2, [pc, #20]	@ (80016f8 <GPIO_PeriClockControl+0x1ac>)
 80016e2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80016e6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80016e8:	bf00      	nop
 80016ea:	370c      	adds	r7, #12
 80016ec:	46bd      	mov	sp, r7
 80016ee:	bc80      	pop	{r7}
 80016f0:	4770      	bx	lr
 80016f2:	bf00      	nop
 80016f4:	40020000 	.word	0x40020000
 80016f8:	40023800 	.word	0x40023800
 80016fc:	40020400 	.word	0x40020400
 8001700:	40020800 	.word	0x40020800
 8001704:	40020c00 	.word	0x40020c00
 8001708:	40021000 	.word	0x40021000
 800170c:	40021400 	.word	0x40021400
 8001710:	40021800 	.word	0x40021800
 8001714:	40021c00 	.word	0x40021c00
 8001718:	40022000 	.word	0x40022000

0800171c <GPIO_Init>:
  * @param  hGPIO pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_HandleTypeDef *hGPIO)
{
 800171c:	b580      	push	{r7, lr}
 800171e:	b086      	sub	sp, #24
 8001720:	af00      	add	r7, sp, #0
 8001722:	6078      	str	r0, [r7, #4]
	uint32_t temp;
	// Enable the clock peripheral
	GPIO_PeriClockControl(hGPIO->pGPIOx, ENABLE);
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	681b      	ldr	r3, [r3, #0]
 8001728:	2101      	movs	r1, #1
 800172a:	4618      	mov	r0, r3
 800172c:	f7ff ff0e 	bl	800154c <GPIO_PeriClockControl>

	// 1. Configure mode
	if (hGPIO->Init.Mode <= GPIO_MODE_ANALOG) {
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	795b      	ldrb	r3, [r3, #5]
 8001734:	2b03      	cmp	r3, #3
 8001736:	d820      	bhi.n	800177a <GPIO_Init+0x5e>
		// The non interrupt mode
		temp = (hGPIO->Init.Mode << (2 * hGPIO->Init.Pin));
 8001738:	687b      	ldr	r3, [r7, #4]
 800173a:	795b      	ldrb	r3, [r3, #5]
 800173c:	461a      	mov	r2, r3
 800173e:	687b      	ldr	r3, [r7, #4]
 8001740:	791b      	ldrb	r3, [r3, #4]
 8001742:	005b      	lsls	r3, r3, #1
 8001744:	fa02 f303 	lsl.w	r3, r2, r3
 8001748:	613b      	str	r3, [r7, #16]
		hGPIO->pGPIOx->MODER &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	681a      	ldr	r2, [r3, #0]
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	791b      	ldrb	r3, [r3, #4]
 8001754:	005b      	lsls	r3, r3, #1
 8001756:	2103      	movs	r1, #3
 8001758:	fa01 f303 	lsl.w	r3, r1, r3
 800175c:	43db      	mvns	r3, r3
 800175e:	4619      	mov	r1, r3
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	681b      	ldr	r3, [r3, #0]
 8001764:	400a      	ands	r2, r1
 8001766:	601a      	str	r2, [r3, #0]
		hGPIO->pGPIOx->MODER |= temp;
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	681b      	ldr	r3, [r3, #0]
 800176c:	6819      	ldr	r1, [r3, #0]
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	681b      	ldr	r3, [r3, #0]
 8001772:	693a      	ldr	r2, [r7, #16]
 8001774:	430a      	orrs	r2, r1
 8001776:	601a      	str	r2, [r3, #0]
 8001778:	e0e4      	b.n	8001944 <GPIO_Init+0x228>
	}else {
		// Interrupt mode
		if (hGPIO->Init.Mode == GPIO_MODE_IT_FALLING) {
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	795b      	ldrb	r3, [r3, #5]
 800177e:	2b04      	cmp	r3, #4
 8001780:	d117      	bne.n	80017b2 <GPIO_Init+0x96>
			// Configure the FTSR
			EXTI->FTSR |= (1 << hGPIO->Init.Pin);
 8001782:	4b4b      	ldr	r3, [pc, #300]	@ (80018b0 <GPIO_Init+0x194>)
 8001784:	68db      	ldr	r3, [r3, #12]
 8001786:	687a      	ldr	r2, [r7, #4]
 8001788:	7912      	ldrb	r2, [r2, #4]
 800178a:	4611      	mov	r1, r2
 800178c:	2201      	movs	r2, #1
 800178e:	408a      	lsls	r2, r1
 8001790:	4611      	mov	r1, r2
 8001792:	4a47      	ldr	r2, [pc, #284]	@ (80018b0 <GPIO_Init+0x194>)
 8001794:	430b      	orrs	r3, r1
 8001796:	60d3      	str	r3, [r2, #12]
			// Clear the corresponding the RTSR
			EXTI->RTSR &= ~(1 << hGPIO->Init.Pin);
 8001798:	4b45      	ldr	r3, [pc, #276]	@ (80018b0 <GPIO_Init+0x194>)
 800179a:	689b      	ldr	r3, [r3, #8]
 800179c:	687a      	ldr	r2, [r7, #4]
 800179e:	7912      	ldrb	r2, [r2, #4]
 80017a0:	4611      	mov	r1, r2
 80017a2:	2201      	movs	r2, #1
 80017a4:	408a      	lsls	r2, r1
 80017a6:	43d2      	mvns	r2, r2
 80017a8:	4611      	mov	r1, r2
 80017aa:	4a41      	ldr	r2, [pc, #260]	@ (80018b0 <GPIO_Init+0x194>)
 80017ac:	400b      	ands	r3, r1
 80017ae:	6093      	str	r3, [r2, #8]
 80017b0:	e035      	b.n	800181e <GPIO_Init+0x102>
		}else if (hGPIO->Init.Mode == GPIO_MODE_IT_RISING) {
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	795b      	ldrb	r3, [r3, #5]
 80017b6:	2b05      	cmp	r3, #5
 80017b8:	d117      	bne.n	80017ea <GPIO_Init+0xce>
			EXTI->RTSR |= (1 << hGPIO->Init.Pin);
 80017ba:	4b3d      	ldr	r3, [pc, #244]	@ (80018b0 <GPIO_Init+0x194>)
 80017bc:	689b      	ldr	r3, [r3, #8]
 80017be:	687a      	ldr	r2, [r7, #4]
 80017c0:	7912      	ldrb	r2, [r2, #4]
 80017c2:	4611      	mov	r1, r2
 80017c4:	2201      	movs	r2, #1
 80017c6:	408a      	lsls	r2, r1
 80017c8:	4611      	mov	r1, r2
 80017ca:	4a39      	ldr	r2, [pc, #228]	@ (80018b0 <GPIO_Init+0x194>)
 80017cc:	430b      	orrs	r3, r1
 80017ce:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << hGPIO->Init.Pin);
 80017d0:	4b37      	ldr	r3, [pc, #220]	@ (80018b0 <GPIO_Init+0x194>)
 80017d2:	68db      	ldr	r3, [r3, #12]
 80017d4:	687a      	ldr	r2, [r7, #4]
 80017d6:	7912      	ldrb	r2, [r2, #4]
 80017d8:	4611      	mov	r1, r2
 80017da:	2201      	movs	r2, #1
 80017dc:	408a      	lsls	r2, r1
 80017de:	43d2      	mvns	r2, r2
 80017e0:	4611      	mov	r1, r2
 80017e2:	4a33      	ldr	r2, [pc, #204]	@ (80018b0 <GPIO_Init+0x194>)
 80017e4:	400b      	ands	r3, r1
 80017e6:	60d3      	str	r3, [r2, #12]
 80017e8:	e019      	b.n	800181e <GPIO_Init+0x102>
		}else if (hGPIO->Init.Mode == GPIO_MODE_IT_RISING_FALLING) {
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	795b      	ldrb	r3, [r3, #5]
 80017ee:	2b06      	cmp	r3, #6
 80017f0:	d115      	bne.n	800181e <GPIO_Init+0x102>
			EXTI->RTSR |= (1 << hGPIO->Init.Pin);
 80017f2:	4b2f      	ldr	r3, [pc, #188]	@ (80018b0 <GPIO_Init+0x194>)
 80017f4:	689b      	ldr	r3, [r3, #8]
 80017f6:	687a      	ldr	r2, [r7, #4]
 80017f8:	7912      	ldrb	r2, [r2, #4]
 80017fa:	4611      	mov	r1, r2
 80017fc:	2201      	movs	r2, #1
 80017fe:	408a      	lsls	r2, r1
 8001800:	4611      	mov	r1, r2
 8001802:	4a2b      	ldr	r2, [pc, #172]	@ (80018b0 <GPIO_Init+0x194>)
 8001804:	430b      	orrs	r3, r1
 8001806:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << hGPIO->Init.Pin);
 8001808:	4b29      	ldr	r3, [pc, #164]	@ (80018b0 <GPIO_Init+0x194>)
 800180a:	68db      	ldr	r3, [r3, #12]
 800180c:	687a      	ldr	r2, [r7, #4]
 800180e:	7912      	ldrb	r2, [r2, #4]
 8001810:	4611      	mov	r1, r2
 8001812:	2201      	movs	r2, #1
 8001814:	408a      	lsls	r2, r1
 8001816:	4611      	mov	r1, r2
 8001818:	4a25      	ldr	r2, [pc, #148]	@ (80018b0 <GPIO_Init+0x194>)
 800181a:	430b      	orrs	r3, r1
 800181c:	60d3      	str	r3, [r2, #12]
		}
		// Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t tmp1 = hGPIO->Init.Pin / 4;
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	791b      	ldrb	r3, [r3, #4]
 8001822:	089b      	lsrs	r3, r3, #2
 8001824:	75fb      	strb	r3, [r7, #23]
		uint8_t tmp2 = hGPIO->Init.Pin % 4;
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	791b      	ldrb	r3, [r3, #4]
 800182a:	f003 0303 	and.w	r3, r3, #3
 800182e:	75bb      	strb	r3, [r7, #22]
		uint8_t portCode = GPIO_BASEADDR_TO_CODE(hGPIO->pGPIOx);
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	4a1f      	ldr	r2, [pc, #124]	@ (80018b4 <GPIO_Init+0x198>)
 8001836:	4293      	cmp	r3, r2
 8001838:	d04e      	beq.n	80018d8 <GPIO_Init+0x1bc>
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	681b      	ldr	r3, [r3, #0]
 800183e:	4a1e      	ldr	r2, [pc, #120]	@ (80018b8 <GPIO_Init+0x19c>)
 8001840:	4293      	cmp	r3, r2
 8001842:	d032      	beq.n	80018aa <GPIO_Init+0x18e>
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	4a1c      	ldr	r2, [pc, #112]	@ (80018bc <GPIO_Init+0x1a0>)
 800184a:	4293      	cmp	r3, r2
 800184c:	d02b      	beq.n	80018a6 <GPIO_Init+0x18a>
 800184e:	687b      	ldr	r3, [r7, #4]
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	4a1b      	ldr	r2, [pc, #108]	@ (80018c0 <GPIO_Init+0x1a4>)
 8001854:	4293      	cmp	r3, r2
 8001856:	d024      	beq.n	80018a2 <GPIO_Init+0x186>
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	4a19      	ldr	r2, [pc, #100]	@ (80018c4 <GPIO_Init+0x1a8>)
 800185e:	4293      	cmp	r3, r2
 8001860:	d01d      	beq.n	800189e <GPIO_Init+0x182>
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	681b      	ldr	r3, [r3, #0]
 8001866:	4a18      	ldr	r2, [pc, #96]	@ (80018c8 <GPIO_Init+0x1ac>)
 8001868:	4293      	cmp	r3, r2
 800186a:	d016      	beq.n	800189a <GPIO_Init+0x17e>
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	4a16      	ldr	r2, [pc, #88]	@ (80018cc <GPIO_Init+0x1b0>)
 8001872:	4293      	cmp	r3, r2
 8001874:	d00f      	beq.n	8001896 <GPIO_Init+0x17a>
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	681b      	ldr	r3, [r3, #0]
 800187a:	4a15      	ldr	r2, [pc, #84]	@ (80018d0 <GPIO_Init+0x1b4>)
 800187c:	4293      	cmp	r3, r2
 800187e:	d008      	beq.n	8001892 <GPIO_Init+0x176>
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	681b      	ldr	r3, [r3, #0]
 8001884:	4a13      	ldr	r2, [pc, #76]	@ (80018d4 <GPIO_Init+0x1b8>)
 8001886:	4293      	cmp	r3, r2
 8001888:	d101      	bne.n	800188e <GPIO_Init+0x172>
 800188a:	2308      	movs	r3, #8
 800188c:	e025      	b.n	80018da <GPIO_Init+0x1be>
 800188e:	2300      	movs	r3, #0
 8001890:	e023      	b.n	80018da <GPIO_Init+0x1be>
 8001892:	2307      	movs	r3, #7
 8001894:	e021      	b.n	80018da <GPIO_Init+0x1be>
 8001896:	2306      	movs	r3, #6
 8001898:	e01f      	b.n	80018da <GPIO_Init+0x1be>
 800189a:	2305      	movs	r3, #5
 800189c:	e01d      	b.n	80018da <GPIO_Init+0x1be>
 800189e:	2304      	movs	r3, #4
 80018a0:	e01b      	b.n	80018da <GPIO_Init+0x1be>
 80018a2:	2303      	movs	r3, #3
 80018a4:	e019      	b.n	80018da <GPIO_Init+0x1be>
 80018a6:	2302      	movs	r3, #2
 80018a8:	e017      	b.n	80018da <GPIO_Init+0x1be>
 80018aa:	2301      	movs	r3, #1
 80018ac:	e015      	b.n	80018da <GPIO_Init+0x1be>
 80018ae:	bf00      	nop
 80018b0:	40013c00 	.word	0x40013c00
 80018b4:	40020000 	.word	0x40020000
 80018b8:	40020400 	.word	0x40020400
 80018bc:	40020800 	.word	0x40020800
 80018c0:	40020c00 	.word	0x40020c00
 80018c4:	40021000 	.word	0x40021000
 80018c8:	40021400 	.word	0x40021400
 80018cc:	40021800 	.word	0x40021800
 80018d0:	40021c00 	.word	0x40021c00
 80018d4:	40022000 	.word	0x40022000
 80018d8:	2300      	movs	r3, #0
 80018da:	757b      	strb	r3, [r7, #21]
		SYSCFG_CLK_ENABLE();
 80018dc:	4b65      	ldr	r3, [pc, #404]	@ (8001a74 <GPIO_Init+0x358>)
 80018de:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018e0:	4a64      	ldr	r2, [pc, #400]	@ (8001a74 <GPIO_Init+0x358>)
 80018e2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80018e6:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[tmp1] &= ~(0xF << (tmp2 * 4)); // Clear bits first
 80018e8:	4a63      	ldr	r2, [pc, #396]	@ (8001a78 <GPIO_Init+0x35c>)
 80018ea:	7dfb      	ldrb	r3, [r7, #23]
 80018ec:	3302      	adds	r3, #2
 80018ee:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80018f2:	7dbb      	ldrb	r3, [r7, #22]
 80018f4:	009b      	lsls	r3, r3, #2
 80018f6:	210f      	movs	r1, #15
 80018f8:	fa01 f303 	lsl.w	r3, r1, r3
 80018fc:	43db      	mvns	r3, r3
 80018fe:	4618      	mov	r0, r3
 8001900:	495d      	ldr	r1, [pc, #372]	@ (8001a78 <GPIO_Init+0x35c>)
 8001902:	7dfb      	ldrb	r3, [r7, #23]
 8001904:	4002      	ands	r2, r0
 8001906:	3302      	adds	r3, #2
 8001908:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		SYSCFG->EXTICR[tmp1] |= portCode << (tmp2 * 4);
 800190c:	4a5a      	ldr	r2, [pc, #360]	@ (8001a78 <GPIO_Init+0x35c>)
 800190e:	7dfb      	ldrb	r3, [r7, #23]
 8001910:	3302      	adds	r3, #2
 8001912:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001916:	7d79      	ldrb	r1, [r7, #21]
 8001918:	7dbb      	ldrb	r3, [r7, #22]
 800191a:	009b      	lsls	r3, r3, #2
 800191c:	fa01 f303 	lsl.w	r3, r1, r3
 8001920:	4618      	mov	r0, r3
 8001922:	4955      	ldr	r1, [pc, #340]	@ (8001a78 <GPIO_Init+0x35c>)
 8001924:	7dfb      	ldrb	r3, [r7, #23]
 8001926:	4302      	orrs	r2, r0
 8001928:	3302      	adds	r3, #2
 800192a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// Enable the EXTI Interrupt delivery using IMR
		EXTI->IMR |= 1 << hGPIO->Init.Pin;
 800192e:	4b53      	ldr	r3, [pc, #332]	@ (8001a7c <GPIO_Init+0x360>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	687a      	ldr	r2, [r7, #4]
 8001934:	7912      	ldrb	r2, [r2, #4]
 8001936:	4611      	mov	r1, r2
 8001938:	2201      	movs	r2, #1
 800193a:	408a      	lsls	r2, r1
 800193c:	4611      	mov	r1, r2
 800193e:	4a4f      	ldr	r2, [pc, #316]	@ (8001a7c <GPIO_Init+0x360>)
 8001940:	430b      	orrs	r3, r1
 8001942:	6013      	str	r3, [r2, #0]
	}

	// 2. Configure speed
	temp = ((hGPIO->Init.Speed) << (2 * hGPIO->Init.Pin));
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	79db      	ldrb	r3, [r3, #7]
 8001948:	461a      	mov	r2, r3
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	791b      	ldrb	r3, [r3, #4]
 800194e:	005b      	lsls	r3, r3, #1
 8001950:	fa02 f303 	lsl.w	r3, r2, r3
 8001954:	613b      	str	r3, [r7, #16]
	hGPIO->pGPIOx->OSPEEDR &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	681b      	ldr	r3, [r3, #0]
 800195a:	689a      	ldr	r2, [r3, #8]
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	791b      	ldrb	r3, [r3, #4]
 8001960:	005b      	lsls	r3, r3, #1
 8001962:	2103      	movs	r1, #3
 8001964:	fa01 f303 	lsl.w	r3, r1, r3
 8001968:	43db      	mvns	r3, r3
 800196a:	4619      	mov	r1, r3
 800196c:	687b      	ldr	r3, [r7, #4]
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	400a      	ands	r2, r1
 8001972:	609a      	str	r2, [r3, #8]
	hGPIO->pGPIOx->OSPEEDR |= temp;
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	6899      	ldr	r1, [r3, #8]
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	693a      	ldr	r2, [r7, #16]
 8001980:	430a      	orrs	r2, r1
 8001982:	609a      	str	r2, [r3, #8]

	// 3. Configure pull settings
	temp = (hGPIO->Init.Pull) << (2 * hGPIO->Init.Pin);
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	799b      	ldrb	r3, [r3, #6]
 8001988:	461a      	mov	r2, r3
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	791b      	ldrb	r3, [r3, #4]
 800198e:	005b      	lsls	r3, r3, #1
 8001990:	fa02 f303 	lsl.w	r3, r2, r3
 8001994:	613b      	str	r3, [r7, #16]
	hGPIO->pGPIOx->PUPDR &= ~(0x3 << (2 * hGPIO->Init.Pin)); // clearing
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	681b      	ldr	r3, [r3, #0]
 800199a:	68da      	ldr	r2, [r3, #12]
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	791b      	ldrb	r3, [r3, #4]
 80019a0:	005b      	lsls	r3, r3, #1
 80019a2:	2103      	movs	r1, #3
 80019a4:	fa01 f303 	lsl.w	r3, r1, r3
 80019a8:	43db      	mvns	r3, r3
 80019aa:	4619      	mov	r1, r3
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	681b      	ldr	r3, [r3, #0]
 80019b0:	400a      	ands	r2, r1
 80019b2:	60da      	str	r2, [r3, #12]
	hGPIO->pGPIOx->PUPDR |= temp;
 80019b4:	687b      	ldr	r3, [r7, #4]
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	68d9      	ldr	r1, [r3, #12]
 80019ba:	687b      	ldr	r3, [r7, #4]
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	693a      	ldr	r2, [r7, #16]
 80019c0:	430a      	orrs	r2, r1
 80019c2:	60da      	str	r2, [r3, #12]

	// 4. Configure OPType
	temp = (hGPIO->Init.OPType) << hGPIO->Init.Pin;
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	7a1b      	ldrb	r3, [r3, #8]
 80019c8:	461a      	mov	r2, r3
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	791b      	ldrb	r3, [r3, #4]
 80019ce:	fa02 f303 	lsl.w	r3, r2, r3
 80019d2:	613b      	str	r3, [r7, #16]
	hGPIO->pGPIOx->OTYPER &= ~(0x1 << hGPIO->Init.Pin); // clearing
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	685a      	ldr	r2, [r3, #4]
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	791b      	ldrb	r3, [r3, #4]
 80019de:	4619      	mov	r1, r3
 80019e0:	2301      	movs	r3, #1
 80019e2:	408b      	lsls	r3, r1
 80019e4:	43db      	mvns	r3, r3
 80019e6:	4619      	mov	r1, r3
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	681b      	ldr	r3, [r3, #0]
 80019ec:	400a      	ands	r2, r1
 80019ee:	605a      	str	r2, [r3, #4]
	hGPIO->pGPIOx->OTYPER |= temp;
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	681b      	ldr	r3, [r3, #0]
 80019f4:	6859      	ldr	r1, [r3, #4]
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	693a      	ldr	r2, [r7, #16]
 80019fc:	430a      	orrs	r2, r1
 80019fe:	605a      	str	r2, [r3, #4]

	// 5. Configure the alternate function
	if (hGPIO->Init.Mode == GPIO_MODE_AF) {
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	795b      	ldrb	r3, [r3, #5]
 8001a04:	2b02      	cmp	r3, #2
 8001a06:	d131      	bne.n	8001a6c <GPIO_Init+0x350>
		uint8_t temp1, temp2;

		temp1 = hGPIO->Init.Pin / 8; // AFR[0] or AFR[1]
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	791b      	ldrb	r3, [r3, #4]
 8001a0c:	08db      	lsrs	r3, r3, #3
 8001a0e:	73fb      	strb	r3, [r7, #15]
		temp2 = hGPIO->Init.Pin % 8; // Position in AFR register
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	791b      	ldrb	r3, [r3, #4]
 8001a14:	f003 0307 	and.w	r3, r3, #7
 8001a18:	73bb      	strb	r3, [r7, #14]
		hGPIO->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // clearing
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	681b      	ldr	r3, [r3, #0]
 8001a1e:	7bfa      	ldrb	r2, [r7, #15]
 8001a20:	3208      	adds	r2, #8
 8001a22:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8001a26:	7bbb      	ldrb	r3, [r7, #14]
 8001a28:	009b      	lsls	r3, r3, #2
 8001a2a:	220f      	movs	r2, #15
 8001a2c:	fa02 f303 	lsl.w	r3, r2, r3
 8001a30:	43db      	mvns	r3, r3
 8001a32:	4618      	mov	r0, r3
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	7bfa      	ldrb	r2, [r7, #15]
 8001a3a:	4001      	ands	r1, r0
 8001a3c:	3208      	adds	r2, #8
 8001a3e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		hGPIO->pGPIOx->AFR[temp1] |= (hGPIO->Init.Alternate << (4 * temp2));
 8001a42:	687b      	ldr	r3, [r7, #4]
 8001a44:	681b      	ldr	r3, [r3, #0]
 8001a46:	7bfa      	ldrb	r2, [r7, #15]
 8001a48:	3208      	adds	r2, #8
 8001a4a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8001a4e:	687b      	ldr	r3, [r7, #4]
 8001a50:	7a5b      	ldrb	r3, [r3, #9]
 8001a52:	461a      	mov	r2, r3
 8001a54:	7bbb      	ldrb	r3, [r7, #14]
 8001a56:	009b      	lsls	r3, r3, #2
 8001a58:	fa02 f303 	lsl.w	r3, r2, r3
 8001a5c:	4618      	mov	r0, r3
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	681b      	ldr	r3, [r3, #0]
 8001a62:	7bfa      	ldrb	r2, [r7, #15]
 8001a64:	4301      	orrs	r1, r0
 8001a66:	3208      	adds	r2, #8
 8001a68:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8001a6c:	bf00      	nop
 8001a6e:	3718      	adds	r7, #24
 8001a70:	46bd      	mov	sp, r7
 8001a72:	bd80      	pop	{r7, pc}
 8001a74:	40023800 	.word	0x40023800
 8001a78:	40013800 	.word	0x40013800
 8001a7c:	40013c00 	.word	0x40013c00

08001a80 <I2C1_Init>:
/**
  * @brief  Initialize I2C1 peripheral
  * @retval None
  */
 void I2C1_Init(I2C_HandleTypeDef *hi2c1)
{
 8001a80:	b580      	push	{r7, lr}
 8001a82:	b082      	sub	sp, #8
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	6078      	str	r0, [r7, #4]
  hi2c1->pI2Cx = I2C1;
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	4a0d      	ldr	r2, [pc, #52]	@ (8001ac0 <I2C1_Init+0x40>)
 8001a8c:	601a      	str	r2, [r3, #0]
  hi2c1->Init.ClockSpeed = I2C_CLOCKSPEED_SM;
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	4a0c      	ldr	r2, [pc, #48]	@ (8001ac4 <I2C1_Init+0x44>)
 8001a92:	605a      	str	r2, [r3, #4]
  hi2c1->Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	2200      	movs	r2, #0
 8001a98:	721a      	strb	r2, [r3, #8]
  hi2c1->Init.DeviceAddress = MPU6050_ADDRESS;
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	2268      	movs	r2, #104	@ 0x68
 8001a9e:	729a      	strb	r2, [r3, #10]
  hi2c1->Init.AckControl = I2C_ACK_ENABLE;
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	2201      	movs	r2, #1
 8001aa4:	725a      	strb	r2, [r3, #9]
  I2C_Init(hi2c1);
 8001aa6:	6878      	ldr	r0, [r7, #4]
 8001aa8:	f000 f91a 	bl	8001ce0 <I2C_Init>
  I2C1_GPIOInits();
 8001aac:	f000 f80c 	bl	8001ac8 <I2C1_GPIOInits>
  I2C_PeripheralControl(I2C1,ENABLE);
 8001ab0:	2101      	movs	r1, #1
 8001ab2:	4803      	ldr	r0, [pc, #12]	@ (8001ac0 <I2C1_Init+0x40>)
 8001ab4:	f000 fb08 	bl	80020c8 <I2C_PeripheralControl>
}
 8001ab8:	bf00      	nop
 8001aba:	3708      	adds	r7, #8
 8001abc:	46bd      	mov	sp, r7
 8001abe:	bd80      	pop	{r7, pc}
 8001ac0:	40005400 	.word	0x40005400
 8001ac4:	000186a0 	.word	0x000186a0

08001ac8 <I2C1_GPIOInits>:
   * @brief  Initialize GPIO pins for I2C1
   * @retval None
   *
   */
 void I2C1_GPIOInits(void)
 {
 8001ac8:	b580      	push	{r7, lr}
 8001aca:	b084      	sub	sp, #16
 8001acc:	af00      	add	r7, sp, #0
 	GPIO_HandleTypeDef GPIO_InitStruct;

 	GPIO_InitStruct.pGPIOx = GPIOB;
 8001ace:	4b0d      	ldr	r3, [pc, #52]	@ (8001b04 <I2C1_GPIOInits+0x3c>)
 8001ad0:	607b      	str	r3, [r7, #4]
 	GPIO_InitStruct.Init.Pin = GPIO_PIN_6;
 8001ad2:	2306      	movs	r3, #6
 8001ad4:	723b      	strb	r3, [r7, #8]
 	GPIO_InitStruct.Init.Mode = GPIO_MODE_AF;
 8001ad6:	2302      	movs	r3, #2
 8001ad8:	727b      	strb	r3, [r7, #9]
 	GPIO_InitStruct.Init.Pull = GPIO_PULLUP;
 8001ada:	2301      	movs	r3, #1
 8001adc:	72bb      	strb	r3, [r7, #10]
 	GPIO_InitStruct.Init.Speed = GPIO_SPEED_FAST;
 8001ade:	2302      	movs	r3, #2
 8001ae0:	72fb      	strb	r3, [r7, #11]
 	GPIO_InitStruct.Init.Alternate = GPIO_AF4_I2C1;
 8001ae2:	2304      	movs	r3, #4
 8001ae4:	737b      	strb	r3, [r7, #13]
 	GPIO_Init(&GPIO_InitStruct);
 8001ae6:	1d3b      	adds	r3, r7, #4
 8001ae8:	4618      	mov	r0, r3
 8001aea:	f7ff fe17 	bl	800171c <GPIO_Init>

 	GPIO_InitStruct.Init.Pin = GPIO_PIN_7;
 8001aee:	2307      	movs	r3, #7
 8001af0:	723b      	strb	r3, [r7, #8]
 	GPIO_Init(&GPIO_InitStruct);
 8001af2:	1d3b      	adds	r3, r7, #4
 8001af4:	4618      	mov	r0, r3
 8001af6:	f7ff fe11 	bl	800171c <GPIO_Init>

 }
 8001afa:	bf00      	nop
 8001afc:	3710      	adds	r7, #16
 8001afe:	46bd      	mov	sp, r7
 8001b00:	bd80      	pop	{r7, pc}
 8001b02:	bf00      	nop
 8001b04:	40020400 	.word	0x40020400

08001b08 <I2C_GenerateStartCondition>:
  * @brief Generates a START condition on the I2C bus.
  * @param pI2Cx Pointer to I2C registers.
  * @retval None
  */
void I2C_GenerateStartCondition(I2C_RegDef_t *pI2Cx)
{
 8001b08:	b480      	push	{r7}
 8001b0a:	b083      	sub	sp, #12
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	6078      	str	r0, [r7, #4]
    pI2Cx->CR1 |= (1 << I2C_CR1_START);
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	681b      	ldr	r3, [r3, #0]
 8001b14:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	601a      	str	r2, [r3, #0]
}
 8001b1c:	bf00      	nop
 8001b1e:	370c      	adds	r7, #12
 8001b20:	46bd      	mov	sp, r7
 8001b22:	bc80      	pop	{r7}
 8001b24:	4770      	bx	lr

08001b26 <I2C_GenerateStopCondition>:
  * @brief Generates a STOP condition on the I2C bus.
  * @param pI2Cx Pointer to I2C registers.
  * @retval None
  */
void I2C_GenerateStopCondition(I2C_RegDef_t *pI2Cx)
{
 8001b26:	b480      	push	{r7}
 8001b28:	b083      	sub	sp, #12
 8001b2a:	af00      	add	r7, sp, #0
 8001b2c:	6078      	str	r0, [r7, #4]
    pI2Cx->CR1 |= (1 << I2C_CR1_STOP);
 8001b2e:	687b      	ldr	r3, [r7, #4]
 8001b30:	681b      	ldr	r3, [r3, #0]
 8001b32:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	601a      	str	r2, [r3, #0]
}
 8001b3a:	bf00      	nop
 8001b3c:	370c      	adds	r7, #12
 8001b3e:	46bd      	mov	sp, r7
 8001b40:	bc80      	pop	{r7}
 8001b42:	4770      	bx	lr

08001b44 <I2C_MasterRequestWrite>:
  * @param pI2Cx Pointer to I2C registers.
  * @param DevAddress The 7-bit slave address.
  * @retval None
  */
static void I2C_MasterRequestWrite(I2C_RegDef_t *pI2Cx, uint8_t DevAddress)
{
 8001b44:	b480      	push	{r7}
 8001b46:	b083      	sub	sp, #12
 8001b48:	af00      	add	r7, sp, #0
 8001b4a:	6078      	str	r0, [r7, #4]
 8001b4c:	460b      	mov	r3, r1
 8001b4e:	70fb      	strb	r3, [r7, #3]
    DevAddress = DevAddress << 1;
 8001b50:	78fb      	ldrb	r3, [r7, #3]
 8001b52:	005b      	lsls	r3, r3, #1
 8001b54:	70fb      	strb	r3, [r7, #3]
    DevAddress &= ~(1); // Ensure the R/nW bit is 0 for write.
 8001b56:	78fb      	ldrb	r3, [r7, #3]
 8001b58:	f023 0301 	bic.w	r3, r3, #1
 8001b5c:	70fb      	strb	r3, [r7, #3]
    pI2Cx->DR = DevAddress;
 8001b5e:	78fa      	ldrb	r2, [r7, #3]
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	611a      	str	r2, [r3, #16]
}
 8001b64:	bf00      	nop
 8001b66:	370c      	adds	r7, #12
 8001b68:	46bd      	mov	sp, r7
 8001b6a:	bc80      	pop	{r7}
 8001b6c:	4770      	bx	lr

08001b6e <I2C_MasterRequestRead>:
  * @param pI2Cx Pointer to I2C registers.
  * @param DevAddress The 7-bit slave address.
  * @retval None
  */
static void I2C_MasterRequestRead(I2C_RegDef_t *pI2Cx, uint8_t DevAddress)
{
 8001b6e:	b480      	push	{r7}
 8001b70:	b083      	sub	sp, #12
 8001b72:	af00      	add	r7, sp, #0
 8001b74:	6078      	str	r0, [r7, #4]
 8001b76:	460b      	mov	r3, r1
 8001b78:	70fb      	strb	r3, [r7, #3]
    DevAddress = DevAddress << 1;
 8001b7a:	78fb      	ldrb	r3, [r7, #3]
 8001b7c:	005b      	lsls	r3, r3, #1
 8001b7e:	70fb      	strb	r3, [r7, #3]
    DevAddress |= 1; // Ensure the R/nW bit is 1 for read.
 8001b80:	78fb      	ldrb	r3, [r7, #3]
 8001b82:	f043 0301 	orr.w	r3, r3, #1
 8001b86:	70fb      	strb	r3, [r7, #3]
    pI2Cx->DR = DevAddress;
 8001b88:	78fa      	ldrb	r2, [r7, #3]
 8001b8a:	687b      	ldr	r3, [r7, #4]
 8001b8c:	611a      	str	r2, [r3, #16]
}
 8001b8e:	bf00      	nop
 8001b90:	370c      	adds	r7, #12
 8001b92:	46bd      	mov	sp, r7
 8001b94:	bc80      	pop	{r7}
 8001b96:	4770      	bx	lr

08001b98 <I2C_Clear_ADDRFlag>:
  * @brief Clears the ADDR flag by reading SR1 and SR2.
  * @param hi2c Pointer to I2C handle.
  * @retval None
  */
static void I2C_Clear_ADDRFlag(I2C_HandleTypeDef *hi2c )
{
 8001b98:	b580      	push	{r7, lr}
 8001b9a:	b084      	sub	sp, #16
 8001b9c:	af00      	add	r7, sp, #0
 8001b9e:	6078      	str	r0, [r7, #4]
    uint32_t dummy_read;

    // Check if the device is in master mode by checking the MSL bit in SR2 (Master/Slave status)
    if (hi2c->pI2Cx->SR2 & (1 << I2C_SR2_MSL))
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	681b      	ldr	r3, [r3, #0]
 8001ba4:	699b      	ldr	r3, [r3, #24]
 8001ba6:	f003 0301 	and.w	r3, r3, #1
 8001baa:	2b00      	cmp	r3, #0
 8001bac:	d01f      	beq.n	8001bee <I2C_Clear_ADDRFlag+0x56>
    {
        // Device is in master mode
        if (hi2c->TxRxState == I2C_STATE_BUSY_TX)
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	7f1b      	ldrb	r3, [r3, #28]
 8001bb2:	2b01      	cmp	r3, #1
 8001bb4:	d112      	bne.n	8001bdc <I2C_Clear_ADDRFlag+0x44>
        {
            // If we're in transmission mode and we're receiving only 1 byte
            if (hi2c->RxSize == 1)
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	6a1b      	ldr	r3, [r3, #32]
 8001bba:	2b01      	cmp	r3, #1
 8001bbc:	d11f      	bne.n	8001bfe <I2C_Clear_ADDRFlag+0x66>
            {
                // Disable Acknowledge (ACK) for the last byte
                I2C_ManageAcking(hi2c->pI2Cx, DISABLE);
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	681b      	ldr	r3, [r3, #0]
 8001bc2:	2100      	movs	r1, #0
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	f000 fa64 	bl	8002092 <I2C_ManageAcking>

                // Read SR1 and SR2 to clear the ADDR flag
                dummy_read = hi2c->pI2Cx->SR1;
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	681b      	ldr	r3, [r3, #0]
 8001bce:	695b      	ldr	r3, [r3, #20]
 8001bd0:	60fb      	str	r3, [r7, #12]
                dummy_read = hi2c->pI2Cx->SR2;
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	699b      	ldr	r3, [r3, #24]
 8001bd8:	60fb      	str	r3, [r7, #12]
        // Read SR1 and SR2 to clear the ADDR flag in slave mode
        dummy_read = hi2c->pI2Cx->SR1;
        dummy_read = hi2c->pI2Cx->SR2;
        (void)dummy_read;  // Dummy read to clear the flags
    }
}
 8001bda:	e010      	b.n	8001bfe <I2C_Clear_ADDRFlag+0x66>
            dummy_read = hi2c->pI2Cx->SR1;
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	681b      	ldr	r3, [r3, #0]
 8001be0:	695b      	ldr	r3, [r3, #20]
 8001be2:	60fb      	str	r3, [r7, #12]
            dummy_read = hi2c->pI2Cx->SR2;
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	699b      	ldr	r3, [r3, #24]
 8001bea:	60fb      	str	r3, [r7, #12]
}
 8001bec:	e007      	b.n	8001bfe <I2C_Clear_ADDRFlag+0x66>
        dummy_read = hi2c->pI2Cx->SR1;
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	681b      	ldr	r3, [r3, #0]
 8001bf2:	695b      	ldr	r3, [r3, #20]
 8001bf4:	60fb      	str	r3, [r7, #12]
        dummy_read = hi2c->pI2Cx->SR2;
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	681b      	ldr	r3, [r3, #0]
 8001bfa:	699b      	ldr	r3, [r3, #24]
 8001bfc:	60fb      	str	r3, [r7, #12]
}
 8001bfe:	bf00      	nop
 8001c00:	3710      	adds	r7, #16
 8001c02:	46bd      	mov	sp, r7
 8001c04:	bd80      	pop	{r7, pc}
	...

08001c08 <I2C_PeriClockControl>:
  * @param  pI2Cx Pointer to I2C_RegDef_t structure representing I2C1, I2C2, or I2C3.
  * @param  clockState ENABLE (1) to enable the clock, DISABLE (0) to disable it.
  * @retval None
  */
void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t clockState)
{
 8001c08:	b480      	push	{r7}
 8001c0a:	b083      	sub	sp, #12
 8001c0c:	af00      	add	r7, sp, #0
 8001c0e:	6078      	str	r0, [r7, #4]
 8001c10:	460b      	mov	r3, r1
 8001c12:	70fb      	strb	r3, [r7, #3]
    if (clockState == ENABLE) {
 8001c14:	78fb      	ldrb	r3, [r7, #3]
 8001c16:	2b01      	cmp	r3, #1
 8001c18:	d120      	bne.n	8001c5c <I2C_PeriClockControl+0x54>
        if (pI2Cx == I2C1) {
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	4a22      	ldr	r2, [pc, #136]	@ (8001ca8 <I2C_PeriClockControl+0xa0>)
 8001c1e:	4293      	cmp	r3, r2
 8001c20:	d106      	bne.n	8001c30 <I2C_PeriClockControl+0x28>
            I2C1_CLK_ENABLE();
 8001c22:	4b22      	ldr	r3, [pc, #136]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c26:	4a21      	ldr	r2, [pc, #132]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c28:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001c2c:	6413      	str	r3, [r2, #64]	@ 0x40
            I2C2_CLK_DISABLE();
        }else if (pI2Cx == I2C3) {
            I2C3_CLK_DISABLE();
        }
    }
}
 8001c2e:	e035      	b.n	8001c9c <I2C_PeriClockControl+0x94>
        }else if (pI2Cx == I2C2) {
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	4a1f      	ldr	r2, [pc, #124]	@ (8001cb0 <I2C_PeriClockControl+0xa8>)
 8001c34:	4293      	cmp	r3, r2
 8001c36:	d106      	bne.n	8001c46 <I2C_PeriClockControl+0x3e>
            I2C2_CLK_ENABLE();
 8001c38:	4b1c      	ldr	r3, [pc, #112]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c3c:	4a1b      	ldr	r2, [pc, #108]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c3e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001c42:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001c44:	e02a      	b.n	8001c9c <I2C_PeriClockControl+0x94>
        }else if (pI2Cx == I2C3) {
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	4a1a      	ldr	r2, [pc, #104]	@ (8001cb4 <I2C_PeriClockControl+0xac>)
 8001c4a:	4293      	cmp	r3, r2
 8001c4c:	d126      	bne.n	8001c9c <I2C_PeriClockControl+0x94>
            I2C3_CLK_ENABLE();
 8001c4e:	4b17      	ldr	r3, [pc, #92]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c50:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c52:	4a16      	ldr	r2, [pc, #88]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c54:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001c58:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001c5a:	e01f      	b.n	8001c9c <I2C_PeriClockControl+0x94>
        if (pI2Cx == I2C1) {
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	4a12      	ldr	r2, [pc, #72]	@ (8001ca8 <I2C_PeriClockControl+0xa0>)
 8001c60:	4293      	cmp	r3, r2
 8001c62:	d106      	bne.n	8001c72 <I2C_PeriClockControl+0x6a>
            I2C1_CLK_DISABLE();
 8001c64:	4b11      	ldr	r3, [pc, #68]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c68:	4a10      	ldr	r2, [pc, #64]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c6a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8001c6e:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001c70:	e014      	b.n	8001c9c <I2C_PeriClockControl+0x94>
        }else if (pI2Cx == I2C2) {
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	4a0e      	ldr	r2, [pc, #56]	@ (8001cb0 <I2C_PeriClockControl+0xa8>)
 8001c76:	4293      	cmp	r3, r2
 8001c78:	d106      	bne.n	8001c88 <I2C_PeriClockControl+0x80>
            I2C2_CLK_DISABLE();
 8001c7a:	4b0c      	ldr	r3, [pc, #48]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c7e:	4a0b      	ldr	r2, [pc, #44]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c80:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8001c84:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001c86:	e009      	b.n	8001c9c <I2C_PeriClockControl+0x94>
        }else if (pI2Cx == I2C3) {
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	4a0a      	ldr	r2, [pc, #40]	@ (8001cb4 <I2C_PeriClockControl+0xac>)
 8001c8c:	4293      	cmp	r3, r2
 8001c8e:	d105      	bne.n	8001c9c <I2C_PeriClockControl+0x94>
            I2C3_CLK_DISABLE();
 8001c90:	4b06      	ldr	r3, [pc, #24]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c92:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c94:	4a05      	ldr	r2, [pc, #20]	@ (8001cac <I2C_PeriClockControl+0xa4>)
 8001c96:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8001c9a:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001c9c:	bf00      	nop
 8001c9e:	370c      	adds	r7, #12
 8001ca0:	46bd      	mov	sp, r7
 8001ca2:	bc80      	pop	{r7}
 8001ca4:	4770      	bx	lr
 8001ca6:	bf00      	nop
 8001ca8:	40005400 	.word	0x40005400
 8001cac:	40023800 	.word	0x40023800
 8001cb0:	40005800 	.word	0x40005800
 8001cb4:	40005c00 	.word	0x40005c00

08001cb8 <I2C_GetFlagStatus>:
  * @param  pI2Cx Pointer to the I2C peripheral (I2C1, I2C2 and I2C3).
  * @param  FlagName The flag to check (e.g., I2C_FLAG_TXE, I2C_FLAG_RXNE, I2C_FLAG_BSY).
  * @retval FLAG_SET(1) or FLAG_RESET(0).
  */
uint8_t I2C_GetFlagStatus(I2C_RegDef_t *pI2Cx , uint32_t FlagName)
{
 8001cb8:	b480      	push	{r7}
 8001cba:	b083      	sub	sp, #12
 8001cbc:	af00      	add	r7, sp, #0
 8001cbe:	6078      	str	r0, [r7, #4]
 8001cc0:	6039      	str	r1, [r7, #0]
    if(pI2Cx->SR1 & FlagName)
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	695a      	ldr	r2, [r3, #20]
 8001cc6:	683b      	ldr	r3, [r7, #0]
 8001cc8:	4013      	ands	r3, r2
 8001cca:	2b00      	cmp	r3, #0
 8001ccc:	d001      	beq.n	8001cd2 <I2C_GetFlagStatus+0x1a>
    {
        return FLAG_SET;
 8001cce:	2301      	movs	r3, #1
 8001cd0:	e000      	b.n	8001cd4 <I2C_GetFlagStatus+0x1c>
    }
    return FLAG_RESET;
 8001cd2:	2300      	movs	r3, #0
}
 8001cd4:	4618      	mov	r0, r3
 8001cd6:	370c      	adds	r7, #12
 8001cd8:	46bd      	mov	sp, r7
 8001cda:	bc80      	pop	{r7}
 8001cdc:	4770      	bx	lr
	...

08001ce0 <I2C_Init>:
  * @param  hi2c Pointer to an I2C_HandleTypeDef structure that contains
  *         the configuration information for the specified I2C peripheral.
  * @retval I2C status
  */
I2C_StatusTypeDef I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8001ce0:	b580      	push	{r7, lr}
 8001ce2:	b084      	sub	sp, #16
 8001ce4:	af00      	add	r7, sp, #0
 8001ce6:	6078      	str	r0, [r7, #4]
    uint32_t tempreg = 0;
 8001ce8:	2300      	movs	r3, #0
 8001cea:	60fb      	str	r3, [r7, #12]

    // Enable clock for I2Cx peripheral
    I2C_PeriClockControl(hi2c->pI2Cx, ENABLE);
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	2101      	movs	r1, #1
 8001cf2:	4618      	mov	r0, r3
 8001cf4:	f7ff ff88 	bl	8001c08 <I2C_PeriClockControl>

    // Set the ACK control bit (Acknowledgment)
    tempreg |= hi2c->Init.AckControl << 10;
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	7a5b      	ldrb	r3, [r3, #9]
 8001cfc:	029b      	lsls	r3, r3, #10
 8001cfe:	68fa      	ldr	r2, [r7, #12]
 8001d00:	4313      	orrs	r3, r2
 8001d02:	60fb      	str	r3, [r7, #12]
    hi2c->pI2Cx->CR1 = tempreg;
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	68fa      	ldr	r2, [r7, #12]
 8001d0a:	601a      	str	r2, [r3, #0]

    // Configure the FREQ field of CR2 (Clock control register)
    tempreg = 0;
 8001d0c:	2300      	movs	r3, #0
 8001d0e:	60fb      	str	r3, [r7, #12]
    tempreg = RCC_GetPCLK1_Value() / 1000000;  // Calculate the PCLK1 value in MHz
 8001d10:	f000 f9f6 	bl	8002100 <RCC_GetPCLK1_Value>
 8001d14:	4603      	mov	r3, r0
 8001d16:	4a43      	ldr	r2, [pc, #268]	@ (8001e24 <I2C_Init+0x144>)
 8001d18:	fba2 2303 	umull	r2, r3, r2, r3
 8001d1c:	0c9b      	lsrs	r3, r3, #18
 8001d1e:	60fb      	str	r3, [r7, #12]
    hi2c->pI2Cx->CR2 = (tempreg & 0x3F);
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	68fa      	ldr	r2, [r7, #12]
 8001d26:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8001d2a:	605a      	str	r2, [r3, #4]

    // Program the device's own address (7-bit address for I2C)
    tempreg = 0;
 8001d2c:	2300      	movs	r3, #0
 8001d2e:	60fb      	str	r3, [r7, #12]
    tempreg |= hi2c->Init.DeviceAddress << 1;  // Set the 7-bit device address, shifting it to the left by 1 bit
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	7a9b      	ldrb	r3, [r3, #10]
 8001d34:	005b      	lsls	r3, r3, #1
 8001d36:	68fa      	ldr	r2, [r7, #12]
 8001d38:	4313      	orrs	r3, r2
 8001d3a:	60fb      	str	r3, [r7, #12]
    tempreg |= (1 << 14);
 8001d3c:	68fb      	ldr	r3, [r7, #12]
 8001d3e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001d42:	60fb      	str	r3, [r7, #12]
    hi2c->pI2Cx->OAR1 = tempreg;
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	681b      	ldr	r3, [r3, #0]
 8001d48:	68fa      	ldr	r2, [r7, #12]
 8001d4a:	609a      	str	r2, [r3, #8]

    // CCR Calculation (Clock control register for I2C)
    uint32_t CCR_value = 0;
 8001d4c:	2300      	movs	r3, #0
 8001d4e:	60bb      	str	r3, [r7, #8]
    tempreg = 0;
 8001d50:	2300      	movs	r3, #0
 8001d52:	60fb      	str	r3, [r7, #12]

    if (hi2c->Init.ClockSpeed <= I2C_CLOCKSPEED_SM) {
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	685b      	ldr	r3, [r3, #4]
 8001d58:	4a33      	ldr	r2, [pc, #204]	@ (8001e28 <I2C_Init+0x148>)
 8001d5a:	4293      	cmp	r3, r2
 8001d5c:	d809      	bhi.n	8001d72 <I2C_Init+0x92>
        // Standard Mode (100 kHz)
        CCR_value = (RCC_GetPCLK1_Value() / (2 * hi2c->Init.ClockSpeed));
 8001d5e:	f000 f9cf 	bl	8002100 <RCC_GetPCLK1_Value>
 8001d62:	4602      	mov	r2, r0
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	685b      	ldr	r3, [r3, #4]
 8001d68:	005b      	lsls	r3, r3, #1
 8001d6a:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d6e:	60bb      	str	r3, [r7, #8]
 8001d70:	e026      	b.n	8001dc0 <I2C_Init+0xe0>
    } else {
        // Fast Mode (400 kHz)
        tempreg |= 1 << 15;
 8001d72:	68fb      	ldr	r3, [r7, #12]
 8001d74:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001d78:	60fb      	str	r3, [r7, #12]
        tempreg |= (hi2c->Init.DutyCycle << 14);
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	7a1b      	ldrb	r3, [r3, #8]
 8001d7e:	039b      	lsls	r3, r3, #14
 8001d80:	68fa      	ldr	r2, [r7, #12]
 8001d82:	4313      	orrs	r3, r2
 8001d84:	60fb      	str	r3, [r7, #12]

        if (hi2c->Init.DutyCycle == I2C_DUTYCYCLE_2) {
 8001d86:	687b      	ldr	r3, [r7, #4]
 8001d88:	7a1b      	ldrb	r3, [r3, #8]
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d10b      	bne.n	8001da6 <I2C_Init+0xc6>
            CCR_value = (RCC_GetPCLK1_Value() / (3 * hi2c->Init.ClockSpeed));  // Calculate CCR value for DutyCycle 2:1
 8001d8e:	f000 f9b7 	bl	8002100 <RCC_GetPCLK1_Value>
 8001d92:	4601      	mov	r1, r0
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	685a      	ldr	r2, [r3, #4]
 8001d98:	4613      	mov	r3, r2
 8001d9a:	005b      	lsls	r3, r3, #1
 8001d9c:	4413      	add	r3, r2
 8001d9e:	fbb1 f3f3 	udiv	r3, r1, r3
 8001da2:	60bb      	str	r3, [r7, #8]
 8001da4:	e00c      	b.n	8001dc0 <I2C_Init+0xe0>
        } else {
            CCR_value = (RCC_GetPCLK1_Value() / (25 * hi2c->Init.ClockSpeed));  // Calculate CCR value for DutyCycle 16:9
 8001da6:	f000 f9ab 	bl	8002100 <RCC_GetPCLK1_Value>
 8001daa:	4601      	mov	r1, r0
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	685a      	ldr	r2, [r3, #4]
 8001db0:	4613      	mov	r3, r2
 8001db2:	009b      	lsls	r3, r3, #2
 8001db4:	4413      	add	r3, r2
 8001db6:	009a      	lsls	r2, r3, #2
 8001db8:	4413      	add	r3, r2
 8001dba:	fbb1 f3f3 	udiv	r3, r1, r3
 8001dbe:	60bb      	str	r3, [r7, #8]
        }
    }

    tempreg |= (CCR_value & 0xFFF);
 8001dc0:	68bb      	ldr	r3, [r7, #8]
 8001dc2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001dc6:	68fa      	ldr	r2, [r7, #12]
 8001dc8:	4313      	orrs	r3, r2
 8001dca:	60fb      	str	r3, [r7, #12]
    hi2c->pI2Cx->CCR = tempreg;
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	68fa      	ldr	r2, [r7, #12]
 8001dd2:	61da      	str	r2, [r3, #28]

    // TRISE Configuration (Tri-state time configuration)
    if (hi2c->Init.ClockSpeed <= I2C_CLOCKSPEED_SM) {
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	685b      	ldr	r3, [r3, #4]
 8001dd8:	4a13      	ldr	r2, [pc, #76]	@ (8001e28 <I2C_Init+0x148>)
 8001dda:	4293      	cmp	r3, r2
 8001ddc:	d809      	bhi.n	8001df2 <I2C_Init+0x112>
        // Standard Mode (100 kHz)
        tempreg = (RCC_GetPCLK1_Value() / 1000000U) + 1;
 8001dde:	f000 f98f 	bl	8002100 <RCC_GetPCLK1_Value>
 8001de2:	4603      	mov	r3, r0
 8001de4:	4a0f      	ldr	r2, [pc, #60]	@ (8001e24 <I2C_Init+0x144>)
 8001de6:	fba2 2303 	umull	r2, r3, r2, r3
 8001dea:	0c9b      	lsrs	r3, r3, #18
 8001dec:	3301      	adds	r3, #1
 8001dee:	60fb      	str	r3, [r7, #12]
 8001df0:	e00d      	b.n	8001e0e <I2C_Init+0x12e>
    } else {
        // Fast Mode (400 kHz)
        tempreg = ((RCC_GetPCLK1_Value() * 300) / 1000000000U) + 1;
 8001df2:	f000 f985 	bl	8002100 <RCC_GetPCLK1_Value>
 8001df6:	4603      	mov	r3, r0
 8001df8:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001dfc:	fb02 f303 	mul.w	r3, r2, r3
 8001e00:	0a5b      	lsrs	r3, r3, #9
 8001e02:	4a0a      	ldr	r2, [pc, #40]	@ (8001e2c <I2C_Init+0x14c>)
 8001e04:	fba2 2303 	umull	r2, r3, r2, r3
 8001e08:	09db      	lsrs	r3, r3, #7
 8001e0a:	3301      	adds	r3, #1
 8001e0c:	60fb      	str	r3, [r7, #12]
    }
    hi2c->pI2Cx->TRISE = (tempreg & 0x3F);
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	68fa      	ldr	r2, [r7, #12]
 8001e14:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8001e18:	621a      	str	r2, [r3, #32]

    return I2C_OK;
 8001e1a:	2300      	movs	r3, #0
}
 8001e1c:	4618      	mov	r0, r3
 8001e1e:	3710      	adds	r7, #16
 8001e20:	46bd      	mov	sp, r7
 8001e22:	bd80      	pop	{r7, pc}
 8001e24:	431bde83 	.word	0x431bde83
 8001e28:	000186a0 	.word	0x000186a0
 8001e2c:	00044b83 	.word	0x00044b83

08001e30 <I2C_Master_Transmit>:
  * @param  DevAddress Target device address: The device's 7-bit address (shifted left before sending).
  * @param  Sr Start repeated
  * @retval I2C_status
  */
I2C_StatusTypeDef I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pTxbuffer, uint32_t Len, uint8_t DevAddress, uint8_t Sr)
{
 8001e30:	b580      	push	{r7, lr}
 8001e32:	b084      	sub	sp, #16
 8001e34:	af00      	add	r7, sp, #0
 8001e36:	60f8      	str	r0, [r7, #12]
 8001e38:	60b9      	str	r1, [r7, #8]
 8001e3a:	607a      	str	r2, [r7, #4]
 8001e3c:	70fb      	strb	r3, [r7, #3]
    // 1. Generate the START condition.
    I2C_GenerateStartCondition(hi2c->pI2Cx);
 8001e3e:	68fb      	ldr	r3, [r7, #12]
 8001e40:	681b      	ldr	r3, [r3, #0]
 8001e42:	4618      	mov	r0, r3
 8001e44:	f7ff fe60 	bl	8001b08 <I2C_GenerateStartCondition>

    // 2. Wait until the SB (Start Bit) flag is set.
    //    Until SB is cleared, SCL remains low (clock stretching).
    while (!(I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_SB)));
 8001e48:	bf00      	nop
 8001e4a:	68fb      	ldr	r3, [r7, #12]
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	2101      	movs	r1, #1
 8001e50:	4618      	mov	r0, r3
 8001e52:	f7ff ff31 	bl	8001cb8 <I2C_GetFlagStatus>
 8001e56:	4603      	mov	r3, r0
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d0f6      	beq.n	8001e4a <I2C_Master_Transmit+0x1a>

    // 3. Send the slave address with the R/nW bit set to Write (0).
    I2C_MasterRequestWrite(hi2c->pI2Cx, DevAddress);
 8001e5c:	68fb      	ldr	r3, [r7, #12]
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	78fa      	ldrb	r2, [r7, #3]
 8001e62:	4611      	mov	r1, r2
 8001e64:	4618      	mov	r0, r3
 8001e66:	f7ff fe6d 	bl	8001b44 <I2C_MasterRequestWrite>

    // 4. Wait until the ADDR flag is set indicating address phase completion.
    while (!(I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_ADDR)));
 8001e6a:	bf00      	nop
 8001e6c:	68fb      	ldr	r3, [r7, #12]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	2102      	movs	r1, #2
 8001e72:	4618      	mov	r0, r3
 8001e74:	f7ff ff20 	bl	8001cb8 <I2C_GetFlagStatus>
 8001e78:	4603      	mov	r3, r0
 8001e7a:	2b00      	cmp	r3, #0
 8001e7c:	d0f6      	beq.n	8001e6c <I2C_Master_Transmit+0x3c>

    // 5. Clear the ADDR flag (by reading SR1 then SR2).
    //    Until ADDR is cleared, SCL remains low.
    I2C_Clear_ADDRFlag(hi2c);
 8001e7e:	68f8      	ldr	r0, [r7, #12]
 8001e80:	f7ff fe8a 	bl	8001b98 <I2C_Clear_ADDRFlag>

    // 6. Transmit data bytes until the length becomes 0.
    while (Len > 0)
 8001e84:	e014      	b.n	8001eb0 <I2C_Master_Transmit+0x80>
    {
        // Wait until TXE (Transmit Data Register Empty) flag is set.
        while (!(I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_TXE)));
 8001e86:	bf00      	nop
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	2180      	movs	r1, #128	@ 0x80
 8001e8e:	4618      	mov	r0, r3
 8001e90:	f7ff ff12 	bl	8001cb8 <I2C_GetFlagStatus>
 8001e94:	4603      	mov	r3, r0
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d0f6      	beq.n	8001e88 <I2C_Master_Transmit+0x58>
        // Write data to the data register.
        hi2c->pI2Cx->DR = *pTxbuffer;
 8001e9a:	68bb      	ldr	r3, [r7, #8]
 8001e9c:	781a      	ldrb	r2, [r3, #0]
 8001e9e:	68fb      	ldr	r3, [r7, #12]
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	611a      	str	r2, [r3, #16]
        pTxbuffer++;
 8001ea4:	68bb      	ldr	r3, [r7, #8]
 8001ea6:	3301      	adds	r3, #1
 8001ea8:	60bb      	str	r3, [r7, #8]
        Len--;
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	3b01      	subs	r3, #1
 8001eae:	607b      	str	r3, [r7, #4]
    while (Len > 0)
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	2b00      	cmp	r3, #0
 8001eb4:	d1e7      	bne.n	8001e86 <I2C_Master_Transmit+0x56>
    }

    // 7. Wait for the final byte transfer to complete:
    //    Wait until TXE and BTF (Byte Transfer Finished) flags are set.
    while (!(I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_TXE)));
 8001eb6:	bf00      	nop
 8001eb8:	68fb      	ldr	r3, [r7, #12]
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	2180      	movs	r1, #128	@ 0x80
 8001ebe:	4618      	mov	r0, r3
 8001ec0:	f7ff fefa 	bl	8001cb8 <I2C_GetFlagStatus>
 8001ec4:	4603      	mov	r3, r0
 8001ec6:	2b00      	cmp	r3, #0
 8001ec8:	d0f6      	beq.n	8001eb8 <I2C_Master_Transmit+0x88>
    while (!(I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_BTF)));
 8001eca:	bf00      	nop
 8001ecc:	68fb      	ldr	r3, [r7, #12]
 8001ece:	681b      	ldr	r3, [r3, #0]
 8001ed0:	2104      	movs	r1, #4
 8001ed2:	4618      	mov	r0, r3
 8001ed4:	f7ff fef0 	bl	8001cb8 <I2C_GetFlagStatus>
 8001ed8:	4603      	mov	r3, r0
 8001eda:	2b00      	cmp	r3, #0
 8001edc:	d0f6      	beq.n	8001ecc <I2C_Master_Transmit+0x9c>

    // 8. Generate the STOP condition if repeated start is disabled.
    //    Generating STOP automatically clears the BTF flag.
    if (Sr == I2C_SR_DISABLE) {
 8001ede:	7e3b      	ldrb	r3, [r7, #24]
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	d104      	bne.n	8001eee <I2C_Master_Transmit+0xbe>
        I2C_GenerateStopCondition(hi2c->pI2Cx);
 8001ee4:	68fb      	ldr	r3, [r7, #12]
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	4618      	mov	r0, r3
 8001eea:	f7ff fe1c 	bl	8001b26 <I2C_GenerateStopCondition>
    }
    return I2C_OK;
 8001eee:	2300      	movs	r3, #0
}
 8001ef0:	4618      	mov	r0, r3
 8001ef2:	3710      	adds	r7, #16
 8001ef4:	46bd      	mov	sp, r7
 8001ef6:	bd80      	pop	{r7, pc}

08001ef8 <I2C_Master_Receive>:
  * @param  DevAddress Target device address: The device's 7-bit address (shifted left before sending).
  * @param  Sr Start repeated
  * @retval i2c_status
  */
I2C_StatusTypeDef I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pRxbuffer, uint32_t Len, uint8_t DevAddress, uint8_t Sr)
{
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	b086      	sub	sp, #24
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	60f8      	str	r0, [r7, #12]
 8001f00:	60b9      	str	r1, [r7, #8]
 8001f02:	607a      	str	r2, [r7, #4]
 8001f04:	70fb      	strb	r3, [r7, #3]
    // 1. Generate the START condition
    I2C_GenerateStartCondition(hi2c->pI2Cx);
 8001f06:	68fb      	ldr	r3, [r7, #12]
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	4618      	mov	r0, r3
 8001f0c:	f7ff fdfc 	bl	8001b08 <I2C_GenerateStartCondition>

     // 2. Wait until the SB (Start Bit) flag is set.
     //    Until SB is cleared, SCL remains low (clock stretching).
    while (!(I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_SB)));
 8001f10:	bf00      	nop
 8001f12:	68fb      	ldr	r3, [r7, #12]
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	2101      	movs	r1, #1
 8001f18:	4618      	mov	r0, r3
 8001f1a:	f7ff fecd 	bl	8001cb8 <I2C_GetFlagStatus>
 8001f1e:	4603      	mov	r3, r0
 8001f20:	2b00      	cmp	r3, #0
 8001f22:	d0f6      	beq.n	8001f12 <I2C_Master_Receive+0x1a>

    // 3. Send the slave address with the R/nW bit set to Read (1).
    I2C_MasterRequestRead(hi2c->pI2Cx, DevAddress);
 8001f24:	68fb      	ldr	r3, [r7, #12]
 8001f26:	681b      	ldr	r3, [r3, #0]
 8001f28:	78fa      	ldrb	r2, [r7, #3]
 8001f2a:	4611      	mov	r1, r2
 8001f2c:	4618      	mov	r0, r3
 8001f2e:	f7ff fe1e 	bl	8001b6e <I2C_MasterRequestRead>

    // 4. Wait until the ADDR flag is set indicating address phase completion.
    while (!(I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_ADDR)));
 8001f32:	bf00      	nop
 8001f34:	68fb      	ldr	r3, [r7, #12]
 8001f36:	681b      	ldr	r3, [r3, #0]
 8001f38:	2102      	movs	r1, #2
 8001f3a:	4618      	mov	r0, r3
 8001f3c:	f7ff febc 	bl	8001cb8 <I2C_GetFlagStatus>
 8001f40:	4603      	mov	r3, r0
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d0f6      	beq.n	8001f34 <I2C_Master_Receive+0x3c>

    // Read only 1 byte from slave
    if (Len == 1)
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	2b01      	cmp	r3, #1
 8001f4a:	d121      	bne.n	8001f90 <I2C_Master_Receive+0x98>
    {
        // Disable Acknowledge
        I2C_ManageAcking(hi2c->pI2Cx, I2C_ACK_DISABLE);
 8001f4c:	68fb      	ldr	r3, [r7, #12]
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	2100      	movs	r1, #0
 8001f52:	4618      	mov	r0, r3
 8001f54:	f000 f89d 	bl	8002092 <I2C_ManageAcking>

        // Clear the ADDR flag
        I2C_Clear_ADDRFlag(hi2c);
 8001f58:	68f8      	ldr	r0, [r7, #12]
 8001f5a:	f7ff fe1d 	bl	8001b98 <I2C_Clear_ADDRFlag>

        // wait until RXNE becomes 1
        while (! (I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_RXNE)));
 8001f5e:	bf00      	nop
 8001f60:	68fb      	ldr	r3, [r7, #12]
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	2140      	movs	r1, #64	@ 0x40
 8001f66:	4618      	mov	r0, r3
 8001f68:	f7ff fea6 	bl	8001cb8 <I2C_GetFlagStatus>
 8001f6c:	4603      	mov	r3, r0
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	d0f6      	beq.n	8001f60 <I2C_Master_Receive+0x68>

        // generate the STOP condition
        if (Sr == I2C_SR_DISABLE) {
 8001f72:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001f76:	2b00      	cmp	r3, #0
 8001f78:	d104      	bne.n	8001f84 <I2C_Master_Receive+0x8c>
            I2C_GenerateStopCondition(hi2c->pI2Cx);
 8001f7a:	68fb      	ldr	r3, [r7, #12]
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	4618      	mov	r0, r3
 8001f80:	f7ff fdd1 	bl	8001b26 <I2C_GenerateStopCondition>
        }

        // Read the single data byte from the data register into the buffer
        *pRxbuffer = hi2c->pI2Cx->DR;
 8001f84:	68fb      	ldr	r3, [r7, #12]
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	691b      	ldr	r3, [r3, #16]
 8001f8a:	b2da      	uxtb	r2, r3
 8001f8c:	68bb      	ldr	r3, [r7, #8]
 8001f8e:	701a      	strb	r2, [r3, #0]
    }

    // Read data from slave when Len > 1
    if (Len > 1)
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	2b01      	cmp	r3, #1
 8001f94:	d930      	bls.n	8001ff8 <I2C_Master_Receive+0x100>
    {
        // clear the ADDR flag
        I2C_Clear_ADDRFlag(hi2c);
 8001f96:	68f8      	ldr	r0, [r7, #12]
 8001f98:	f7ff fdfe 	bl	8001b98 <I2C_Clear_ADDRFlag>

        // Read data until all bytes are received.
        for (uint32_t i = Len; i > 0; i--)
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	617b      	str	r3, [r7, #20]
 8001fa0:	e027      	b.n	8001ff2 <I2C_Master_Receive+0xfa>
        {
            // wait until RXNE becomes 1
            while (! (I2C_GetFlagStatus(hi2c->pI2Cx, I2C_FLAG_RXNE)));
 8001fa2:	bf00      	nop
 8001fa4:	68fb      	ldr	r3, [r7, #12]
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	2140      	movs	r1, #64	@ 0x40
 8001faa:	4618      	mov	r0, r3
 8001fac:	f7ff fe84 	bl	8001cb8 <I2C_GetFlagStatus>
 8001fb0:	4603      	mov	r3, r0
 8001fb2:	2b00      	cmp	r3, #0
 8001fb4:	d0f6      	beq.n	8001fa4 <I2C_Master_Receive+0xac>

            // Check if this is the second-to-last byte (for NACK and Stop/ReStart)
            if (i == 2)
 8001fb6:	697b      	ldr	r3, [r7, #20]
 8001fb8:	2b02      	cmp	r3, #2
 8001fba:	d10e      	bne.n	8001fda <I2C_Master_Receive+0xe2>
            {
                // Disable Acknowledge
                I2C_ManageAcking(hi2c->pI2Cx, I2C_ACK_DISABLE);
 8001fbc:	68fb      	ldr	r3, [r7, #12]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	2100      	movs	r1, #0
 8001fc2:	4618      	mov	r0, r3
 8001fc4:	f000 f865 	bl	8002092 <I2C_ManageAcking>

                // generate the STOP condition
                if (Sr == I2C_SR_DISABLE) {
 8001fc8:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001fcc:	2b00      	cmp	r3, #0
 8001fce:	d104      	bne.n	8001fda <I2C_Master_Receive+0xe2>
                        I2C_GenerateStopCondition(hi2c->pI2Cx);
 8001fd0:	68fb      	ldr	r3, [r7, #12]
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	4618      	mov	r0, r3
 8001fd6:	f7ff fda6 	bl	8001b26 <I2C_GenerateStopCondition>
                }
            }

            // read the data from data register into buffer
            *pRxbuffer = hi2c->pI2Cx->DR;
 8001fda:	68fb      	ldr	r3, [r7, #12]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	691b      	ldr	r3, [r3, #16]
 8001fe0:	b2da      	uxtb	r2, r3
 8001fe2:	68bb      	ldr	r3, [r7, #8]
 8001fe4:	701a      	strb	r2, [r3, #0]

            // increment the buffer address
            pRxbuffer++;
 8001fe6:	68bb      	ldr	r3, [r7, #8]
 8001fe8:	3301      	adds	r3, #1
 8001fea:	60bb      	str	r3, [r7, #8]
        for (uint32_t i = Len; i > 0; i--)
 8001fec:	697b      	ldr	r3, [r7, #20]
 8001fee:	3b01      	subs	r3, #1
 8001ff0:	617b      	str	r3, [r7, #20]
 8001ff2:	697b      	ldr	r3, [r7, #20]
 8001ff4:	2b00      	cmp	r3, #0
 8001ff6:	d1d4      	bne.n	8001fa2 <I2C_Master_Receive+0xaa>
        }
    }
    //re-enable ACKing
    if(hi2c->Init.AckControl == I2C_ACK_ENABLE)
 8001ff8:	68fb      	ldr	r3, [r7, #12]
 8001ffa:	7a5b      	ldrb	r3, [r3, #9]
 8001ffc:	2b01      	cmp	r3, #1
 8001ffe:	d105      	bne.n	800200c <I2C_Master_Receive+0x114>
    {
        I2C_ManageAcking(hi2c->pI2Cx,I2C_ACK_ENABLE);
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	2101      	movs	r1, #1
 8002006:	4618      	mov	r0, r3
 8002008:	f000 f843 	bl	8002092 <I2C_ManageAcking>
    }
    return I2C_OK;
 800200c:	2300      	movs	r3, #0
}
 800200e:	4618      	mov	r0, r3
 8002010:	3718      	adds	r7, #24
 8002012:	46bd      	mov	sp, r7
 8002014:	bd80      	pop	{r7, pc}

08002016 <I2C_Mem_Read>:
  * @param  pData Pointer to data buffer
  * @param  Size Amount of data to be sent
  * @retval i2c_status
  */
I2C_StatusTypeDef I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
{
 8002016:	b580      	push	{r7, lr}
 8002018:	b088      	sub	sp, #32
 800201a:	af02      	add	r7, sp, #8
 800201c:	60f8      	str	r0, [r7, #12]
 800201e:	4608      	mov	r0, r1
 8002020:	4611      	mov	r1, r2
 8002022:	461a      	mov	r2, r3
 8002024:	4603      	mov	r3, r0
 8002026:	817b      	strh	r3, [r7, #10]
 8002028:	460b      	mov	r3, r1
 800202a:	813b      	strh	r3, [r7, #8]
 800202c:	4613      	mov	r3, r2
 800202e:	80fb      	strh	r3, [r7, #6]
	// 1. Send memory address in write mode
	uint8_t mem_addr[2];

	if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8002030:	88fb      	ldrh	r3, [r7, #6]
 8002032:	2b01      	cmp	r3, #1
 8002034:	d10d      	bne.n	8002052 <I2C_Mem_Read+0x3c>
	{
		// 1byte
		mem_addr[0] = (uint8_t)MemAddress;
 8002036:	893b      	ldrh	r3, [r7, #8]
 8002038:	b2db      	uxtb	r3, r3
 800203a:	753b      	strb	r3, [r7, #20]
		I2C_Master_Transmit(hi2c, mem_addr, 1, DevAddress, I2C_SR_ENABLE); // repeated start
 800203c:	897b      	ldrh	r3, [r7, #10]
 800203e:	b2db      	uxtb	r3, r3
 8002040:	f107 0114 	add.w	r1, r7, #20
 8002044:	2201      	movs	r2, #1
 8002046:	9200      	str	r2, [sp, #0]
 8002048:	2201      	movs	r2, #1
 800204a:	68f8      	ldr	r0, [r7, #12]
 800204c:	f7ff fef0 	bl	8001e30 <I2C_Master_Transmit>
 8002050:	e011      	b.n	8002076 <I2C_Mem_Read+0x60>
	}else {
		// 2byte
		mem_addr[0] = (uint8_t)(MemAddress >> 8);
 8002052:	893b      	ldrh	r3, [r7, #8]
 8002054:	0a1b      	lsrs	r3, r3, #8
 8002056:	b29b      	uxth	r3, r3
 8002058:	b2db      	uxtb	r3, r3
 800205a:	753b      	strb	r3, [r7, #20]
		mem_addr[1] = (uint8_t)MemAddress;
 800205c:	893b      	ldrh	r3, [r7, #8]
 800205e:	b2db      	uxtb	r3, r3
 8002060:	757b      	strb	r3, [r7, #21]
		I2C_Master_Transmit(hi2c, mem_addr, 2, DevAddress, I2C_SR_ENABLE); // repeated start
 8002062:	897b      	ldrh	r3, [r7, #10]
 8002064:	b2db      	uxtb	r3, r3
 8002066:	f107 0114 	add.w	r1, r7, #20
 800206a:	2201      	movs	r2, #1
 800206c:	9200      	str	r2, [sp, #0]
 800206e:	2202      	movs	r2, #2
 8002070:	68f8      	ldr	r0, [r7, #12]
 8002072:	f7ff fedd 	bl	8001e30 <I2C_Master_Transmit>
	}
	// Read data from slave
	I2C_Master_Receive(hi2c, pData, Size, DevAddress, I2C_SR_DISABLE);
 8002076:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8002078:	897b      	ldrh	r3, [r7, #10]
 800207a:	b2db      	uxtb	r3, r3
 800207c:	2100      	movs	r1, #0
 800207e:	9100      	str	r1, [sp, #0]
 8002080:	6a39      	ldr	r1, [r7, #32]
 8002082:	68f8      	ldr	r0, [r7, #12]
 8002084:	f7ff ff38 	bl	8001ef8 <I2C_Master_Receive>

	return I2C_OK;
 8002088:	2300      	movs	r3, #0
}
 800208a:	4618      	mov	r0, r3
 800208c:	3718      	adds	r7, #24
 800208e:	46bd      	mov	sp, r7
 8002090:	bd80      	pop	{r7, pc}

08002092 <I2C_ManageAcking>:
  * @param  pI2Cx Pointer to the I2C peripheral (I2C1, I2C2 and I2C3).
  * @param  state I2C_ACK_ENABLE (1) to enable the ack, I2C_ACK_DISABLE (0) to disable it.
  * @retval None
  */
void I2C_ManageAcking(I2C_RegDef_t *pI2Cx, uint8_t state)
{
 8002092:	b480      	push	{r7}
 8002094:	b083      	sub	sp, #12
 8002096:	af00      	add	r7, sp, #0
 8002098:	6078      	str	r0, [r7, #4]
 800209a:	460b      	mov	r3, r1
 800209c:	70fb      	strb	r3, [r7, #3]
    if (state == I2C_ACK_ENABLE)
 800209e:	78fb      	ldrb	r3, [r7, #3]
 80020a0:	2b01      	cmp	r3, #1
 80020a2:	d106      	bne.n	80020b2 <I2C_ManageAcking+0x20>
    {
        pI2Cx->CR1 |= (1 << I2C_CR1_ACK);
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	f443 6280 	orr.w	r2, r3, #1024	@ 0x400
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	601a      	str	r2, [r3, #0]
    }else
    {
        pI2Cx->CR1 &= ~(1 << I2C_CR1_ACK);
    }
}
 80020b0:	e005      	b.n	80020be <I2C_ManageAcking+0x2c>
        pI2Cx->CR1 &= ~(1 << I2C_CR1_ACK);
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	601a      	str	r2, [r3, #0]
}
 80020be:	bf00      	nop
 80020c0:	370c      	adds	r7, #12
 80020c2:	46bd      	mov	sp, r7
 80020c4:	bc80      	pop	{r7}
 80020c6:	4770      	bx	lr

080020c8 <I2C_PeripheralControl>:
  * @param  pI2Cx Pointer to the I2C peripheral (I2C1, I2C2 and I2C3).
  * @param  controlState ENABLE (1) to enable the Peripheral, DISABLE (0) to disable it.
  * @retval None
  */
void I2C_PeripheralControl(I2C_RegDef_t *pI2Cx, uint8_t controlState)
{
 80020c8:	b480      	push	{r7}
 80020ca:	b083      	sub	sp, #12
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
 80020d0:	460b      	mov	r3, r1
 80020d2:	70fb      	strb	r3, [r7, #3]
    if (controlState == ENABLE)
 80020d4:	78fb      	ldrb	r3, [r7, #3]
 80020d6:	2b01      	cmp	r3, #1
 80020d8:	d106      	bne.n	80020e8 <I2C_PeripheralControl+0x20>
    {
        pI2Cx->CR1 |= (1 << I2C_CR1_PE);
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	f043 0201 	orr.w	r2, r3, #1
 80020e2:	687b      	ldr	r3, [r7, #4]
 80020e4:	601a      	str	r2, [r3, #0]
    }else {
        pI2Cx->CR1 &= ~(1 << I2C_CR1_PE);
    }
}
 80020e6:	e005      	b.n	80020f4 <I2C_PeripheralControl+0x2c>
        pI2Cx->CR1 &= ~(1 << I2C_CR1_PE);
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	681b      	ldr	r3, [r3, #0]
 80020ec:	f023 0201 	bic.w	r2, r3, #1
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	601a      	str	r2, [r3, #0]
}
 80020f4:	bf00      	nop
 80020f6:	370c      	adds	r7, #12
 80020f8:	46bd      	mov	sp, r7
 80020fa:	bc80      	pop	{r7}
 80020fc:	4770      	bx	lr
	...

08002100 <RCC_GetPCLK1_Value>:
 * @retval uint32_t PCLK1 frequency in Hz, or 0 if an error occurs.
 * @note   Assumes HSI = 16 MHz, HSE = 8 MHz, or PLL output as system clock source.
 *         Uses RCC_CFGR to determine clock source, AHB, and APB1 prescalers.
 */
uint32_t RCC_GetPCLK1_Value(void)
{
 8002100:	b580      	push	{r7, lr}
 8002102:	b084      	sub	sp, #16
 8002104:	af00      	add	r7, sp, #0
    uint32_t PCLK1_value, systemClock;
    uint8_t clockSrc, temp, AHBP_value, APB1P_value;

    // Extract the clock source bits (bits 2:3 of RCC->CFGR)
    clockSrc = ((RCC->CFGR >> 2) & 0x3);
 8002106:	4b24      	ldr	r3, [pc, #144]	@ (8002198 <RCC_GetPCLK1_Value+0x98>)
 8002108:	689b      	ldr	r3, [r3, #8]
 800210a:	089b      	lsrs	r3, r3, #2
 800210c:	b2db      	uxtb	r3, r3
 800210e:	f003 0303 	and.w	r3, r3, #3
 8002112:	727b      	strb	r3, [r7, #9]
    if (clockSrc == 0) {
 8002114:	7a7b      	ldrb	r3, [r7, #9]
 8002116:	2b00      	cmp	r3, #0
 8002118:	d102      	bne.n	8002120 <RCC_GetPCLK1_Value+0x20>
        // Clock source is HSI (internal oscillator)
        systemClock = HSI_FREQ_DEFAULT;  // e.g., 16 MHz
 800211a:	4b20      	ldr	r3, [pc, #128]	@ (800219c <RCC_GetPCLK1_Value+0x9c>)
 800211c:	60fb      	str	r3, [r7, #12]
 800211e:	e008      	b.n	8002132 <RCC_GetPCLK1_Value+0x32>
    } else if (clockSrc == 1) {
 8002120:	7a7b      	ldrb	r3, [r7, #9]
 8002122:	2b01      	cmp	r3, #1
 8002124:	d102      	bne.n	800212c <RCC_GetPCLK1_Value+0x2c>
        // Clock source is HSE (external oscillator)
        systemClock = HSE_FREQ_DEFAULT;  // e.g., 8 MHz
 8002126:	4b1e      	ldr	r3, [pc, #120]	@ (80021a0 <RCC_GetPCLK1_Value+0xa0>)
 8002128:	60fb      	str	r3, [r7, #12]
 800212a:	e002      	b.n	8002132 <RCC_GetPCLK1_Value+0x32>
    } else {
        // Clock source is PLL, so get the PLL output frequency
        systemClock = RCC_GetPLLOutputClock();
 800212c:	f000 f83e 	bl	80021ac <RCC_GetPLLOutputClock>
 8002130:	60f8      	str	r0, [r7, #12]
    }

    // Get the AHB prescaler value from RCC->CFGR (bits 4:7)
    temp = ((RCC->CFGR >> 4) & 0xF);
 8002132:	4b19      	ldr	r3, [pc, #100]	@ (8002198 <RCC_GetPCLK1_Value+0x98>)
 8002134:	689b      	ldr	r3, [r3, #8]
 8002136:	091b      	lsrs	r3, r3, #4
 8002138:	b2db      	uxtb	r3, r3
 800213a:	f003 030f 	and.w	r3, r3, #15
 800213e:	723b      	strb	r3, [r7, #8]
    if (temp < 8) {
 8002140:	7a3b      	ldrb	r3, [r7, #8]
 8002142:	2b07      	cmp	r3, #7
 8002144:	d802      	bhi.n	800214c <RCC_GetPCLK1_Value+0x4c>
        // No division; AHB clock is equal to system clock
        AHBP_value = 1;
 8002146:	2301      	movs	r3, #1
 8002148:	72fb      	strb	r3, [r7, #11]
 800214a:	e005      	b.n	8002158 <RCC_GetPCLK1_Value+0x58>
    } else {
        // Division factor is determined from the AHP_Prescaler array.
        AHBP_value = AHP_Prescaler[temp - 8];
 800214c:	7a3b      	ldrb	r3, [r7, #8]
 800214e:	3b08      	subs	r3, #8
 8002150:	4a14      	ldr	r2, [pc, #80]	@ (80021a4 <RCC_GetPCLK1_Value+0xa4>)
 8002152:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8002156:	72fb      	strb	r3, [r7, #11]
    }

    // Get the APB1 prescaler value from RCC->CFGR (bits 10:12)
    temp = ((RCC->CFGR >> 10) & 0x7);
 8002158:	4b0f      	ldr	r3, [pc, #60]	@ (8002198 <RCC_GetPCLK1_Value+0x98>)
 800215a:	689b      	ldr	r3, [r3, #8]
 800215c:	0a9b      	lsrs	r3, r3, #10
 800215e:	b2db      	uxtb	r3, r3
 8002160:	f003 0307 	and.w	r3, r3, #7
 8002164:	723b      	strb	r3, [r7, #8]
    if (temp < 4) {
 8002166:	7a3b      	ldrb	r3, [r7, #8]
 8002168:	2b03      	cmp	r3, #3
 800216a:	d802      	bhi.n	8002172 <RCC_GetPCLK1_Value+0x72>
        // No division; APB1 clock is equal to AHB clock
        APB1P_value = 1;
 800216c:	2301      	movs	r3, #1
 800216e:	72bb      	strb	r3, [r7, #10]
 8002170:	e004      	b.n	800217c <RCC_GetPCLK1_Value+0x7c>
    } else {
        // Division factor is determined from the APB_Prescaler array.
        APB1P_value = APB_Prescaler[temp - 4];
 8002172:	7a3b      	ldrb	r3, [r7, #8]
 8002174:	3b04      	subs	r3, #4
 8002176:	4a0c      	ldr	r2, [pc, #48]	@ (80021a8 <RCC_GetPCLK1_Value+0xa8>)
 8002178:	5cd3      	ldrb	r3, [r2, r3]
 800217a:	72bb      	strb	r3, [r7, #10]
    }

    // Compute PCLK1: First, divide the system clock by the AHB prescaler,
    // then divide that result by the APB1 prescaler.
    PCLK1_value = (systemClock / AHBP_value) / APB1P_value;
 800217c:	7afb      	ldrb	r3, [r7, #11]
 800217e:	68fa      	ldr	r2, [r7, #12]
 8002180:	fbb2 f2f3 	udiv	r2, r2, r3
 8002184:	7abb      	ldrb	r3, [r7, #10]
 8002186:	fbb2 f3f3 	udiv	r3, r2, r3
 800218a:	607b      	str	r3, [r7, #4]

    return PCLK1_value;
 800218c:	687b      	ldr	r3, [r7, #4]
}
 800218e:	4618      	mov	r0, r3
 8002190:	3710      	adds	r7, #16
 8002192:	46bd      	mov	sp, r7
 8002194:	bd80      	pop	{r7, pc}
 8002196:	bf00      	nop
 8002198:	40023800 	.word	0x40023800
 800219c:	00f42400 	.word	0x00f42400
 80021a0:	007a1200 	.word	0x007a1200
 80021a4:	20000000 	.word	0x20000000
 80021a8:	20000010 	.word	0x20000010

080021ac <RCC_GetPLLOutputClock>:
    return PCLK2_value;
}


uint32_t  RCC_GetPLLOutputClock()
{
 80021ac:	b480      	push	{r7}
 80021ae:	af00      	add	r7, sp, #0
	return 0;
 80021b0:	2300      	movs	r3, #0
}
 80021b2:	4618      	mov	r0, r3
 80021b4:	46bd      	mov	sp, r7
 80021b6:	bc80      	pop	{r7}
 80021b8:	4770      	bx	lr

080021ba <MPU6050_WriteRegister>:
  * @param  hi2c: Pointer to I2C_HandleTypeDef structure
  * @param  reg: Register address
  * @param  value: Value to write
  * @retval I2C_StatusTypeDef: Status of the operation
  */
static I2C_StatusTypeDef MPU6050_WriteRegister(I2C_HandleTypeDef *hi2c, uint8_t reg, uint8_t value) {
 80021ba:	b580      	push	{r7, lr}
 80021bc:	b086      	sub	sp, #24
 80021be:	af02      	add	r7, sp, #8
 80021c0:	6078      	str	r0, [r7, #4]
 80021c2:	460b      	mov	r3, r1
 80021c4:	70fb      	strb	r3, [r7, #3]
 80021c6:	4613      	mov	r3, r2
 80021c8:	70bb      	strb	r3, [r7, #2]
    uint8_t data[2] = {reg, value};
 80021ca:	78fb      	ldrb	r3, [r7, #3]
 80021cc:	733b      	strb	r3, [r7, #12]
 80021ce:	78bb      	ldrb	r3, [r7, #2]
 80021d0:	737b      	strb	r3, [r7, #13]
    return I2C_Master_Transmit(hi2c, data, 2, MPU6050_ADDRESS, I2C_SR_DISABLE);
 80021d2:	f107 010c 	add.w	r1, r7, #12
 80021d6:	2300      	movs	r3, #0
 80021d8:	9300      	str	r3, [sp, #0]
 80021da:	2368      	movs	r3, #104	@ 0x68
 80021dc:	2202      	movs	r2, #2
 80021de:	6878      	ldr	r0, [r7, #4]
 80021e0:	f7ff fe26 	bl	8001e30 <I2C_Master_Transmit>
 80021e4:	4603      	mov	r3, r0
}
 80021e6:	4618      	mov	r0, r3
 80021e8:	3710      	adds	r7, #16
 80021ea:	46bd      	mov	sp, r7
 80021ec:	bd80      	pop	{r7, pc}

080021ee <MPU6050_ReadRegister>:
  * @param  reg: Register address
  * @param  data: Pointer to data buffer
  * @param  size: Number of bytes to read
  * @retval I2C_StatusTypeDef: Status of the operation
  */
static I2C_StatusTypeDef MPU6050_ReadRegister(I2C_HandleTypeDef *hi2c, uint8_t reg, uint8_t *data, uint16_t size) {
 80021ee:	b580      	push	{r7, lr}
 80021f0:	b086      	sub	sp, #24
 80021f2:	af02      	add	r7, sp, #8
 80021f4:	60f8      	str	r0, [r7, #12]
 80021f6:	607a      	str	r2, [r7, #4]
 80021f8:	461a      	mov	r2, r3
 80021fa:	460b      	mov	r3, r1
 80021fc:	72fb      	strb	r3, [r7, #11]
 80021fe:	4613      	mov	r3, r2
 8002200:	813b      	strh	r3, [r7, #8]
	return I2C_Mem_Read(hi2c, MPU6050_ADDRESS, reg, I2C_MEMADD_SIZE_8BIT, data, size);
 8002202:	7afb      	ldrb	r3, [r7, #11]
 8002204:	b29a      	uxth	r2, r3
 8002206:	893b      	ldrh	r3, [r7, #8]
 8002208:	9301      	str	r3, [sp, #4]
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	9300      	str	r3, [sp, #0]
 800220e:	2301      	movs	r3, #1
 8002210:	2168      	movs	r1, #104	@ 0x68
 8002212:	68f8      	ldr	r0, [r7, #12]
 8002214:	f7ff feff 	bl	8002016 <I2C_Mem_Read>
 8002218:	4603      	mov	r3, r0
}
 800221a:	4618      	mov	r0, r3
 800221c:	3710      	adds	r7, #16
 800221e:	46bd      	mov	sp, r7
 8002220:	bd80      	pop	{r7, pc}

08002222 <MPU6050_Init>:
/**
  * @brief  Initialize MPU6050 sensor
  * @param  hi2c: Pointer to I2C_HandleTypeDef structure
  * @retval I2C_StatusTypeDef: Status of the operation
  */
I2C_StatusTypeDef MPU6050_Init(I2C_HandleTypeDef *hi2c) {
 8002222:	b580      	push	{r7, lr}
 8002224:	b084      	sub	sp, #16
 8002226:	af00      	add	r7, sp, #0
 8002228:	6078      	str	r0, [r7, #4]
    I2C_StatusTypeDef status;

   // check connect
    status = MPU6050_CheckDevice(hi2c);
 800222a:	6878      	ldr	r0, [r7, #4]
 800222c:	f000 f83c 	bl	80022a8 <MPU6050_CheckDevice>
 8002230:	4603      	mov	r3, r0
 8002232:	73fb      	strb	r3, [r7, #15]
    if (status != I2C_OK) {
 8002234:	7bfb      	ldrb	r3, [r7, #15]
 8002236:	2b00      	cmp	r3, #0
 8002238:	d001      	beq.n	800223e <MPU6050_Init+0x1c>
        return status;
 800223a:	7bfb      	ldrb	r3, [r7, #15]
 800223c:	e030      	b.n	80022a0 <MPU6050_Init+0x7e>
    }

    /* wake up */
    status = MPU6050_WriteRegister(hi2c, MPU6050_REG_PWR_MGMT_1, 0x00);
 800223e:	2200      	movs	r2, #0
 8002240:	216b      	movs	r1, #107	@ 0x6b
 8002242:	6878      	ldr	r0, [r7, #4]
 8002244:	f7ff ffb9 	bl	80021ba <MPU6050_WriteRegister>
 8002248:	4603      	mov	r3, r0
 800224a:	73fb      	strb	r3, [r7, #15]
    if (status != I2C_OK) {
 800224c:	7bfb      	ldrb	r3, [r7, #15]
 800224e:	2b00      	cmp	r3, #0
 8002250:	d001      	beq.n	8002256 <MPU6050_Init+0x34>
        return status;
 8002252:	7bfb      	ldrb	r3, [r7, #15]
 8002254:	e024      	b.n	80022a0 <MPU6050_Init+0x7e>
    }

    /* Digital filter configuration (DLPF)) */
    status = MPU6050_WriteRegister(hi2c, MPU6050_REG_CONFIG, 0x03); // DLPF = 3 (44Hz)
 8002256:	2203      	movs	r2, #3
 8002258:	211a      	movs	r1, #26
 800225a:	6878      	ldr	r0, [r7, #4]
 800225c:	f7ff ffad 	bl	80021ba <MPU6050_WriteRegister>
 8002260:	4603      	mov	r3, r0
 8002262:	73fb      	strb	r3, [r7, #15]
    if (status != I2C_OK) {
 8002264:	7bfb      	ldrb	r3, [r7, #15]
 8002266:	2b00      	cmp	r3, #0
 8002268:	d001      	beq.n	800226e <MPU6050_Init+0x4c>
        return status;
 800226a:	7bfb      	ldrb	r3, [r7, #15]
 800226c:	e018      	b.n	80022a0 <MPU6050_Init+0x7e>
    }

    /* Gyroscope scale configuration  */
    status = MPU6050_WriteRegister(hi2c, MPU6050_REG_GYRO_CONFIG, 0x00);
 800226e:	2200      	movs	r2, #0
 8002270:	211b      	movs	r1, #27
 8002272:	6878      	ldr	r0, [r7, #4]
 8002274:	f7ff ffa1 	bl	80021ba <MPU6050_WriteRegister>
 8002278:	4603      	mov	r3, r0
 800227a:	73fb      	strb	r3, [r7, #15]
    if (status != I2C_OK) {
 800227c:	7bfb      	ldrb	r3, [r7, #15]
 800227e:	2b00      	cmp	r3, #0
 8002280:	d001      	beq.n	8002286 <MPU6050_Init+0x64>
        return status;
 8002282:	7bfb      	ldrb	r3, [r7, #15]
 8002284:	e00c      	b.n	80022a0 <MPU6050_Init+0x7e>
    }

    /* Accelerometer scale configuration */
    status = MPU6050_WriteRegister(hi2c, MPU6050_REG_ACCEL_CONFIG, 0x00);
 8002286:	2200      	movs	r2, #0
 8002288:	211c      	movs	r1, #28
 800228a:	6878      	ldr	r0, [r7, #4]
 800228c:	f7ff ff95 	bl	80021ba <MPU6050_WriteRegister>
 8002290:	4603      	mov	r3, r0
 8002292:	73fb      	strb	r3, [r7, #15]
    if (status != I2C_OK) {
 8002294:	7bfb      	ldrb	r3, [r7, #15]
 8002296:	2b00      	cmp	r3, #0
 8002298:	d001      	beq.n	800229e <MPU6050_Init+0x7c>
        return status;
 800229a:	7bfb      	ldrb	r3, [r7, #15]
 800229c:	e000      	b.n	80022a0 <MPU6050_Init+0x7e>
    }


    return I2C_OK;
 800229e:	2300      	movs	r3, #0
}
 80022a0:	4618      	mov	r0, r3
 80022a2:	3710      	adds	r7, #16
 80022a4:	46bd      	mov	sp, r7
 80022a6:	bd80      	pop	{r7, pc}

080022a8 <MPU6050_CheckDevice>:
/**
  * @brief  Check MPU6050 device connection
  * @param  hi2c: Pointer to I2C_HandleTypeDef structure
  * @retval I2C_StatusTypeDef: Status of the operation
  */
I2C_StatusTypeDef MPU6050_CheckDevice(I2C_HandleTypeDef *hi2c) {
 80022a8:	b580      	push	{r7, lr}
 80022aa:	b084      	sub	sp, #16
 80022ac:	af00      	add	r7, sp, #0
 80022ae:	6078      	str	r0, [r7, #4]
    uint8_t who_am_i;
    I2C_StatusTypeDef status = MPU6050_ReadRegister(hi2c, MPU6050_WHO_AM_I, &who_am_i, 1);
 80022b0:	f107 020e 	add.w	r2, r7, #14
 80022b4:	2301      	movs	r3, #1
 80022b6:	2175      	movs	r1, #117	@ 0x75
 80022b8:	6878      	ldr	r0, [r7, #4]
 80022ba:	f7ff ff98 	bl	80021ee <MPU6050_ReadRegister>
 80022be:	4603      	mov	r3, r0
 80022c0:	73fb      	strb	r3, [r7, #15]
    if (status != I2C_OK || who_am_i != 0x68) {
 80022c2:	7bfb      	ldrb	r3, [r7, #15]
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	d102      	bne.n	80022ce <MPU6050_CheckDevice+0x26>
 80022c8:	7bbb      	ldrb	r3, [r7, #14]
 80022ca:	2b68      	cmp	r3, #104	@ 0x68
 80022cc:	d001      	beq.n	80022d2 <MPU6050_CheckDevice+0x2a>
        return I2C_ERROR;
 80022ce:	2301      	movs	r3, #1
 80022d0:	e000      	b.n	80022d4 <MPU6050_CheckDevice+0x2c>
    }
    return I2C_OK;
 80022d2:	2300      	movs	r3, #0
}
 80022d4:	4618      	mov	r0, r3
 80022d6:	3710      	adds	r7, #16
 80022d8:	46bd      	mov	sp, r7
 80022da:	bd80      	pop	{r7, pc}

080022dc <MPU6050_ReadData>:
  * @brief  Read raw data from MPU6050
  * @param  hi2c: Pointer to I2C_HandleTypeDef structure
  * @param  data: Pointer to MPU6050_Data structure
  * @retval I2C_StatusTypeDef: Status of the operation
  */
I2C_StatusTypeDef MPU6050_ReadData(I2C_HandleTypeDef *hi2c, MPU6050_Data *data) {
 80022dc:	b580      	push	{r7, lr}
 80022de:	b086      	sub	sp, #24
 80022e0:	af00      	add	r7, sp, #0
 80022e2:	6078      	str	r0, [r7, #4]
 80022e4:	6039      	str	r1, [r7, #0]
    uint8_t buffer[14];
    I2C_StatusTypeDef status;

    /* Read 14 bytes of data from the ACCEL_XOUT_H register */
    status = MPU6050_ReadRegister(hi2c, MPU6050_REG_ACCEL_XOUT_H, buffer, 14);
 80022e6:	f107 0208 	add.w	r2, r7, #8
 80022ea:	230e      	movs	r3, #14
 80022ec:	213b      	movs	r1, #59	@ 0x3b
 80022ee:	6878      	ldr	r0, [r7, #4]
 80022f0:	f7ff ff7d 	bl	80021ee <MPU6050_ReadRegister>
 80022f4:	4603      	mov	r3, r0
 80022f6:	75fb      	strb	r3, [r7, #23]
    if (status != I2C_OK) {
 80022f8:	7dfb      	ldrb	r3, [r7, #23]
 80022fa:	2b00      	cmp	r3, #0
 80022fc:	d001      	beq.n	8002302 <MPU6050_ReadData+0x26>
        return status;
 80022fe:	7dfb      	ldrb	r3, [r7, #23]
 8002300:	e03c      	b.n	800237c <MPU6050_ReadData+0xa0>
    }

    // data of accel
    data->accel_x = (int16_t)((buffer[0] << 8) | buffer[1]);
 8002302:	7a3b      	ldrb	r3, [r7, #8]
 8002304:	b21b      	sxth	r3, r3
 8002306:	021b      	lsls	r3, r3, #8
 8002308:	b21a      	sxth	r2, r3
 800230a:	7a7b      	ldrb	r3, [r7, #9]
 800230c:	b21b      	sxth	r3, r3
 800230e:	4313      	orrs	r3, r2
 8002310:	b21a      	sxth	r2, r3
 8002312:	683b      	ldr	r3, [r7, #0]
 8002314:	801a      	strh	r2, [r3, #0]
    data->accel_y = (int16_t)((buffer[2] << 8) | buffer[3]);
 8002316:	7abb      	ldrb	r3, [r7, #10]
 8002318:	b21b      	sxth	r3, r3
 800231a:	021b      	lsls	r3, r3, #8
 800231c:	b21a      	sxth	r2, r3
 800231e:	7afb      	ldrb	r3, [r7, #11]
 8002320:	b21b      	sxth	r3, r3
 8002322:	4313      	orrs	r3, r2
 8002324:	b21a      	sxth	r2, r3
 8002326:	683b      	ldr	r3, [r7, #0]
 8002328:	805a      	strh	r2, [r3, #2]
    data->accel_z = (int16_t)((buffer[4] << 8) | buffer[5]);
 800232a:	7b3b      	ldrb	r3, [r7, #12]
 800232c:	b21b      	sxth	r3, r3
 800232e:	021b      	lsls	r3, r3, #8
 8002330:	b21a      	sxth	r2, r3
 8002332:	7b7b      	ldrb	r3, [r7, #13]
 8002334:	b21b      	sxth	r3, r3
 8002336:	4313      	orrs	r3, r2
 8002338:	b21a      	sxth	r2, r3
 800233a:	683b      	ldr	r3, [r7, #0]
 800233c:	809a      	strh	r2, [r3, #4]

    // data of gyro
    data->gyro_x = (int16_t)((buffer[8] << 8) | buffer[9]);
 800233e:	7c3b      	ldrb	r3, [r7, #16]
 8002340:	b21b      	sxth	r3, r3
 8002342:	021b      	lsls	r3, r3, #8
 8002344:	b21a      	sxth	r2, r3
 8002346:	7c7b      	ldrb	r3, [r7, #17]
 8002348:	b21b      	sxth	r3, r3
 800234a:	4313      	orrs	r3, r2
 800234c:	b21a      	sxth	r2, r3
 800234e:	683b      	ldr	r3, [r7, #0]
 8002350:	80da      	strh	r2, [r3, #6]
    data->gyro_y = (int16_t)((buffer[10] << 8) | buffer[11]);
 8002352:	7cbb      	ldrb	r3, [r7, #18]
 8002354:	b21b      	sxth	r3, r3
 8002356:	021b      	lsls	r3, r3, #8
 8002358:	b21a      	sxth	r2, r3
 800235a:	7cfb      	ldrb	r3, [r7, #19]
 800235c:	b21b      	sxth	r3, r3
 800235e:	4313      	orrs	r3, r2
 8002360:	b21a      	sxth	r2, r3
 8002362:	683b      	ldr	r3, [r7, #0]
 8002364:	811a      	strh	r2, [r3, #8]
    data->gyro_z = (int16_t)((buffer[12] << 8) | buffer[13]);
 8002366:	7d3b      	ldrb	r3, [r7, #20]
 8002368:	b21b      	sxth	r3, r3
 800236a:	021b      	lsls	r3, r3, #8
 800236c:	b21a      	sxth	r2, r3
 800236e:	7d7b      	ldrb	r3, [r7, #21]
 8002370:	b21b      	sxth	r3, r3
 8002372:	4313      	orrs	r3, r2
 8002374:	b21a      	sxth	r2, r3
 8002376:	683b      	ldr	r3, [r7, #0]
 8002378:	815a      	strh	r2, [r3, #10]

    return I2C_OK;
 800237a:	2300      	movs	r3, #0
}
 800237c:	4618      	mov	r0, r3
 800237e:	3718      	adds	r7, #24
 8002380:	46bd      	mov	sp, r7
 8002382:	bd80      	pop	{r7, pc}
 8002384:	0000      	movs	r0, r0
	...

08002388 <MPU6050_ConvertData>:
  * @brief  Convert raw data to physical units
  * @param  raw_data: Pointer to MPU6050_Data structure
  * @param  converted_data: Pointer to MPU6050_ConvertedData structure
  * @retval None
  */
void MPU6050_ConvertData(const MPU6050_Data *raw_data, MPU6050_ConvertedData *converted_data) {
 8002388:	b580      	push	{r7, lr}
 800238a:	b082      	sub	sp, #8
 800238c:	af00      	add	r7, sp, #0
 800238e:	6078      	str	r0, [r7, #4]
 8002390:	6039      	str	r1, [r7, #0]

    converted_data->accel_x_mps2 = (double)raw_data->accel_x * 9.81f / 16384.0f;
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002398:	4618      	mov	r0, r3
 800239a:	f7fe f8c3 	bl	8000524 <__aeabi_i2d>
 800239e:	a33c      	add	r3, pc, #240	@ (adr r3, 8002490 <MPU6050_ConvertData+0x108>)
 80023a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023a4:	f7fe f928 	bl	80005f8 <__aeabi_dmul>
 80023a8:	4602      	mov	r2, r0
 80023aa:	460b      	mov	r3, r1
 80023ac:	4610      	mov	r0, r2
 80023ae:	4619      	mov	r1, r3
 80023b0:	f04f 0200 	mov.w	r2, #0
 80023b4:	4b3a      	ldr	r3, [pc, #232]	@ (80024a0 <MPU6050_ConvertData+0x118>)
 80023b6:	f7fe fa49 	bl	800084c <__aeabi_ddiv>
 80023ba:	4602      	mov	r2, r0
 80023bc:	460b      	mov	r3, r1
 80023be:	6839      	ldr	r1, [r7, #0]
 80023c0:	e9c1 2300 	strd	r2, r3, [r1]
    converted_data->accel_y_mps2 = (double)raw_data->accel_y * 9.81f / 16384.0f;
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80023ca:	4618      	mov	r0, r3
 80023cc:	f7fe f8aa 	bl	8000524 <__aeabi_i2d>
 80023d0:	a32f      	add	r3, pc, #188	@ (adr r3, 8002490 <MPU6050_ConvertData+0x108>)
 80023d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023d6:	f7fe f90f 	bl	80005f8 <__aeabi_dmul>
 80023da:	4602      	mov	r2, r0
 80023dc:	460b      	mov	r3, r1
 80023de:	4610      	mov	r0, r2
 80023e0:	4619      	mov	r1, r3
 80023e2:	f04f 0200 	mov.w	r2, #0
 80023e6:	4b2e      	ldr	r3, [pc, #184]	@ (80024a0 <MPU6050_ConvertData+0x118>)
 80023e8:	f7fe fa30 	bl	800084c <__aeabi_ddiv>
 80023ec:	4602      	mov	r2, r0
 80023ee:	460b      	mov	r3, r1
 80023f0:	6839      	ldr	r1, [r7, #0]
 80023f2:	e9c1 2302 	strd	r2, r3, [r1, #8]
    converted_data->accel_z_mps2 = (double)raw_data->accel_z * 9.81f / 16384.0f;
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80023fc:	4618      	mov	r0, r3
 80023fe:	f7fe f891 	bl	8000524 <__aeabi_i2d>
 8002402:	a323      	add	r3, pc, #140	@ (adr r3, 8002490 <MPU6050_ConvertData+0x108>)
 8002404:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002408:	f7fe f8f6 	bl	80005f8 <__aeabi_dmul>
 800240c:	4602      	mov	r2, r0
 800240e:	460b      	mov	r3, r1
 8002410:	4610      	mov	r0, r2
 8002412:	4619      	mov	r1, r3
 8002414:	f04f 0200 	mov.w	r2, #0
 8002418:	4b21      	ldr	r3, [pc, #132]	@ (80024a0 <MPU6050_ConvertData+0x118>)
 800241a:	f7fe fa17 	bl	800084c <__aeabi_ddiv>
 800241e:	4602      	mov	r2, r0
 8002420:	460b      	mov	r3, r1
 8002422:	6839      	ldr	r1, [r7, #0]
 8002424:	e9c1 2304 	strd	r2, r3, [r1, #16]

    converted_data->gyro_x_dps = (double)raw_data->gyro_x / 131.0f;
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800242e:	4618      	mov	r0, r3
 8002430:	f7fe f878 	bl	8000524 <__aeabi_i2d>
 8002434:	a318      	add	r3, pc, #96	@ (adr r3, 8002498 <MPU6050_ConvertData+0x110>)
 8002436:	e9d3 2300 	ldrd	r2, r3, [r3]
 800243a:	f7fe fa07 	bl	800084c <__aeabi_ddiv>
 800243e:	4602      	mov	r2, r0
 8002440:	460b      	mov	r3, r1
 8002442:	6839      	ldr	r1, [r7, #0]
 8002444:	e9c1 2306 	strd	r2, r3, [r1, #24]
    converted_data->gyro_y_dps = (double)raw_data->gyro_y / 131.0f;
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800244e:	4618      	mov	r0, r3
 8002450:	f7fe f868 	bl	8000524 <__aeabi_i2d>
 8002454:	a310      	add	r3, pc, #64	@ (adr r3, 8002498 <MPU6050_ConvertData+0x110>)
 8002456:	e9d3 2300 	ldrd	r2, r3, [r3]
 800245a:	f7fe f9f7 	bl	800084c <__aeabi_ddiv>
 800245e:	4602      	mov	r2, r0
 8002460:	460b      	mov	r3, r1
 8002462:	6839      	ldr	r1, [r7, #0]
 8002464:	e9c1 2308 	strd	r2, r3, [r1, #32]
    converted_data->gyro_z_dps = (double)raw_data->gyro_z / 131.0f;
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800246e:	4618      	mov	r0, r3
 8002470:	f7fe f858 	bl	8000524 <__aeabi_i2d>
 8002474:	a308      	add	r3, pc, #32	@ (adr r3, 8002498 <MPU6050_ConvertData+0x110>)
 8002476:	e9d3 2300 	ldrd	r2, r3, [r3]
 800247a:	f7fe f9e7 	bl	800084c <__aeabi_ddiv>
 800247e:	4602      	mov	r2, r0
 8002480:	460b      	mov	r3, r1
 8002482:	6839      	ldr	r1, [r7, #0]
 8002484:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28

}
 8002488:	bf00      	nop
 800248a:	3708      	adds	r7, #8
 800248c:	46bd      	mov	sp, r7
 800248e:	bd80      	pop	{r7, pc}
 8002490:	60000000 	.word	0x60000000
 8002494:	40239eb8 	.word	0x40239eb8
 8002498:	00000000 	.word	0x00000000
 800249c:	40606000 	.word	0x40606000
 80024a0:	40d00000 	.word	0x40d00000
 80024a4:	00000000 	.word	0x00000000

080024a8 <MPU6050_GetAngle>:
 * @brief Calculate angle using complementary filter
 * @param data: Pointer to MPU6050_ConvertedData structure
 * @param dt: Time step (seconds)
 * @return Current angle (degrees)
 */
double MPU6050_GetAngle(const MPU6050_ConvertedData *data, double prev_pitch_gyro, double dt) {
 80024a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024aa:	b093      	sub	sp, #76	@ 0x4c
 80024ac:	af00      	add	r7, sp, #0
 80024ae:	60f8      	str	r0, [r7, #12]
 80024b0:	e9c7 2300 	strd	r2, r3, [r7]
    // static double prev_pitch_gyro = 0.0;
    double acc_x = data->accel_x_mps2;
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024ba:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
    double acc_y = data->accel_y_mps2;
 80024be:	68fb      	ldr	r3, [r7, #12]
 80024c0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80024c4:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    double acc_z = data->accel_z_mps2;
 80024c8:	68fb      	ldr	r3, [r7, #12]
 80024ca:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 80024ce:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
    //static uint32_t lastTick = 0.0;

    double pitch_acc = atan2f(acc_y, sqrtf(acc_x * acc_x + acc_z * acc_z)) * 180.0 / M_PI;
 80024d2:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 80024d6:	f7fe fb87 	bl	8000be8 <__aeabi_d2f>
 80024da:	4606      	mov	r6, r0
 80024dc:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80024e0:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	@ 0x40
 80024e4:	f7fe f888 	bl	80005f8 <__aeabi_dmul>
 80024e8:	4602      	mov	r2, r0
 80024ea:	460b      	mov	r3, r1
 80024ec:	4614      	mov	r4, r2
 80024ee:	461d      	mov	r5, r3
 80024f0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 80024f4:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 80024f8:	f7fe f87e 	bl	80005f8 <__aeabi_dmul>
 80024fc:	4602      	mov	r2, r0
 80024fe:	460b      	mov	r3, r1
 8002500:	4620      	mov	r0, r4
 8002502:	4629      	mov	r1, r5
 8002504:	f7fd fec2 	bl	800028c <__adddf3>
 8002508:	4602      	mov	r2, r0
 800250a:	460b      	mov	r3, r1
 800250c:	4610      	mov	r0, r2
 800250e:	4619      	mov	r1, r3
 8002510:	f7fe fb6a 	bl	8000be8 <__aeabi_d2f>
 8002514:	4603      	mov	r3, r0
 8002516:	4618      	mov	r0, r3
 8002518:	f004 fbd6 	bl	8006cc8 <sqrtf>
 800251c:	4603      	mov	r3, r0
 800251e:	4619      	mov	r1, r3
 8002520:	4630      	mov	r0, r6
 8002522:	f004 fbcf 	bl	8006cc4 <atan2f>
 8002526:	4603      	mov	r3, r0
 8002528:	4618      	mov	r0, r3
 800252a:	f7fe f80d 	bl	8000548 <__aeabi_f2d>
 800252e:	f04f 0200 	mov.w	r2, #0
 8002532:	4b2d      	ldr	r3, [pc, #180]	@ (80025e8 <MPU6050_GetAngle+0x140>)
 8002534:	f7fe f860 	bl	80005f8 <__aeabi_dmul>
 8002538:	4602      	mov	r2, r0
 800253a:	460b      	mov	r3, r1
 800253c:	4610      	mov	r0, r2
 800253e:	4619      	mov	r1, r3
 8002540:	a325      	add	r3, pc, #148	@ (adr r3, 80025d8 <MPU6050_GetAngle+0x130>)
 8002542:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002546:	f7fe f981 	bl	800084c <__aeabi_ddiv>
 800254a:	4602      	mov	r2, r0
 800254c:	460b      	mov	r3, r1
 800254e:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28

    //uint32_t currentTick = getTick();
    //uint32_t dt = currentTick - lastTick;
    double current_pitch_gyro = prev_pitch_gyro + data->gyro_x_dps * dt;
 8002552:	68fb      	ldr	r3, [r7, #12]
 8002554:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002558:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 800255c:	f7fe f84c 	bl	80005f8 <__aeabi_dmul>
 8002560:	4602      	mov	r2, r0
 8002562:	460b      	mov	r3, r1
 8002564:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002568:	f7fd fe90 	bl	800028c <__adddf3>
 800256c:	4602      	mov	r2, r0
 800256e:	460b      	mov	r3, r1
 8002570:	e9c7 2308 	strd	r2, r3, [r7, #32]

    // prev_pitch_gyro = current_pitch_gyro;
    //lastTick = currentTick;

    // Complementary filter
    double alpha = 0.02;
 8002574:	a31a      	add	r3, pc, #104	@ (adr r3, 80025e0 <MPU6050_GetAngle+0x138>)
 8002576:	e9d3 2300 	ldrd	r2, r3, [r3]
 800257a:	e9c7 2306 	strd	r2, r3, [r7, #24]

    double angle = (1.0 - alpha) * current_pitch_gyro + alpha * pitch_acc;
 800257e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002582:	f04f 0000 	mov.w	r0, #0
 8002586:	4919      	ldr	r1, [pc, #100]	@ (80025ec <MPU6050_GetAngle+0x144>)
 8002588:	f7fd fe7e 	bl	8000288 <__aeabi_dsub>
 800258c:	4602      	mov	r2, r0
 800258e:	460b      	mov	r3, r1
 8002590:	4610      	mov	r0, r2
 8002592:	4619      	mov	r1, r3
 8002594:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8002598:	f7fe f82e 	bl	80005f8 <__aeabi_dmul>
 800259c:	4602      	mov	r2, r0
 800259e:	460b      	mov	r3, r1
 80025a0:	4614      	mov	r4, r2
 80025a2:	461d      	mov	r5, r3
 80025a4:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80025a8:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80025ac:	f7fe f824 	bl	80005f8 <__aeabi_dmul>
 80025b0:	4602      	mov	r2, r0
 80025b2:	460b      	mov	r3, r1
 80025b4:	4620      	mov	r0, r4
 80025b6:	4629      	mov	r1, r5
 80025b8:	f7fd fe68 	bl	800028c <__adddf3>
 80025bc:	4602      	mov	r2, r0
 80025be:	460b      	mov	r3, r1
 80025c0:	e9c7 2304 	strd	r2, r3, [r7, #16]
    return angle;
 80025c4:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
}
 80025c8:	4610      	mov	r0, r2
 80025ca:	4619      	mov	r1, r3
 80025cc:	374c      	adds	r7, #76	@ 0x4c
 80025ce:	46bd      	mov	sp, r7
 80025d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025d2:	bf00      	nop
 80025d4:	f3af 8000 	nop.w
 80025d8:	54442d18 	.word	0x54442d18
 80025dc:	400921fb 	.word	0x400921fb
 80025e0:	47ae147b 	.word	0x47ae147b
 80025e4:	3f947ae1 	.word	0x3f947ae1
 80025e8:	40668000 	.word	0x40668000
 80025ec:	3ff00000 	.word	0x3ff00000

080025f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80025f0:	480d      	ldr	r0, [pc, #52]	@ (8002628 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80025f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80025f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80025f8:	480c      	ldr	r0, [pc, #48]	@ (800262c <LoopForever+0x6>)
  ldr r1, =_edata
 80025fa:	490d      	ldr	r1, [pc, #52]	@ (8002630 <LoopForever+0xa>)
  ldr r2, =_sidata
 80025fc:	4a0d      	ldr	r2, [pc, #52]	@ (8002634 <LoopForever+0xe>)
  movs r3, #0
 80025fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002600:	e002      	b.n	8002608 <LoopCopyDataInit>

08002602 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002602:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002604:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002606:	3304      	adds	r3, #4

08002608 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002608:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800260a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800260c:	d3f9      	bcc.n	8002602 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800260e:	4a0a      	ldr	r2, [pc, #40]	@ (8002638 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002610:	4c0a      	ldr	r4, [pc, #40]	@ (800263c <LoopForever+0x16>)
  movs r3, #0
 8002612:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002614:	e001      	b.n	800261a <LoopFillZerobss>

08002616 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002616:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002618:	3204      	adds	r2, #4

0800261a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800261a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800261c:	d3fb      	bcc.n	8002616 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800261e:	f000 ffef 	bl	8003600 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002622:	f7fe fe6d 	bl	8001300 <main>

08002626 <LoopForever>:

LoopForever:
  b LoopForever
 8002626:	e7fe      	b.n	8002626 <LoopForever>
  ldr   r0, =_estack
 8002628:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800262c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002630:	200001dc 	.word	0x200001dc
  ldr r2, =_sidata
 8002634:	080075a4 	.word	0x080075a4
  ldr r2, =_sbss
 8002638:	200001e0 	.word	0x200001e0
  ldr r4, =_ebss
 800263c:	200003bc 	.word	0x200003bc

08002640 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002640:	e7fe      	b.n	8002640 <ADC_IRQHandler>

08002642 <__cvt>:
 8002642:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002646:	b088      	sub	sp, #32
 8002648:	2b00      	cmp	r3, #0
 800264a:	461d      	mov	r5, r3
 800264c:	4614      	mov	r4, r2
 800264e:	bfbc      	itt	lt
 8002650:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8002654:	4614      	movlt	r4, r2
 8002656:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002658:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 800265a:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 800265e:	bfb6      	itet	lt
 8002660:	461d      	movlt	r5, r3
 8002662:	2300      	movge	r3, #0
 8002664:	232d      	movlt	r3, #45	@ 0x2d
 8002666:	7013      	strb	r3, [r2, #0]
 8002668:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800266a:	f023 0820 	bic.w	r8, r3, #32
 800266e:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8002672:	d005      	beq.n	8002680 <__cvt+0x3e>
 8002674:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8002678:	d100      	bne.n	800267c <__cvt+0x3a>
 800267a:	3601      	adds	r6, #1
 800267c:	2302      	movs	r3, #2
 800267e:	e000      	b.n	8002682 <__cvt+0x40>
 8002680:	2303      	movs	r3, #3
 8002682:	aa07      	add	r2, sp, #28
 8002684:	9204      	str	r2, [sp, #16]
 8002686:	aa06      	add	r2, sp, #24
 8002688:	e9cd a202 	strd	sl, r2, [sp, #8]
 800268c:	e9cd 3600 	strd	r3, r6, [sp]
 8002690:	4622      	mov	r2, r4
 8002692:	462b      	mov	r3, r5
 8002694:	f001 f868 	bl	8003768 <_dtoa_r>
 8002698:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800269c:	4607      	mov	r7, r0
 800269e:	d119      	bne.n	80026d4 <__cvt+0x92>
 80026a0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80026a2:	07db      	lsls	r3, r3, #31
 80026a4:	d50e      	bpl.n	80026c4 <__cvt+0x82>
 80026a6:	eb00 0906 	add.w	r9, r0, r6
 80026aa:	2200      	movs	r2, #0
 80026ac:	2300      	movs	r3, #0
 80026ae:	4620      	mov	r0, r4
 80026b0:	4629      	mov	r1, r5
 80026b2:	f7fe fa09 	bl	8000ac8 <__aeabi_dcmpeq>
 80026b6:	b108      	cbz	r0, 80026bc <__cvt+0x7a>
 80026b8:	f8cd 901c 	str.w	r9, [sp, #28]
 80026bc:	2230      	movs	r2, #48	@ 0x30
 80026be:	9b07      	ldr	r3, [sp, #28]
 80026c0:	454b      	cmp	r3, r9
 80026c2:	d31e      	bcc.n	8002702 <__cvt+0xc0>
 80026c4:	9b07      	ldr	r3, [sp, #28]
 80026c6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80026c8:	1bdb      	subs	r3, r3, r7
 80026ca:	4638      	mov	r0, r7
 80026cc:	6013      	str	r3, [r2, #0]
 80026ce:	b008      	add	sp, #32
 80026d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80026d4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80026d8:	eb00 0906 	add.w	r9, r0, r6
 80026dc:	d1e5      	bne.n	80026aa <__cvt+0x68>
 80026de:	7803      	ldrb	r3, [r0, #0]
 80026e0:	2b30      	cmp	r3, #48	@ 0x30
 80026e2:	d10a      	bne.n	80026fa <__cvt+0xb8>
 80026e4:	2200      	movs	r2, #0
 80026e6:	2300      	movs	r3, #0
 80026e8:	4620      	mov	r0, r4
 80026ea:	4629      	mov	r1, r5
 80026ec:	f7fe f9ec 	bl	8000ac8 <__aeabi_dcmpeq>
 80026f0:	b918      	cbnz	r0, 80026fa <__cvt+0xb8>
 80026f2:	f1c6 0601 	rsb	r6, r6, #1
 80026f6:	f8ca 6000 	str.w	r6, [sl]
 80026fa:	f8da 3000 	ldr.w	r3, [sl]
 80026fe:	4499      	add	r9, r3
 8002700:	e7d3      	b.n	80026aa <__cvt+0x68>
 8002702:	1c59      	adds	r1, r3, #1
 8002704:	9107      	str	r1, [sp, #28]
 8002706:	701a      	strb	r2, [r3, #0]
 8002708:	e7d9      	b.n	80026be <__cvt+0x7c>

0800270a <__exponent>:
 800270a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800270c:	2900      	cmp	r1, #0
 800270e:	bfba      	itte	lt
 8002710:	4249      	neglt	r1, r1
 8002712:	232d      	movlt	r3, #45	@ 0x2d
 8002714:	232b      	movge	r3, #43	@ 0x2b
 8002716:	2909      	cmp	r1, #9
 8002718:	7002      	strb	r2, [r0, #0]
 800271a:	7043      	strb	r3, [r0, #1]
 800271c:	dd29      	ble.n	8002772 <__exponent+0x68>
 800271e:	f10d 0307 	add.w	r3, sp, #7
 8002722:	461d      	mov	r5, r3
 8002724:	270a      	movs	r7, #10
 8002726:	461a      	mov	r2, r3
 8002728:	fbb1 f6f7 	udiv	r6, r1, r7
 800272c:	fb07 1416 	mls	r4, r7, r6, r1
 8002730:	3430      	adds	r4, #48	@ 0x30
 8002732:	f802 4c01 	strb.w	r4, [r2, #-1]
 8002736:	460c      	mov	r4, r1
 8002738:	2c63      	cmp	r4, #99	@ 0x63
 800273a:	f103 33ff 	add.w	r3, r3, #4294967295
 800273e:	4631      	mov	r1, r6
 8002740:	dcf1      	bgt.n	8002726 <__exponent+0x1c>
 8002742:	3130      	adds	r1, #48	@ 0x30
 8002744:	1e94      	subs	r4, r2, #2
 8002746:	f803 1c01 	strb.w	r1, [r3, #-1]
 800274a:	1c41      	adds	r1, r0, #1
 800274c:	4623      	mov	r3, r4
 800274e:	42ab      	cmp	r3, r5
 8002750:	d30a      	bcc.n	8002768 <__exponent+0x5e>
 8002752:	f10d 0309 	add.w	r3, sp, #9
 8002756:	1a9b      	subs	r3, r3, r2
 8002758:	42ac      	cmp	r4, r5
 800275a:	bf88      	it	hi
 800275c:	2300      	movhi	r3, #0
 800275e:	3302      	adds	r3, #2
 8002760:	4403      	add	r3, r0
 8002762:	1a18      	subs	r0, r3, r0
 8002764:	b003      	add	sp, #12
 8002766:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002768:	f813 6b01 	ldrb.w	r6, [r3], #1
 800276c:	f801 6f01 	strb.w	r6, [r1, #1]!
 8002770:	e7ed      	b.n	800274e <__exponent+0x44>
 8002772:	2330      	movs	r3, #48	@ 0x30
 8002774:	3130      	adds	r1, #48	@ 0x30
 8002776:	7083      	strb	r3, [r0, #2]
 8002778:	70c1      	strb	r1, [r0, #3]
 800277a:	1d03      	adds	r3, r0, #4
 800277c:	e7f1      	b.n	8002762 <__exponent+0x58>
	...

08002780 <_printf_float>:
 8002780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002784:	b091      	sub	sp, #68	@ 0x44
 8002786:	460c      	mov	r4, r1
 8002788:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 800278c:	4616      	mov	r6, r2
 800278e:	461f      	mov	r7, r3
 8002790:	4605      	mov	r5, r0
 8002792:	f000 fee5 	bl	8003560 <_localeconv_r>
 8002796:	6803      	ldr	r3, [r0, #0]
 8002798:	9308      	str	r3, [sp, #32]
 800279a:	4618      	mov	r0, r3
 800279c:	f7fd fd68 	bl	8000270 <strlen>
 80027a0:	2300      	movs	r3, #0
 80027a2:	930e      	str	r3, [sp, #56]	@ 0x38
 80027a4:	f8d8 3000 	ldr.w	r3, [r8]
 80027a8:	9009      	str	r0, [sp, #36]	@ 0x24
 80027aa:	3307      	adds	r3, #7
 80027ac:	f023 0307 	bic.w	r3, r3, #7
 80027b0:	f103 0208 	add.w	r2, r3, #8
 80027b4:	f894 a018 	ldrb.w	sl, [r4, #24]
 80027b8:	f8d4 b000 	ldr.w	fp, [r4]
 80027bc:	f8c8 2000 	str.w	r2, [r8]
 80027c0:	e9d3 8900 	ldrd	r8, r9, [r3]
 80027c4:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80027c8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80027ca:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80027ce:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80027d2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80027d6:	4b9d      	ldr	r3, [pc, #628]	@ (8002a4c <_printf_float+0x2cc>)
 80027d8:	f04f 32ff 	mov.w	r2, #4294967295
 80027dc:	f7fe f9a6 	bl	8000b2c <__aeabi_dcmpun>
 80027e0:	bb70      	cbnz	r0, 8002840 <_printf_float+0xc0>
 80027e2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80027e6:	4b99      	ldr	r3, [pc, #612]	@ (8002a4c <_printf_float+0x2cc>)
 80027e8:	f04f 32ff 	mov.w	r2, #4294967295
 80027ec:	f7fe f980 	bl	8000af0 <__aeabi_dcmple>
 80027f0:	bb30      	cbnz	r0, 8002840 <_printf_float+0xc0>
 80027f2:	2200      	movs	r2, #0
 80027f4:	2300      	movs	r3, #0
 80027f6:	4640      	mov	r0, r8
 80027f8:	4649      	mov	r1, r9
 80027fa:	f7fe f96f 	bl	8000adc <__aeabi_dcmplt>
 80027fe:	b110      	cbz	r0, 8002806 <_printf_float+0x86>
 8002800:	232d      	movs	r3, #45	@ 0x2d
 8002802:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002806:	4a92      	ldr	r2, [pc, #584]	@ (8002a50 <_printf_float+0x2d0>)
 8002808:	4b92      	ldr	r3, [pc, #584]	@ (8002a54 <_printf_float+0x2d4>)
 800280a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800280e:	bf8c      	ite	hi
 8002810:	4690      	movhi	r8, r2
 8002812:	4698      	movls	r8, r3
 8002814:	2303      	movs	r3, #3
 8002816:	6123      	str	r3, [r4, #16]
 8002818:	f02b 0304 	bic.w	r3, fp, #4
 800281c:	6023      	str	r3, [r4, #0]
 800281e:	f04f 0900 	mov.w	r9, #0
 8002822:	9700      	str	r7, [sp, #0]
 8002824:	4633      	mov	r3, r6
 8002826:	aa0f      	add	r2, sp, #60	@ 0x3c
 8002828:	4621      	mov	r1, r4
 800282a:	4628      	mov	r0, r5
 800282c:	f000 f9d4 	bl	8002bd8 <_printf_common>
 8002830:	3001      	adds	r0, #1
 8002832:	f040 808f 	bne.w	8002954 <_printf_float+0x1d4>
 8002836:	f04f 30ff 	mov.w	r0, #4294967295
 800283a:	b011      	add	sp, #68	@ 0x44
 800283c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002840:	4642      	mov	r2, r8
 8002842:	464b      	mov	r3, r9
 8002844:	4640      	mov	r0, r8
 8002846:	4649      	mov	r1, r9
 8002848:	f7fe f970 	bl	8000b2c <__aeabi_dcmpun>
 800284c:	b140      	cbz	r0, 8002860 <_printf_float+0xe0>
 800284e:	464b      	mov	r3, r9
 8002850:	2b00      	cmp	r3, #0
 8002852:	bfbc      	itt	lt
 8002854:	232d      	movlt	r3, #45	@ 0x2d
 8002856:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800285a:	4a7f      	ldr	r2, [pc, #508]	@ (8002a58 <_printf_float+0x2d8>)
 800285c:	4b7f      	ldr	r3, [pc, #508]	@ (8002a5c <_printf_float+0x2dc>)
 800285e:	e7d4      	b.n	800280a <_printf_float+0x8a>
 8002860:	6863      	ldr	r3, [r4, #4]
 8002862:	1c5a      	adds	r2, r3, #1
 8002864:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8002868:	d13f      	bne.n	80028ea <_printf_float+0x16a>
 800286a:	2306      	movs	r3, #6
 800286c:	6063      	str	r3, [r4, #4]
 800286e:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8002872:	2200      	movs	r2, #0
 8002874:	6023      	str	r3, [r4, #0]
 8002876:	9206      	str	r2, [sp, #24]
 8002878:	aa0e      	add	r2, sp, #56	@ 0x38
 800287a:	e9cd a204 	strd	sl, r2, [sp, #16]
 800287e:	aa0d      	add	r2, sp, #52	@ 0x34
 8002880:	9203      	str	r2, [sp, #12]
 8002882:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8002886:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800288a:	6863      	ldr	r3, [r4, #4]
 800288c:	9300      	str	r3, [sp, #0]
 800288e:	4642      	mov	r2, r8
 8002890:	464b      	mov	r3, r9
 8002892:	4628      	mov	r0, r5
 8002894:	910a      	str	r1, [sp, #40]	@ 0x28
 8002896:	f7ff fed4 	bl	8002642 <__cvt>
 800289a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800289c:	2947      	cmp	r1, #71	@ 0x47
 800289e:	4680      	mov	r8, r0
 80028a0:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80028a2:	d128      	bne.n	80028f6 <_printf_float+0x176>
 80028a4:	1cc8      	adds	r0, r1, #3
 80028a6:	db02      	blt.n	80028ae <_printf_float+0x12e>
 80028a8:	6863      	ldr	r3, [r4, #4]
 80028aa:	4299      	cmp	r1, r3
 80028ac:	dd40      	ble.n	8002930 <_printf_float+0x1b0>
 80028ae:	f1aa 0a02 	sub.w	sl, sl, #2
 80028b2:	fa5f fa8a 	uxtb.w	sl, sl
 80028b6:	3901      	subs	r1, #1
 80028b8:	4652      	mov	r2, sl
 80028ba:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80028be:	910d      	str	r1, [sp, #52]	@ 0x34
 80028c0:	f7ff ff23 	bl	800270a <__exponent>
 80028c4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80028c6:	1813      	adds	r3, r2, r0
 80028c8:	2a01      	cmp	r2, #1
 80028ca:	4681      	mov	r9, r0
 80028cc:	6123      	str	r3, [r4, #16]
 80028ce:	dc02      	bgt.n	80028d6 <_printf_float+0x156>
 80028d0:	6822      	ldr	r2, [r4, #0]
 80028d2:	07d2      	lsls	r2, r2, #31
 80028d4:	d501      	bpl.n	80028da <_printf_float+0x15a>
 80028d6:	3301      	adds	r3, #1
 80028d8:	6123      	str	r3, [r4, #16]
 80028da:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d09f      	beq.n	8002822 <_printf_float+0xa2>
 80028e2:	232d      	movs	r3, #45	@ 0x2d
 80028e4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80028e8:	e79b      	b.n	8002822 <_printf_float+0xa2>
 80028ea:	2947      	cmp	r1, #71	@ 0x47
 80028ec:	d1bf      	bne.n	800286e <_printf_float+0xee>
 80028ee:	2b00      	cmp	r3, #0
 80028f0:	d1bd      	bne.n	800286e <_printf_float+0xee>
 80028f2:	2301      	movs	r3, #1
 80028f4:	e7ba      	b.n	800286c <_printf_float+0xec>
 80028f6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80028fa:	d9dc      	bls.n	80028b6 <_printf_float+0x136>
 80028fc:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002900:	d118      	bne.n	8002934 <_printf_float+0x1b4>
 8002902:	2900      	cmp	r1, #0
 8002904:	6863      	ldr	r3, [r4, #4]
 8002906:	dd0b      	ble.n	8002920 <_printf_float+0x1a0>
 8002908:	6121      	str	r1, [r4, #16]
 800290a:	b913      	cbnz	r3, 8002912 <_printf_float+0x192>
 800290c:	6822      	ldr	r2, [r4, #0]
 800290e:	07d0      	lsls	r0, r2, #31
 8002910:	d502      	bpl.n	8002918 <_printf_float+0x198>
 8002912:	3301      	adds	r3, #1
 8002914:	440b      	add	r3, r1
 8002916:	6123      	str	r3, [r4, #16]
 8002918:	65a1      	str	r1, [r4, #88]	@ 0x58
 800291a:	f04f 0900 	mov.w	r9, #0
 800291e:	e7dc      	b.n	80028da <_printf_float+0x15a>
 8002920:	b913      	cbnz	r3, 8002928 <_printf_float+0x1a8>
 8002922:	6822      	ldr	r2, [r4, #0]
 8002924:	07d2      	lsls	r2, r2, #31
 8002926:	d501      	bpl.n	800292c <_printf_float+0x1ac>
 8002928:	3302      	adds	r3, #2
 800292a:	e7f4      	b.n	8002916 <_printf_float+0x196>
 800292c:	2301      	movs	r3, #1
 800292e:	e7f2      	b.n	8002916 <_printf_float+0x196>
 8002930:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8002934:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002936:	4299      	cmp	r1, r3
 8002938:	db05      	blt.n	8002946 <_printf_float+0x1c6>
 800293a:	6823      	ldr	r3, [r4, #0]
 800293c:	6121      	str	r1, [r4, #16]
 800293e:	07d8      	lsls	r0, r3, #31
 8002940:	d5ea      	bpl.n	8002918 <_printf_float+0x198>
 8002942:	1c4b      	adds	r3, r1, #1
 8002944:	e7e7      	b.n	8002916 <_printf_float+0x196>
 8002946:	2900      	cmp	r1, #0
 8002948:	bfd4      	ite	le
 800294a:	f1c1 0202 	rsble	r2, r1, #2
 800294e:	2201      	movgt	r2, #1
 8002950:	4413      	add	r3, r2
 8002952:	e7e0      	b.n	8002916 <_printf_float+0x196>
 8002954:	6823      	ldr	r3, [r4, #0]
 8002956:	055a      	lsls	r2, r3, #21
 8002958:	d407      	bmi.n	800296a <_printf_float+0x1ea>
 800295a:	6923      	ldr	r3, [r4, #16]
 800295c:	4642      	mov	r2, r8
 800295e:	4631      	mov	r1, r6
 8002960:	4628      	mov	r0, r5
 8002962:	47b8      	blx	r7
 8002964:	3001      	adds	r0, #1
 8002966:	d12b      	bne.n	80029c0 <_printf_float+0x240>
 8002968:	e765      	b.n	8002836 <_printf_float+0xb6>
 800296a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800296e:	f240 80dd 	bls.w	8002b2c <_printf_float+0x3ac>
 8002972:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002976:	2200      	movs	r2, #0
 8002978:	2300      	movs	r3, #0
 800297a:	f7fe f8a5 	bl	8000ac8 <__aeabi_dcmpeq>
 800297e:	2800      	cmp	r0, #0
 8002980:	d033      	beq.n	80029ea <_printf_float+0x26a>
 8002982:	4a37      	ldr	r2, [pc, #220]	@ (8002a60 <_printf_float+0x2e0>)
 8002984:	2301      	movs	r3, #1
 8002986:	4631      	mov	r1, r6
 8002988:	4628      	mov	r0, r5
 800298a:	47b8      	blx	r7
 800298c:	3001      	adds	r0, #1
 800298e:	f43f af52 	beq.w	8002836 <_printf_float+0xb6>
 8002992:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8002996:	4543      	cmp	r3, r8
 8002998:	db02      	blt.n	80029a0 <_printf_float+0x220>
 800299a:	6823      	ldr	r3, [r4, #0]
 800299c:	07d8      	lsls	r0, r3, #31
 800299e:	d50f      	bpl.n	80029c0 <_printf_float+0x240>
 80029a0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80029a4:	4631      	mov	r1, r6
 80029a6:	4628      	mov	r0, r5
 80029a8:	47b8      	blx	r7
 80029aa:	3001      	adds	r0, #1
 80029ac:	f43f af43 	beq.w	8002836 <_printf_float+0xb6>
 80029b0:	f04f 0900 	mov.w	r9, #0
 80029b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80029b8:	f104 0a1a 	add.w	sl, r4, #26
 80029bc:	45c8      	cmp	r8, r9
 80029be:	dc09      	bgt.n	80029d4 <_printf_float+0x254>
 80029c0:	6823      	ldr	r3, [r4, #0]
 80029c2:	079b      	lsls	r3, r3, #30
 80029c4:	f100 8103 	bmi.w	8002bce <_printf_float+0x44e>
 80029c8:	68e0      	ldr	r0, [r4, #12]
 80029ca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80029cc:	4298      	cmp	r0, r3
 80029ce:	bfb8      	it	lt
 80029d0:	4618      	movlt	r0, r3
 80029d2:	e732      	b.n	800283a <_printf_float+0xba>
 80029d4:	2301      	movs	r3, #1
 80029d6:	4652      	mov	r2, sl
 80029d8:	4631      	mov	r1, r6
 80029da:	4628      	mov	r0, r5
 80029dc:	47b8      	blx	r7
 80029de:	3001      	adds	r0, #1
 80029e0:	f43f af29 	beq.w	8002836 <_printf_float+0xb6>
 80029e4:	f109 0901 	add.w	r9, r9, #1
 80029e8:	e7e8      	b.n	80029bc <_printf_float+0x23c>
 80029ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80029ec:	2b00      	cmp	r3, #0
 80029ee:	dc39      	bgt.n	8002a64 <_printf_float+0x2e4>
 80029f0:	4a1b      	ldr	r2, [pc, #108]	@ (8002a60 <_printf_float+0x2e0>)
 80029f2:	2301      	movs	r3, #1
 80029f4:	4631      	mov	r1, r6
 80029f6:	4628      	mov	r0, r5
 80029f8:	47b8      	blx	r7
 80029fa:	3001      	adds	r0, #1
 80029fc:	f43f af1b 	beq.w	8002836 <_printf_float+0xb6>
 8002a00:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8002a04:	ea59 0303 	orrs.w	r3, r9, r3
 8002a08:	d102      	bne.n	8002a10 <_printf_float+0x290>
 8002a0a:	6823      	ldr	r3, [r4, #0]
 8002a0c:	07d9      	lsls	r1, r3, #31
 8002a0e:	d5d7      	bpl.n	80029c0 <_printf_float+0x240>
 8002a10:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002a14:	4631      	mov	r1, r6
 8002a16:	4628      	mov	r0, r5
 8002a18:	47b8      	blx	r7
 8002a1a:	3001      	adds	r0, #1
 8002a1c:	f43f af0b 	beq.w	8002836 <_printf_float+0xb6>
 8002a20:	f04f 0a00 	mov.w	sl, #0
 8002a24:	f104 0b1a 	add.w	fp, r4, #26
 8002a28:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002a2a:	425b      	negs	r3, r3
 8002a2c:	4553      	cmp	r3, sl
 8002a2e:	dc01      	bgt.n	8002a34 <_printf_float+0x2b4>
 8002a30:	464b      	mov	r3, r9
 8002a32:	e793      	b.n	800295c <_printf_float+0x1dc>
 8002a34:	2301      	movs	r3, #1
 8002a36:	465a      	mov	r2, fp
 8002a38:	4631      	mov	r1, r6
 8002a3a:	4628      	mov	r0, r5
 8002a3c:	47b8      	blx	r7
 8002a3e:	3001      	adds	r0, #1
 8002a40:	f43f aef9 	beq.w	8002836 <_printf_float+0xb6>
 8002a44:	f10a 0a01 	add.w	sl, sl, #1
 8002a48:	e7ee      	b.n	8002a28 <_printf_float+0x2a8>
 8002a4a:	bf00      	nop
 8002a4c:	7fefffff 	.word	0x7fefffff
 8002a50:	0800712c 	.word	0x0800712c
 8002a54:	08007128 	.word	0x08007128
 8002a58:	08007134 	.word	0x08007134
 8002a5c:	08007130 	.word	0x08007130
 8002a60:	08007138 	.word	0x08007138
 8002a64:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002a66:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002a6a:	4553      	cmp	r3, sl
 8002a6c:	bfa8      	it	ge
 8002a6e:	4653      	movge	r3, sl
 8002a70:	2b00      	cmp	r3, #0
 8002a72:	4699      	mov	r9, r3
 8002a74:	dc36      	bgt.n	8002ae4 <_printf_float+0x364>
 8002a76:	f04f 0b00 	mov.w	fp, #0
 8002a7a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002a7e:	f104 021a 	add.w	r2, r4, #26
 8002a82:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002a84:	930a      	str	r3, [sp, #40]	@ 0x28
 8002a86:	eba3 0309 	sub.w	r3, r3, r9
 8002a8a:	455b      	cmp	r3, fp
 8002a8c:	dc31      	bgt.n	8002af2 <_printf_float+0x372>
 8002a8e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002a90:	459a      	cmp	sl, r3
 8002a92:	dc3a      	bgt.n	8002b0a <_printf_float+0x38a>
 8002a94:	6823      	ldr	r3, [r4, #0]
 8002a96:	07da      	lsls	r2, r3, #31
 8002a98:	d437      	bmi.n	8002b0a <_printf_float+0x38a>
 8002a9a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002a9c:	ebaa 0903 	sub.w	r9, sl, r3
 8002aa0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002aa2:	ebaa 0303 	sub.w	r3, sl, r3
 8002aa6:	4599      	cmp	r9, r3
 8002aa8:	bfa8      	it	ge
 8002aaa:	4699      	movge	r9, r3
 8002aac:	f1b9 0f00 	cmp.w	r9, #0
 8002ab0:	dc33      	bgt.n	8002b1a <_printf_float+0x39a>
 8002ab2:	f04f 0800 	mov.w	r8, #0
 8002ab6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002aba:	f104 0b1a 	add.w	fp, r4, #26
 8002abe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002ac0:	ebaa 0303 	sub.w	r3, sl, r3
 8002ac4:	eba3 0309 	sub.w	r3, r3, r9
 8002ac8:	4543      	cmp	r3, r8
 8002aca:	f77f af79 	ble.w	80029c0 <_printf_float+0x240>
 8002ace:	2301      	movs	r3, #1
 8002ad0:	465a      	mov	r2, fp
 8002ad2:	4631      	mov	r1, r6
 8002ad4:	4628      	mov	r0, r5
 8002ad6:	47b8      	blx	r7
 8002ad8:	3001      	adds	r0, #1
 8002ada:	f43f aeac 	beq.w	8002836 <_printf_float+0xb6>
 8002ade:	f108 0801 	add.w	r8, r8, #1
 8002ae2:	e7ec      	b.n	8002abe <_printf_float+0x33e>
 8002ae4:	4642      	mov	r2, r8
 8002ae6:	4631      	mov	r1, r6
 8002ae8:	4628      	mov	r0, r5
 8002aea:	47b8      	blx	r7
 8002aec:	3001      	adds	r0, #1
 8002aee:	d1c2      	bne.n	8002a76 <_printf_float+0x2f6>
 8002af0:	e6a1      	b.n	8002836 <_printf_float+0xb6>
 8002af2:	2301      	movs	r3, #1
 8002af4:	4631      	mov	r1, r6
 8002af6:	4628      	mov	r0, r5
 8002af8:	920a      	str	r2, [sp, #40]	@ 0x28
 8002afa:	47b8      	blx	r7
 8002afc:	3001      	adds	r0, #1
 8002afe:	f43f ae9a 	beq.w	8002836 <_printf_float+0xb6>
 8002b02:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002b04:	f10b 0b01 	add.w	fp, fp, #1
 8002b08:	e7bb      	b.n	8002a82 <_printf_float+0x302>
 8002b0a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002b0e:	4631      	mov	r1, r6
 8002b10:	4628      	mov	r0, r5
 8002b12:	47b8      	blx	r7
 8002b14:	3001      	adds	r0, #1
 8002b16:	d1c0      	bne.n	8002a9a <_printf_float+0x31a>
 8002b18:	e68d      	b.n	8002836 <_printf_float+0xb6>
 8002b1a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002b1c:	464b      	mov	r3, r9
 8002b1e:	4442      	add	r2, r8
 8002b20:	4631      	mov	r1, r6
 8002b22:	4628      	mov	r0, r5
 8002b24:	47b8      	blx	r7
 8002b26:	3001      	adds	r0, #1
 8002b28:	d1c3      	bne.n	8002ab2 <_printf_float+0x332>
 8002b2a:	e684      	b.n	8002836 <_printf_float+0xb6>
 8002b2c:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002b30:	f1ba 0f01 	cmp.w	sl, #1
 8002b34:	dc01      	bgt.n	8002b3a <_printf_float+0x3ba>
 8002b36:	07db      	lsls	r3, r3, #31
 8002b38:	d536      	bpl.n	8002ba8 <_printf_float+0x428>
 8002b3a:	2301      	movs	r3, #1
 8002b3c:	4642      	mov	r2, r8
 8002b3e:	4631      	mov	r1, r6
 8002b40:	4628      	mov	r0, r5
 8002b42:	47b8      	blx	r7
 8002b44:	3001      	adds	r0, #1
 8002b46:	f43f ae76 	beq.w	8002836 <_printf_float+0xb6>
 8002b4a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002b4e:	4631      	mov	r1, r6
 8002b50:	4628      	mov	r0, r5
 8002b52:	47b8      	blx	r7
 8002b54:	3001      	adds	r0, #1
 8002b56:	f43f ae6e 	beq.w	8002836 <_printf_float+0xb6>
 8002b5a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002b5e:	2200      	movs	r2, #0
 8002b60:	2300      	movs	r3, #0
 8002b62:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002b66:	f7fd ffaf 	bl	8000ac8 <__aeabi_dcmpeq>
 8002b6a:	b9c0      	cbnz	r0, 8002b9e <_printf_float+0x41e>
 8002b6c:	4653      	mov	r3, sl
 8002b6e:	f108 0201 	add.w	r2, r8, #1
 8002b72:	4631      	mov	r1, r6
 8002b74:	4628      	mov	r0, r5
 8002b76:	47b8      	blx	r7
 8002b78:	3001      	adds	r0, #1
 8002b7a:	d10c      	bne.n	8002b96 <_printf_float+0x416>
 8002b7c:	e65b      	b.n	8002836 <_printf_float+0xb6>
 8002b7e:	2301      	movs	r3, #1
 8002b80:	465a      	mov	r2, fp
 8002b82:	4631      	mov	r1, r6
 8002b84:	4628      	mov	r0, r5
 8002b86:	47b8      	blx	r7
 8002b88:	3001      	adds	r0, #1
 8002b8a:	f43f ae54 	beq.w	8002836 <_printf_float+0xb6>
 8002b8e:	f108 0801 	add.w	r8, r8, #1
 8002b92:	45d0      	cmp	r8, sl
 8002b94:	dbf3      	blt.n	8002b7e <_printf_float+0x3fe>
 8002b96:	464b      	mov	r3, r9
 8002b98:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8002b9c:	e6df      	b.n	800295e <_printf_float+0x1de>
 8002b9e:	f04f 0800 	mov.w	r8, #0
 8002ba2:	f104 0b1a 	add.w	fp, r4, #26
 8002ba6:	e7f4      	b.n	8002b92 <_printf_float+0x412>
 8002ba8:	2301      	movs	r3, #1
 8002baa:	4642      	mov	r2, r8
 8002bac:	e7e1      	b.n	8002b72 <_printf_float+0x3f2>
 8002bae:	2301      	movs	r3, #1
 8002bb0:	464a      	mov	r2, r9
 8002bb2:	4631      	mov	r1, r6
 8002bb4:	4628      	mov	r0, r5
 8002bb6:	47b8      	blx	r7
 8002bb8:	3001      	adds	r0, #1
 8002bba:	f43f ae3c 	beq.w	8002836 <_printf_float+0xb6>
 8002bbe:	f108 0801 	add.w	r8, r8, #1
 8002bc2:	68e3      	ldr	r3, [r4, #12]
 8002bc4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8002bc6:	1a5b      	subs	r3, r3, r1
 8002bc8:	4543      	cmp	r3, r8
 8002bca:	dcf0      	bgt.n	8002bae <_printf_float+0x42e>
 8002bcc:	e6fc      	b.n	80029c8 <_printf_float+0x248>
 8002bce:	f04f 0800 	mov.w	r8, #0
 8002bd2:	f104 0919 	add.w	r9, r4, #25
 8002bd6:	e7f4      	b.n	8002bc2 <_printf_float+0x442>

08002bd8 <_printf_common>:
 8002bd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002bdc:	4616      	mov	r6, r2
 8002bde:	4698      	mov	r8, r3
 8002be0:	688a      	ldr	r2, [r1, #8]
 8002be2:	690b      	ldr	r3, [r1, #16]
 8002be4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002be8:	4293      	cmp	r3, r2
 8002bea:	bfb8      	it	lt
 8002bec:	4613      	movlt	r3, r2
 8002bee:	6033      	str	r3, [r6, #0]
 8002bf0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002bf4:	4607      	mov	r7, r0
 8002bf6:	460c      	mov	r4, r1
 8002bf8:	b10a      	cbz	r2, 8002bfe <_printf_common+0x26>
 8002bfa:	3301      	adds	r3, #1
 8002bfc:	6033      	str	r3, [r6, #0]
 8002bfe:	6823      	ldr	r3, [r4, #0]
 8002c00:	0699      	lsls	r1, r3, #26
 8002c02:	bf42      	ittt	mi
 8002c04:	6833      	ldrmi	r3, [r6, #0]
 8002c06:	3302      	addmi	r3, #2
 8002c08:	6033      	strmi	r3, [r6, #0]
 8002c0a:	6825      	ldr	r5, [r4, #0]
 8002c0c:	f015 0506 	ands.w	r5, r5, #6
 8002c10:	d106      	bne.n	8002c20 <_printf_common+0x48>
 8002c12:	f104 0a19 	add.w	sl, r4, #25
 8002c16:	68e3      	ldr	r3, [r4, #12]
 8002c18:	6832      	ldr	r2, [r6, #0]
 8002c1a:	1a9b      	subs	r3, r3, r2
 8002c1c:	42ab      	cmp	r3, r5
 8002c1e:	dc26      	bgt.n	8002c6e <_printf_common+0x96>
 8002c20:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002c24:	6822      	ldr	r2, [r4, #0]
 8002c26:	3b00      	subs	r3, #0
 8002c28:	bf18      	it	ne
 8002c2a:	2301      	movne	r3, #1
 8002c2c:	0692      	lsls	r2, r2, #26
 8002c2e:	d42b      	bmi.n	8002c88 <_printf_common+0xb0>
 8002c30:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002c34:	4641      	mov	r1, r8
 8002c36:	4638      	mov	r0, r7
 8002c38:	47c8      	blx	r9
 8002c3a:	3001      	adds	r0, #1
 8002c3c:	d01e      	beq.n	8002c7c <_printf_common+0xa4>
 8002c3e:	6823      	ldr	r3, [r4, #0]
 8002c40:	6922      	ldr	r2, [r4, #16]
 8002c42:	f003 0306 	and.w	r3, r3, #6
 8002c46:	2b04      	cmp	r3, #4
 8002c48:	bf02      	ittt	eq
 8002c4a:	68e5      	ldreq	r5, [r4, #12]
 8002c4c:	6833      	ldreq	r3, [r6, #0]
 8002c4e:	1aed      	subeq	r5, r5, r3
 8002c50:	68a3      	ldr	r3, [r4, #8]
 8002c52:	bf0c      	ite	eq
 8002c54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002c58:	2500      	movne	r5, #0
 8002c5a:	4293      	cmp	r3, r2
 8002c5c:	bfc4      	itt	gt
 8002c5e:	1a9b      	subgt	r3, r3, r2
 8002c60:	18ed      	addgt	r5, r5, r3
 8002c62:	2600      	movs	r6, #0
 8002c64:	341a      	adds	r4, #26
 8002c66:	42b5      	cmp	r5, r6
 8002c68:	d11a      	bne.n	8002ca0 <_printf_common+0xc8>
 8002c6a:	2000      	movs	r0, #0
 8002c6c:	e008      	b.n	8002c80 <_printf_common+0xa8>
 8002c6e:	2301      	movs	r3, #1
 8002c70:	4652      	mov	r2, sl
 8002c72:	4641      	mov	r1, r8
 8002c74:	4638      	mov	r0, r7
 8002c76:	47c8      	blx	r9
 8002c78:	3001      	adds	r0, #1
 8002c7a:	d103      	bne.n	8002c84 <_printf_common+0xac>
 8002c7c:	f04f 30ff 	mov.w	r0, #4294967295
 8002c80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002c84:	3501      	adds	r5, #1
 8002c86:	e7c6      	b.n	8002c16 <_printf_common+0x3e>
 8002c88:	18e1      	adds	r1, r4, r3
 8002c8a:	1c5a      	adds	r2, r3, #1
 8002c8c:	2030      	movs	r0, #48	@ 0x30
 8002c8e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8002c92:	4422      	add	r2, r4
 8002c94:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002c98:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002c9c:	3302      	adds	r3, #2
 8002c9e:	e7c7      	b.n	8002c30 <_printf_common+0x58>
 8002ca0:	2301      	movs	r3, #1
 8002ca2:	4622      	mov	r2, r4
 8002ca4:	4641      	mov	r1, r8
 8002ca6:	4638      	mov	r0, r7
 8002ca8:	47c8      	blx	r9
 8002caa:	3001      	adds	r0, #1
 8002cac:	d0e6      	beq.n	8002c7c <_printf_common+0xa4>
 8002cae:	3601      	adds	r6, #1
 8002cb0:	e7d9      	b.n	8002c66 <_printf_common+0x8e>
	...

08002cb4 <_printf_i>:
 8002cb4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002cb8:	7e0f      	ldrb	r7, [r1, #24]
 8002cba:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002cbc:	2f78      	cmp	r7, #120	@ 0x78
 8002cbe:	4691      	mov	r9, r2
 8002cc0:	4680      	mov	r8, r0
 8002cc2:	460c      	mov	r4, r1
 8002cc4:	469a      	mov	sl, r3
 8002cc6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002cca:	d807      	bhi.n	8002cdc <_printf_i+0x28>
 8002ccc:	2f62      	cmp	r7, #98	@ 0x62
 8002cce:	d80a      	bhi.n	8002ce6 <_printf_i+0x32>
 8002cd0:	2f00      	cmp	r7, #0
 8002cd2:	f000 80d1 	beq.w	8002e78 <_printf_i+0x1c4>
 8002cd6:	2f58      	cmp	r7, #88	@ 0x58
 8002cd8:	f000 80b8 	beq.w	8002e4c <_printf_i+0x198>
 8002cdc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002ce0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002ce4:	e03a      	b.n	8002d5c <_printf_i+0xa8>
 8002ce6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002cea:	2b15      	cmp	r3, #21
 8002cec:	d8f6      	bhi.n	8002cdc <_printf_i+0x28>
 8002cee:	a101      	add	r1, pc, #4	@ (adr r1, 8002cf4 <_printf_i+0x40>)
 8002cf0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002cf4:	08002d4d 	.word	0x08002d4d
 8002cf8:	08002d61 	.word	0x08002d61
 8002cfc:	08002cdd 	.word	0x08002cdd
 8002d00:	08002cdd 	.word	0x08002cdd
 8002d04:	08002cdd 	.word	0x08002cdd
 8002d08:	08002cdd 	.word	0x08002cdd
 8002d0c:	08002d61 	.word	0x08002d61
 8002d10:	08002cdd 	.word	0x08002cdd
 8002d14:	08002cdd 	.word	0x08002cdd
 8002d18:	08002cdd 	.word	0x08002cdd
 8002d1c:	08002cdd 	.word	0x08002cdd
 8002d20:	08002e5f 	.word	0x08002e5f
 8002d24:	08002d8b 	.word	0x08002d8b
 8002d28:	08002e19 	.word	0x08002e19
 8002d2c:	08002cdd 	.word	0x08002cdd
 8002d30:	08002cdd 	.word	0x08002cdd
 8002d34:	08002e81 	.word	0x08002e81
 8002d38:	08002cdd 	.word	0x08002cdd
 8002d3c:	08002d8b 	.word	0x08002d8b
 8002d40:	08002cdd 	.word	0x08002cdd
 8002d44:	08002cdd 	.word	0x08002cdd
 8002d48:	08002e21 	.word	0x08002e21
 8002d4c:	6833      	ldr	r3, [r6, #0]
 8002d4e:	1d1a      	adds	r2, r3, #4
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	6032      	str	r2, [r6, #0]
 8002d54:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002d58:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002d5c:	2301      	movs	r3, #1
 8002d5e:	e09c      	b.n	8002e9a <_printf_i+0x1e6>
 8002d60:	6833      	ldr	r3, [r6, #0]
 8002d62:	6820      	ldr	r0, [r4, #0]
 8002d64:	1d19      	adds	r1, r3, #4
 8002d66:	6031      	str	r1, [r6, #0]
 8002d68:	0606      	lsls	r6, r0, #24
 8002d6a:	d501      	bpl.n	8002d70 <_printf_i+0xbc>
 8002d6c:	681d      	ldr	r5, [r3, #0]
 8002d6e:	e003      	b.n	8002d78 <_printf_i+0xc4>
 8002d70:	0645      	lsls	r5, r0, #25
 8002d72:	d5fb      	bpl.n	8002d6c <_printf_i+0xb8>
 8002d74:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002d78:	2d00      	cmp	r5, #0
 8002d7a:	da03      	bge.n	8002d84 <_printf_i+0xd0>
 8002d7c:	232d      	movs	r3, #45	@ 0x2d
 8002d7e:	426d      	negs	r5, r5
 8002d80:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002d84:	4858      	ldr	r0, [pc, #352]	@ (8002ee8 <_printf_i+0x234>)
 8002d86:	230a      	movs	r3, #10
 8002d88:	e011      	b.n	8002dae <_printf_i+0xfa>
 8002d8a:	6821      	ldr	r1, [r4, #0]
 8002d8c:	6833      	ldr	r3, [r6, #0]
 8002d8e:	0608      	lsls	r0, r1, #24
 8002d90:	f853 5b04 	ldr.w	r5, [r3], #4
 8002d94:	d402      	bmi.n	8002d9c <_printf_i+0xe8>
 8002d96:	0649      	lsls	r1, r1, #25
 8002d98:	bf48      	it	mi
 8002d9a:	b2ad      	uxthmi	r5, r5
 8002d9c:	2f6f      	cmp	r7, #111	@ 0x6f
 8002d9e:	4852      	ldr	r0, [pc, #328]	@ (8002ee8 <_printf_i+0x234>)
 8002da0:	6033      	str	r3, [r6, #0]
 8002da2:	bf14      	ite	ne
 8002da4:	230a      	movne	r3, #10
 8002da6:	2308      	moveq	r3, #8
 8002da8:	2100      	movs	r1, #0
 8002daa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002dae:	6866      	ldr	r6, [r4, #4]
 8002db0:	60a6      	str	r6, [r4, #8]
 8002db2:	2e00      	cmp	r6, #0
 8002db4:	db05      	blt.n	8002dc2 <_printf_i+0x10e>
 8002db6:	6821      	ldr	r1, [r4, #0]
 8002db8:	432e      	orrs	r6, r5
 8002dba:	f021 0104 	bic.w	r1, r1, #4
 8002dbe:	6021      	str	r1, [r4, #0]
 8002dc0:	d04b      	beq.n	8002e5a <_printf_i+0x1a6>
 8002dc2:	4616      	mov	r6, r2
 8002dc4:	fbb5 f1f3 	udiv	r1, r5, r3
 8002dc8:	fb03 5711 	mls	r7, r3, r1, r5
 8002dcc:	5dc7      	ldrb	r7, [r0, r7]
 8002dce:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002dd2:	462f      	mov	r7, r5
 8002dd4:	42bb      	cmp	r3, r7
 8002dd6:	460d      	mov	r5, r1
 8002dd8:	d9f4      	bls.n	8002dc4 <_printf_i+0x110>
 8002dda:	2b08      	cmp	r3, #8
 8002ddc:	d10b      	bne.n	8002df6 <_printf_i+0x142>
 8002dde:	6823      	ldr	r3, [r4, #0]
 8002de0:	07df      	lsls	r7, r3, #31
 8002de2:	d508      	bpl.n	8002df6 <_printf_i+0x142>
 8002de4:	6923      	ldr	r3, [r4, #16]
 8002de6:	6861      	ldr	r1, [r4, #4]
 8002de8:	4299      	cmp	r1, r3
 8002dea:	bfde      	ittt	le
 8002dec:	2330      	movle	r3, #48	@ 0x30
 8002dee:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002df2:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002df6:	1b92      	subs	r2, r2, r6
 8002df8:	6122      	str	r2, [r4, #16]
 8002dfa:	f8cd a000 	str.w	sl, [sp]
 8002dfe:	464b      	mov	r3, r9
 8002e00:	aa03      	add	r2, sp, #12
 8002e02:	4621      	mov	r1, r4
 8002e04:	4640      	mov	r0, r8
 8002e06:	f7ff fee7 	bl	8002bd8 <_printf_common>
 8002e0a:	3001      	adds	r0, #1
 8002e0c:	d14a      	bne.n	8002ea4 <_printf_i+0x1f0>
 8002e0e:	f04f 30ff 	mov.w	r0, #4294967295
 8002e12:	b004      	add	sp, #16
 8002e14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e18:	6823      	ldr	r3, [r4, #0]
 8002e1a:	f043 0320 	orr.w	r3, r3, #32
 8002e1e:	6023      	str	r3, [r4, #0]
 8002e20:	4832      	ldr	r0, [pc, #200]	@ (8002eec <_printf_i+0x238>)
 8002e22:	2778      	movs	r7, #120	@ 0x78
 8002e24:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002e28:	6823      	ldr	r3, [r4, #0]
 8002e2a:	6831      	ldr	r1, [r6, #0]
 8002e2c:	061f      	lsls	r7, r3, #24
 8002e2e:	f851 5b04 	ldr.w	r5, [r1], #4
 8002e32:	d402      	bmi.n	8002e3a <_printf_i+0x186>
 8002e34:	065f      	lsls	r7, r3, #25
 8002e36:	bf48      	it	mi
 8002e38:	b2ad      	uxthmi	r5, r5
 8002e3a:	6031      	str	r1, [r6, #0]
 8002e3c:	07d9      	lsls	r1, r3, #31
 8002e3e:	bf44      	itt	mi
 8002e40:	f043 0320 	orrmi.w	r3, r3, #32
 8002e44:	6023      	strmi	r3, [r4, #0]
 8002e46:	b11d      	cbz	r5, 8002e50 <_printf_i+0x19c>
 8002e48:	2310      	movs	r3, #16
 8002e4a:	e7ad      	b.n	8002da8 <_printf_i+0xf4>
 8002e4c:	4826      	ldr	r0, [pc, #152]	@ (8002ee8 <_printf_i+0x234>)
 8002e4e:	e7e9      	b.n	8002e24 <_printf_i+0x170>
 8002e50:	6823      	ldr	r3, [r4, #0]
 8002e52:	f023 0320 	bic.w	r3, r3, #32
 8002e56:	6023      	str	r3, [r4, #0]
 8002e58:	e7f6      	b.n	8002e48 <_printf_i+0x194>
 8002e5a:	4616      	mov	r6, r2
 8002e5c:	e7bd      	b.n	8002dda <_printf_i+0x126>
 8002e5e:	6833      	ldr	r3, [r6, #0]
 8002e60:	6825      	ldr	r5, [r4, #0]
 8002e62:	6961      	ldr	r1, [r4, #20]
 8002e64:	1d18      	adds	r0, r3, #4
 8002e66:	6030      	str	r0, [r6, #0]
 8002e68:	062e      	lsls	r6, r5, #24
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	d501      	bpl.n	8002e72 <_printf_i+0x1be>
 8002e6e:	6019      	str	r1, [r3, #0]
 8002e70:	e002      	b.n	8002e78 <_printf_i+0x1c4>
 8002e72:	0668      	lsls	r0, r5, #25
 8002e74:	d5fb      	bpl.n	8002e6e <_printf_i+0x1ba>
 8002e76:	8019      	strh	r1, [r3, #0]
 8002e78:	2300      	movs	r3, #0
 8002e7a:	6123      	str	r3, [r4, #16]
 8002e7c:	4616      	mov	r6, r2
 8002e7e:	e7bc      	b.n	8002dfa <_printf_i+0x146>
 8002e80:	6833      	ldr	r3, [r6, #0]
 8002e82:	1d1a      	adds	r2, r3, #4
 8002e84:	6032      	str	r2, [r6, #0]
 8002e86:	681e      	ldr	r6, [r3, #0]
 8002e88:	6862      	ldr	r2, [r4, #4]
 8002e8a:	2100      	movs	r1, #0
 8002e8c:	4630      	mov	r0, r6
 8002e8e:	f7fd f99f 	bl	80001d0 <memchr>
 8002e92:	b108      	cbz	r0, 8002e98 <_printf_i+0x1e4>
 8002e94:	1b80      	subs	r0, r0, r6
 8002e96:	6060      	str	r0, [r4, #4]
 8002e98:	6863      	ldr	r3, [r4, #4]
 8002e9a:	6123      	str	r3, [r4, #16]
 8002e9c:	2300      	movs	r3, #0
 8002e9e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002ea2:	e7aa      	b.n	8002dfa <_printf_i+0x146>
 8002ea4:	6923      	ldr	r3, [r4, #16]
 8002ea6:	4632      	mov	r2, r6
 8002ea8:	4649      	mov	r1, r9
 8002eaa:	4640      	mov	r0, r8
 8002eac:	47d0      	blx	sl
 8002eae:	3001      	adds	r0, #1
 8002eb0:	d0ad      	beq.n	8002e0e <_printf_i+0x15a>
 8002eb2:	6823      	ldr	r3, [r4, #0]
 8002eb4:	079b      	lsls	r3, r3, #30
 8002eb6:	d413      	bmi.n	8002ee0 <_printf_i+0x22c>
 8002eb8:	68e0      	ldr	r0, [r4, #12]
 8002eba:	9b03      	ldr	r3, [sp, #12]
 8002ebc:	4298      	cmp	r0, r3
 8002ebe:	bfb8      	it	lt
 8002ec0:	4618      	movlt	r0, r3
 8002ec2:	e7a6      	b.n	8002e12 <_printf_i+0x15e>
 8002ec4:	2301      	movs	r3, #1
 8002ec6:	4632      	mov	r2, r6
 8002ec8:	4649      	mov	r1, r9
 8002eca:	4640      	mov	r0, r8
 8002ecc:	47d0      	blx	sl
 8002ece:	3001      	adds	r0, #1
 8002ed0:	d09d      	beq.n	8002e0e <_printf_i+0x15a>
 8002ed2:	3501      	adds	r5, #1
 8002ed4:	68e3      	ldr	r3, [r4, #12]
 8002ed6:	9903      	ldr	r1, [sp, #12]
 8002ed8:	1a5b      	subs	r3, r3, r1
 8002eda:	42ab      	cmp	r3, r5
 8002edc:	dcf2      	bgt.n	8002ec4 <_printf_i+0x210>
 8002ede:	e7eb      	b.n	8002eb8 <_printf_i+0x204>
 8002ee0:	2500      	movs	r5, #0
 8002ee2:	f104 0619 	add.w	r6, r4, #25
 8002ee6:	e7f5      	b.n	8002ed4 <_printf_i+0x220>
 8002ee8:	0800713a 	.word	0x0800713a
 8002eec:	0800714b 	.word	0x0800714b

08002ef0 <_scanf_float>:
 8002ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ef4:	b087      	sub	sp, #28
 8002ef6:	4691      	mov	r9, r2
 8002ef8:	9303      	str	r3, [sp, #12]
 8002efa:	688b      	ldr	r3, [r1, #8]
 8002efc:	1e5a      	subs	r2, r3, #1
 8002efe:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8002f02:	bf81      	itttt	hi
 8002f04:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8002f08:	eb03 0b05 	addhi.w	fp, r3, r5
 8002f0c:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8002f10:	608b      	strhi	r3, [r1, #8]
 8002f12:	680b      	ldr	r3, [r1, #0]
 8002f14:	460a      	mov	r2, r1
 8002f16:	f04f 0500 	mov.w	r5, #0
 8002f1a:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8002f1e:	f842 3b1c 	str.w	r3, [r2], #28
 8002f22:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002f26:	4680      	mov	r8, r0
 8002f28:	460c      	mov	r4, r1
 8002f2a:	bf98      	it	ls
 8002f2c:	f04f 0b00 	movls.w	fp, #0
 8002f30:	9201      	str	r2, [sp, #4]
 8002f32:	4616      	mov	r6, r2
 8002f34:	46aa      	mov	sl, r5
 8002f36:	462f      	mov	r7, r5
 8002f38:	9502      	str	r5, [sp, #8]
 8002f3a:	68a2      	ldr	r2, [r4, #8]
 8002f3c:	b15a      	cbz	r2, 8002f56 <_scanf_float+0x66>
 8002f3e:	f8d9 3000 	ldr.w	r3, [r9]
 8002f42:	781b      	ldrb	r3, [r3, #0]
 8002f44:	2b4e      	cmp	r3, #78	@ 0x4e
 8002f46:	d863      	bhi.n	8003010 <_scanf_float+0x120>
 8002f48:	2b40      	cmp	r3, #64	@ 0x40
 8002f4a:	d83b      	bhi.n	8002fc4 <_scanf_float+0xd4>
 8002f4c:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002f50:	b2c8      	uxtb	r0, r1
 8002f52:	280e      	cmp	r0, #14
 8002f54:	d939      	bls.n	8002fca <_scanf_float+0xda>
 8002f56:	b11f      	cbz	r7, 8002f60 <_scanf_float+0x70>
 8002f58:	6823      	ldr	r3, [r4, #0]
 8002f5a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002f5e:	6023      	str	r3, [r4, #0]
 8002f60:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002f64:	f1ba 0f01 	cmp.w	sl, #1
 8002f68:	f200 8114 	bhi.w	8003194 <_scanf_float+0x2a4>
 8002f6c:	9b01      	ldr	r3, [sp, #4]
 8002f6e:	429e      	cmp	r6, r3
 8002f70:	f200 8105 	bhi.w	800317e <_scanf_float+0x28e>
 8002f74:	2001      	movs	r0, #1
 8002f76:	b007      	add	sp, #28
 8002f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f7c:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8002f80:	2a0d      	cmp	r2, #13
 8002f82:	d8e8      	bhi.n	8002f56 <_scanf_float+0x66>
 8002f84:	a101      	add	r1, pc, #4	@ (adr r1, 8002f8c <_scanf_float+0x9c>)
 8002f86:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002f8a:	bf00      	nop
 8002f8c:	080030d5 	.word	0x080030d5
 8002f90:	08002f57 	.word	0x08002f57
 8002f94:	08002f57 	.word	0x08002f57
 8002f98:	08002f57 	.word	0x08002f57
 8002f9c:	08003131 	.word	0x08003131
 8002fa0:	0800310b 	.word	0x0800310b
 8002fa4:	08002f57 	.word	0x08002f57
 8002fa8:	08002f57 	.word	0x08002f57
 8002fac:	080030e3 	.word	0x080030e3
 8002fb0:	08002f57 	.word	0x08002f57
 8002fb4:	08002f57 	.word	0x08002f57
 8002fb8:	08002f57 	.word	0x08002f57
 8002fbc:	08002f57 	.word	0x08002f57
 8002fc0:	0800309f 	.word	0x0800309f
 8002fc4:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8002fc8:	e7da      	b.n	8002f80 <_scanf_float+0x90>
 8002fca:	290e      	cmp	r1, #14
 8002fcc:	d8c3      	bhi.n	8002f56 <_scanf_float+0x66>
 8002fce:	a001      	add	r0, pc, #4	@ (adr r0, 8002fd4 <_scanf_float+0xe4>)
 8002fd0:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002fd4:	0800308f 	.word	0x0800308f
 8002fd8:	08002f57 	.word	0x08002f57
 8002fdc:	0800308f 	.word	0x0800308f
 8002fe0:	0800311f 	.word	0x0800311f
 8002fe4:	08002f57 	.word	0x08002f57
 8002fe8:	08003031 	.word	0x08003031
 8002fec:	08003075 	.word	0x08003075
 8002ff0:	08003075 	.word	0x08003075
 8002ff4:	08003075 	.word	0x08003075
 8002ff8:	08003075 	.word	0x08003075
 8002ffc:	08003075 	.word	0x08003075
 8003000:	08003075 	.word	0x08003075
 8003004:	08003075 	.word	0x08003075
 8003008:	08003075 	.word	0x08003075
 800300c:	08003075 	.word	0x08003075
 8003010:	2b6e      	cmp	r3, #110	@ 0x6e
 8003012:	d809      	bhi.n	8003028 <_scanf_float+0x138>
 8003014:	2b60      	cmp	r3, #96	@ 0x60
 8003016:	d8b1      	bhi.n	8002f7c <_scanf_float+0x8c>
 8003018:	2b54      	cmp	r3, #84	@ 0x54
 800301a:	d07b      	beq.n	8003114 <_scanf_float+0x224>
 800301c:	2b59      	cmp	r3, #89	@ 0x59
 800301e:	d19a      	bne.n	8002f56 <_scanf_float+0x66>
 8003020:	2d07      	cmp	r5, #7
 8003022:	d198      	bne.n	8002f56 <_scanf_float+0x66>
 8003024:	2508      	movs	r5, #8
 8003026:	e02f      	b.n	8003088 <_scanf_float+0x198>
 8003028:	2b74      	cmp	r3, #116	@ 0x74
 800302a:	d073      	beq.n	8003114 <_scanf_float+0x224>
 800302c:	2b79      	cmp	r3, #121	@ 0x79
 800302e:	e7f6      	b.n	800301e <_scanf_float+0x12e>
 8003030:	6821      	ldr	r1, [r4, #0]
 8003032:	05c8      	lsls	r0, r1, #23
 8003034:	d51e      	bpl.n	8003074 <_scanf_float+0x184>
 8003036:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 800303a:	6021      	str	r1, [r4, #0]
 800303c:	3701      	adds	r7, #1
 800303e:	f1bb 0f00 	cmp.w	fp, #0
 8003042:	d003      	beq.n	800304c <_scanf_float+0x15c>
 8003044:	3201      	adds	r2, #1
 8003046:	f10b 3bff 	add.w	fp, fp, #4294967295
 800304a:	60a2      	str	r2, [r4, #8]
 800304c:	68a3      	ldr	r3, [r4, #8]
 800304e:	3b01      	subs	r3, #1
 8003050:	60a3      	str	r3, [r4, #8]
 8003052:	6923      	ldr	r3, [r4, #16]
 8003054:	3301      	adds	r3, #1
 8003056:	6123      	str	r3, [r4, #16]
 8003058:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800305c:	3b01      	subs	r3, #1
 800305e:	2b00      	cmp	r3, #0
 8003060:	f8c9 3004 	str.w	r3, [r9, #4]
 8003064:	f340 8082 	ble.w	800316c <_scanf_float+0x27c>
 8003068:	f8d9 3000 	ldr.w	r3, [r9]
 800306c:	3301      	adds	r3, #1
 800306e:	f8c9 3000 	str.w	r3, [r9]
 8003072:	e762      	b.n	8002f3a <_scanf_float+0x4a>
 8003074:	eb1a 0105 	adds.w	r1, sl, r5
 8003078:	f47f af6d 	bne.w	8002f56 <_scanf_float+0x66>
 800307c:	6822      	ldr	r2, [r4, #0]
 800307e:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8003082:	6022      	str	r2, [r4, #0]
 8003084:	460d      	mov	r5, r1
 8003086:	468a      	mov	sl, r1
 8003088:	f806 3b01 	strb.w	r3, [r6], #1
 800308c:	e7de      	b.n	800304c <_scanf_float+0x15c>
 800308e:	6822      	ldr	r2, [r4, #0]
 8003090:	0610      	lsls	r0, r2, #24
 8003092:	f57f af60 	bpl.w	8002f56 <_scanf_float+0x66>
 8003096:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800309a:	6022      	str	r2, [r4, #0]
 800309c:	e7f4      	b.n	8003088 <_scanf_float+0x198>
 800309e:	f1ba 0f00 	cmp.w	sl, #0
 80030a2:	d10c      	bne.n	80030be <_scanf_float+0x1ce>
 80030a4:	b977      	cbnz	r7, 80030c4 <_scanf_float+0x1d4>
 80030a6:	6822      	ldr	r2, [r4, #0]
 80030a8:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80030ac:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80030b0:	d108      	bne.n	80030c4 <_scanf_float+0x1d4>
 80030b2:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80030b6:	6022      	str	r2, [r4, #0]
 80030b8:	f04f 0a01 	mov.w	sl, #1
 80030bc:	e7e4      	b.n	8003088 <_scanf_float+0x198>
 80030be:	f1ba 0f02 	cmp.w	sl, #2
 80030c2:	d050      	beq.n	8003166 <_scanf_float+0x276>
 80030c4:	2d01      	cmp	r5, #1
 80030c6:	d002      	beq.n	80030ce <_scanf_float+0x1de>
 80030c8:	2d04      	cmp	r5, #4
 80030ca:	f47f af44 	bne.w	8002f56 <_scanf_float+0x66>
 80030ce:	3501      	adds	r5, #1
 80030d0:	b2ed      	uxtb	r5, r5
 80030d2:	e7d9      	b.n	8003088 <_scanf_float+0x198>
 80030d4:	f1ba 0f01 	cmp.w	sl, #1
 80030d8:	f47f af3d 	bne.w	8002f56 <_scanf_float+0x66>
 80030dc:	f04f 0a02 	mov.w	sl, #2
 80030e0:	e7d2      	b.n	8003088 <_scanf_float+0x198>
 80030e2:	b975      	cbnz	r5, 8003102 <_scanf_float+0x212>
 80030e4:	2f00      	cmp	r7, #0
 80030e6:	f47f af37 	bne.w	8002f58 <_scanf_float+0x68>
 80030ea:	6822      	ldr	r2, [r4, #0]
 80030ec:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80030f0:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80030f4:	f040 80fe 	bne.w	80032f4 <_scanf_float+0x404>
 80030f8:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80030fc:	6022      	str	r2, [r4, #0]
 80030fe:	2501      	movs	r5, #1
 8003100:	e7c2      	b.n	8003088 <_scanf_float+0x198>
 8003102:	2d03      	cmp	r5, #3
 8003104:	d0e3      	beq.n	80030ce <_scanf_float+0x1de>
 8003106:	2d05      	cmp	r5, #5
 8003108:	e7df      	b.n	80030ca <_scanf_float+0x1da>
 800310a:	2d02      	cmp	r5, #2
 800310c:	f47f af23 	bne.w	8002f56 <_scanf_float+0x66>
 8003110:	2503      	movs	r5, #3
 8003112:	e7b9      	b.n	8003088 <_scanf_float+0x198>
 8003114:	2d06      	cmp	r5, #6
 8003116:	f47f af1e 	bne.w	8002f56 <_scanf_float+0x66>
 800311a:	2507      	movs	r5, #7
 800311c:	e7b4      	b.n	8003088 <_scanf_float+0x198>
 800311e:	6822      	ldr	r2, [r4, #0]
 8003120:	0591      	lsls	r1, r2, #22
 8003122:	f57f af18 	bpl.w	8002f56 <_scanf_float+0x66>
 8003126:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 800312a:	6022      	str	r2, [r4, #0]
 800312c:	9702      	str	r7, [sp, #8]
 800312e:	e7ab      	b.n	8003088 <_scanf_float+0x198>
 8003130:	6822      	ldr	r2, [r4, #0]
 8003132:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8003136:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800313a:	d005      	beq.n	8003148 <_scanf_float+0x258>
 800313c:	0550      	lsls	r0, r2, #21
 800313e:	f57f af0a 	bpl.w	8002f56 <_scanf_float+0x66>
 8003142:	2f00      	cmp	r7, #0
 8003144:	f000 80d6 	beq.w	80032f4 <_scanf_float+0x404>
 8003148:	0591      	lsls	r1, r2, #22
 800314a:	bf58      	it	pl
 800314c:	9902      	ldrpl	r1, [sp, #8]
 800314e:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8003152:	bf58      	it	pl
 8003154:	1a79      	subpl	r1, r7, r1
 8003156:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 800315a:	bf58      	it	pl
 800315c:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003160:	6022      	str	r2, [r4, #0]
 8003162:	2700      	movs	r7, #0
 8003164:	e790      	b.n	8003088 <_scanf_float+0x198>
 8003166:	f04f 0a03 	mov.w	sl, #3
 800316a:	e78d      	b.n	8003088 <_scanf_float+0x198>
 800316c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8003170:	4649      	mov	r1, r9
 8003172:	4640      	mov	r0, r8
 8003174:	4798      	blx	r3
 8003176:	2800      	cmp	r0, #0
 8003178:	f43f aedf 	beq.w	8002f3a <_scanf_float+0x4a>
 800317c:	e6eb      	b.n	8002f56 <_scanf_float+0x66>
 800317e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003182:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003186:	464a      	mov	r2, r9
 8003188:	4640      	mov	r0, r8
 800318a:	4798      	blx	r3
 800318c:	6923      	ldr	r3, [r4, #16]
 800318e:	3b01      	subs	r3, #1
 8003190:	6123      	str	r3, [r4, #16]
 8003192:	e6eb      	b.n	8002f6c <_scanf_float+0x7c>
 8003194:	1e6b      	subs	r3, r5, #1
 8003196:	2b06      	cmp	r3, #6
 8003198:	d824      	bhi.n	80031e4 <_scanf_float+0x2f4>
 800319a:	2d02      	cmp	r5, #2
 800319c:	d836      	bhi.n	800320c <_scanf_float+0x31c>
 800319e:	9b01      	ldr	r3, [sp, #4]
 80031a0:	429e      	cmp	r6, r3
 80031a2:	f67f aee7 	bls.w	8002f74 <_scanf_float+0x84>
 80031a6:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80031aa:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80031ae:	464a      	mov	r2, r9
 80031b0:	4640      	mov	r0, r8
 80031b2:	4798      	blx	r3
 80031b4:	6923      	ldr	r3, [r4, #16]
 80031b6:	3b01      	subs	r3, #1
 80031b8:	6123      	str	r3, [r4, #16]
 80031ba:	e7f0      	b.n	800319e <_scanf_float+0x2ae>
 80031bc:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80031c0:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 80031c4:	464a      	mov	r2, r9
 80031c6:	4640      	mov	r0, r8
 80031c8:	4798      	blx	r3
 80031ca:	6923      	ldr	r3, [r4, #16]
 80031cc:	3b01      	subs	r3, #1
 80031ce:	6123      	str	r3, [r4, #16]
 80031d0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80031d4:	fa5f fa8a 	uxtb.w	sl, sl
 80031d8:	f1ba 0f02 	cmp.w	sl, #2
 80031dc:	d1ee      	bne.n	80031bc <_scanf_float+0x2cc>
 80031de:	3d03      	subs	r5, #3
 80031e0:	b2ed      	uxtb	r5, r5
 80031e2:	1b76      	subs	r6, r6, r5
 80031e4:	6823      	ldr	r3, [r4, #0]
 80031e6:	05da      	lsls	r2, r3, #23
 80031e8:	d530      	bpl.n	800324c <_scanf_float+0x35c>
 80031ea:	055b      	lsls	r3, r3, #21
 80031ec:	d511      	bpl.n	8003212 <_scanf_float+0x322>
 80031ee:	9b01      	ldr	r3, [sp, #4]
 80031f0:	429e      	cmp	r6, r3
 80031f2:	f67f aebf 	bls.w	8002f74 <_scanf_float+0x84>
 80031f6:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80031fa:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80031fe:	464a      	mov	r2, r9
 8003200:	4640      	mov	r0, r8
 8003202:	4798      	blx	r3
 8003204:	6923      	ldr	r3, [r4, #16]
 8003206:	3b01      	subs	r3, #1
 8003208:	6123      	str	r3, [r4, #16]
 800320a:	e7f0      	b.n	80031ee <_scanf_float+0x2fe>
 800320c:	46aa      	mov	sl, r5
 800320e:	46b3      	mov	fp, r6
 8003210:	e7de      	b.n	80031d0 <_scanf_float+0x2e0>
 8003212:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8003216:	6923      	ldr	r3, [r4, #16]
 8003218:	2965      	cmp	r1, #101	@ 0x65
 800321a:	f103 33ff 	add.w	r3, r3, #4294967295
 800321e:	f106 35ff 	add.w	r5, r6, #4294967295
 8003222:	6123      	str	r3, [r4, #16]
 8003224:	d00c      	beq.n	8003240 <_scanf_float+0x350>
 8003226:	2945      	cmp	r1, #69	@ 0x45
 8003228:	d00a      	beq.n	8003240 <_scanf_float+0x350>
 800322a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800322e:	464a      	mov	r2, r9
 8003230:	4640      	mov	r0, r8
 8003232:	4798      	blx	r3
 8003234:	6923      	ldr	r3, [r4, #16]
 8003236:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800323a:	3b01      	subs	r3, #1
 800323c:	1eb5      	subs	r5, r6, #2
 800323e:	6123      	str	r3, [r4, #16]
 8003240:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8003244:	464a      	mov	r2, r9
 8003246:	4640      	mov	r0, r8
 8003248:	4798      	blx	r3
 800324a:	462e      	mov	r6, r5
 800324c:	6822      	ldr	r2, [r4, #0]
 800324e:	f012 0210 	ands.w	r2, r2, #16
 8003252:	d001      	beq.n	8003258 <_scanf_float+0x368>
 8003254:	2000      	movs	r0, #0
 8003256:	e68e      	b.n	8002f76 <_scanf_float+0x86>
 8003258:	7032      	strb	r2, [r6, #0]
 800325a:	6823      	ldr	r3, [r4, #0]
 800325c:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8003260:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003264:	d125      	bne.n	80032b2 <_scanf_float+0x3c2>
 8003266:	9b02      	ldr	r3, [sp, #8]
 8003268:	429f      	cmp	r7, r3
 800326a:	d00a      	beq.n	8003282 <_scanf_float+0x392>
 800326c:	1bda      	subs	r2, r3, r7
 800326e:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8003272:	429e      	cmp	r6, r3
 8003274:	bf28      	it	cs
 8003276:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 800327a:	491f      	ldr	r1, [pc, #124]	@ (80032f8 <_scanf_float+0x408>)
 800327c:	4630      	mov	r0, r6
 800327e:	f000 f901 	bl	8003484 <siprintf>
 8003282:	2200      	movs	r2, #0
 8003284:	9901      	ldr	r1, [sp, #4]
 8003286:	4640      	mov	r0, r8
 8003288:	f002 fbd6 	bl	8005a38 <_strtod_r>
 800328c:	9b03      	ldr	r3, [sp, #12]
 800328e:	6825      	ldr	r5, [r4, #0]
 8003290:	681b      	ldr	r3, [r3, #0]
 8003292:	f015 0f02 	tst.w	r5, #2
 8003296:	4606      	mov	r6, r0
 8003298:	460f      	mov	r7, r1
 800329a:	f103 0204 	add.w	r2, r3, #4
 800329e:	d015      	beq.n	80032cc <_scanf_float+0x3dc>
 80032a0:	9903      	ldr	r1, [sp, #12]
 80032a2:	600a      	str	r2, [r1, #0]
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	e9c3 6700 	strd	r6, r7, [r3]
 80032aa:	68e3      	ldr	r3, [r4, #12]
 80032ac:	3301      	adds	r3, #1
 80032ae:	60e3      	str	r3, [r4, #12]
 80032b0:	e7d0      	b.n	8003254 <_scanf_float+0x364>
 80032b2:	9b04      	ldr	r3, [sp, #16]
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	d0e4      	beq.n	8003282 <_scanf_float+0x392>
 80032b8:	9905      	ldr	r1, [sp, #20]
 80032ba:	230a      	movs	r3, #10
 80032bc:	3101      	adds	r1, #1
 80032be:	4640      	mov	r0, r8
 80032c0:	f002 fc3a 	bl	8005b38 <_strtol_r>
 80032c4:	9b04      	ldr	r3, [sp, #16]
 80032c6:	9e05      	ldr	r6, [sp, #20]
 80032c8:	1ac2      	subs	r2, r0, r3
 80032ca:	e7d0      	b.n	800326e <_scanf_float+0x37e>
 80032cc:	076d      	lsls	r5, r5, #29
 80032ce:	d4e7      	bmi.n	80032a0 <_scanf_float+0x3b0>
 80032d0:	9d03      	ldr	r5, [sp, #12]
 80032d2:	602a      	str	r2, [r5, #0]
 80032d4:	681d      	ldr	r5, [r3, #0]
 80032d6:	4602      	mov	r2, r0
 80032d8:	460b      	mov	r3, r1
 80032da:	f7fd fc27 	bl	8000b2c <__aeabi_dcmpun>
 80032de:	b120      	cbz	r0, 80032ea <_scanf_float+0x3fa>
 80032e0:	4806      	ldr	r0, [pc, #24]	@ (80032fc <_scanf_float+0x40c>)
 80032e2:	f000 f9b5 	bl	8003650 <nanf>
 80032e6:	6028      	str	r0, [r5, #0]
 80032e8:	e7df      	b.n	80032aa <_scanf_float+0x3ba>
 80032ea:	4630      	mov	r0, r6
 80032ec:	4639      	mov	r1, r7
 80032ee:	f7fd fc7b 	bl	8000be8 <__aeabi_d2f>
 80032f2:	e7f8      	b.n	80032e6 <_scanf_float+0x3f6>
 80032f4:	2700      	movs	r7, #0
 80032f6:	e633      	b.n	8002f60 <_scanf_float+0x70>
 80032f8:	0800715c 	.word	0x0800715c
 80032fc:	0800729d 	.word	0x0800729d

08003300 <std>:
 8003300:	2300      	movs	r3, #0
 8003302:	b510      	push	{r4, lr}
 8003304:	4604      	mov	r4, r0
 8003306:	e9c0 3300 	strd	r3, r3, [r0]
 800330a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800330e:	6083      	str	r3, [r0, #8]
 8003310:	8181      	strh	r1, [r0, #12]
 8003312:	6643      	str	r3, [r0, #100]	@ 0x64
 8003314:	81c2      	strh	r2, [r0, #14]
 8003316:	6183      	str	r3, [r0, #24]
 8003318:	4619      	mov	r1, r3
 800331a:	2208      	movs	r2, #8
 800331c:	305c      	adds	r0, #92	@ 0x5c
 800331e:	f000 f916 	bl	800354e <memset>
 8003322:	4b0d      	ldr	r3, [pc, #52]	@ (8003358 <std+0x58>)
 8003324:	6263      	str	r3, [r4, #36]	@ 0x24
 8003326:	4b0d      	ldr	r3, [pc, #52]	@ (800335c <std+0x5c>)
 8003328:	62a3      	str	r3, [r4, #40]	@ 0x28
 800332a:	4b0d      	ldr	r3, [pc, #52]	@ (8003360 <std+0x60>)
 800332c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800332e:	4b0d      	ldr	r3, [pc, #52]	@ (8003364 <std+0x64>)
 8003330:	6323      	str	r3, [r4, #48]	@ 0x30
 8003332:	4b0d      	ldr	r3, [pc, #52]	@ (8003368 <std+0x68>)
 8003334:	6224      	str	r4, [r4, #32]
 8003336:	429c      	cmp	r4, r3
 8003338:	d006      	beq.n	8003348 <std+0x48>
 800333a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800333e:	4294      	cmp	r4, r2
 8003340:	d002      	beq.n	8003348 <std+0x48>
 8003342:	33d0      	adds	r3, #208	@ 0xd0
 8003344:	429c      	cmp	r4, r3
 8003346:	d105      	bne.n	8003354 <std+0x54>
 8003348:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800334c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003350:	f000 b97a 	b.w	8003648 <__retarget_lock_init_recursive>
 8003354:	bd10      	pop	{r4, pc}
 8003356:	bf00      	nop
 8003358:	080034c9 	.word	0x080034c9
 800335c:	080034eb 	.word	0x080034eb
 8003360:	08003523 	.word	0x08003523
 8003364:	08003547 	.word	0x08003547
 8003368:	20000270 	.word	0x20000270

0800336c <stdio_exit_handler>:
 800336c:	4a02      	ldr	r2, [pc, #8]	@ (8003378 <stdio_exit_handler+0xc>)
 800336e:	4903      	ldr	r1, [pc, #12]	@ (800337c <stdio_exit_handler+0x10>)
 8003370:	4803      	ldr	r0, [pc, #12]	@ (8003380 <stdio_exit_handler+0x14>)
 8003372:	f000 b869 	b.w	8003448 <_fwalk_sglue>
 8003376:	bf00      	nop
 8003378:	20000014 	.word	0x20000014
 800337c:	08005eed 	.word	0x08005eed
 8003380:	20000024 	.word	0x20000024

08003384 <cleanup_stdio>:
 8003384:	6841      	ldr	r1, [r0, #4]
 8003386:	4b0c      	ldr	r3, [pc, #48]	@ (80033b8 <cleanup_stdio+0x34>)
 8003388:	4299      	cmp	r1, r3
 800338a:	b510      	push	{r4, lr}
 800338c:	4604      	mov	r4, r0
 800338e:	d001      	beq.n	8003394 <cleanup_stdio+0x10>
 8003390:	f002 fdac 	bl	8005eec <_fflush_r>
 8003394:	68a1      	ldr	r1, [r4, #8]
 8003396:	4b09      	ldr	r3, [pc, #36]	@ (80033bc <cleanup_stdio+0x38>)
 8003398:	4299      	cmp	r1, r3
 800339a:	d002      	beq.n	80033a2 <cleanup_stdio+0x1e>
 800339c:	4620      	mov	r0, r4
 800339e:	f002 fda5 	bl	8005eec <_fflush_r>
 80033a2:	68e1      	ldr	r1, [r4, #12]
 80033a4:	4b06      	ldr	r3, [pc, #24]	@ (80033c0 <cleanup_stdio+0x3c>)
 80033a6:	4299      	cmp	r1, r3
 80033a8:	d004      	beq.n	80033b4 <cleanup_stdio+0x30>
 80033aa:	4620      	mov	r0, r4
 80033ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033b0:	f002 bd9c 	b.w	8005eec <_fflush_r>
 80033b4:	bd10      	pop	{r4, pc}
 80033b6:	bf00      	nop
 80033b8:	20000270 	.word	0x20000270
 80033bc:	200002d8 	.word	0x200002d8
 80033c0:	20000340 	.word	0x20000340

080033c4 <global_stdio_init.part.0>:
 80033c4:	b510      	push	{r4, lr}
 80033c6:	4b0b      	ldr	r3, [pc, #44]	@ (80033f4 <global_stdio_init.part.0+0x30>)
 80033c8:	4c0b      	ldr	r4, [pc, #44]	@ (80033f8 <global_stdio_init.part.0+0x34>)
 80033ca:	4a0c      	ldr	r2, [pc, #48]	@ (80033fc <global_stdio_init.part.0+0x38>)
 80033cc:	601a      	str	r2, [r3, #0]
 80033ce:	4620      	mov	r0, r4
 80033d0:	2200      	movs	r2, #0
 80033d2:	2104      	movs	r1, #4
 80033d4:	f7ff ff94 	bl	8003300 <std>
 80033d8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80033dc:	2201      	movs	r2, #1
 80033de:	2109      	movs	r1, #9
 80033e0:	f7ff ff8e 	bl	8003300 <std>
 80033e4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80033e8:	2202      	movs	r2, #2
 80033ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033ee:	2112      	movs	r1, #18
 80033f0:	f7ff bf86 	b.w	8003300 <std>
 80033f4:	200003a8 	.word	0x200003a8
 80033f8:	20000270 	.word	0x20000270
 80033fc:	0800336d 	.word	0x0800336d

08003400 <__sfp_lock_acquire>:
 8003400:	4801      	ldr	r0, [pc, #4]	@ (8003408 <__sfp_lock_acquire+0x8>)
 8003402:	f000 b922 	b.w	800364a <__retarget_lock_acquire_recursive>
 8003406:	bf00      	nop
 8003408:	200003b1 	.word	0x200003b1

0800340c <__sfp_lock_release>:
 800340c:	4801      	ldr	r0, [pc, #4]	@ (8003414 <__sfp_lock_release+0x8>)
 800340e:	f000 b91d 	b.w	800364c <__retarget_lock_release_recursive>
 8003412:	bf00      	nop
 8003414:	200003b1 	.word	0x200003b1

08003418 <__sinit>:
 8003418:	b510      	push	{r4, lr}
 800341a:	4604      	mov	r4, r0
 800341c:	f7ff fff0 	bl	8003400 <__sfp_lock_acquire>
 8003420:	6a23      	ldr	r3, [r4, #32]
 8003422:	b11b      	cbz	r3, 800342c <__sinit+0x14>
 8003424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003428:	f7ff bff0 	b.w	800340c <__sfp_lock_release>
 800342c:	4b04      	ldr	r3, [pc, #16]	@ (8003440 <__sinit+0x28>)
 800342e:	6223      	str	r3, [r4, #32]
 8003430:	4b04      	ldr	r3, [pc, #16]	@ (8003444 <__sinit+0x2c>)
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	2b00      	cmp	r3, #0
 8003436:	d1f5      	bne.n	8003424 <__sinit+0xc>
 8003438:	f7ff ffc4 	bl	80033c4 <global_stdio_init.part.0>
 800343c:	e7f2      	b.n	8003424 <__sinit+0xc>
 800343e:	bf00      	nop
 8003440:	08003385 	.word	0x08003385
 8003444:	200003a8 	.word	0x200003a8

08003448 <_fwalk_sglue>:
 8003448:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800344c:	4607      	mov	r7, r0
 800344e:	4688      	mov	r8, r1
 8003450:	4614      	mov	r4, r2
 8003452:	2600      	movs	r6, #0
 8003454:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003458:	f1b9 0901 	subs.w	r9, r9, #1
 800345c:	d505      	bpl.n	800346a <_fwalk_sglue+0x22>
 800345e:	6824      	ldr	r4, [r4, #0]
 8003460:	2c00      	cmp	r4, #0
 8003462:	d1f7      	bne.n	8003454 <_fwalk_sglue+0xc>
 8003464:	4630      	mov	r0, r6
 8003466:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800346a:	89ab      	ldrh	r3, [r5, #12]
 800346c:	2b01      	cmp	r3, #1
 800346e:	d907      	bls.n	8003480 <_fwalk_sglue+0x38>
 8003470:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003474:	3301      	adds	r3, #1
 8003476:	d003      	beq.n	8003480 <_fwalk_sglue+0x38>
 8003478:	4629      	mov	r1, r5
 800347a:	4638      	mov	r0, r7
 800347c:	47c0      	blx	r8
 800347e:	4306      	orrs	r6, r0
 8003480:	3568      	adds	r5, #104	@ 0x68
 8003482:	e7e9      	b.n	8003458 <_fwalk_sglue+0x10>

08003484 <siprintf>:
 8003484:	b40e      	push	{r1, r2, r3}
 8003486:	b510      	push	{r4, lr}
 8003488:	b09d      	sub	sp, #116	@ 0x74
 800348a:	ab1f      	add	r3, sp, #124	@ 0x7c
 800348c:	9002      	str	r0, [sp, #8]
 800348e:	9006      	str	r0, [sp, #24]
 8003490:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8003494:	480a      	ldr	r0, [pc, #40]	@ (80034c0 <siprintf+0x3c>)
 8003496:	9107      	str	r1, [sp, #28]
 8003498:	9104      	str	r1, [sp, #16]
 800349a:	490a      	ldr	r1, [pc, #40]	@ (80034c4 <siprintf+0x40>)
 800349c:	f853 2b04 	ldr.w	r2, [r3], #4
 80034a0:	9105      	str	r1, [sp, #20]
 80034a2:	2400      	movs	r4, #0
 80034a4:	a902      	add	r1, sp, #8
 80034a6:	6800      	ldr	r0, [r0, #0]
 80034a8:	9301      	str	r3, [sp, #4]
 80034aa:	941b      	str	r4, [sp, #108]	@ 0x6c
 80034ac:	f002 fba2 	bl	8005bf4 <_svfiprintf_r>
 80034b0:	9b02      	ldr	r3, [sp, #8]
 80034b2:	701c      	strb	r4, [r3, #0]
 80034b4:	b01d      	add	sp, #116	@ 0x74
 80034b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80034ba:	b003      	add	sp, #12
 80034bc:	4770      	bx	lr
 80034be:	bf00      	nop
 80034c0:	20000020 	.word	0x20000020
 80034c4:	ffff0208 	.word	0xffff0208

080034c8 <__sread>:
 80034c8:	b510      	push	{r4, lr}
 80034ca:	460c      	mov	r4, r1
 80034cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034d0:	f000 f86c 	bl	80035ac <_read_r>
 80034d4:	2800      	cmp	r0, #0
 80034d6:	bfab      	itete	ge
 80034d8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80034da:	89a3      	ldrhlt	r3, [r4, #12]
 80034dc:	181b      	addge	r3, r3, r0
 80034de:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80034e2:	bfac      	ite	ge
 80034e4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80034e6:	81a3      	strhlt	r3, [r4, #12]
 80034e8:	bd10      	pop	{r4, pc}

080034ea <__swrite>:
 80034ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034ee:	461f      	mov	r7, r3
 80034f0:	898b      	ldrh	r3, [r1, #12]
 80034f2:	05db      	lsls	r3, r3, #23
 80034f4:	4605      	mov	r5, r0
 80034f6:	460c      	mov	r4, r1
 80034f8:	4616      	mov	r6, r2
 80034fa:	d505      	bpl.n	8003508 <__swrite+0x1e>
 80034fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003500:	2302      	movs	r3, #2
 8003502:	2200      	movs	r2, #0
 8003504:	f000 f840 	bl	8003588 <_lseek_r>
 8003508:	89a3      	ldrh	r3, [r4, #12]
 800350a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800350e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003512:	81a3      	strh	r3, [r4, #12]
 8003514:	4632      	mov	r2, r6
 8003516:	463b      	mov	r3, r7
 8003518:	4628      	mov	r0, r5
 800351a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800351e:	f000 b857 	b.w	80035d0 <_write_r>

08003522 <__sseek>:
 8003522:	b510      	push	{r4, lr}
 8003524:	460c      	mov	r4, r1
 8003526:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800352a:	f000 f82d 	bl	8003588 <_lseek_r>
 800352e:	1c43      	adds	r3, r0, #1
 8003530:	89a3      	ldrh	r3, [r4, #12]
 8003532:	bf15      	itete	ne
 8003534:	6560      	strne	r0, [r4, #84]	@ 0x54
 8003536:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800353a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800353e:	81a3      	strheq	r3, [r4, #12]
 8003540:	bf18      	it	ne
 8003542:	81a3      	strhne	r3, [r4, #12]
 8003544:	bd10      	pop	{r4, pc}

08003546 <__sclose>:
 8003546:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800354a:	f000 b80d 	b.w	8003568 <_close_r>

0800354e <memset>:
 800354e:	4402      	add	r2, r0
 8003550:	4603      	mov	r3, r0
 8003552:	4293      	cmp	r3, r2
 8003554:	d100      	bne.n	8003558 <memset+0xa>
 8003556:	4770      	bx	lr
 8003558:	f803 1b01 	strb.w	r1, [r3], #1
 800355c:	e7f9      	b.n	8003552 <memset+0x4>
	...

08003560 <_localeconv_r>:
 8003560:	4800      	ldr	r0, [pc, #0]	@ (8003564 <_localeconv_r+0x4>)
 8003562:	4770      	bx	lr
 8003564:	20000160 	.word	0x20000160

08003568 <_close_r>:
 8003568:	b538      	push	{r3, r4, r5, lr}
 800356a:	4d06      	ldr	r5, [pc, #24]	@ (8003584 <_close_r+0x1c>)
 800356c:	2300      	movs	r3, #0
 800356e:	4604      	mov	r4, r0
 8003570:	4608      	mov	r0, r1
 8003572:	602b      	str	r3, [r5, #0]
 8003574:	f7fd ff75 	bl	8001462 <_close>
 8003578:	1c43      	adds	r3, r0, #1
 800357a:	d102      	bne.n	8003582 <_close_r+0x1a>
 800357c:	682b      	ldr	r3, [r5, #0]
 800357e:	b103      	cbz	r3, 8003582 <_close_r+0x1a>
 8003580:	6023      	str	r3, [r4, #0]
 8003582:	bd38      	pop	{r3, r4, r5, pc}
 8003584:	200003ac 	.word	0x200003ac

08003588 <_lseek_r>:
 8003588:	b538      	push	{r3, r4, r5, lr}
 800358a:	4d07      	ldr	r5, [pc, #28]	@ (80035a8 <_lseek_r+0x20>)
 800358c:	4604      	mov	r4, r0
 800358e:	4608      	mov	r0, r1
 8003590:	4611      	mov	r1, r2
 8003592:	2200      	movs	r2, #0
 8003594:	602a      	str	r2, [r5, #0]
 8003596:	461a      	mov	r2, r3
 8003598:	f7fd ff87 	bl	80014aa <_lseek>
 800359c:	1c43      	adds	r3, r0, #1
 800359e:	d102      	bne.n	80035a6 <_lseek_r+0x1e>
 80035a0:	682b      	ldr	r3, [r5, #0]
 80035a2:	b103      	cbz	r3, 80035a6 <_lseek_r+0x1e>
 80035a4:	6023      	str	r3, [r4, #0]
 80035a6:	bd38      	pop	{r3, r4, r5, pc}
 80035a8:	200003ac 	.word	0x200003ac

080035ac <_read_r>:
 80035ac:	b538      	push	{r3, r4, r5, lr}
 80035ae:	4d07      	ldr	r5, [pc, #28]	@ (80035cc <_read_r+0x20>)
 80035b0:	4604      	mov	r4, r0
 80035b2:	4608      	mov	r0, r1
 80035b4:	4611      	mov	r1, r2
 80035b6:	2200      	movs	r2, #0
 80035b8:	602a      	str	r2, [r5, #0]
 80035ba:	461a      	mov	r2, r3
 80035bc:	f7fd ff18 	bl	80013f0 <_read>
 80035c0:	1c43      	adds	r3, r0, #1
 80035c2:	d102      	bne.n	80035ca <_read_r+0x1e>
 80035c4:	682b      	ldr	r3, [r5, #0]
 80035c6:	b103      	cbz	r3, 80035ca <_read_r+0x1e>
 80035c8:	6023      	str	r3, [r4, #0]
 80035ca:	bd38      	pop	{r3, r4, r5, pc}
 80035cc:	200003ac 	.word	0x200003ac

080035d0 <_write_r>:
 80035d0:	b538      	push	{r3, r4, r5, lr}
 80035d2:	4d07      	ldr	r5, [pc, #28]	@ (80035f0 <_write_r+0x20>)
 80035d4:	4604      	mov	r4, r0
 80035d6:	4608      	mov	r0, r1
 80035d8:	4611      	mov	r1, r2
 80035da:	2200      	movs	r2, #0
 80035dc:	602a      	str	r2, [r5, #0]
 80035de:	461a      	mov	r2, r3
 80035e0:	f7fd ff23 	bl	800142a <_write>
 80035e4:	1c43      	adds	r3, r0, #1
 80035e6:	d102      	bne.n	80035ee <_write_r+0x1e>
 80035e8:	682b      	ldr	r3, [r5, #0]
 80035ea:	b103      	cbz	r3, 80035ee <_write_r+0x1e>
 80035ec:	6023      	str	r3, [r4, #0]
 80035ee:	bd38      	pop	{r3, r4, r5, pc}
 80035f0:	200003ac 	.word	0x200003ac

080035f4 <__errno>:
 80035f4:	4b01      	ldr	r3, [pc, #4]	@ (80035fc <__errno+0x8>)
 80035f6:	6818      	ldr	r0, [r3, #0]
 80035f8:	4770      	bx	lr
 80035fa:	bf00      	nop
 80035fc:	20000020 	.word	0x20000020

08003600 <__libc_init_array>:
 8003600:	b570      	push	{r4, r5, r6, lr}
 8003602:	4d0d      	ldr	r5, [pc, #52]	@ (8003638 <__libc_init_array+0x38>)
 8003604:	4c0d      	ldr	r4, [pc, #52]	@ (800363c <__libc_init_array+0x3c>)
 8003606:	1b64      	subs	r4, r4, r5
 8003608:	10a4      	asrs	r4, r4, #2
 800360a:	2600      	movs	r6, #0
 800360c:	42a6      	cmp	r6, r4
 800360e:	d109      	bne.n	8003624 <__libc_init_array+0x24>
 8003610:	4d0b      	ldr	r5, [pc, #44]	@ (8003640 <__libc_init_array+0x40>)
 8003612:	4c0c      	ldr	r4, [pc, #48]	@ (8003644 <__libc_init_array+0x44>)
 8003614:	f003 fd7a 	bl	800710c <_init>
 8003618:	1b64      	subs	r4, r4, r5
 800361a:	10a4      	asrs	r4, r4, #2
 800361c:	2600      	movs	r6, #0
 800361e:	42a6      	cmp	r6, r4
 8003620:	d105      	bne.n	800362e <__libc_init_array+0x2e>
 8003622:	bd70      	pop	{r4, r5, r6, pc}
 8003624:	f855 3b04 	ldr.w	r3, [r5], #4
 8003628:	4798      	blx	r3
 800362a:	3601      	adds	r6, #1
 800362c:	e7ee      	b.n	800360c <__libc_init_array+0xc>
 800362e:	f855 3b04 	ldr.w	r3, [r5], #4
 8003632:	4798      	blx	r3
 8003634:	3601      	adds	r6, #1
 8003636:	e7f2      	b.n	800361e <__libc_init_array+0x1e>
 8003638:	0800759c 	.word	0x0800759c
 800363c:	0800759c 	.word	0x0800759c
 8003640:	0800759c 	.word	0x0800759c
 8003644:	080075a0 	.word	0x080075a0

08003648 <__retarget_lock_init_recursive>:
 8003648:	4770      	bx	lr

0800364a <__retarget_lock_acquire_recursive>:
 800364a:	4770      	bx	lr

0800364c <__retarget_lock_release_recursive>:
 800364c:	4770      	bx	lr
	...

08003650 <nanf>:
 8003650:	4800      	ldr	r0, [pc, #0]	@ (8003654 <nanf+0x4>)
 8003652:	4770      	bx	lr
 8003654:	7fc00000 	.word	0x7fc00000

08003658 <quorem>:
 8003658:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800365c:	6903      	ldr	r3, [r0, #16]
 800365e:	690c      	ldr	r4, [r1, #16]
 8003660:	42a3      	cmp	r3, r4
 8003662:	4607      	mov	r7, r0
 8003664:	db7e      	blt.n	8003764 <quorem+0x10c>
 8003666:	3c01      	subs	r4, #1
 8003668:	f101 0814 	add.w	r8, r1, #20
 800366c:	00a3      	lsls	r3, r4, #2
 800366e:	f100 0514 	add.w	r5, r0, #20
 8003672:	9300      	str	r3, [sp, #0]
 8003674:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003678:	9301      	str	r3, [sp, #4]
 800367a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800367e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003682:	3301      	adds	r3, #1
 8003684:	429a      	cmp	r2, r3
 8003686:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800368a:	fbb2 f6f3 	udiv	r6, r2, r3
 800368e:	d32e      	bcc.n	80036ee <quorem+0x96>
 8003690:	f04f 0a00 	mov.w	sl, #0
 8003694:	46c4      	mov	ip, r8
 8003696:	46ae      	mov	lr, r5
 8003698:	46d3      	mov	fp, sl
 800369a:	f85c 3b04 	ldr.w	r3, [ip], #4
 800369e:	b298      	uxth	r0, r3
 80036a0:	fb06 a000 	mla	r0, r6, r0, sl
 80036a4:	0c02      	lsrs	r2, r0, #16
 80036a6:	0c1b      	lsrs	r3, r3, #16
 80036a8:	fb06 2303 	mla	r3, r6, r3, r2
 80036ac:	f8de 2000 	ldr.w	r2, [lr]
 80036b0:	b280      	uxth	r0, r0
 80036b2:	b292      	uxth	r2, r2
 80036b4:	1a12      	subs	r2, r2, r0
 80036b6:	445a      	add	r2, fp
 80036b8:	f8de 0000 	ldr.w	r0, [lr]
 80036bc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80036c0:	b29b      	uxth	r3, r3
 80036c2:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80036c6:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80036ca:	b292      	uxth	r2, r2
 80036cc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80036d0:	45e1      	cmp	r9, ip
 80036d2:	f84e 2b04 	str.w	r2, [lr], #4
 80036d6:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80036da:	d2de      	bcs.n	800369a <quorem+0x42>
 80036dc:	9b00      	ldr	r3, [sp, #0]
 80036de:	58eb      	ldr	r3, [r5, r3]
 80036e0:	b92b      	cbnz	r3, 80036ee <quorem+0x96>
 80036e2:	9b01      	ldr	r3, [sp, #4]
 80036e4:	3b04      	subs	r3, #4
 80036e6:	429d      	cmp	r5, r3
 80036e8:	461a      	mov	r2, r3
 80036ea:	d32f      	bcc.n	800374c <quorem+0xf4>
 80036ec:	613c      	str	r4, [r7, #16]
 80036ee:	4638      	mov	r0, r7
 80036f0:	f001 f9c6 	bl	8004a80 <__mcmp>
 80036f4:	2800      	cmp	r0, #0
 80036f6:	db25      	blt.n	8003744 <quorem+0xec>
 80036f8:	4629      	mov	r1, r5
 80036fa:	2000      	movs	r0, #0
 80036fc:	f858 2b04 	ldr.w	r2, [r8], #4
 8003700:	f8d1 c000 	ldr.w	ip, [r1]
 8003704:	fa1f fe82 	uxth.w	lr, r2
 8003708:	fa1f f38c 	uxth.w	r3, ip
 800370c:	eba3 030e 	sub.w	r3, r3, lr
 8003710:	4403      	add	r3, r0
 8003712:	0c12      	lsrs	r2, r2, #16
 8003714:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8003718:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800371c:	b29b      	uxth	r3, r3
 800371e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003722:	45c1      	cmp	r9, r8
 8003724:	f841 3b04 	str.w	r3, [r1], #4
 8003728:	ea4f 4022 	mov.w	r0, r2, asr #16
 800372c:	d2e6      	bcs.n	80036fc <quorem+0xa4>
 800372e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003732:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003736:	b922      	cbnz	r2, 8003742 <quorem+0xea>
 8003738:	3b04      	subs	r3, #4
 800373a:	429d      	cmp	r5, r3
 800373c:	461a      	mov	r2, r3
 800373e:	d30b      	bcc.n	8003758 <quorem+0x100>
 8003740:	613c      	str	r4, [r7, #16]
 8003742:	3601      	adds	r6, #1
 8003744:	4630      	mov	r0, r6
 8003746:	b003      	add	sp, #12
 8003748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800374c:	6812      	ldr	r2, [r2, #0]
 800374e:	3b04      	subs	r3, #4
 8003750:	2a00      	cmp	r2, #0
 8003752:	d1cb      	bne.n	80036ec <quorem+0x94>
 8003754:	3c01      	subs	r4, #1
 8003756:	e7c6      	b.n	80036e6 <quorem+0x8e>
 8003758:	6812      	ldr	r2, [r2, #0]
 800375a:	3b04      	subs	r3, #4
 800375c:	2a00      	cmp	r2, #0
 800375e:	d1ef      	bne.n	8003740 <quorem+0xe8>
 8003760:	3c01      	subs	r4, #1
 8003762:	e7ea      	b.n	800373a <quorem+0xe2>
 8003764:	2000      	movs	r0, #0
 8003766:	e7ee      	b.n	8003746 <quorem+0xee>

08003768 <_dtoa_r>:
 8003768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800376c:	69c7      	ldr	r7, [r0, #28]
 800376e:	b097      	sub	sp, #92	@ 0x5c
 8003770:	4614      	mov	r4, r2
 8003772:	461d      	mov	r5, r3
 8003774:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8003778:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 800377a:	4681      	mov	r9, r0
 800377c:	b97f      	cbnz	r7, 800379e <_dtoa_r+0x36>
 800377e:	2010      	movs	r0, #16
 8003780:	f000 fe0c 	bl	800439c <malloc>
 8003784:	4602      	mov	r2, r0
 8003786:	f8c9 001c 	str.w	r0, [r9, #28]
 800378a:	b920      	cbnz	r0, 8003796 <_dtoa_r+0x2e>
 800378c:	4baa      	ldr	r3, [pc, #680]	@ (8003a38 <_dtoa_r+0x2d0>)
 800378e:	21ef      	movs	r1, #239	@ 0xef
 8003790:	48aa      	ldr	r0, [pc, #680]	@ (8003a3c <_dtoa_r+0x2d4>)
 8003792:	f002 fc23 	bl	8005fdc <__assert_func>
 8003796:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800379a:	6007      	str	r7, [r0, #0]
 800379c:	60c7      	str	r7, [r0, #12]
 800379e:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80037a2:	6819      	ldr	r1, [r3, #0]
 80037a4:	b159      	cbz	r1, 80037be <_dtoa_r+0x56>
 80037a6:	685a      	ldr	r2, [r3, #4]
 80037a8:	604a      	str	r2, [r1, #4]
 80037aa:	2301      	movs	r3, #1
 80037ac:	4093      	lsls	r3, r2
 80037ae:	608b      	str	r3, [r1, #8]
 80037b0:	4648      	mov	r0, r9
 80037b2:	f000 fee9 	bl	8004588 <_Bfree>
 80037b6:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80037ba:	2200      	movs	r2, #0
 80037bc:	601a      	str	r2, [r3, #0]
 80037be:	1e2b      	subs	r3, r5, #0
 80037c0:	bfb9      	ittee	lt
 80037c2:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80037c6:	9307      	strlt	r3, [sp, #28]
 80037c8:	2300      	movge	r3, #0
 80037ca:	6033      	strge	r3, [r6, #0]
 80037cc:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80037d0:	4b9b      	ldr	r3, [pc, #620]	@ (8003a40 <_dtoa_r+0x2d8>)
 80037d2:	bfbc      	itt	lt
 80037d4:	2201      	movlt	r2, #1
 80037d6:	6032      	strlt	r2, [r6, #0]
 80037d8:	ea33 0308 	bics.w	r3, r3, r8
 80037dc:	d112      	bne.n	8003804 <_dtoa_r+0x9c>
 80037de:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80037e0:	f242 730f 	movw	r3, #9999	@ 0x270f
 80037e4:	6013      	str	r3, [r2, #0]
 80037e6:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80037ea:	4323      	orrs	r3, r4
 80037ec:	f000 855b 	beq.w	80042a6 <_dtoa_r+0xb3e>
 80037f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80037f2:	f8df a250 	ldr.w	sl, [pc, #592]	@ 8003a44 <_dtoa_r+0x2dc>
 80037f6:	2b00      	cmp	r3, #0
 80037f8:	f000 855d 	beq.w	80042b6 <_dtoa_r+0xb4e>
 80037fc:	f10a 0303 	add.w	r3, sl, #3
 8003800:	f000 bd57 	b.w	80042b2 <_dtoa_r+0xb4a>
 8003804:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003808:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800380c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003810:	2200      	movs	r2, #0
 8003812:	2300      	movs	r3, #0
 8003814:	f7fd f958 	bl	8000ac8 <__aeabi_dcmpeq>
 8003818:	4607      	mov	r7, r0
 800381a:	b158      	cbz	r0, 8003834 <_dtoa_r+0xcc>
 800381c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800381e:	2301      	movs	r3, #1
 8003820:	6013      	str	r3, [r2, #0]
 8003822:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003824:	b113      	cbz	r3, 800382c <_dtoa_r+0xc4>
 8003826:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003828:	4b87      	ldr	r3, [pc, #540]	@ (8003a48 <_dtoa_r+0x2e0>)
 800382a:	6013      	str	r3, [r2, #0]
 800382c:	f8df a21c 	ldr.w	sl, [pc, #540]	@ 8003a4c <_dtoa_r+0x2e4>
 8003830:	f000 bd41 	b.w	80042b6 <_dtoa_r+0xb4e>
 8003834:	ab14      	add	r3, sp, #80	@ 0x50
 8003836:	9301      	str	r3, [sp, #4]
 8003838:	ab15      	add	r3, sp, #84	@ 0x54
 800383a:	9300      	str	r3, [sp, #0]
 800383c:	4648      	mov	r0, r9
 800383e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8003842:	f001 fa35 	bl	8004cb0 <__d2b>
 8003846:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800384a:	9003      	str	r0, [sp, #12]
 800384c:	2e00      	cmp	r6, #0
 800384e:	d077      	beq.n	8003940 <_dtoa_r+0x1d8>
 8003850:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003852:	9712      	str	r7, [sp, #72]	@ 0x48
 8003854:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003858:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800385c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8003860:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8003864:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8003868:	4619      	mov	r1, r3
 800386a:	2200      	movs	r2, #0
 800386c:	4b78      	ldr	r3, [pc, #480]	@ (8003a50 <_dtoa_r+0x2e8>)
 800386e:	f7fc fd0b 	bl	8000288 <__aeabi_dsub>
 8003872:	a36b      	add	r3, pc, #428	@ (adr r3, 8003a20 <_dtoa_r+0x2b8>)
 8003874:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003878:	f7fc febe 	bl	80005f8 <__aeabi_dmul>
 800387c:	a36a      	add	r3, pc, #424	@ (adr r3, 8003a28 <_dtoa_r+0x2c0>)
 800387e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003882:	f7fc fd03 	bl	800028c <__adddf3>
 8003886:	4604      	mov	r4, r0
 8003888:	4630      	mov	r0, r6
 800388a:	460d      	mov	r5, r1
 800388c:	f7fc fe4a 	bl	8000524 <__aeabi_i2d>
 8003890:	a367      	add	r3, pc, #412	@ (adr r3, 8003a30 <_dtoa_r+0x2c8>)
 8003892:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003896:	f7fc feaf 	bl	80005f8 <__aeabi_dmul>
 800389a:	4602      	mov	r2, r0
 800389c:	460b      	mov	r3, r1
 800389e:	4620      	mov	r0, r4
 80038a0:	4629      	mov	r1, r5
 80038a2:	f7fc fcf3 	bl	800028c <__adddf3>
 80038a6:	4604      	mov	r4, r0
 80038a8:	460d      	mov	r5, r1
 80038aa:	f7fd f955 	bl	8000b58 <__aeabi_d2iz>
 80038ae:	2200      	movs	r2, #0
 80038b0:	4607      	mov	r7, r0
 80038b2:	2300      	movs	r3, #0
 80038b4:	4620      	mov	r0, r4
 80038b6:	4629      	mov	r1, r5
 80038b8:	f7fd f910 	bl	8000adc <__aeabi_dcmplt>
 80038bc:	b140      	cbz	r0, 80038d0 <_dtoa_r+0x168>
 80038be:	4638      	mov	r0, r7
 80038c0:	f7fc fe30 	bl	8000524 <__aeabi_i2d>
 80038c4:	4622      	mov	r2, r4
 80038c6:	462b      	mov	r3, r5
 80038c8:	f7fd f8fe 	bl	8000ac8 <__aeabi_dcmpeq>
 80038cc:	b900      	cbnz	r0, 80038d0 <_dtoa_r+0x168>
 80038ce:	3f01      	subs	r7, #1
 80038d0:	2f16      	cmp	r7, #22
 80038d2:	d853      	bhi.n	800397c <_dtoa_r+0x214>
 80038d4:	4b5f      	ldr	r3, [pc, #380]	@ (8003a54 <_dtoa_r+0x2ec>)
 80038d6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80038da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80038e2:	f7fd f8fb 	bl	8000adc <__aeabi_dcmplt>
 80038e6:	2800      	cmp	r0, #0
 80038e8:	d04a      	beq.n	8003980 <_dtoa_r+0x218>
 80038ea:	3f01      	subs	r7, #1
 80038ec:	2300      	movs	r3, #0
 80038ee:	930f      	str	r3, [sp, #60]	@ 0x3c
 80038f0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80038f2:	1b9b      	subs	r3, r3, r6
 80038f4:	1e5a      	subs	r2, r3, #1
 80038f6:	bf45      	ittet	mi
 80038f8:	f1c3 0301 	rsbmi	r3, r3, #1
 80038fc:	9304      	strmi	r3, [sp, #16]
 80038fe:	2300      	movpl	r3, #0
 8003900:	2300      	movmi	r3, #0
 8003902:	9209      	str	r2, [sp, #36]	@ 0x24
 8003904:	bf54      	ite	pl
 8003906:	9304      	strpl	r3, [sp, #16]
 8003908:	9309      	strmi	r3, [sp, #36]	@ 0x24
 800390a:	2f00      	cmp	r7, #0
 800390c:	db3a      	blt.n	8003984 <_dtoa_r+0x21c>
 800390e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003910:	970e      	str	r7, [sp, #56]	@ 0x38
 8003912:	443b      	add	r3, r7
 8003914:	9309      	str	r3, [sp, #36]	@ 0x24
 8003916:	2300      	movs	r3, #0
 8003918:	930a      	str	r3, [sp, #40]	@ 0x28
 800391a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800391c:	2b09      	cmp	r3, #9
 800391e:	d864      	bhi.n	80039ea <_dtoa_r+0x282>
 8003920:	2b05      	cmp	r3, #5
 8003922:	bfc4      	itt	gt
 8003924:	3b04      	subgt	r3, #4
 8003926:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8003928:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800392a:	f1a3 0302 	sub.w	r3, r3, #2
 800392e:	bfcc      	ite	gt
 8003930:	2400      	movgt	r4, #0
 8003932:	2401      	movle	r4, #1
 8003934:	2b03      	cmp	r3, #3
 8003936:	d864      	bhi.n	8003a02 <_dtoa_r+0x29a>
 8003938:	e8df f003 	tbb	[pc, r3]
 800393c:	2c385553 	.word	0x2c385553
 8003940:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8003944:	441e      	add	r6, r3
 8003946:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800394a:	2b20      	cmp	r3, #32
 800394c:	bfc1      	itttt	gt
 800394e:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8003952:	fa08 f803 	lslgt.w	r8, r8, r3
 8003956:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800395a:	fa24 f303 	lsrgt.w	r3, r4, r3
 800395e:	bfd6      	itet	le
 8003960:	f1c3 0320 	rsble	r3, r3, #32
 8003964:	ea48 0003 	orrgt.w	r0, r8, r3
 8003968:	fa04 f003 	lslle.w	r0, r4, r3
 800396c:	f7fc fdca 	bl	8000504 <__aeabi_ui2d>
 8003970:	2201      	movs	r2, #1
 8003972:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8003976:	3e01      	subs	r6, #1
 8003978:	9212      	str	r2, [sp, #72]	@ 0x48
 800397a:	e775      	b.n	8003868 <_dtoa_r+0x100>
 800397c:	2301      	movs	r3, #1
 800397e:	e7b6      	b.n	80038ee <_dtoa_r+0x186>
 8003980:	900f      	str	r0, [sp, #60]	@ 0x3c
 8003982:	e7b5      	b.n	80038f0 <_dtoa_r+0x188>
 8003984:	9b04      	ldr	r3, [sp, #16]
 8003986:	1bdb      	subs	r3, r3, r7
 8003988:	9304      	str	r3, [sp, #16]
 800398a:	427b      	negs	r3, r7
 800398c:	930a      	str	r3, [sp, #40]	@ 0x28
 800398e:	2300      	movs	r3, #0
 8003990:	930e      	str	r3, [sp, #56]	@ 0x38
 8003992:	e7c2      	b.n	800391a <_dtoa_r+0x1b2>
 8003994:	2301      	movs	r3, #1
 8003996:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003998:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800399a:	eb07 0b03 	add.w	fp, r7, r3
 800399e:	f10b 0301 	add.w	r3, fp, #1
 80039a2:	2b01      	cmp	r3, #1
 80039a4:	9308      	str	r3, [sp, #32]
 80039a6:	bfb8      	it	lt
 80039a8:	2301      	movlt	r3, #1
 80039aa:	e006      	b.n	80039ba <_dtoa_r+0x252>
 80039ac:	2301      	movs	r3, #1
 80039ae:	930b      	str	r3, [sp, #44]	@ 0x2c
 80039b0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	dd28      	ble.n	8003a08 <_dtoa_r+0x2a0>
 80039b6:	469b      	mov	fp, r3
 80039b8:	9308      	str	r3, [sp, #32]
 80039ba:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80039be:	2100      	movs	r1, #0
 80039c0:	2204      	movs	r2, #4
 80039c2:	f102 0514 	add.w	r5, r2, #20
 80039c6:	429d      	cmp	r5, r3
 80039c8:	d926      	bls.n	8003a18 <_dtoa_r+0x2b0>
 80039ca:	6041      	str	r1, [r0, #4]
 80039cc:	4648      	mov	r0, r9
 80039ce:	f000 fd9b 	bl	8004508 <_Balloc>
 80039d2:	4682      	mov	sl, r0
 80039d4:	2800      	cmp	r0, #0
 80039d6:	d141      	bne.n	8003a5c <_dtoa_r+0x2f4>
 80039d8:	4b1f      	ldr	r3, [pc, #124]	@ (8003a58 <_dtoa_r+0x2f0>)
 80039da:	4602      	mov	r2, r0
 80039dc:	f240 11af 	movw	r1, #431	@ 0x1af
 80039e0:	e6d6      	b.n	8003790 <_dtoa_r+0x28>
 80039e2:	2300      	movs	r3, #0
 80039e4:	e7e3      	b.n	80039ae <_dtoa_r+0x246>
 80039e6:	2300      	movs	r3, #0
 80039e8:	e7d5      	b.n	8003996 <_dtoa_r+0x22e>
 80039ea:	2401      	movs	r4, #1
 80039ec:	2300      	movs	r3, #0
 80039ee:	9320      	str	r3, [sp, #128]	@ 0x80
 80039f0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80039f2:	f04f 3bff 	mov.w	fp, #4294967295
 80039f6:	2200      	movs	r2, #0
 80039f8:	f8cd b020 	str.w	fp, [sp, #32]
 80039fc:	2312      	movs	r3, #18
 80039fe:	9221      	str	r2, [sp, #132]	@ 0x84
 8003a00:	e7db      	b.n	80039ba <_dtoa_r+0x252>
 8003a02:	2301      	movs	r3, #1
 8003a04:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003a06:	e7f4      	b.n	80039f2 <_dtoa_r+0x28a>
 8003a08:	f04f 0b01 	mov.w	fp, #1
 8003a0c:	f8cd b020 	str.w	fp, [sp, #32]
 8003a10:	465b      	mov	r3, fp
 8003a12:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
 8003a16:	e7d0      	b.n	80039ba <_dtoa_r+0x252>
 8003a18:	3101      	adds	r1, #1
 8003a1a:	0052      	lsls	r2, r2, #1
 8003a1c:	e7d1      	b.n	80039c2 <_dtoa_r+0x25a>
 8003a1e:	bf00      	nop
 8003a20:	636f4361 	.word	0x636f4361
 8003a24:	3fd287a7 	.word	0x3fd287a7
 8003a28:	8b60c8b3 	.word	0x8b60c8b3
 8003a2c:	3fc68a28 	.word	0x3fc68a28
 8003a30:	509f79fb 	.word	0x509f79fb
 8003a34:	3fd34413 	.word	0x3fd34413
 8003a38:	0800716e 	.word	0x0800716e
 8003a3c:	08007185 	.word	0x08007185
 8003a40:	7ff00000 	.word	0x7ff00000
 8003a44:	0800716a 	.word	0x0800716a
 8003a48:	08007139 	.word	0x08007139
 8003a4c:	08007138 	.word	0x08007138
 8003a50:	3ff80000 	.word	0x3ff80000
 8003a54:	08007338 	.word	0x08007338
 8003a58:	080071dd 	.word	0x080071dd
 8003a5c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003a60:	6018      	str	r0, [r3, #0]
 8003a62:	9b08      	ldr	r3, [sp, #32]
 8003a64:	2b0e      	cmp	r3, #14
 8003a66:	f200 80a1 	bhi.w	8003bac <_dtoa_r+0x444>
 8003a6a:	2c00      	cmp	r4, #0
 8003a6c:	f000 809e 	beq.w	8003bac <_dtoa_r+0x444>
 8003a70:	2f00      	cmp	r7, #0
 8003a72:	dd33      	ble.n	8003adc <_dtoa_r+0x374>
 8003a74:	4b9c      	ldr	r3, [pc, #624]	@ (8003ce8 <_dtoa_r+0x580>)
 8003a76:	f007 020f 	and.w	r2, r7, #15
 8003a7a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003a7e:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003a82:	05f8      	lsls	r0, r7, #23
 8003a84:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
 8003a88:	ea4f 1427 	mov.w	r4, r7, asr #4
 8003a8c:	d516      	bpl.n	8003abc <_dtoa_r+0x354>
 8003a8e:	4b97      	ldr	r3, [pc, #604]	@ (8003cec <_dtoa_r+0x584>)
 8003a90:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003a94:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003a98:	f7fc fed8 	bl	800084c <__aeabi_ddiv>
 8003a9c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003aa0:	f004 040f 	and.w	r4, r4, #15
 8003aa4:	2603      	movs	r6, #3
 8003aa6:	4d91      	ldr	r5, [pc, #580]	@ (8003cec <_dtoa_r+0x584>)
 8003aa8:	b954      	cbnz	r4, 8003ac0 <_dtoa_r+0x358>
 8003aaa:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003aae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003ab2:	f7fc fecb 	bl	800084c <__aeabi_ddiv>
 8003ab6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003aba:	e028      	b.n	8003b0e <_dtoa_r+0x3a6>
 8003abc:	2602      	movs	r6, #2
 8003abe:	e7f2      	b.n	8003aa6 <_dtoa_r+0x33e>
 8003ac0:	07e1      	lsls	r1, r4, #31
 8003ac2:	d508      	bpl.n	8003ad6 <_dtoa_r+0x36e>
 8003ac4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003ac8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003acc:	f7fc fd94 	bl	80005f8 <__aeabi_dmul>
 8003ad0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003ad4:	3601      	adds	r6, #1
 8003ad6:	1064      	asrs	r4, r4, #1
 8003ad8:	3508      	adds	r5, #8
 8003ada:	e7e5      	b.n	8003aa8 <_dtoa_r+0x340>
 8003adc:	f000 80af 	beq.w	8003c3e <_dtoa_r+0x4d6>
 8003ae0:	427c      	negs	r4, r7
 8003ae2:	4b81      	ldr	r3, [pc, #516]	@ (8003ce8 <_dtoa_r+0x580>)
 8003ae4:	4d81      	ldr	r5, [pc, #516]	@ (8003cec <_dtoa_r+0x584>)
 8003ae6:	f004 020f 	and.w	r2, r4, #15
 8003aea:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003aee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003af2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003af6:	f7fc fd7f 	bl	80005f8 <__aeabi_dmul>
 8003afa:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003afe:	1124      	asrs	r4, r4, #4
 8003b00:	2300      	movs	r3, #0
 8003b02:	2602      	movs	r6, #2
 8003b04:	2c00      	cmp	r4, #0
 8003b06:	f040 808f 	bne.w	8003c28 <_dtoa_r+0x4c0>
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	d1d3      	bne.n	8003ab6 <_dtoa_r+0x34e>
 8003b0e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003b10:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8003b14:	2b00      	cmp	r3, #0
 8003b16:	f000 8094 	beq.w	8003c42 <_dtoa_r+0x4da>
 8003b1a:	4b75      	ldr	r3, [pc, #468]	@ (8003cf0 <_dtoa_r+0x588>)
 8003b1c:	2200      	movs	r2, #0
 8003b1e:	4620      	mov	r0, r4
 8003b20:	4629      	mov	r1, r5
 8003b22:	f7fc ffdb 	bl	8000adc <__aeabi_dcmplt>
 8003b26:	2800      	cmp	r0, #0
 8003b28:	f000 808b 	beq.w	8003c42 <_dtoa_r+0x4da>
 8003b2c:	9b08      	ldr	r3, [sp, #32]
 8003b2e:	2b00      	cmp	r3, #0
 8003b30:	f000 8087 	beq.w	8003c42 <_dtoa_r+0x4da>
 8003b34:	f1bb 0f00 	cmp.w	fp, #0
 8003b38:	dd34      	ble.n	8003ba4 <_dtoa_r+0x43c>
 8003b3a:	4620      	mov	r0, r4
 8003b3c:	4b6d      	ldr	r3, [pc, #436]	@ (8003cf4 <_dtoa_r+0x58c>)
 8003b3e:	2200      	movs	r2, #0
 8003b40:	4629      	mov	r1, r5
 8003b42:	f7fc fd59 	bl	80005f8 <__aeabi_dmul>
 8003b46:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003b4a:	f107 38ff 	add.w	r8, r7, #4294967295
 8003b4e:	3601      	adds	r6, #1
 8003b50:	465c      	mov	r4, fp
 8003b52:	4630      	mov	r0, r6
 8003b54:	f7fc fce6 	bl	8000524 <__aeabi_i2d>
 8003b58:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003b5c:	f7fc fd4c 	bl	80005f8 <__aeabi_dmul>
 8003b60:	4b65      	ldr	r3, [pc, #404]	@ (8003cf8 <_dtoa_r+0x590>)
 8003b62:	2200      	movs	r2, #0
 8003b64:	f7fc fb92 	bl	800028c <__adddf3>
 8003b68:	4605      	mov	r5, r0
 8003b6a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8003b6e:	2c00      	cmp	r4, #0
 8003b70:	d16a      	bne.n	8003c48 <_dtoa_r+0x4e0>
 8003b72:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003b76:	4b61      	ldr	r3, [pc, #388]	@ (8003cfc <_dtoa_r+0x594>)
 8003b78:	2200      	movs	r2, #0
 8003b7a:	f7fc fb85 	bl	8000288 <__aeabi_dsub>
 8003b7e:	4602      	mov	r2, r0
 8003b80:	460b      	mov	r3, r1
 8003b82:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003b86:	462a      	mov	r2, r5
 8003b88:	4633      	mov	r3, r6
 8003b8a:	f7fc ffc5 	bl	8000b18 <__aeabi_dcmpgt>
 8003b8e:	2800      	cmp	r0, #0
 8003b90:	f040 8298 	bne.w	80040c4 <_dtoa_r+0x95c>
 8003b94:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003b98:	462a      	mov	r2, r5
 8003b9a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8003b9e:	f7fc ff9d 	bl	8000adc <__aeabi_dcmplt>
 8003ba2:	bb38      	cbnz	r0, 8003bf4 <_dtoa_r+0x48c>
 8003ba4:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8003ba8:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8003bac:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	f2c0 8157 	blt.w	8003e62 <_dtoa_r+0x6fa>
 8003bb4:	2f0e      	cmp	r7, #14
 8003bb6:	f300 8154 	bgt.w	8003e62 <_dtoa_r+0x6fa>
 8003bba:	4b4b      	ldr	r3, [pc, #300]	@ (8003ce8 <_dtoa_r+0x580>)
 8003bbc:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003bc0:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003bc4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003bc8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	f280 80e5 	bge.w	8003d9a <_dtoa_r+0x632>
 8003bd0:	9b08      	ldr	r3, [sp, #32]
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	f300 80e1 	bgt.w	8003d9a <_dtoa_r+0x632>
 8003bd8:	d10c      	bne.n	8003bf4 <_dtoa_r+0x48c>
 8003bda:	4b48      	ldr	r3, [pc, #288]	@ (8003cfc <_dtoa_r+0x594>)
 8003bdc:	2200      	movs	r2, #0
 8003bde:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003be2:	f7fc fd09 	bl	80005f8 <__aeabi_dmul>
 8003be6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003bea:	f7fc ff8b 	bl	8000b04 <__aeabi_dcmpge>
 8003bee:	2800      	cmp	r0, #0
 8003bf0:	f000 8266 	beq.w	80040c0 <_dtoa_r+0x958>
 8003bf4:	2400      	movs	r4, #0
 8003bf6:	4625      	mov	r5, r4
 8003bf8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003bfa:	4656      	mov	r6, sl
 8003bfc:	ea6f 0803 	mvn.w	r8, r3
 8003c00:	2700      	movs	r7, #0
 8003c02:	4621      	mov	r1, r4
 8003c04:	4648      	mov	r0, r9
 8003c06:	f000 fcbf 	bl	8004588 <_Bfree>
 8003c0a:	2d00      	cmp	r5, #0
 8003c0c:	f000 80bd 	beq.w	8003d8a <_dtoa_r+0x622>
 8003c10:	b12f      	cbz	r7, 8003c1e <_dtoa_r+0x4b6>
 8003c12:	42af      	cmp	r7, r5
 8003c14:	d003      	beq.n	8003c1e <_dtoa_r+0x4b6>
 8003c16:	4639      	mov	r1, r7
 8003c18:	4648      	mov	r0, r9
 8003c1a:	f000 fcb5 	bl	8004588 <_Bfree>
 8003c1e:	4629      	mov	r1, r5
 8003c20:	4648      	mov	r0, r9
 8003c22:	f000 fcb1 	bl	8004588 <_Bfree>
 8003c26:	e0b0      	b.n	8003d8a <_dtoa_r+0x622>
 8003c28:	07e2      	lsls	r2, r4, #31
 8003c2a:	d505      	bpl.n	8003c38 <_dtoa_r+0x4d0>
 8003c2c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003c30:	f7fc fce2 	bl	80005f8 <__aeabi_dmul>
 8003c34:	3601      	adds	r6, #1
 8003c36:	2301      	movs	r3, #1
 8003c38:	1064      	asrs	r4, r4, #1
 8003c3a:	3508      	adds	r5, #8
 8003c3c:	e762      	b.n	8003b04 <_dtoa_r+0x39c>
 8003c3e:	2602      	movs	r6, #2
 8003c40:	e765      	b.n	8003b0e <_dtoa_r+0x3a6>
 8003c42:	9c08      	ldr	r4, [sp, #32]
 8003c44:	46b8      	mov	r8, r7
 8003c46:	e784      	b.n	8003b52 <_dtoa_r+0x3ea>
 8003c48:	4b27      	ldr	r3, [pc, #156]	@ (8003ce8 <_dtoa_r+0x580>)
 8003c4a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003c4c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003c50:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003c54:	4454      	add	r4, sl
 8003c56:	2900      	cmp	r1, #0
 8003c58:	d054      	beq.n	8003d04 <_dtoa_r+0x59c>
 8003c5a:	4929      	ldr	r1, [pc, #164]	@ (8003d00 <_dtoa_r+0x598>)
 8003c5c:	2000      	movs	r0, #0
 8003c5e:	f7fc fdf5 	bl	800084c <__aeabi_ddiv>
 8003c62:	4633      	mov	r3, r6
 8003c64:	462a      	mov	r2, r5
 8003c66:	f7fc fb0f 	bl	8000288 <__aeabi_dsub>
 8003c6a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003c6e:	4656      	mov	r6, sl
 8003c70:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003c74:	f7fc ff70 	bl	8000b58 <__aeabi_d2iz>
 8003c78:	4605      	mov	r5, r0
 8003c7a:	f7fc fc53 	bl	8000524 <__aeabi_i2d>
 8003c7e:	4602      	mov	r2, r0
 8003c80:	460b      	mov	r3, r1
 8003c82:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003c86:	f7fc faff 	bl	8000288 <__aeabi_dsub>
 8003c8a:	3530      	adds	r5, #48	@ 0x30
 8003c8c:	4602      	mov	r2, r0
 8003c8e:	460b      	mov	r3, r1
 8003c90:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003c94:	f806 5b01 	strb.w	r5, [r6], #1
 8003c98:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003c9c:	f7fc ff1e 	bl	8000adc <__aeabi_dcmplt>
 8003ca0:	2800      	cmp	r0, #0
 8003ca2:	d172      	bne.n	8003d8a <_dtoa_r+0x622>
 8003ca4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003ca8:	4911      	ldr	r1, [pc, #68]	@ (8003cf0 <_dtoa_r+0x588>)
 8003caa:	2000      	movs	r0, #0
 8003cac:	f7fc faec 	bl	8000288 <__aeabi_dsub>
 8003cb0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003cb4:	f7fc ff12 	bl	8000adc <__aeabi_dcmplt>
 8003cb8:	2800      	cmp	r0, #0
 8003cba:	f040 80b4 	bne.w	8003e26 <_dtoa_r+0x6be>
 8003cbe:	42a6      	cmp	r6, r4
 8003cc0:	f43f af70 	beq.w	8003ba4 <_dtoa_r+0x43c>
 8003cc4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003cc8:	4b0a      	ldr	r3, [pc, #40]	@ (8003cf4 <_dtoa_r+0x58c>)
 8003cca:	2200      	movs	r2, #0
 8003ccc:	f7fc fc94 	bl	80005f8 <__aeabi_dmul>
 8003cd0:	4b08      	ldr	r3, [pc, #32]	@ (8003cf4 <_dtoa_r+0x58c>)
 8003cd2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003cdc:	f7fc fc8c 	bl	80005f8 <__aeabi_dmul>
 8003ce0:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003ce4:	e7c4      	b.n	8003c70 <_dtoa_r+0x508>
 8003ce6:	bf00      	nop
 8003ce8:	08007338 	.word	0x08007338
 8003cec:	08007310 	.word	0x08007310
 8003cf0:	3ff00000 	.word	0x3ff00000
 8003cf4:	40240000 	.word	0x40240000
 8003cf8:	401c0000 	.word	0x401c0000
 8003cfc:	40140000 	.word	0x40140000
 8003d00:	3fe00000 	.word	0x3fe00000
 8003d04:	4631      	mov	r1, r6
 8003d06:	4628      	mov	r0, r5
 8003d08:	f7fc fc76 	bl	80005f8 <__aeabi_dmul>
 8003d0c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003d10:	9413      	str	r4, [sp, #76]	@ 0x4c
 8003d12:	4656      	mov	r6, sl
 8003d14:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003d18:	f7fc ff1e 	bl	8000b58 <__aeabi_d2iz>
 8003d1c:	4605      	mov	r5, r0
 8003d1e:	f7fc fc01 	bl	8000524 <__aeabi_i2d>
 8003d22:	4602      	mov	r2, r0
 8003d24:	460b      	mov	r3, r1
 8003d26:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003d2a:	f7fc faad 	bl	8000288 <__aeabi_dsub>
 8003d2e:	3530      	adds	r5, #48	@ 0x30
 8003d30:	f806 5b01 	strb.w	r5, [r6], #1
 8003d34:	4602      	mov	r2, r0
 8003d36:	460b      	mov	r3, r1
 8003d38:	42a6      	cmp	r6, r4
 8003d3a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003d3e:	f04f 0200 	mov.w	r2, #0
 8003d42:	d124      	bne.n	8003d8e <_dtoa_r+0x626>
 8003d44:	4baf      	ldr	r3, [pc, #700]	@ (8004004 <_dtoa_r+0x89c>)
 8003d46:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003d4a:	f7fc fa9f 	bl	800028c <__adddf3>
 8003d4e:	4602      	mov	r2, r0
 8003d50:	460b      	mov	r3, r1
 8003d52:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003d56:	f7fc fedf 	bl	8000b18 <__aeabi_dcmpgt>
 8003d5a:	2800      	cmp	r0, #0
 8003d5c:	d163      	bne.n	8003e26 <_dtoa_r+0x6be>
 8003d5e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003d62:	49a8      	ldr	r1, [pc, #672]	@ (8004004 <_dtoa_r+0x89c>)
 8003d64:	2000      	movs	r0, #0
 8003d66:	f7fc fa8f 	bl	8000288 <__aeabi_dsub>
 8003d6a:	4602      	mov	r2, r0
 8003d6c:	460b      	mov	r3, r1
 8003d6e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003d72:	f7fc feb3 	bl	8000adc <__aeabi_dcmplt>
 8003d76:	2800      	cmp	r0, #0
 8003d78:	f43f af14 	beq.w	8003ba4 <_dtoa_r+0x43c>
 8003d7c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8003d7e:	1e73      	subs	r3, r6, #1
 8003d80:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003d82:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003d86:	2b30      	cmp	r3, #48	@ 0x30
 8003d88:	d0f8      	beq.n	8003d7c <_dtoa_r+0x614>
 8003d8a:	4647      	mov	r7, r8
 8003d8c:	e03b      	b.n	8003e06 <_dtoa_r+0x69e>
 8003d8e:	4b9e      	ldr	r3, [pc, #632]	@ (8004008 <_dtoa_r+0x8a0>)
 8003d90:	f7fc fc32 	bl	80005f8 <__aeabi_dmul>
 8003d94:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003d98:	e7bc      	b.n	8003d14 <_dtoa_r+0x5ac>
 8003d9a:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8003d9e:	4656      	mov	r6, sl
 8003da0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003da4:	4620      	mov	r0, r4
 8003da6:	4629      	mov	r1, r5
 8003da8:	f7fc fd50 	bl	800084c <__aeabi_ddiv>
 8003dac:	f7fc fed4 	bl	8000b58 <__aeabi_d2iz>
 8003db0:	4680      	mov	r8, r0
 8003db2:	f7fc fbb7 	bl	8000524 <__aeabi_i2d>
 8003db6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003dba:	f7fc fc1d 	bl	80005f8 <__aeabi_dmul>
 8003dbe:	4602      	mov	r2, r0
 8003dc0:	460b      	mov	r3, r1
 8003dc2:	4620      	mov	r0, r4
 8003dc4:	4629      	mov	r1, r5
 8003dc6:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8003dca:	f7fc fa5d 	bl	8000288 <__aeabi_dsub>
 8003dce:	f806 4b01 	strb.w	r4, [r6], #1
 8003dd2:	9d08      	ldr	r5, [sp, #32]
 8003dd4:	eba6 040a 	sub.w	r4, r6, sl
 8003dd8:	42a5      	cmp	r5, r4
 8003dda:	4602      	mov	r2, r0
 8003ddc:	460b      	mov	r3, r1
 8003dde:	d133      	bne.n	8003e48 <_dtoa_r+0x6e0>
 8003de0:	f7fc fa54 	bl	800028c <__adddf3>
 8003de4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003de8:	4604      	mov	r4, r0
 8003dea:	460d      	mov	r5, r1
 8003dec:	f7fc fe94 	bl	8000b18 <__aeabi_dcmpgt>
 8003df0:	b9c0      	cbnz	r0, 8003e24 <_dtoa_r+0x6bc>
 8003df2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003df6:	4620      	mov	r0, r4
 8003df8:	4629      	mov	r1, r5
 8003dfa:	f7fc fe65 	bl	8000ac8 <__aeabi_dcmpeq>
 8003dfe:	b110      	cbz	r0, 8003e06 <_dtoa_r+0x69e>
 8003e00:	f018 0f01 	tst.w	r8, #1
 8003e04:	d10e      	bne.n	8003e24 <_dtoa_r+0x6bc>
 8003e06:	9903      	ldr	r1, [sp, #12]
 8003e08:	4648      	mov	r0, r9
 8003e0a:	f000 fbbd 	bl	8004588 <_Bfree>
 8003e0e:	2300      	movs	r3, #0
 8003e10:	7033      	strb	r3, [r6, #0]
 8003e12:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8003e14:	3701      	adds	r7, #1
 8003e16:	601f      	str	r7, [r3, #0]
 8003e18:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003e1a:	2b00      	cmp	r3, #0
 8003e1c:	f000 824b 	beq.w	80042b6 <_dtoa_r+0xb4e>
 8003e20:	601e      	str	r6, [r3, #0]
 8003e22:	e248      	b.n	80042b6 <_dtoa_r+0xb4e>
 8003e24:	46b8      	mov	r8, r7
 8003e26:	4633      	mov	r3, r6
 8003e28:	461e      	mov	r6, r3
 8003e2a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003e2e:	2a39      	cmp	r2, #57	@ 0x39
 8003e30:	d106      	bne.n	8003e40 <_dtoa_r+0x6d8>
 8003e32:	459a      	cmp	sl, r3
 8003e34:	d1f8      	bne.n	8003e28 <_dtoa_r+0x6c0>
 8003e36:	2230      	movs	r2, #48	@ 0x30
 8003e38:	f108 0801 	add.w	r8, r8, #1
 8003e3c:	f88a 2000 	strb.w	r2, [sl]
 8003e40:	781a      	ldrb	r2, [r3, #0]
 8003e42:	3201      	adds	r2, #1
 8003e44:	701a      	strb	r2, [r3, #0]
 8003e46:	e7a0      	b.n	8003d8a <_dtoa_r+0x622>
 8003e48:	4b6f      	ldr	r3, [pc, #444]	@ (8004008 <_dtoa_r+0x8a0>)
 8003e4a:	2200      	movs	r2, #0
 8003e4c:	f7fc fbd4 	bl	80005f8 <__aeabi_dmul>
 8003e50:	2200      	movs	r2, #0
 8003e52:	2300      	movs	r3, #0
 8003e54:	4604      	mov	r4, r0
 8003e56:	460d      	mov	r5, r1
 8003e58:	f7fc fe36 	bl	8000ac8 <__aeabi_dcmpeq>
 8003e5c:	2800      	cmp	r0, #0
 8003e5e:	d09f      	beq.n	8003da0 <_dtoa_r+0x638>
 8003e60:	e7d1      	b.n	8003e06 <_dtoa_r+0x69e>
 8003e62:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8003e64:	2a00      	cmp	r2, #0
 8003e66:	f000 80ea 	beq.w	800403e <_dtoa_r+0x8d6>
 8003e6a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8003e6c:	2a01      	cmp	r2, #1
 8003e6e:	f300 80cd 	bgt.w	800400c <_dtoa_r+0x8a4>
 8003e72:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003e74:	2a00      	cmp	r2, #0
 8003e76:	f000 80c1 	beq.w	8003ffc <_dtoa_r+0x894>
 8003e7a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8003e7e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003e80:	9e04      	ldr	r6, [sp, #16]
 8003e82:	9a04      	ldr	r2, [sp, #16]
 8003e84:	441a      	add	r2, r3
 8003e86:	9204      	str	r2, [sp, #16]
 8003e88:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003e8a:	2101      	movs	r1, #1
 8003e8c:	441a      	add	r2, r3
 8003e8e:	4648      	mov	r0, r9
 8003e90:	9209      	str	r2, [sp, #36]	@ 0x24
 8003e92:	f000 fc77 	bl	8004784 <__i2b>
 8003e96:	4605      	mov	r5, r0
 8003e98:	b166      	cbz	r6, 8003eb4 <_dtoa_r+0x74c>
 8003e9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	dd09      	ble.n	8003eb4 <_dtoa_r+0x74c>
 8003ea0:	42b3      	cmp	r3, r6
 8003ea2:	9a04      	ldr	r2, [sp, #16]
 8003ea4:	bfa8      	it	ge
 8003ea6:	4633      	movge	r3, r6
 8003ea8:	1ad2      	subs	r2, r2, r3
 8003eaa:	9204      	str	r2, [sp, #16]
 8003eac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003eae:	1af6      	subs	r6, r6, r3
 8003eb0:	1ad3      	subs	r3, r2, r3
 8003eb2:	9309      	str	r3, [sp, #36]	@ 0x24
 8003eb4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003eb6:	b30b      	cbz	r3, 8003efc <_dtoa_r+0x794>
 8003eb8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	f000 80c6 	beq.w	800404c <_dtoa_r+0x8e4>
 8003ec0:	2c00      	cmp	r4, #0
 8003ec2:	f000 80c0 	beq.w	8004046 <_dtoa_r+0x8de>
 8003ec6:	4629      	mov	r1, r5
 8003ec8:	4622      	mov	r2, r4
 8003eca:	4648      	mov	r0, r9
 8003ecc:	f000 fd12 	bl	80048f4 <__pow5mult>
 8003ed0:	9a03      	ldr	r2, [sp, #12]
 8003ed2:	4601      	mov	r1, r0
 8003ed4:	4605      	mov	r5, r0
 8003ed6:	4648      	mov	r0, r9
 8003ed8:	f000 fc6a 	bl	80047b0 <__multiply>
 8003edc:	9903      	ldr	r1, [sp, #12]
 8003ede:	4680      	mov	r8, r0
 8003ee0:	4648      	mov	r0, r9
 8003ee2:	f000 fb51 	bl	8004588 <_Bfree>
 8003ee6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003ee8:	1b1b      	subs	r3, r3, r4
 8003eea:	930a      	str	r3, [sp, #40]	@ 0x28
 8003eec:	f000 80b1 	beq.w	8004052 <_dtoa_r+0x8ea>
 8003ef0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003ef2:	4641      	mov	r1, r8
 8003ef4:	4648      	mov	r0, r9
 8003ef6:	f000 fcfd 	bl	80048f4 <__pow5mult>
 8003efa:	9003      	str	r0, [sp, #12]
 8003efc:	2101      	movs	r1, #1
 8003efe:	4648      	mov	r0, r9
 8003f00:	f000 fc40 	bl	8004784 <__i2b>
 8003f04:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003f06:	4604      	mov	r4, r0
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	f000 81d8 	beq.w	80042be <_dtoa_r+0xb56>
 8003f0e:	461a      	mov	r2, r3
 8003f10:	4601      	mov	r1, r0
 8003f12:	4648      	mov	r0, r9
 8003f14:	f000 fcee 	bl	80048f4 <__pow5mult>
 8003f18:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003f1a:	2b01      	cmp	r3, #1
 8003f1c:	4604      	mov	r4, r0
 8003f1e:	f300 809f 	bgt.w	8004060 <_dtoa_r+0x8f8>
 8003f22:	9b06      	ldr	r3, [sp, #24]
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	f040 8097 	bne.w	8004058 <_dtoa_r+0x8f0>
 8003f2a:	9b07      	ldr	r3, [sp, #28]
 8003f2c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003f30:	2b00      	cmp	r3, #0
 8003f32:	f040 8093 	bne.w	800405c <_dtoa_r+0x8f4>
 8003f36:	9b07      	ldr	r3, [sp, #28]
 8003f38:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003f3c:	0d1b      	lsrs	r3, r3, #20
 8003f3e:	051b      	lsls	r3, r3, #20
 8003f40:	b133      	cbz	r3, 8003f50 <_dtoa_r+0x7e8>
 8003f42:	9b04      	ldr	r3, [sp, #16]
 8003f44:	3301      	adds	r3, #1
 8003f46:	9304      	str	r3, [sp, #16]
 8003f48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f4a:	3301      	adds	r3, #1
 8003f4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003f4e:	2301      	movs	r3, #1
 8003f50:	930a      	str	r3, [sp, #40]	@ 0x28
 8003f52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	f000 81b8 	beq.w	80042ca <_dtoa_r+0xb62>
 8003f5a:	6923      	ldr	r3, [r4, #16]
 8003f5c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003f60:	6918      	ldr	r0, [r3, #16]
 8003f62:	f000 fbc3 	bl	80046ec <__hi0bits>
 8003f66:	f1c0 0020 	rsb	r0, r0, #32
 8003f6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f6c:	4418      	add	r0, r3
 8003f6e:	f010 001f 	ands.w	r0, r0, #31
 8003f72:	f000 8082 	beq.w	800407a <_dtoa_r+0x912>
 8003f76:	f1c0 0320 	rsb	r3, r0, #32
 8003f7a:	2b04      	cmp	r3, #4
 8003f7c:	dd73      	ble.n	8004066 <_dtoa_r+0x8fe>
 8003f7e:	9b04      	ldr	r3, [sp, #16]
 8003f80:	f1c0 001c 	rsb	r0, r0, #28
 8003f84:	4403      	add	r3, r0
 8003f86:	9304      	str	r3, [sp, #16]
 8003f88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f8a:	4403      	add	r3, r0
 8003f8c:	4406      	add	r6, r0
 8003f8e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003f90:	9b04      	ldr	r3, [sp, #16]
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	dd05      	ble.n	8003fa2 <_dtoa_r+0x83a>
 8003f96:	9903      	ldr	r1, [sp, #12]
 8003f98:	461a      	mov	r2, r3
 8003f9a:	4648      	mov	r0, r9
 8003f9c:	f000 fd04 	bl	80049a8 <__lshift>
 8003fa0:	9003      	str	r0, [sp, #12]
 8003fa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	dd05      	ble.n	8003fb4 <_dtoa_r+0x84c>
 8003fa8:	4621      	mov	r1, r4
 8003faa:	461a      	mov	r2, r3
 8003fac:	4648      	mov	r0, r9
 8003fae:	f000 fcfb 	bl	80049a8 <__lshift>
 8003fb2:	4604      	mov	r4, r0
 8003fb4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003fb6:	2b00      	cmp	r3, #0
 8003fb8:	d061      	beq.n	800407e <_dtoa_r+0x916>
 8003fba:	9803      	ldr	r0, [sp, #12]
 8003fbc:	4621      	mov	r1, r4
 8003fbe:	f000 fd5f 	bl	8004a80 <__mcmp>
 8003fc2:	2800      	cmp	r0, #0
 8003fc4:	da5b      	bge.n	800407e <_dtoa_r+0x916>
 8003fc6:	2300      	movs	r3, #0
 8003fc8:	9903      	ldr	r1, [sp, #12]
 8003fca:	220a      	movs	r2, #10
 8003fcc:	4648      	mov	r0, r9
 8003fce:	f000 fafd 	bl	80045cc <__multadd>
 8003fd2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003fd4:	9003      	str	r0, [sp, #12]
 8003fd6:	f107 38ff 	add.w	r8, r7, #4294967295
 8003fda:	2b00      	cmp	r3, #0
 8003fdc:	f000 8177 	beq.w	80042ce <_dtoa_r+0xb66>
 8003fe0:	4629      	mov	r1, r5
 8003fe2:	2300      	movs	r3, #0
 8003fe4:	220a      	movs	r2, #10
 8003fe6:	4648      	mov	r0, r9
 8003fe8:	f000 faf0 	bl	80045cc <__multadd>
 8003fec:	f1bb 0f00 	cmp.w	fp, #0
 8003ff0:	4605      	mov	r5, r0
 8003ff2:	dc6f      	bgt.n	80040d4 <_dtoa_r+0x96c>
 8003ff4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003ff6:	2b02      	cmp	r3, #2
 8003ff8:	dc49      	bgt.n	800408e <_dtoa_r+0x926>
 8003ffa:	e06b      	b.n	80040d4 <_dtoa_r+0x96c>
 8003ffc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003ffe:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8004002:	e73c      	b.n	8003e7e <_dtoa_r+0x716>
 8004004:	3fe00000 	.word	0x3fe00000
 8004008:	40240000 	.word	0x40240000
 800400c:	9b08      	ldr	r3, [sp, #32]
 800400e:	1e5c      	subs	r4, r3, #1
 8004010:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004012:	42a3      	cmp	r3, r4
 8004014:	db09      	blt.n	800402a <_dtoa_r+0x8c2>
 8004016:	1b1c      	subs	r4, r3, r4
 8004018:	9b08      	ldr	r3, [sp, #32]
 800401a:	2b00      	cmp	r3, #0
 800401c:	f6bf af30 	bge.w	8003e80 <_dtoa_r+0x718>
 8004020:	9b04      	ldr	r3, [sp, #16]
 8004022:	9a08      	ldr	r2, [sp, #32]
 8004024:	1a9e      	subs	r6, r3, r2
 8004026:	2300      	movs	r3, #0
 8004028:	e72b      	b.n	8003e82 <_dtoa_r+0x71a>
 800402a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800402c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800402e:	940a      	str	r4, [sp, #40]	@ 0x28
 8004030:	1ae3      	subs	r3, r4, r3
 8004032:	441a      	add	r2, r3
 8004034:	9e04      	ldr	r6, [sp, #16]
 8004036:	9b08      	ldr	r3, [sp, #32]
 8004038:	920e      	str	r2, [sp, #56]	@ 0x38
 800403a:	2400      	movs	r4, #0
 800403c:	e721      	b.n	8003e82 <_dtoa_r+0x71a>
 800403e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8004040:	9e04      	ldr	r6, [sp, #16]
 8004042:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8004044:	e728      	b.n	8003e98 <_dtoa_r+0x730>
 8004046:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800404a:	e751      	b.n	8003ef0 <_dtoa_r+0x788>
 800404c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800404e:	9903      	ldr	r1, [sp, #12]
 8004050:	e750      	b.n	8003ef4 <_dtoa_r+0x78c>
 8004052:	f8cd 800c 	str.w	r8, [sp, #12]
 8004056:	e751      	b.n	8003efc <_dtoa_r+0x794>
 8004058:	2300      	movs	r3, #0
 800405a:	e779      	b.n	8003f50 <_dtoa_r+0x7e8>
 800405c:	9b06      	ldr	r3, [sp, #24]
 800405e:	e777      	b.n	8003f50 <_dtoa_r+0x7e8>
 8004060:	2300      	movs	r3, #0
 8004062:	930a      	str	r3, [sp, #40]	@ 0x28
 8004064:	e779      	b.n	8003f5a <_dtoa_r+0x7f2>
 8004066:	d093      	beq.n	8003f90 <_dtoa_r+0x828>
 8004068:	9a04      	ldr	r2, [sp, #16]
 800406a:	331c      	adds	r3, #28
 800406c:	441a      	add	r2, r3
 800406e:	9204      	str	r2, [sp, #16]
 8004070:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004072:	441a      	add	r2, r3
 8004074:	441e      	add	r6, r3
 8004076:	9209      	str	r2, [sp, #36]	@ 0x24
 8004078:	e78a      	b.n	8003f90 <_dtoa_r+0x828>
 800407a:	4603      	mov	r3, r0
 800407c:	e7f4      	b.n	8004068 <_dtoa_r+0x900>
 800407e:	9b08      	ldr	r3, [sp, #32]
 8004080:	2b00      	cmp	r3, #0
 8004082:	46b8      	mov	r8, r7
 8004084:	dc20      	bgt.n	80040c8 <_dtoa_r+0x960>
 8004086:	469b      	mov	fp, r3
 8004088:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800408a:	2b02      	cmp	r3, #2
 800408c:	dd1e      	ble.n	80040cc <_dtoa_r+0x964>
 800408e:	f1bb 0f00 	cmp.w	fp, #0
 8004092:	f47f adb1 	bne.w	8003bf8 <_dtoa_r+0x490>
 8004096:	4621      	mov	r1, r4
 8004098:	465b      	mov	r3, fp
 800409a:	2205      	movs	r2, #5
 800409c:	4648      	mov	r0, r9
 800409e:	f000 fa95 	bl	80045cc <__multadd>
 80040a2:	4601      	mov	r1, r0
 80040a4:	4604      	mov	r4, r0
 80040a6:	9803      	ldr	r0, [sp, #12]
 80040a8:	f000 fcea 	bl	8004a80 <__mcmp>
 80040ac:	2800      	cmp	r0, #0
 80040ae:	f77f ada3 	ble.w	8003bf8 <_dtoa_r+0x490>
 80040b2:	4656      	mov	r6, sl
 80040b4:	2331      	movs	r3, #49	@ 0x31
 80040b6:	f806 3b01 	strb.w	r3, [r6], #1
 80040ba:	f108 0801 	add.w	r8, r8, #1
 80040be:	e59f      	b.n	8003c00 <_dtoa_r+0x498>
 80040c0:	9c08      	ldr	r4, [sp, #32]
 80040c2:	46b8      	mov	r8, r7
 80040c4:	4625      	mov	r5, r4
 80040c6:	e7f4      	b.n	80040b2 <_dtoa_r+0x94a>
 80040c8:	f8dd b020 	ldr.w	fp, [sp, #32]
 80040cc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80040ce:	2b00      	cmp	r3, #0
 80040d0:	f000 8101 	beq.w	80042d6 <_dtoa_r+0xb6e>
 80040d4:	2e00      	cmp	r6, #0
 80040d6:	dd05      	ble.n	80040e4 <_dtoa_r+0x97c>
 80040d8:	4629      	mov	r1, r5
 80040da:	4632      	mov	r2, r6
 80040dc:	4648      	mov	r0, r9
 80040de:	f000 fc63 	bl	80049a8 <__lshift>
 80040e2:	4605      	mov	r5, r0
 80040e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80040e6:	2b00      	cmp	r3, #0
 80040e8:	d05c      	beq.n	80041a4 <_dtoa_r+0xa3c>
 80040ea:	6869      	ldr	r1, [r5, #4]
 80040ec:	4648      	mov	r0, r9
 80040ee:	f000 fa0b 	bl	8004508 <_Balloc>
 80040f2:	4606      	mov	r6, r0
 80040f4:	b928      	cbnz	r0, 8004102 <_dtoa_r+0x99a>
 80040f6:	4b82      	ldr	r3, [pc, #520]	@ (8004300 <_dtoa_r+0xb98>)
 80040f8:	4602      	mov	r2, r0
 80040fa:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80040fe:	f7ff bb47 	b.w	8003790 <_dtoa_r+0x28>
 8004102:	692a      	ldr	r2, [r5, #16]
 8004104:	3202      	adds	r2, #2
 8004106:	0092      	lsls	r2, r2, #2
 8004108:	f105 010c 	add.w	r1, r5, #12
 800410c:	300c      	adds	r0, #12
 800410e:	f001 ff51 	bl	8005fb4 <memcpy>
 8004112:	2201      	movs	r2, #1
 8004114:	4631      	mov	r1, r6
 8004116:	4648      	mov	r0, r9
 8004118:	f000 fc46 	bl	80049a8 <__lshift>
 800411c:	f10a 0301 	add.w	r3, sl, #1
 8004120:	9304      	str	r3, [sp, #16]
 8004122:	eb0a 030b 	add.w	r3, sl, fp
 8004126:	930a      	str	r3, [sp, #40]	@ 0x28
 8004128:	9b06      	ldr	r3, [sp, #24]
 800412a:	f003 0301 	and.w	r3, r3, #1
 800412e:	462f      	mov	r7, r5
 8004130:	9309      	str	r3, [sp, #36]	@ 0x24
 8004132:	4605      	mov	r5, r0
 8004134:	9b04      	ldr	r3, [sp, #16]
 8004136:	9803      	ldr	r0, [sp, #12]
 8004138:	4621      	mov	r1, r4
 800413a:	f103 3bff 	add.w	fp, r3, #4294967295
 800413e:	f7ff fa8b 	bl	8003658 <quorem>
 8004142:	4603      	mov	r3, r0
 8004144:	3330      	adds	r3, #48	@ 0x30
 8004146:	9006      	str	r0, [sp, #24]
 8004148:	4639      	mov	r1, r7
 800414a:	9803      	ldr	r0, [sp, #12]
 800414c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800414e:	f000 fc97 	bl	8004a80 <__mcmp>
 8004152:	462a      	mov	r2, r5
 8004154:	9008      	str	r0, [sp, #32]
 8004156:	4621      	mov	r1, r4
 8004158:	4648      	mov	r0, r9
 800415a:	f000 fcad 	bl	8004ab8 <__mdiff>
 800415e:	68c2      	ldr	r2, [r0, #12]
 8004160:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004162:	4606      	mov	r6, r0
 8004164:	bb02      	cbnz	r2, 80041a8 <_dtoa_r+0xa40>
 8004166:	4601      	mov	r1, r0
 8004168:	9803      	ldr	r0, [sp, #12]
 800416a:	f000 fc89 	bl	8004a80 <__mcmp>
 800416e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004170:	4602      	mov	r2, r0
 8004172:	4631      	mov	r1, r6
 8004174:	4648      	mov	r0, r9
 8004176:	e9cd 320b 	strd	r3, r2, [sp, #44]	@ 0x2c
 800417a:	f000 fa05 	bl	8004588 <_Bfree>
 800417e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8004180:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004182:	9e04      	ldr	r6, [sp, #16]
 8004184:	ea42 0103 	orr.w	r1, r2, r3
 8004188:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800418a:	4319      	orrs	r1, r3
 800418c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800418e:	d10d      	bne.n	80041ac <_dtoa_r+0xa44>
 8004190:	2b39      	cmp	r3, #57	@ 0x39
 8004192:	d027      	beq.n	80041e4 <_dtoa_r+0xa7c>
 8004194:	9a08      	ldr	r2, [sp, #32]
 8004196:	2a00      	cmp	r2, #0
 8004198:	dd01      	ble.n	800419e <_dtoa_r+0xa36>
 800419a:	9b06      	ldr	r3, [sp, #24]
 800419c:	3331      	adds	r3, #49	@ 0x31
 800419e:	f88b 3000 	strb.w	r3, [fp]
 80041a2:	e52e      	b.n	8003c02 <_dtoa_r+0x49a>
 80041a4:	4628      	mov	r0, r5
 80041a6:	e7b9      	b.n	800411c <_dtoa_r+0x9b4>
 80041a8:	2201      	movs	r2, #1
 80041aa:	e7e2      	b.n	8004172 <_dtoa_r+0xa0a>
 80041ac:	9908      	ldr	r1, [sp, #32]
 80041ae:	2900      	cmp	r1, #0
 80041b0:	db04      	blt.n	80041bc <_dtoa_r+0xa54>
 80041b2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80041b4:	4301      	orrs	r1, r0
 80041b6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80041b8:	4301      	orrs	r1, r0
 80041ba:	d120      	bne.n	80041fe <_dtoa_r+0xa96>
 80041bc:	2a00      	cmp	r2, #0
 80041be:	ddee      	ble.n	800419e <_dtoa_r+0xa36>
 80041c0:	9903      	ldr	r1, [sp, #12]
 80041c2:	9304      	str	r3, [sp, #16]
 80041c4:	2201      	movs	r2, #1
 80041c6:	4648      	mov	r0, r9
 80041c8:	f000 fbee 	bl	80049a8 <__lshift>
 80041cc:	4621      	mov	r1, r4
 80041ce:	9003      	str	r0, [sp, #12]
 80041d0:	f000 fc56 	bl	8004a80 <__mcmp>
 80041d4:	2800      	cmp	r0, #0
 80041d6:	9b04      	ldr	r3, [sp, #16]
 80041d8:	dc02      	bgt.n	80041e0 <_dtoa_r+0xa78>
 80041da:	d1e0      	bne.n	800419e <_dtoa_r+0xa36>
 80041dc:	07da      	lsls	r2, r3, #31
 80041de:	d5de      	bpl.n	800419e <_dtoa_r+0xa36>
 80041e0:	2b39      	cmp	r3, #57	@ 0x39
 80041e2:	d1da      	bne.n	800419a <_dtoa_r+0xa32>
 80041e4:	2339      	movs	r3, #57	@ 0x39
 80041e6:	f88b 3000 	strb.w	r3, [fp]
 80041ea:	4633      	mov	r3, r6
 80041ec:	461e      	mov	r6, r3
 80041ee:	3b01      	subs	r3, #1
 80041f0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80041f4:	2a39      	cmp	r2, #57	@ 0x39
 80041f6:	d04e      	beq.n	8004296 <_dtoa_r+0xb2e>
 80041f8:	3201      	adds	r2, #1
 80041fa:	701a      	strb	r2, [r3, #0]
 80041fc:	e501      	b.n	8003c02 <_dtoa_r+0x49a>
 80041fe:	2a00      	cmp	r2, #0
 8004200:	dd03      	ble.n	800420a <_dtoa_r+0xaa2>
 8004202:	2b39      	cmp	r3, #57	@ 0x39
 8004204:	d0ee      	beq.n	80041e4 <_dtoa_r+0xa7c>
 8004206:	3301      	adds	r3, #1
 8004208:	e7c9      	b.n	800419e <_dtoa_r+0xa36>
 800420a:	9a04      	ldr	r2, [sp, #16]
 800420c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800420e:	f802 3c01 	strb.w	r3, [r2, #-1]
 8004212:	428a      	cmp	r2, r1
 8004214:	d028      	beq.n	8004268 <_dtoa_r+0xb00>
 8004216:	9903      	ldr	r1, [sp, #12]
 8004218:	2300      	movs	r3, #0
 800421a:	220a      	movs	r2, #10
 800421c:	4648      	mov	r0, r9
 800421e:	f000 f9d5 	bl	80045cc <__multadd>
 8004222:	42af      	cmp	r7, r5
 8004224:	9003      	str	r0, [sp, #12]
 8004226:	f04f 0300 	mov.w	r3, #0
 800422a:	f04f 020a 	mov.w	r2, #10
 800422e:	4639      	mov	r1, r7
 8004230:	4648      	mov	r0, r9
 8004232:	d107      	bne.n	8004244 <_dtoa_r+0xadc>
 8004234:	f000 f9ca 	bl	80045cc <__multadd>
 8004238:	4607      	mov	r7, r0
 800423a:	4605      	mov	r5, r0
 800423c:	9b04      	ldr	r3, [sp, #16]
 800423e:	3301      	adds	r3, #1
 8004240:	9304      	str	r3, [sp, #16]
 8004242:	e777      	b.n	8004134 <_dtoa_r+0x9cc>
 8004244:	f000 f9c2 	bl	80045cc <__multadd>
 8004248:	4629      	mov	r1, r5
 800424a:	4607      	mov	r7, r0
 800424c:	2300      	movs	r3, #0
 800424e:	220a      	movs	r2, #10
 8004250:	4648      	mov	r0, r9
 8004252:	f000 f9bb 	bl	80045cc <__multadd>
 8004256:	4605      	mov	r5, r0
 8004258:	e7f0      	b.n	800423c <_dtoa_r+0xad4>
 800425a:	f1bb 0f00 	cmp.w	fp, #0
 800425e:	bfcc      	ite	gt
 8004260:	465e      	movgt	r6, fp
 8004262:	2601      	movle	r6, #1
 8004264:	4456      	add	r6, sl
 8004266:	2700      	movs	r7, #0
 8004268:	9903      	ldr	r1, [sp, #12]
 800426a:	9304      	str	r3, [sp, #16]
 800426c:	2201      	movs	r2, #1
 800426e:	4648      	mov	r0, r9
 8004270:	f000 fb9a 	bl	80049a8 <__lshift>
 8004274:	4621      	mov	r1, r4
 8004276:	9003      	str	r0, [sp, #12]
 8004278:	f000 fc02 	bl	8004a80 <__mcmp>
 800427c:	2800      	cmp	r0, #0
 800427e:	dcb4      	bgt.n	80041ea <_dtoa_r+0xa82>
 8004280:	d102      	bne.n	8004288 <_dtoa_r+0xb20>
 8004282:	9b04      	ldr	r3, [sp, #16]
 8004284:	07db      	lsls	r3, r3, #31
 8004286:	d4b0      	bmi.n	80041ea <_dtoa_r+0xa82>
 8004288:	4633      	mov	r3, r6
 800428a:	461e      	mov	r6, r3
 800428c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004290:	2a30      	cmp	r2, #48	@ 0x30
 8004292:	d0fa      	beq.n	800428a <_dtoa_r+0xb22>
 8004294:	e4b5      	b.n	8003c02 <_dtoa_r+0x49a>
 8004296:	459a      	cmp	sl, r3
 8004298:	d1a8      	bne.n	80041ec <_dtoa_r+0xa84>
 800429a:	2331      	movs	r3, #49	@ 0x31
 800429c:	f108 0801 	add.w	r8, r8, #1
 80042a0:	f88a 3000 	strb.w	r3, [sl]
 80042a4:	e4ad      	b.n	8003c02 <_dtoa_r+0x49a>
 80042a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80042a8:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8004304 <_dtoa_r+0xb9c>
 80042ac:	b11b      	cbz	r3, 80042b6 <_dtoa_r+0xb4e>
 80042ae:	f10a 0308 	add.w	r3, sl, #8
 80042b2:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80042b4:	6013      	str	r3, [r2, #0]
 80042b6:	4650      	mov	r0, sl
 80042b8:	b017      	add	sp, #92	@ 0x5c
 80042ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042be:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80042c0:	2b01      	cmp	r3, #1
 80042c2:	f77f ae2e 	ble.w	8003f22 <_dtoa_r+0x7ba>
 80042c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80042c8:	930a      	str	r3, [sp, #40]	@ 0x28
 80042ca:	2001      	movs	r0, #1
 80042cc:	e64d      	b.n	8003f6a <_dtoa_r+0x802>
 80042ce:	f1bb 0f00 	cmp.w	fp, #0
 80042d2:	f77f aed9 	ble.w	8004088 <_dtoa_r+0x920>
 80042d6:	4656      	mov	r6, sl
 80042d8:	9803      	ldr	r0, [sp, #12]
 80042da:	4621      	mov	r1, r4
 80042dc:	f7ff f9bc 	bl	8003658 <quorem>
 80042e0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 80042e4:	f806 3b01 	strb.w	r3, [r6], #1
 80042e8:	eba6 020a 	sub.w	r2, r6, sl
 80042ec:	4593      	cmp	fp, r2
 80042ee:	ddb4      	ble.n	800425a <_dtoa_r+0xaf2>
 80042f0:	9903      	ldr	r1, [sp, #12]
 80042f2:	2300      	movs	r3, #0
 80042f4:	220a      	movs	r2, #10
 80042f6:	4648      	mov	r0, r9
 80042f8:	f000 f968 	bl	80045cc <__multadd>
 80042fc:	9003      	str	r0, [sp, #12]
 80042fe:	e7eb      	b.n	80042d8 <_dtoa_r+0xb70>
 8004300:	080071dd 	.word	0x080071dd
 8004304:	08007161 	.word	0x08007161

08004308 <_free_r>:
 8004308:	b538      	push	{r3, r4, r5, lr}
 800430a:	4605      	mov	r5, r0
 800430c:	2900      	cmp	r1, #0
 800430e:	d041      	beq.n	8004394 <_free_r+0x8c>
 8004310:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004314:	1f0c      	subs	r4, r1, #4
 8004316:	2b00      	cmp	r3, #0
 8004318:	bfb8      	it	lt
 800431a:	18e4      	addlt	r4, r4, r3
 800431c:	f000 f8e8 	bl	80044f0 <__malloc_lock>
 8004320:	4a1d      	ldr	r2, [pc, #116]	@ (8004398 <_free_r+0x90>)
 8004322:	6813      	ldr	r3, [r2, #0]
 8004324:	b933      	cbnz	r3, 8004334 <_free_r+0x2c>
 8004326:	6063      	str	r3, [r4, #4]
 8004328:	6014      	str	r4, [r2, #0]
 800432a:	4628      	mov	r0, r5
 800432c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004330:	f000 b8e4 	b.w	80044fc <__malloc_unlock>
 8004334:	42a3      	cmp	r3, r4
 8004336:	d908      	bls.n	800434a <_free_r+0x42>
 8004338:	6820      	ldr	r0, [r4, #0]
 800433a:	1821      	adds	r1, r4, r0
 800433c:	428b      	cmp	r3, r1
 800433e:	bf01      	itttt	eq
 8004340:	6819      	ldreq	r1, [r3, #0]
 8004342:	685b      	ldreq	r3, [r3, #4]
 8004344:	1809      	addeq	r1, r1, r0
 8004346:	6021      	streq	r1, [r4, #0]
 8004348:	e7ed      	b.n	8004326 <_free_r+0x1e>
 800434a:	461a      	mov	r2, r3
 800434c:	685b      	ldr	r3, [r3, #4]
 800434e:	b10b      	cbz	r3, 8004354 <_free_r+0x4c>
 8004350:	42a3      	cmp	r3, r4
 8004352:	d9fa      	bls.n	800434a <_free_r+0x42>
 8004354:	6811      	ldr	r1, [r2, #0]
 8004356:	1850      	adds	r0, r2, r1
 8004358:	42a0      	cmp	r0, r4
 800435a:	d10b      	bne.n	8004374 <_free_r+0x6c>
 800435c:	6820      	ldr	r0, [r4, #0]
 800435e:	4401      	add	r1, r0
 8004360:	1850      	adds	r0, r2, r1
 8004362:	4283      	cmp	r3, r0
 8004364:	6011      	str	r1, [r2, #0]
 8004366:	d1e0      	bne.n	800432a <_free_r+0x22>
 8004368:	6818      	ldr	r0, [r3, #0]
 800436a:	685b      	ldr	r3, [r3, #4]
 800436c:	6053      	str	r3, [r2, #4]
 800436e:	4408      	add	r0, r1
 8004370:	6010      	str	r0, [r2, #0]
 8004372:	e7da      	b.n	800432a <_free_r+0x22>
 8004374:	d902      	bls.n	800437c <_free_r+0x74>
 8004376:	230c      	movs	r3, #12
 8004378:	602b      	str	r3, [r5, #0]
 800437a:	e7d6      	b.n	800432a <_free_r+0x22>
 800437c:	6820      	ldr	r0, [r4, #0]
 800437e:	1821      	adds	r1, r4, r0
 8004380:	428b      	cmp	r3, r1
 8004382:	bf04      	itt	eq
 8004384:	6819      	ldreq	r1, [r3, #0]
 8004386:	685b      	ldreq	r3, [r3, #4]
 8004388:	6063      	str	r3, [r4, #4]
 800438a:	bf04      	itt	eq
 800438c:	1809      	addeq	r1, r1, r0
 800438e:	6021      	streq	r1, [r4, #0]
 8004390:	6054      	str	r4, [r2, #4]
 8004392:	e7ca      	b.n	800432a <_free_r+0x22>
 8004394:	bd38      	pop	{r3, r4, r5, pc}
 8004396:	bf00      	nop
 8004398:	200003b8 	.word	0x200003b8

0800439c <malloc>:
 800439c:	4b02      	ldr	r3, [pc, #8]	@ (80043a8 <malloc+0xc>)
 800439e:	4601      	mov	r1, r0
 80043a0:	6818      	ldr	r0, [r3, #0]
 80043a2:	f000 b825 	b.w	80043f0 <_malloc_r>
 80043a6:	bf00      	nop
 80043a8:	20000020 	.word	0x20000020

080043ac <sbrk_aligned>:
 80043ac:	b570      	push	{r4, r5, r6, lr}
 80043ae:	4e0f      	ldr	r6, [pc, #60]	@ (80043ec <sbrk_aligned+0x40>)
 80043b0:	460c      	mov	r4, r1
 80043b2:	6831      	ldr	r1, [r6, #0]
 80043b4:	4605      	mov	r5, r0
 80043b6:	b911      	cbnz	r1, 80043be <sbrk_aligned+0x12>
 80043b8:	f001 fdec 	bl	8005f94 <_sbrk_r>
 80043bc:	6030      	str	r0, [r6, #0]
 80043be:	4621      	mov	r1, r4
 80043c0:	4628      	mov	r0, r5
 80043c2:	f001 fde7 	bl	8005f94 <_sbrk_r>
 80043c6:	1c43      	adds	r3, r0, #1
 80043c8:	d103      	bne.n	80043d2 <sbrk_aligned+0x26>
 80043ca:	f04f 34ff 	mov.w	r4, #4294967295
 80043ce:	4620      	mov	r0, r4
 80043d0:	bd70      	pop	{r4, r5, r6, pc}
 80043d2:	1cc4      	adds	r4, r0, #3
 80043d4:	f024 0403 	bic.w	r4, r4, #3
 80043d8:	42a0      	cmp	r0, r4
 80043da:	d0f8      	beq.n	80043ce <sbrk_aligned+0x22>
 80043dc:	1a21      	subs	r1, r4, r0
 80043de:	4628      	mov	r0, r5
 80043e0:	f001 fdd8 	bl	8005f94 <_sbrk_r>
 80043e4:	3001      	adds	r0, #1
 80043e6:	d1f2      	bne.n	80043ce <sbrk_aligned+0x22>
 80043e8:	e7ef      	b.n	80043ca <sbrk_aligned+0x1e>
 80043ea:	bf00      	nop
 80043ec:	200003b4 	.word	0x200003b4

080043f0 <_malloc_r>:
 80043f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80043f4:	1ccd      	adds	r5, r1, #3
 80043f6:	f025 0503 	bic.w	r5, r5, #3
 80043fa:	3508      	adds	r5, #8
 80043fc:	2d0c      	cmp	r5, #12
 80043fe:	bf38      	it	cc
 8004400:	250c      	movcc	r5, #12
 8004402:	2d00      	cmp	r5, #0
 8004404:	4606      	mov	r6, r0
 8004406:	db01      	blt.n	800440c <_malloc_r+0x1c>
 8004408:	42a9      	cmp	r1, r5
 800440a:	d904      	bls.n	8004416 <_malloc_r+0x26>
 800440c:	230c      	movs	r3, #12
 800440e:	6033      	str	r3, [r6, #0]
 8004410:	2000      	movs	r0, #0
 8004412:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004416:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80044ec <_malloc_r+0xfc>
 800441a:	f000 f869 	bl	80044f0 <__malloc_lock>
 800441e:	f8d8 3000 	ldr.w	r3, [r8]
 8004422:	461c      	mov	r4, r3
 8004424:	bb44      	cbnz	r4, 8004478 <_malloc_r+0x88>
 8004426:	4629      	mov	r1, r5
 8004428:	4630      	mov	r0, r6
 800442a:	f7ff ffbf 	bl	80043ac <sbrk_aligned>
 800442e:	1c43      	adds	r3, r0, #1
 8004430:	4604      	mov	r4, r0
 8004432:	d158      	bne.n	80044e6 <_malloc_r+0xf6>
 8004434:	f8d8 4000 	ldr.w	r4, [r8]
 8004438:	4627      	mov	r7, r4
 800443a:	2f00      	cmp	r7, #0
 800443c:	d143      	bne.n	80044c6 <_malloc_r+0xd6>
 800443e:	2c00      	cmp	r4, #0
 8004440:	d04b      	beq.n	80044da <_malloc_r+0xea>
 8004442:	6823      	ldr	r3, [r4, #0]
 8004444:	4639      	mov	r1, r7
 8004446:	4630      	mov	r0, r6
 8004448:	eb04 0903 	add.w	r9, r4, r3
 800444c:	f001 fda2 	bl	8005f94 <_sbrk_r>
 8004450:	4581      	cmp	r9, r0
 8004452:	d142      	bne.n	80044da <_malloc_r+0xea>
 8004454:	6821      	ldr	r1, [r4, #0]
 8004456:	1a6d      	subs	r5, r5, r1
 8004458:	4629      	mov	r1, r5
 800445a:	4630      	mov	r0, r6
 800445c:	f7ff ffa6 	bl	80043ac <sbrk_aligned>
 8004460:	3001      	adds	r0, #1
 8004462:	d03a      	beq.n	80044da <_malloc_r+0xea>
 8004464:	6823      	ldr	r3, [r4, #0]
 8004466:	442b      	add	r3, r5
 8004468:	6023      	str	r3, [r4, #0]
 800446a:	f8d8 3000 	ldr.w	r3, [r8]
 800446e:	685a      	ldr	r2, [r3, #4]
 8004470:	bb62      	cbnz	r2, 80044cc <_malloc_r+0xdc>
 8004472:	f8c8 7000 	str.w	r7, [r8]
 8004476:	e00f      	b.n	8004498 <_malloc_r+0xa8>
 8004478:	6822      	ldr	r2, [r4, #0]
 800447a:	1b52      	subs	r2, r2, r5
 800447c:	d420      	bmi.n	80044c0 <_malloc_r+0xd0>
 800447e:	2a0b      	cmp	r2, #11
 8004480:	d917      	bls.n	80044b2 <_malloc_r+0xc2>
 8004482:	1961      	adds	r1, r4, r5
 8004484:	42a3      	cmp	r3, r4
 8004486:	6025      	str	r5, [r4, #0]
 8004488:	bf18      	it	ne
 800448a:	6059      	strne	r1, [r3, #4]
 800448c:	6863      	ldr	r3, [r4, #4]
 800448e:	bf08      	it	eq
 8004490:	f8c8 1000 	streq.w	r1, [r8]
 8004494:	5162      	str	r2, [r4, r5]
 8004496:	604b      	str	r3, [r1, #4]
 8004498:	4630      	mov	r0, r6
 800449a:	f000 f82f 	bl	80044fc <__malloc_unlock>
 800449e:	f104 000b 	add.w	r0, r4, #11
 80044a2:	1d23      	adds	r3, r4, #4
 80044a4:	f020 0007 	bic.w	r0, r0, #7
 80044a8:	1ac2      	subs	r2, r0, r3
 80044aa:	bf1c      	itt	ne
 80044ac:	1a1b      	subne	r3, r3, r0
 80044ae:	50a3      	strne	r3, [r4, r2]
 80044b0:	e7af      	b.n	8004412 <_malloc_r+0x22>
 80044b2:	6862      	ldr	r2, [r4, #4]
 80044b4:	42a3      	cmp	r3, r4
 80044b6:	bf0c      	ite	eq
 80044b8:	f8c8 2000 	streq.w	r2, [r8]
 80044bc:	605a      	strne	r2, [r3, #4]
 80044be:	e7eb      	b.n	8004498 <_malloc_r+0xa8>
 80044c0:	4623      	mov	r3, r4
 80044c2:	6864      	ldr	r4, [r4, #4]
 80044c4:	e7ae      	b.n	8004424 <_malloc_r+0x34>
 80044c6:	463c      	mov	r4, r7
 80044c8:	687f      	ldr	r7, [r7, #4]
 80044ca:	e7b6      	b.n	800443a <_malloc_r+0x4a>
 80044cc:	461a      	mov	r2, r3
 80044ce:	685b      	ldr	r3, [r3, #4]
 80044d0:	42a3      	cmp	r3, r4
 80044d2:	d1fb      	bne.n	80044cc <_malloc_r+0xdc>
 80044d4:	2300      	movs	r3, #0
 80044d6:	6053      	str	r3, [r2, #4]
 80044d8:	e7de      	b.n	8004498 <_malloc_r+0xa8>
 80044da:	230c      	movs	r3, #12
 80044dc:	6033      	str	r3, [r6, #0]
 80044de:	4630      	mov	r0, r6
 80044e0:	f000 f80c 	bl	80044fc <__malloc_unlock>
 80044e4:	e794      	b.n	8004410 <_malloc_r+0x20>
 80044e6:	6005      	str	r5, [r0, #0]
 80044e8:	e7d6      	b.n	8004498 <_malloc_r+0xa8>
 80044ea:	bf00      	nop
 80044ec:	200003b8 	.word	0x200003b8

080044f0 <__malloc_lock>:
 80044f0:	4801      	ldr	r0, [pc, #4]	@ (80044f8 <__malloc_lock+0x8>)
 80044f2:	f7ff b8aa 	b.w	800364a <__retarget_lock_acquire_recursive>
 80044f6:	bf00      	nop
 80044f8:	200003b0 	.word	0x200003b0

080044fc <__malloc_unlock>:
 80044fc:	4801      	ldr	r0, [pc, #4]	@ (8004504 <__malloc_unlock+0x8>)
 80044fe:	f7ff b8a5 	b.w	800364c <__retarget_lock_release_recursive>
 8004502:	bf00      	nop
 8004504:	200003b0 	.word	0x200003b0

08004508 <_Balloc>:
 8004508:	b570      	push	{r4, r5, r6, lr}
 800450a:	69c6      	ldr	r6, [r0, #28]
 800450c:	4604      	mov	r4, r0
 800450e:	460d      	mov	r5, r1
 8004510:	b976      	cbnz	r6, 8004530 <_Balloc+0x28>
 8004512:	2010      	movs	r0, #16
 8004514:	f7ff ff42 	bl	800439c <malloc>
 8004518:	4602      	mov	r2, r0
 800451a:	61e0      	str	r0, [r4, #28]
 800451c:	b920      	cbnz	r0, 8004528 <_Balloc+0x20>
 800451e:	4b18      	ldr	r3, [pc, #96]	@ (8004580 <_Balloc+0x78>)
 8004520:	4818      	ldr	r0, [pc, #96]	@ (8004584 <_Balloc+0x7c>)
 8004522:	216b      	movs	r1, #107	@ 0x6b
 8004524:	f001 fd5a 	bl	8005fdc <__assert_func>
 8004528:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800452c:	6006      	str	r6, [r0, #0]
 800452e:	60c6      	str	r6, [r0, #12]
 8004530:	69e6      	ldr	r6, [r4, #28]
 8004532:	68f3      	ldr	r3, [r6, #12]
 8004534:	b183      	cbz	r3, 8004558 <_Balloc+0x50>
 8004536:	69e3      	ldr	r3, [r4, #28]
 8004538:	68db      	ldr	r3, [r3, #12]
 800453a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800453e:	b9b8      	cbnz	r0, 8004570 <_Balloc+0x68>
 8004540:	2101      	movs	r1, #1
 8004542:	fa01 f605 	lsl.w	r6, r1, r5
 8004546:	1d72      	adds	r2, r6, #5
 8004548:	0092      	lsls	r2, r2, #2
 800454a:	4620      	mov	r0, r4
 800454c:	f001 fd64 	bl	8006018 <_calloc_r>
 8004550:	b160      	cbz	r0, 800456c <_Balloc+0x64>
 8004552:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8004556:	e00e      	b.n	8004576 <_Balloc+0x6e>
 8004558:	2221      	movs	r2, #33	@ 0x21
 800455a:	2104      	movs	r1, #4
 800455c:	4620      	mov	r0, r4
 800455e:	f001 fd5b 	bl	8006018 <_calloc_r>
 8004562:	69e3      	ldr	r3, [r4, #28]
 8004564:	60f0      	str	r0, [r6, #12]
 8004566:	68db      	ldr	r3, [r3, #12]
 8004568:	2b00      	cmp	r3, #0
 800456a:	d1e4      	bne.n	8004536 <_Balloc+0x2e>
 800456c:	2000      	movs	r0, #0
 800456e:	bd70      	pop	{r4, r5, r6, pc}
 8004570:	6802      	ldr	r2, [r0, #0]
 8004572:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8004576:	2300      	movs	r3, #0
 8004578:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800457c:	e7f7      	b.n	800456e <_Balloc+0x66>
 800457e:	bf00      	nop
 8004580:	0800716e 	.word	0x0800716e
 8004584:	080071ee 	.word	0x080071ee

08004588 <_Bfree>:
 8004588:	b570      	push	{r4, r5, r6, lr}
 800458a:	69c6      	ldr	r6, [r0, #28]
 800458c:	4605      	mov	r5, r0
 800458e:	460c      	mov	r4, r1
 8004590:	b976      	cbnz	r6, 80045b0 <_Bfree+0x28>
 8004592:	2010      	movs	r0, #16
 8004594:	f7ff ff02 	bl	800439c <malloc>
 8004598:	4602      	mov	r2, r0
 800459a:	61e8      	str	r0, [r5, #28]
 800459c:	b920      	cbnz	r0, 80045a8 <_Bfree+0x20>
 800459e:	4b09      	ldr	r3, [pc, #36]	@ (80045c4 <_Bfree+0x3c>)
 80045a0:	4809      	ldr	r0, [pc, #36]	@ (80045c8 <_Bfree+0x40>)
 80045a2:	218f      	movs	r1, #143	@ 0x8f
 80045a4:	f001 fd1a 	bl	8005fdc <__assert_func>
 80045a8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80045ac:	6006      	str	r6, [r0, #0]
 80045ae:	60c6      	str	r6, [r0, #12]
 80045b0:	b13c      	cbz	r4, 80045c2 <_Bfree+0x3a>
 80045b2:	69eb      	ldr	r3, [r5, #28]
 80045b4:	6862      	ldr	r2, [r4, #4]
 80045b6:	68db      	ldr	r3, [r3, #12]
 80045b8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80045bc:	6021      	str	r1, [r4, #0]
 80045be:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80045c2:	bd70      	pop	{r4, r5, r6, pc}
 80045c4:	0800716e 	.word	0x0800716e
 80045c8:	080071ee 	.word	0x080071ee

080045cc <__multadd>:
 80045cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045d0:	690d      	ldr	r5, [r1, #16]
 80045d2:	4607      	mov	r7, r0
 80045d4:	460c      	mov	r4, r1
 80045d6:	461e      	mov	r6, r3
 80045d8:	f101 0c14 	add.w	ip, r1, #20
 80045dc:	2000      	movs	r0, #0
 80045de:	f8dc 3000 	ldr.w	r3, [ip]
 80045e2:	b299      	uxth	r1, r3
 80045e4:	fb02 6101 	mla	r1, r2, r1, r6
 80045e8:	0c1e      	lsrs	r6, r3, #16
 80045ea:	0c0b      	lsrs	r3, r1, #16
 80045ec:	fb02 3306 	mla	r3, r2, r6, r3
 80045f0:	b289      	uxth	r1, r1
 80045f2:	3001      	adds	r0, #1
 80045f4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80045f8:	4285      	cmp	r5, r0
 80045fa:	f84c 1b04 	str.w	r1, [ip], #4
 80045fe:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8004602:	dcec      	bgt.n	80045de <__multadd+0x12>
 8004604:	b30e      	cbz	r6, 800464a <__multadd+0x7e>
 8004606:	68a3      	ldr	r3, [r4, #8]
 8004608:	42ab      	cmp	r3, r5
 800460a:	dc19      	bgt.n	8004640 <__multadd+0x74>
 800460c:	6861      	ldr	r1, [r4, #4]
 800460e:	4638      	mov	r0, r7
 8004610:	3101      	adds	r1, #1
 8004612:	f7ff ff79 	bl	8004508 <_Balloc>
 8004616:	4680      	mov	r8, r0
 8004618:	b928      	cbnz	r0, 8004626 <__multadd+0x5a>
 800461a:	4602      	mov	r2, r0
 800461c:	4b0c      	ldr	r3, [pc, #48]	@ (8004650 <__multadd+0x84>)
 800461e:	480d      	ldr	r0, [pc, #52]	@ (8004654 <__multadd+0x88>)
 8004620:	21ba      	movs	r1, #186	@ 0xba
 8004622:	f001 fcdb 	bl	8005fdc <__assert_func>
 8004626:	6922      	ldr	r2, [r4, #16]
 8004628:	3202      	adds	r2, #2
 800462a:	f104 010c 	add.w	r1, r4, #12
 800462e:	0092      	lsls	r2, r2, #2
 8004630:	300c      	adds	r0, #12
 8004632:	f001 fcbf 	bl	8005fb4 <memcpy>
 8004636:	4621      	mov	r1, r4
 8004638:	4638      	mov	r0, r7
 800463a:	f7ff ffa5 	bl	8004588 <_Bfree>
 800463e:	4644      	mov	r4, r8
 8004640:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004644:	3501      	adds	r5, #1
 8004646:	615e      	str	r6, [r3, #20]
 8004648:	6125      	str	r5, [r4, #16]
 800464a:	4620      	mov	r0, r4
 800464c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004650:	080071dd 	.word	0x080071dd
 8004654:	080071ee 	.word	0x080071ee

08004658 <__s2b>:
 8004658:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800465c:	460c      	mov	r4, r1
 800465e:	4615      	mov	r5, r2
 8004660:	461f      	mov	r7, r3
 8004662:	2209      	movs	r2, #9
 8004664:	3308      	adds	r3, #8
 8004666:	4606      	mov	r6, r0
 8004668:	fb93 f3f2 	sdiv	r3, r3, r2
 800466c:	2100      	movs	r1, #0
 800466e:	2201      	movs	r2, #1
 8004670:	429a      	cmp	r2, r3
 8004672:	db09      	blt.n	8004688 <__s2b+0x30>
 8004674:	4630      	mov	r0, r6
 8004676:	f7ff ff47 	bl	8004508 <_Balloc>
 800467a:	b940      	cbnz	r0, 800468e <__s2b+0x36>
 800467c:	4602      	mov	r2, r0
 800467e:	4b19      	ldr	r3, [pc, #100]	@ (80046e4 <__s2b+0x8c>)
 8004680:	4819      	ldr	r0, [pc, #100]	@ (80046e8 <__s2b+0x90>)
 8004682:	21d3      	movs	r1, #211	@ 0xd3
 8004684:	f001 fcaa 	bl	8005fdc <__assert_func>
 8004688:	0052      	lsls	r2, r2, #1
 800468a:	3101      	adds	r1, #1
 800468c:	e7f0      	b.n	8004670 <__s2b+0x18>
 800468e:	9b08      	ldr	r3, [sp, #32]
 8004690:	6143      	str	r3, [r0, #20]
 8004692:	2d09      	cmp	r5, #9
 8004694:	f04f 0301 	mov.w	r3, #1
 8004698:	6103      	str	r3, [r0, #16]
 800469a:	dd16      	ble.n	80046ca <__s2b+0x72>
 800469c:	f104 0909 	add.w	r9, r4, #9
 80046a0:	46c8      	mov	r8, r9
 80046a2:	442c      	add	r4, r5
 80046a4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80046a8:	4601      	mov	r1, r0
 80046aa:	3b30      	subs	r3, #48	@ 0x30
 80046ac:	220a      	movs	r2, #10
 80046ae:	4630      	mov	r0, r6
 80046b0:	f7ff ff8c 	bl	80045cc <__multadd>
 80046b4:	45a0      	cmp	r8, r4
 80046b6:	d1f5      	bne.n	80046a4 <__s2b+0x4c>
 80046b8:	f1a5 0408 	sub.w	r4, r5, #8
 80046bc:	444c      	add	r4, r9
 80046be:	1b2d      	subs	r5, r5, r4
 80046c0:	1963      	adds	r3, r4, r5
 80046c2:	42bb      	cmp	r3, r7
 80046c4:	db04      	blt.n	80046d0 <__s2b+0x78>
 80046c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80046ca:	340a      	adds	r4, #10
 80046cc:	2509      	movs	r5, #9
 80046ce:	e7f6      	b.n	80046be <__s2b+0x66>
 80046d0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80046d4:	4601      	mov	r1, r0
 80046d6:	3b30      	subs	r3, #48	@ 0x30
 80046d8:	220a      	movs	r2, #10
 80046da:	4630      	mov	r0, r6
 80046dc:	f7ff ff76 	bl	80045cc <__multadd>
 80046e0:	e7ee      	b.n	80046c0 <__s2b+0x68>
 80046e2:	bf00      	nop
 80046e4:	080071dd 	.word	0x080071dd
 80046e8:	080071ee 	.word	0x080071ee

080046ec <__hi0bits>:
 80046ec:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80046f0:	4603      	mov	r3, r0
 80046f2:	bf36      	itet	cc
 80046f4:	0403      	lslcc	r3, r0, #16
 80046f6:	2000      	movcs	r0, #0
 80046f8:	2010      	movcc	r0, #16
 80046fa:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80046fe:	bf3c      	itt	cc
 8004700:	021b      	lslcc	r3, r3, #8
 8004702:	3008      	addcc	r0, #8
 8004704:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004708:	bf3c      	itt	cc
 800470a:	011b      	lslcc	r3, r3, #4
 800470c:	3004      	addcc	r0, #4
 800470e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004712:	bf3c      	itt	cc
 8004714:	009b      	lslcc	r3, r3, #2
 8004716:	3002      	addcc	r0, #2
 8004718:	2b00      	cmp	r3, #0
 800471a:	db05      	blt.n	8004728 <__hi0bits+0x3c>
 800471c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8004720:	f100 0001 	add.w	r0, r0, #1
 8004724:	bf08      	it	eq
 8004726:	2020      	moveq	r0, #32
 8004728:	4770      	bx	lr

0800472a <__lo0bits>:
 800472a:	6803      	ldr	r3, [r0, #0]
 800472c:	4602      	mov	r2, r0
 800472e:	f013 0007 	ands.w	r0, r3, #7
 8004732:	d00b      	beq.n	800474c <__lo0bits+0x22>
 8004734:	07d9      	lsls	r1, r3, #31
 8004736:	d421      	bmi.n	800477c <__lo0bits+0x52>
 8004738:	0798      	lsls	r0, r3, #30
 800473a:	bf49      	itett	mi
 800473c:	085b      	lsrmi	r3, r3, #1
 800473e:	089b      	lsrpl	r3, r3, #2
 8004740:	2001      	movmi	r0, #1
 8004742:	6013      	strmi	r3, [r2, #0]
 8004744:	bf5c      	itt	pl
 8004746:	6013      	strpl	r3, [r2, #0]
 8004748:	2002      	movpl	r0, #2
 800474a:	4770      	bx	lr
 800474c:	b299      	uxth	r1, r3
 800474e:	b909      	cbnz	r1, 8004754 <__lo0bits+0x2a>
 8004750:	0c1b      	lsrs	r3, r3, #16
 8004752:	2010      	movs	r0, #16
 8004754:	b2d9      	uxtb	r1, r3
 8004756:	b909      	cbnz	r1, 800475c <__lo0bits+0x32>
 8004758:	3008      	adds	r0, #8
 800475a:	0a1b      	lsrs	r3, r3, #8
 800475c:	0719      	lsls	r1, r3, #28
 800475e:	bf04      	itt	eq
 8004760:	091b      	lsreq	r3, r3, #4
 8004762:	3004      	addeq	r0, #4
 8004764:	0799      	lsls	r1, r3, #30
 8004766:	bf04      	itt	eq
 8004768:	089b      	lsreq	r3, r3, #2
 800476a:	3002      	addeq	r0, #2
 800476c:	07d9      	lsls	r1, r3, #31
 800476e:	d403      	bmi.n	8004778 <__lo0bits+0x4e>
 8004770:	085b      	lsrs	r3, r3, #1
 8004772:	f100 0001 	add.w	r0, r0, #1
 8004776:	d003      	beq.n	8004780 <__lo0bits+0x56>
 8004778:	6013      	str	r3, [r2, #0]
 800477a:	4770      	bx	lr
 800477c:	2000      	movs	r0, #0
 800477e:	4770      	bx	lr
 8004780:	2020      	movs	r0, #32
 8004782:	4770      	bx	lr

08004784 <__i2b>:
 8004784:	b510      	push	{r4, lr}
 8004786:	460c      	mov	r4, r1
 8004788:	2101      	movs	r1, #1
 800478a:	f7ff febd 	bl	8004508 <_Balloc>
 800478e:	4602      	mov	r2, r0
 8004790:	b928      	cbnz	r0, 800479e <__i2b+0x1a>
 8004792:	4b05      	ldr	r3, [pc, #20]	@ (80047a8 <__i2b+0x24>)
 8004794:	4805      	ldr	r0, [pc, #20]	@ (80047ac <__i2b+0x28>)
 8004796:	f240 1145 	movw	r1, #325	@ 0x145
 800479a:	f001 fc1f 	bl	8005fdc <__assert_func>
 800479e:	2301      	movs	r3, #1
 80047a0:	6144      	str	r4, [r0, #20]
 80047a2:	6103      	str	r3, [r0, #16]
 80047a4:	bd10      	pop	{r4, pc}
 80047a6:	bf00      	nop
 80047a8:	080071dd 	.word	0x080071dd
 80047ac:	080071ee 	.word	0x080071ee

080047b0 <__multiply>:
 80047b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047b4:	4617      	mov	r7, r2
 80047b6:	690a      	ldr	r2, [r1, #16]
 80047b8:	693b      	ldr	r3, [r7, #16]
 80047ba:	429a      	cmp	r2, r3
 80047bc:	bfa8      	it	ge
 80047be:	463b      	movge	r3, r7
 80047c0:	4689      	mov	r9, r1
 80047c2:	bfa4      	itt	ge
 80047c4:	460f      	movge	r7, r1
 80047c6:	4699      	movge	r9, r3
 80047c8:	693d      	ldr	r5, [r7, #16]
 80047ca:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80047ce:	68bb      	ldr	r3, [r7, #8]
 80047d0:	6879      	ldr	r1, [r7, #4]
 80047d2:	eb05 060a 	add.w	r6, r5, sl
 80047d6:	42b3      	cmp	r3, r6
 80047d8:	b085      	sub	sp, #20
 80047da:	bfb8      	it	lt
 80047dc:	3101      	addlt	r1, #1
 80047de:	f7ff fe93 	bl	8004508 <_Balloc>
 80047e2:	b930      	cbnz	r0, 80047f2 <__multiply+0x42>
 80047e4:	4602      	mov	r2, r0
 80047e6:	4b41      	ldr	r3, [pc, #260]	@ (80048ec <__multiply+0x13c>)
 80047e8:	4841      	ldr	r0, [pc, #260]	@ (80048f0 <__multiply+0x140>)
 80047ea:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80047ee:	f001 fbf5 	bl	8005fdc <__assert_func>
 80047f2:	f100 0414 	add.w	r4, r0, #20
 80047f6:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 80047fa:	4623      	mov	r3, r4
 80047fc:	2200      	movs	r2, #0
 80047fe:	4573      	cmp	r3, lr
 8004800:	d320      	bcc.n	8004844 <__multiply+0x94>
 8004802:	f107 0814 	add.w	r8, r7, #20
 8004806:	f109 0114 	add.w	r1, r9, #20
 800480a:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800480e:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8004812:	9302      	str	r3, [sp, #8]
 8004814:	1beb      	subs	r3, r5, r7
 8004816:	3b15      	subs	r3, #21
 8004818:	f023 0303 	bic.w	r3, r3, #3
 800481c:	3304      	adds	r3, #4
 800481e:	3715      	adds	r7, #21
 8004820:	42bd      	cmp	r5, r7
 8004822:	bf38      	it	cc
 8004824:	2304      	movcc	r3, #4
 8004826:	9301      	str	r3, [sp, #4]
 8004828:	9b02      	ldr	r3, [sp, #8]
 800482a:	9103      	str	r1, [sp, #12]
 800482c:	428b      	cmp	r3, r1
 800482e:	d80c      	bhi.n	800484a <__multiply+0x9a>
 8004830:	2e00      	cmp	r6, #0
 8004832:	dd03      	ble.n	800483c <__multiply+0x8c>
 8004834:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8004838:	2b00      	cmp	r3, #0
 800483a:	d055      	beq.n	80048e8 <__multiply+0x138>
 800483c:	6106      	str	r6, [r0, #16]
 800483e:	b005      	add	sp, #20
 8004840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004844:	f843 2b04 	str.w	r2, [r3], #4
 8004848:	e7d9      	b.n	80047fe <__multiply+0x4e>
 800484a:	f8b1 a000 	ldrh.w	sl, [r1]
 800484e:	f1ba 0f00 	cmp.w	sl, #0
 8004852:	d01f      	beq.n	8004894 <__multiply+0xe4>
 8004854:	46c4      	mov	ip, r8
 8004856:	46a1      	mov	r9, r4
 8004858:	2700      	movs	r7, #0
 800485a:	f85c 2b04 	ldr.w	r2, [ip], #4
 800485e:	f8d9 3000 	ldr.w	r3, [r9]
 8004862:	fa1f fb82 	uxth.w	fp, r2
 8004866:	b29b      	uxth	r3, r3
 8004868:	fb0a 330b 	mla	r3, sl, fp, r3
 800486c:	443b      	add	r3, r7
 800486e:	f8d9 7000 	ldr.w	r7, [r9]
 8004872:	0c12      	lsrs	r2, r2, #16
 8004874:	0c3f      	lsrs	r7, r7, #16
 8004876:	fb0a 7202 	mla	r2, sl, r2, r7
 800487a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800487e:	b29b      	uxth	r3, r3
 8004880:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004884:	4565      	cmp	r5, ip
 8004886:	f849 3b04 	str.w	r3, [r9], #4
 800488a:	ea4f 4712 	mov.w	r7, r2, lsr #16
 800488e:	d8e4      	bhi.n	800485a <__multiply+0xaa>
 8004890:	9b01      	ldr	r3, [sp, #4]
 8004892:	50e7      	str	r7, [r4, r3]
 8004894:	9b03      	ldr	r3, [sp, #12]
 8004896:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800489a:	3104      	adds	r1, #4
 800489c:	f1b9 0f00 	cmp.w	r9, #0
 80048a0:	d020      	beq.n	80048e4 <__multiply+0x134>
 80048a2:	6823      	ldr	r3, [r4, #0]
 80048a4:	4647      	mov	r7, r8
 80048a6:	46a4      	mov	ip, r4
 80048a8:	f04f 0a00 	mov.w	sl, #0
 80048ac:	f8b7 b000 	ldrh.w	fp, [r7]
 80048b0:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80048b4:	fb09 220b 	mla	r2, r9, fp, r2
 80048b8:	4452      	add	r2, sl
 80048ba:	b29b      	uxth	r3, r3
 80048bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80048c0:	f84c 3b04 	str.w	r3, [ip], #4
 80048c4:	f857 3b04 	ldr.w	r3, [r7], #4
 80048c8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80048cc:	f8bc 3000 	ldrh.w	r3, [ip]
 80048d0:	fb09 330a 	mla	r3, r9, sl, r3
 80048d4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80048d8:	42bd      	cmp	r5, r7
 80048da:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80048de:	d8e5      	bhi.n	80048ac <__multiply+0xfc>
 80048e0:	9a01      	ldr	r2, [sp, #4]
 80048e2:	50a3      	str	r3, [r4, r2]
 80048e4:	3404      	adds	r4, #4
 80048e6:	e79f      	b.n	8004828 <__multiply+0x78>
 80048e8:	3e01      	subs	r6, #1
 80048ea:	e7a1      	b.n	8004830 <__multiply+0x80>
 80048ec:	080071dd 	.word	0x080071dd
 80048f0:	080071ee 	.word	0x080071ee

080048f4 <__pow5mult>:
 80048f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80048f8:	4615      	mov	r5, r2
 80048fa:	f012 0203 	ands.w	r2, r2, #3
 80048fe:	4607      	mov	r7, r0
 8004900:	460e      	mov	r6, r1
 8004902:	d007      	beq.n	8004914 <__pow5mult+0x20>
 8004904:	4c25      	ldr	r4, [pc, #148]	@ (800499c <__pow5mult+0xa8>)
 8004906:	3a01      	subs	r2, #1
 8004908:	2300      	movs	r3, #0
 800490a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800490e:	f7ff fe5d 	bl	80045cc <__multadd>
 8004912:	4606      	mov	r6, r0
 8004914:	10ad      	asrs	r5, r5, #2
 8004916:	d03d      	beq.n	8004994 <__pow5mult+0xa0>
 8004918:	69fc      	ldr	r4, [r7, #28]
 800491a:	b97c      	cbnz	r4, 800493c <__pow5mult+0x48>
 800491c:	2010      	movs	r0, #16
 800491e:	f7ff fd3d 	bl	800439c <malloc>
 8004922:	4602      	mov	r2, r0
 8004924:	61f8      	str	r0, [r7, #28]
 8004926:	b928      	cbnz	r0, 8004934 <__pow5mult+0x40>
 8004928:	4b1d      	ldr	r3, [pc, #116]	@ (80049a0 <__pow5mult+0xac>)
 800492a:	481e      	ldr	r0, [pc, #120]	@ (80049a4 <__pow5mult+0xb0>)
 800492c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8004930:	f001 fb54 	bl	8005fdc <__assert_func>
 8004934:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004938:	6004      	str	r4, [r0, #0]
 800493a:	60c4      	str	r4, [r0, #12]
 800493c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8004940:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004944:	b94c      	cbnz	r4, 800495a <__pow5mult+0x66>
 8004946:	f240 2171 	movw	r1, #625	@ 0x271
 800494a:	4638      	mov	r0, r7
 800494c:	f7ff ff1a 	bl	8004784 <__i2b>
 8004950:	2300      	movs	r3, #0
 8004952:	f8c8 0008 	str.w	r0, [r8, #8]
 8004956:	4604      	mov	r4, r0
 8004958:	6003      	str	r3, [r0, #0]
 800495a:	f04f 0900 	mov.w	r9, #0
 800495e:	07eb      	lsls	r3, r5, #31
 8004960:	d50a      	bpl.n	8004978 <__pow5mult+0x84>
 8004962:	4631      	mov	r1, r6
 8004964:	4622      	mov	r2, r4
 8004966:	4638      	mov	r0, r7
 8004968:	f7ff ff22 	bl	80047b0 <__multiply>
 800496c:	4631      	mov	r1, r6
 800496e:	4680      	mov	r8, r0
 8004970:	4638      	mov	r0, r7
 8004972:	f7ff fe09 	bl	8004588 <_Bfree>
 8004976:	4646      	mov	r6, r8
 8004978:	106d      	asrs	r5, r5, #1
 800497a:	d00b      	beq.n	8004994 <__pow5mult+0xa0>
 800497c:	6820      	ldr	r0, [r4, #0]
 800497e:	b938      	cbnz	r0, 8004990 <__pow5mult+0x9c>
 8004980:	4622      	mov	r2, r4
 8004982:	4621      	mov	r1, r4
 8004984:	4638      	mov	r0, r7
 8004986:	f7ff ff13 	bl	80047b0 <__multiply>
 800498a:	6020      	str	r0, [r4, #0]
 800498c:	f8c0 9000 	str.w	r9, [r0]
 8004990:	4604      	mov	r4, r0
 8004992:	e7e4      	b.n	800495e <__pow5mult+0x6a>
 8004994:	4630      	mov	r0, r6
 8004996:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800499a:	bf00      	nop
 800499c:	08007300 	.word	0x08007300
 80049a0:	0800716e 	.word	0x0800716e
 80049a4:	080071ee 	.word	0x080071ee

080049a8 <__lshift>:
 80049a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049ac:	460c      	mov	r4, r1
 80049ae:	6849      	ldr	r1, [r1, #4]
 80049b0:	6923      	ldr	r3, [r4, #16]
 80049b2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80049b6:	68a3      	ldr	r3, [r4, #8]
 80049b8:	4607      	mov	r7, r0
 80049ba:	4691      	mov	r9, r2
 80049bc:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80049c0:	f108 0601 	add.w	r6, r8, #1
 80049c4:	42b3      	cmp	r3, r6
 80049c6:	db0b      	blt.n	80049e0 <__lshift+0x38>
 80049c8:	4638      	mov	r0, r7
 80049ca:	f7ff fd9d 	bl	8004508 <_Balloc>
 80049ce:	4605      	mov	r5, r0
 80049d0:	b948      	cbnz	r0, 80049e6 <__lshift+0x3e>
 80049d2:	4602      	mov	r2, r0
 80049d4:	4b28      	ldr	r3, [pc, #160]	@ (8004a78 <__lshift+0xd0>)
 80049d6:	4829      	ldr	r0, [pc, #164]	@ (8004a7c <__lshift+0xd4>)
 80049d8:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80049dc:	f001 fafe 	bl	8005fdc <__assert_func>
 80049e0:	3101      	adds	r1, #1
 80049e2:	005b      	lsls	r3, r3, #1
 80049e4:	e7ee      	b.n	80049c4 <__lshift+0x1c>
 80049e6:	2300      	movs	r3, #0
 80049e8:	f100 0114 	add.w	r1, r0, #20
 80049ec:	f100 0210 	add.w	r2, r0, #16
 80049f0:	4618      	mov	r0, r3
 80049f2:	4553      	cmp	r3, sl
 80049f4:	db33      	blt.n	8004a5e <__lshift+0xb6>
 80049f6:	6920      	ldr	r0, [r4, #16]
 80049f8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80049fc:	f104 0314 	add.w	r3, r4, #20
 8004a00:	f019 091f 	ands.w	r9, r9, #31
 8004a04:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004a08:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004a0c:	d02b      	beq.n	8004a66 <__lshift+0xbe>
 8004a0e:	f1c9 0e20 	rsb	lr, r9, #32
 8004a12:	468a      	mov	sl, r1
 8004a14:	2200      	movs	r2, #0
 8004a16:	6818      	ldr	r0, [r3, #0]
 8004a18:	fa00 f009 	lsl.w	r0, r0, r9
 8004a1c:	4310      	orrs	r0, r2
 8004a1e:	f84a 0b04 	str.w	r0, [sl], #4
 8004a22:	f853 2b04 	ldr.w	r2, [r3], #4
 8004a26:	459c      	cmp	ip, r3
 8004a28:	fa22 f20e 	lsr.w	r2, r2, lr
 8004a2c:	d8f3      	bhi.n	8004a16 <__lshift+0x6e>
 8004a2e:	ebac 0304 	sub.w	r3, ip, r4
 8004a32:	3b15      	subs	r3, #21
 8004a34:	f023 0303 	bic.w	r3, r3, #3
 8004a38:	3304      	adds	r3, #4
 8004a3a:	f104 0015 	add.w	r0, r4, #21
 8004a3e:	4560      	cmp	r0, ip
 8004a40:	bf88      	it	hi
 8004a42:	2304      	movhi	r3, #4
 8004a44:	50ca      	str	r2, [r1, r3]
 8004a46:	b10a      	cbz	r2, 8004a4c <__lshift+0xa4>
 8004a48:	f108 0602 	add.w	r6, r8, #2
 8004a4c:	3e01      	subs	r6, #1
 8004a4e:	4638      	mov	r0, r7
 8004a50:	612e      	str	r6, [r5, #16]
 8004a52:	4621      	mov	r1, r4
 8004a54:	f7ff fd98 	bl	8004588 <_Bfree>
 8004a58:	4628      	mov	r0, r5
 8004a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004a5e:	f842 0f04 	str.w	r0, [r2, #4]!
 8004a62:	3301      	adds	r3, #1
 8004a64:	e7c5      	b.n	80049f2 <__lshift+0x4a>
 8004a66:	3904      	subs	r1, #4
 8004a68:	f853 2b04 	ldr.w	r2, [r3], #4
 8004a6c:	f841 2f04 	str.w	r2, [r1, #4]!
 8004a70:	459c      	cmp	ip, r3
 8004a72:	d8f9      	bhi.n	8004a68 <__lshift+0xc0>
 8004a74:	e7ea      	b.n	8004a4c <__lshift+0xa4>
 8004a76:	bf00      	nop
 8004a78:	080071dd 	.word	0x080071dd
 8004a7c:	080071ee 	.word	0x080071ee

08004a80 <__mcmp>:
 8004a80:	690a      	ldr	r2, [r1, #16]
 8004a82:	4603      	mov	r3, r0
 8004a84:	6900      	ldr	r0, [r0, #16]
 8004a86:	1a80      	subs	r0, r0, r2
 8004a88:	b530      	push	{r4, r5, lr}
 8004a8a:	d10e      	bne.n	8004aaa <__mcmp+0x2a>
 8004a8c:	3314      	adds	r3, #20
 8004a8e:	3114      	adds	r1, #20
 8004a90:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8004a94:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004a98:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004a9c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004aa0:	4295      	cmp	r5, r2
 8004aa2:	d003      	beq.n	8004aac <__mcmp+0x2c>
 8004aa4:	d205      	bcs.n	8004ab2 <__mcmp+0x32>
 8004aa6:	f04f 30ff 	mov.w	r0, #4294967295
 8004aaa:	bd30      	pop	{r4, r5, pc}
 8004aac:	42a3      	cmp	r3, r4
 8004aae:	d3f3      	bcc.n	8004a98 <__mcmp+0x18>
 8004ab0:	e7fb      	b.n	8004aaa <__mcmp+0x2a>
 8004ab2:	2001      	movs	r0, #1
 8004ab4:	e7f9      	b.n	8004aaa <__mcmp+0x2a>
	...

08004ab8 <__mdiff>:
 8004ab8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004abc:	4689      	mov	r9, r1
 8004abe:	4606      	mov	r6, r0
 8004ac0:	4611      	mov	r1, r2
 8004ac2:	4648      	mov	r0, r9
 8004ac4:	4614      	mov	r4, r2
 8004ac6:	f7ff ffdb 	bl	8004a80 <__mcmp>
 8004aca:	1e05      	subs	r5, r0, #0
 8004acc:	d112      	bne.n	8004af4 <__mdiff+0x3c>
 8004ace:	4629      	mov	r1, r5
 8004ad0:	4630      	mov	r0, r6
 8004ad2:	f7ff fd19 	bl	8004508 <_Balloc>
 8004ad6:	4602      	mov	r2, r0
 8004ad8:	b928      	cbnz	r0, 8004ae6 <__mdiff+0x2e>
 8004ada:	4b3e      	ldr	r3, [pc, #248]	@ (8004bd4 <__mdiff+0x11c>)
 8004adc:	f240 2137 	movw	r1, #567	@ 0x237
 8004ae0:	483d      	ldr	r0, [pc, #244]	@ (8004bd8 <__mdiff+0x120>)
 8004ae2:	f001 fa7b 	bl	8005fdc <__assert_func>
 8004ae6:	2301      	movs	r3, #1
 8004ae8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004aec:	4610      	mov	r0, r2
 8004aee:	b003      	add	sp, #12
 8004af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004af4:	bfbc      	itt	lt
 8004af6:	464b      	movlt	r3, r9
 8004af8:	46a1      	movlt	r9, r4
 8004afa:	4630      	mov	r0, r6
 8004afc:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004b00:	bfba      	itte	lt
 8004b02:	461c      	movlt	r4, r3
 8004b04:	2501      	movlt	r5, #1
 8004b06:	2500      	movge	r5, #0
 8004b08:	f7ff fcfe 	bl	8004508 <_Balloc>
 8004b0c:	4602      	mov	r2, r0
 8004b0e:	b918      	cbnz	r0, 8004b18 <__mdiff+0x60>
 8004b10:	4b30      	ldr	r3, [pc, #192]	@ (8004bd4 <__mdiff+0x11c>)
 8004b12:	f240 2145 	movw	r1, #581	@ 0x245
 8004b16:	e7e3      	b.n	8004ae0 <__mdiff+0x28>
 8004b18:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004b1c:	6926      	ldr	r6, [r4, #16]
 8004b1e:	60c5      	str	r5, [r0, #12]
 8004b20:	f109 0310 	add.w	r3, r9, #16
 8004b24:	f109 0514 	add.w	r5, r9, #20
 8004b28:	f104 0e14 	add.w	lr, r4, #20
 8004b2c:	f100 0b14 	add.w	fp, r0, #20
 8004b30:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8004b34:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8004b38:	9301      	str	r3, [sp, #4]
 8004b3a:	46d9      	mov	r9, fp
 8004b3c:	f04f 0c00 	mov.w	ip, #0
 8004b40:	9b01      	ldr	r3, [sp, #4]
 8004b42:	f85e 0b04 	ldr.w	r0, [lr], #4
 8004b46:	f853 af04 	ldr.w	sl, [r3, #4]!
 8004b4a:	9301      	str	r3, [sp, #4]
 8004b4c:	b281      	uxth	r1, r0
 8004b4e:	fa1f f38a 	uxth.w	r3, sl
 8004b52:	1a5b      	subs	r3, r3, r1
 8004b54:	0c00      	lsrs	r0, r0, #16
 8004b56:	4463      	add	r3, ip
 8004b58:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8004b5c:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8004b60:	b29b      	uxth	r3, r3
 8004b62:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004b66:	4576      	cmp	r6, lr
 8004b68:	f849 3b04 	str.w	r3, [r9], #4
 8004b6c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004b70:	d8e6      	bhi.n	8004b40 <__mdiff+0x88>
 8004b72:	1b33      	subs	r3, r6, r4
 8004b74:	3b15      	subs	r3, #21
 8004b76:	f023 0303 	bic.w	r3, r3, #3
 8004b7a:	3415      	adds	r4, #21
 8004b7c:	3304      	adds	r3, #4
 8004b7e:	42a6      	cmp	r6, r4
 8004b80:	bf38      	it	cc
 8004b82:	2304      	movcc	r3, #4
 8004b84:	441d      	add	r5, r3
 8004b86:	445b      	add	r3, fp
 8004b88:	461e      	mov	r6, r3
 8004b8a:	462c      	mov	r4, r5
 8004b8c:	4544      	cmp	r4, r8
 8004b8e:	d30e      	bcc.n	8004bae <__mdiff+0xf6>
 8004b90:	f108 0103 	add.w	r1, r8, #3
 8004b94:	1b49      	subs	r1, r1, r5
 8004b96:	f021 0103 	bic.w	r1, r1, #3
 8004b9a:	3d03      	subs	r5, #3
 8004b9c:	45a8      	cmp	r8, r5
 8004b9e:	bf38      	it	cc
 8004ba0:	2100      	movcc	r1, #0
 8004ba2:	440b      	add	r3, r1
 8004ba4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004ba8:	b191      	cbz	r1, 8004bd0 <__mdiff+0x118>
 8004baa:	6117      	str	r7, [r2, #16]
 8004bac:	e79e      	b.n	8004aec <__mdiff+0x34>
 8004bae:	f854 1b04 	ldr.w	r1, [r4], #4
 8004bb2:	46e6      	mov	lr, ip
 8004bb4:	0c08      	lsrs	r0, r1, #16
 8004bb6:	fa1c fc81 	uxtah	ip, ip, r1
 8004bba:	4471      	add	r1, lr
 8004bbc:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8004bc0:	b289      	uxth	r1, r1
 8004bc2:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8004bc6:	f846 1b04 	str.w	r1, [r6], #4
 8004bca:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004bce:	e7dd      	b.n	8004b8c <__mdiff+0xd4>
 8004bd0:	3f01      	subs	r7, #1
 8004bd2:	e7e7      	b.n	8004ba4 <__mdiff+0xec>
 8004bd4:	080071dd 	.word	0x080071dd
 8004bd8:	080071ee 	.word	0x080071ee

08004bdc <__ulp>:
 8004bdc:	4b0e      	ldr	r3, [pc, #56]	@ (8004c18 <__ulp+0x3c>)
 8004bde:	400b      	ands	r3, r1
 8004be0:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8004be4:	2b00      	cmp	r3, #0
 8004be6:	dc08      	bgt.n	8004bfa <__ulp+0x1e>
 8004be8:	425b      	negs	r3, r3
 8004bea:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8004bee:	ea4f 5223 	mov.w	r2, r3, asr #20
 8004bf2:	da04      	bge.n	8004bfe <__ulp+0x22>
 8004bf4:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8004bf8:	4113      	asrs	r3, r2
 8004bfa:	2200      	movs	r2, #0
 8004bfc:	e008      	b.n	8004c10 <__ulp+0x34>
 8004bfe:	f1a2 0314 	sub.w	r3, r2, #20
 8004c02:	2b1e      	cmp	r3, #30
 8004c04:	bfda      	itte	le
 8004c06:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8004c0a:	40da      	lsrle	r2, r3
 8004c0c:	2201      	movgt	r2, #1
 8004c0e:	2300      	movs	r3, #0
 8004c10:	4619      	mov	r1, r3
 8004c12:	4610      	mov	r0, r2
 8004c14:	4770      	bx	lr
 8004c16:	bf00      	nop
 8004c18:	7ff00000 	.word	0x7ff00000

08004c1c <__b2d>:
 8004c1c:	6902      	ldr	r2, [r0, #16]
 8004c1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c20:	f100 0614 	add.w	r6, r0, #20
 8004c24:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8004c28:	4f20      	ldr	r7, [pc, #128]	@ (8004cac <__b2d+0x90>)
 8004c2a:	f852 4c04 	ldr.w	r4, [r2, #-4]
 8004c2e:	4620      	mov	r0, r4
 8004c30:	f7ff fd5c 	bl	80046ec <__hi0bits>
 8004c34:	4603      	mov	r3, r0
 8004c36:	2b0a      	cmp	r3, #10
 8004c38:	f1c0 0020 	rsb	r0, r0, #32
 8004c3c:	f1a2 0504 	sub.w	r5, r2, #4
 8004c40:	6008      	str	r0, [r1, #0]
 8004c42:	dc13      	bgt.n	8004c6c <__b2d+0x50>
 8004c44:	42ae      	cmp	r6, r5
 8004c46:	bf38      	it	cc
 8004c48:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8004c4c:	f1c3 0c0b 	rsb	ip, r3, #11
 8004c50:	bf28      	it	cs
 8004c52:	2200      	movcs	r2, #0
 8004c54:	3315      	adds	r3, #21
 8004c56:	fa24 fe0c 	lsr.w	lr, r4, ip
 8004c5a:	fa04 f303 	lsl.w	r3, r4, r3
 8004c5e:	fa22 f20c 	lsr.w	r2, r2, ip
 8004c62:	ea4e 0107 	orr.w	r1, lr, r7
 8004c66:	431a      	orrs	r2, r3
 8004c68:	4610      	mov	r0, r2
 8004c6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004c6c:	42ae      	cmp	r6, r5
 8004c6e:	bf36      	itet	cc
 8004c70:	f1a2 0508 	subcc.w	r5, r2, #8
 8004c74:	2200      	movcs	r2, #0
 8004c76:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8004c7a:	3b0b      	subs	r3, #11
 8004c7c:	d012      	beq.n	8004ca4 <__b2d+0x88>
 8004c7e:	f1c3 0720 	rsb	r7, r3, #32
 8004c82:	fa22 f107 	lsr.w	r1, r2, r7
 8004c86:	409c      	lsls	r4, r3
 8004c88:	430c      	orrs	r4, r1
 8004c8a:	42b5      	cmp	r5, r6
 8004c8c:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 8004c90:	bf8c      	ite	hi
 8004c92:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 8004c96:	2400      	movls	r4, #0
 8004c98:	409a      	lsls	r2, r3
 8004c9a:	40fc      	lsrs	r4, r7
 8004c9c:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8004ca0:	4322      	orrs	r2, r4
 8004ca2:	e7e1      	b.n	8004c68 <__b2d+0x4c>
 8004ca4:	ea44 0107 	orr.w	r1, r4, r7
 8004ca8:	e7de      	b.n	8004c68 <__b2d+0x4c>
 8004caa:	bf00      	nop
 8004cac:	3ff00000 	.word	0x3ff00000

08004cb0 <__d2b>:
 8004cb0:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8004cb4:	2101      	movs	r1, #1
 8004cb6:	9e08      	ldr	r6, [sp, #32]
 8004cb8:	4690      	mov	r8, r2
 8004cba:	4699      	mov	r9, r3
 8004cbc:	f7ff fc24 	bl	8004508 <_Balloc>
 8004cc0:	4604      	mov	r4, r0
 8004cc2:	b930      	cbnz	r0, 8004cd2 <__d2b+0x22>
 8004cc4:	4602      	mov	r2, r0
 8004cc6:	4b24      	ldr	r3, [pc, #144]	@ (8004d58 <__d2b+0xa8>)
 8004cc8:	4824      	ldr	r0, [pc, #144]	@ (8004d5c <__d2b+0xac>)
 8004cca:	f240 310f 	movw	r1, #783	@ 0x30f
 8004cce:	f001 f985 	bl	8005fdc <__assert_func>
 8004cd2:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8004cd6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004cda:	b10d      	cbz	r5, 8004ce0 <__d2b+0x30>
 8004cdc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004ce0:	9301      	str	r3, [sp, #4]
 8004ce2:	f1b8 0300 	subs.w	r3, r8, #0
 8004ce6:	d024      	beq.n	8004d32 <__d2b+0x82>
 8004ce8:	4668      	mov	r0, sp
 8004cea:	9300      	str	r3, [sp, #0]
 8004cec:	f7ff fd1d 	bl	800472a <__lo0bits>
 8004cf0:	e9dd 1200 	ldrd	r1, r2, [sp]
 8004cf4:	b1d8      	cbz	r0, 8004d2e <__d2b+0x7e>
 8004cf6:	f1c0 0320 	rsb	r3, r0, #32
 8004cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8004cfe:	430b      	orrs	r3, r1
 8004d00:	40c2      	lsrs	r2, r0
 8004d02:	6163      	str	r3, [r4, #20]
 8004d04:	9201      	str	r2, [sp, #4]
 8004d06:	9b01      	ldr	r3, [sp, #4]
 8004d08:	61a3      	str	r3, [r4, #24]
 8004d0a:	2b00      	cmp	r3, #0
 8004d0c:	bf0c      	ite	eq
 8004d0e:	2201      	moveq	r2, #1
 8004d10:	2202      	movne	r2, #2
 8004d12:	6122      	str	r2, [r4, #16]
 8004d14:	b1ad      	cbz	r5, 8004d42 <__d2b+0x92>
 8004d16:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8004d1a:	4405      	add	r5, r0
 8004d1c:	6035      	str	r5, [r6, #0]
 8004d1e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8004d22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004d24:	6018      	str	r0, [r3, #0]
 8004d26:	4620      	mov	r0, r4
 8004d28:	b002      	add	sp, #8
 8004d2a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8004d2e:	6161      	str	r1, [r4, #20]
 8004d30:	e7e9      	b.n	8004d06 <__d2b+0x56>
 8004d32:	a801      	add	r0, sp, #4
 8004d34:	f7ff fcf9 	bl	800472a <__lo0bits>
 8004d38:	9b01      	ldr	r3, [sp, #4]
 8004d3a:	6163      	str	r3, [r4, #20]
 8004d3c:	3020      	adds	r0, #32
 8004d3e:	2201      	movs	r2, #1
 8004d40:	e7e7      	b.n	8004d12 <__d2b+0x62>
 8004d42:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004d46:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8004d4a:	6030      	str	r0, [r6, #0]
 8004d4c:	6918      	ldr	r0, [r3, #16]
 8004d4e:	f7ff fccd 	bl	80046ec <__hi0bits>
 8004d52:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004d56:	e7e4      	b.n	8004d22 <__d2b+0x72>
 8004d58:	080071dd 	.word	0x080071dd
 8004d5c:	080071ee 	.word	0x080071ee

08004d60 <__ratio>:
 8004d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d64:	b085      	sub	sp, #20
 8004d66:	e9cd 1000 	strd	r1, r0, [sp]
 8004d6a:	a902      	add	r1, sp, #8
 8004d6c:	f7ff ff56 	bl	8004c1c <__b2d>
 8004d70:	468b      	mov	fp, r1
 8004d72:	4606      	mov	r6, r0
 8004d74:	460f      	mov	r7, r1
 8004d76:	9800      	ldr	r0, [sp, #0]
 8004d78:	a903      	add	r1, sp, #12
 8004d7a:	f7ff ff4f 	bl	8004c1c <__b2d>
 8004d7e:	9b01      	ldr	r3, [sp, #4]
 8004d80:	4689      	mov	r9, r1
 8004d82:	460d      	mov	r5, r1
 8004d84:	6919      	ldr	r1, [r3, #16]
 8004d86:	9b00      	ldr	r3, [sp, #0]
 8004d88:	691b      	ldr	r3, [r3, #16]
 8004d8a:	1ac9      	subs	r1, r1, r3
 8004d8c:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8004d90:	1a9b      	subs	r3, r3, r2
 8004d92:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	bfcd      	iteet	gt
 8004d9a:	463a      	movgt	r2, r7
 8004d9c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004da0:	462a      	movle	r2, r5
 8004da2:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8004da6:	bfd8      	it	le
 8004da8:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8004dac:	4604      	mov	r4, r0
 8004dae:	4622      	mov	r2, r4
 8004db0:	464b      	mov	r3, r9
 8004db2:	4630      	mov	r0, r6
 8004db4:	4659      	mov	r1, fp
 8004db6:	f7fb fd49 	bl	800084c <__aeabi_ddiv>
 8004dba:	b005      	add	sp, #20
 8004dbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004dc0 <__copybits>:
 8004dc0:	3901      	subs	r1, #1
 8004dc2:	b570      	push	{r4, r5, r6, lr}
 8004dc4:	1149      	asrs	r1, r1, #5
 8004dc6:	6914      	ldr	r4, [r2, #16]
 8004dc8:	3101      	adds	r1, #1
 8004dca:	f102 0314 	add.w	r3, r2, #20
 8004dce:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004dd2:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004dd6:	1f05      	subs	r5, r0, #4
 8004dd8:	42a3      	cmp	r3, r4
 8004dda:	d30c      	bcc.n	8004df6 <__copybits+0x36>
 8004ddc:	1aa3      	subs	r3, r4, r2
 8004dde:	3b11      	subs	r3, #17
 8004de0:	f023 0303 	bic.w	r3, r3, #3
 8004de4:	3211      	adds	r2, #17
 8004de6:	42a2      	cmp	r2, r4
 8004de8:	bf88      	it	hi
 8004dea:	2300      	movhi	r3, #0
 8004dec:	4418      	add	r0, r3
 8004dee:	2300      	movs	r3, #0
 8004df0:	4288      	cmp	r0, r1
 8004df2:	d305      	bcc.n	8004e00 <__copybits+0x40>
 8004df4:	bd70      	pop	{r4, r5, r6, pc}
 8004df6:	f853 6b04 	ldr.w	r6, [r3], #4
 8004dfa:	f845 6f04 	str.w	r6, [r5, #4]!
 8004dfe:	e7eb      	b.n	8004dd8 <__copybits+0x18>
 8004e00:	f840 3b04 	str.w	r3, [r0], #4
 8004e04:	e7f4      	b.n	8004df0 <__copybits+0x30>

08004e06 <__any_on>:
 8004e06:	f100 0214 	add.w	r2, r0, #20
 8004e0a:	6900      	ldr	r0, [r0, #16]
 8004e0c:	114b      	asrs	r3, r1, #5
 8004e0e:	4298      	cmp	r0, r3
 8004e10:	b510      	push	{r4, lr}
 8004e12:	db11      	blt.n	8004e38 <__any_on+0x32>
 8004e14:	dd0a      	ble.n	8004e2c <__any_on+0x26>
 8004e16:	f011 011f 	ands.w	r1, r1, #31
 8004e1a:	d007      	beq.n	8004e2c <__any_on+0x26>
 8004e1c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004e20:	fa24 f001 	lsr.w	r0, r4, r1
 8004e24:	fa00 f101 	lsl.w	r1, r0, r1
 8004e28:	428c      	cmp	r4, r1
 8004e2a:	d10b      	bne.n	8004e44 <__any_on+0x3e>
 8004e2c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004e30:	4293      	cmp	r3, r2
 8004e32:	d803      	bhi.n	8004e3c <__any_on+0x36>
 8004e34:	2000      	movs	r0, #0
 8004e36:	bd10      	pop	{r4, pc}
 8004e38:	4603      	mov	r3, r0
 8004e3a:	e7f7      	b.n	8004e2c <__any_on+0x26>
 8004e3c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004e40:	2900      	cmp	r1, #0
 8004e42:	d0f5      	beq.n	8004e30 <__any_on+0x2a>
 8004e44:	2001      	movs	r0, #1
 8004e46:	e7f6      	b.n	8004e36 <__any_on+0x30>

08004e48 <sulp>:
 8004e48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e4c:	460f      	mov	r7, r1
 8004e4e:	4690      	mov	r8, r2
 8004e50:	f7ff fec4 	bl	8004bdc <__ulp>
 8004e54:	4604      	mov	r4, r0
 8004e56:	460d      	mov	r5, r1
 8004e58:	f1b8 0f00 	cmp.w	r8, #0
 8004e5c:	d011      	beq.n	8004e82 <sulp+0x3a>
 8004e5e:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8004e62:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004e66:	2b00      	cmp	r3, #0
 8004e68:	dd0b      	ble.n	8004e82 <sulp+0x3a>
 8004e6a:	051b      	lsls	r3, r3, #20
 8004e6c:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8004e70:	2400      	movs	r4, #0
 8004e72:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8004e76:	4622      	mov	r2, r4
 8004e78:	462b      	mov	r3, r5
 8004e7a:	f7fb fbbd 	bl	80005f8 <__aeabi_dmul>
 8004e7e:	4604      	mov	r4, r0
 8004e80:	460d      	mov	r5, r1
 8004e82:	4620      	mov	r0, r4
 8004e84:	4629      	mov	r1, r5
 8004e86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004e8a:	0000      	movs	r0, r0
 8004e8c:	0000      	movs	r0, r0
	...

08004e90 <_strtod_l>:
 8004e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e94:	b09f      	sub	sp, #124	@ 0x7c
 8004e96:	460c      	mov	r4, r1
 8004e98:	9217      	str	r2, [sp, #92]	@ 0x5c
 8004e9a:	2200      	movs	r2, #0
 8004e9c:	921a      	str	r2, [sp, #104]	@ 0x68
 8004e9e:	9005      	str	r0, [sp, #20]
 8004ea0:	f04f 0a00 	mov.w	sl, #0
 8004ea4:	f04f 0b00 	mov.w	fp, #0
 8004ea8:	460a      	mov	r2, r1
 8004eaa:	9219      	str	r2, [sp, #100]	@ 0x64
 8004eac:	7811      	ldrb	r1, [r2, #0]
 8004eae:	292b      	cmp	r1, #43	@ 0x2b
 8004eb0:	d048      	beq.n	8004f44 <_strtod_l+0xb4>
 8004eb2:	d836      	bhi.n	8004f22 <_strtod_l+0x92>
 8004eb4:	290d      	cmp	r1, #13
 8004eb6:	d830      	bhi.n	8004f1a <_strtod_l+0x8a>
 8004eb8:	2908      	cmp	r1, #8
 8004eba:	d830      	bhi.n	8004f1e <_strtod_l+0x8e>
 8004ebc:	2900      	cmp	r1, #0
 8004ebe:	d039      	beq.n	8004f34 <_strtod_l+0xa4>
 8004ec0:	2200      	movs	r2, #0
 8004ec2:	920e      	str	r2, [sp, #56]	@ 0x38
 8004ec4:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8004ec6:	782a      	ldrb	r2, [r5, #0]
 8004ec8:	2a30      	cmp	r2, #48	@ 0x30
 8004eca:	f040 80b0 	bne.w	800502e <_strtod_l+0x19e>
 8004ece:	786a      	ldrb	r2, [r5, #1]
 8004ed0:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004ed4:	2a58      	cmp	r2, #88	@ 0x58
 8004ed6:	d16c      	bne.n	8004fb2 <_strtod_l+0x122>
 8004ed8:	9302      	str	r3, [sp, #8]
 8004eda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004edc:	9301      	str	r3, [sp, #4]
 8004ede:	ab1a      	add	r3, sp, #104	@ 0x68
 8004ee0:	9300      	str	r3, [sp, #0]
 8004ee2:	4a8e      	ldr	r2, [pc, #568]	@ (800511c <_strtod_l+0x28c>)
 8004ee4:	9805      	ldr	r0, [sp, #20]
 8004ee6:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004ee8:	a919      	add	r1, sp, #100	@ 0x64
 8004eea:	f001 f911 	bl	8006110 <__gethex>
 8004eee:	f010 060f 	ands.w	r6, r0, #15
 8004ef2:	4604      	mov	r4, r0
 8004ef4:	d005      	beq.n	8004f02 <_strtod_l+0x72>
 8004ef6:	2e06      	cmp	r6, #6
 8004ef8:	d126      	bne.n	8004f48 <_strtod_l+0xb8>
 8004efa:	3501      	adds	r5, #1
 8004efc:	2300      	movs	r3, #0
 8004efe:	9519      	str	r5, [sp, #100]	@ 0x64
 8004f00:	930e      	str	r3, [sp, #56]	@ 0x38
 8004f02:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004f04:	2b00      	cmp	r3, #0
 8004f06:	f040 857e 	bne.w	8005a06 <_strtod_l+0xb76>
 8004f0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004f0c:	b1bb      	cbz	r3, 8004f3e <_strtod_l+0xae>
 8004f0e:	4650      	mov	r0, sl
 8004f10:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8004f14:	b01f      	add	sp, #124	@ 0x7c
 8004f16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f1a:	2920      	cmp	r1, #32
 8004f1c:	d1d0      	bne.n	8004ec0 <_strtod_l+0x30>
 8004f1e:	3201      	adds	r2, #1
 8004f20:	e7c3      	b.n	8004eaa <_strtod_l+0x1a>
 8004f22:	292d      	cmp	r1, #45	@ 0x2d
 8004f24:	d1cc      	bne.n	8004ec0 <_strtod_l+0x30>
 8004f26:	2101      	movs	r1, #1
 8004f28:	910e      	str	r1, [sp, #56]	@ 0x38
 8004f2a:	1c51      	adds	r1, r2, #1
 8004f2c:	9119      	str	r1, [sp, #100]	@ 0x64
 8004f2e:	7852      	ldrb	r2, [r2, #1]
 8004f30:	2a00      	cmp	r2, #0
 8004f32:	d1c7      	bne.n	8004ec4 <_strtod_l+0x34>
 8004f34:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004f36:	9419      	str	r4, [sp, #100]	@ 0x64
 8004f38:	2b00      	cmp	r3, #0
 8004f3a:	f040 8562 	bne.w	8005a02 <_strtod_l+0xb72>
 8004f3e:	4650      	mov	r0, sl
 8004f40:	4659      	mov	r1, fp
 8004f42:	e7e7      	b.n	8004f14 <_strtod_l+0x84>
 8004f44:	2100      	movs	r1, #0
 8004f46:	e7ef      	b.n	8004f28 <_strtod_l+0x98>
 8004f48:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004f4a:	b13a      	cbz	r2, 8004f5c <_strtod_l+0xcc>
 8004f4c:	2135      	movs	r1, #53	@ 0x35
 8004f4e:	a81c      	add	r0, sp, #112	@ 0x70
 8004f50:	f7ff ff36 	bl	8004dc0 <__copybits>
 8004f54:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004f56:	9805      	ldr	r0, [sp, #20]
 8004f58:	f7ff fb16 	bl	8004588 <_Bfree>
 8004f5c:	3e01      	subs	r6, #1
 8004f5e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8004f60:	2e04      	cmp	r6, #4
 8004f62:	d806      	bhi.n	8004f72 <_strtod_l+0xe2>
 8004f64:	e8df f006 	tbb	[pc, r6]
 8004f68:	201d0314 	.word	0x201d0314
 8004f6c:	14          	.byte	0x14
 8004f6d:	00          	.byte	0x00
 8004f6e:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8004f72:	05e1      	lsls	r1, r4, #23
 8004f74:	bf48      	it	mi
 8004f76:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8004f7a:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004f7e:	0d1b      	lsrs	r3, r3, #20
 8004f80:	051b      	lsls	r3, r3, #20
 8004f82:	2b00      	cmp	r3, #0
 8004f84:	d1bd      	bne.n	8004f02 <_strtod_l+0x72>
 8004f86:	f7fe fb35 	bl	80035f4 <__errno>
 8004f8a:	2322      	movs	r3, #34	@ 0x22
 8004f8c:	6003      	str	r3, [r0, #0]
 8004f8e:	e7b8      	b.n	8004f02 <_strtod_l+0x72>
 8004f90:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004f94:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8004f98:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8004f9c:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004fa0:	e7e7      	b.n	8004f72 <_strtod_l+0xe2>
 8004fa2:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 8005120 <_strtod_l+0x290>
 8004fa6:	e7e4      	b.n	8004f72 <_strtod_l+0xe2>
 8004fa8:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8004fac:	f04f 3aff 	mov.w	sl, #4294967295
 8004fb0:	e7df      	b.n	8004f72 <_strtod_l+0xe2>
 8004fb2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004fb4:	1c5a      	adds	r2, r3, #1
 8004fb6:	9219      	str	r2, [sp, #100]	@ 0x64
 8004fb8:	785b      	ldrb	r3, [r3, #1]
 8004fba:	2b30      	cmp	r3, #48	@ 0x30
 8004fbc:	d0f9      	beq.n	8004fb2 <_strtod_l+0x122>
 8004fbe:	2b00      	cmp	r3, #0
 8004fc0:	d09f      	beq.n	8004f02 <_strtod_l+0x72>
 8004fc2:	2301      	movs	r3, #1
 8004fc4:	2700      	movs	r7, #0
 8004fc6:	9308      	str	r3, [sp, #32]
 8004fc8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004fca:	930c      	str	r3, [sp, #48]	@ 0x30
 8004fcc:	970b      	str	r7, [sp, #44]	@ 0x2c
 8004fce:	46b9      	mov	r9, r7
 8004fd0:	220a      	movs	r2, #10
 8004fd2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8004fd4:	7805      	ldrb	r5, [r0, #0]
 8004fd6:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8004fda:	b2d9      	uxtb	r1, r3
 8004fdc:	2909      	cmp	r1, #9
 8004fde:	d928      	bls.n	8005032 <_strtod_l+0x1a2>
 8004fe0:	4950      	ldr	r1, [pc, #320]	@ (8005124 <_strtod_l+0x294>)
 8004fe2:	2201      	movs	r2, #1
 8004fe4:	f000 ffc4 	bl	8005f70 <strncmp>
 8004fe8:	2800      	cmp	r0, #0
 8004fea:	d032      	beq.n	8005052 <_strtod_l+0x1c2>
 8004fec:	2000      	movs	r0, #0
 8004fee:	462a      	mov	r2, r5
 8004ff0:	900a      	str	r0, [sp, #40]	@ 0x28
 8004ff2:	464d      	mov	r5, r9
 8004ff4:	4603      	mov	r3, r0
 8004ff6:	2a65      	cmp	r2, #101	@ 0x65
 8004ff8:	d001      	beq.n	8004ffe <_strtod_l+0x16e>
 8004ffa:	2a45      	cmp	r2, #69	@ 0x45
 8004ffc:	d114      	bne.n	8005028 <_strtod_l+0x198>
 8004ffe:	b91d      	cbnz	r5, 8005008 <_strtod_l+0x178>
 8005000:	9a08      	ldr	r2, [sp, #32]
 8005002:	4302      	orrs	r2, r0
 8005004:	d096      	beq.n	8004f34 <_strtod_l+0xa4>
 8005006:	2500      	movs	r5, #0
 8005008:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800500a:	1c62      	adds	r2, r4, #1
 800500c:	9219      	str	r2, [sp, #100]	@ 0x64
 800500e:	7862      	ldrb	r2, [r4, #1]
 8005010:	2a2b      	cmp	r2, #43	@ 0x2b
 8005012:	d07a      	beq.n	800510a <_strtod_l+0x27a>
 8005014:	2a2d      	cmp	r2, #45	@ 0x2d
 8005016:	d07e      	beq.n	8005116 <_strtod_l+0x286>
 8005018:	f04f 0c00 	mov.w	ip, #0
 800501c:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8005020:	2909      	cmp	r1, #9
 8005022:	f240 8085 	bls.w	8005130 <_strtod_l+0x2a0>
 8005026:	9419      	str	r4, [sp, #100]	@ 0x64
 8005028:	f04f 0800 	mov.w	r8, #0
 800502c:	e0a5      	b.n	800517a <_strtod_l+0x2ea>
 800502e:	2300      	movs	r3, #0
 8005030:	e7c8      	b.n	8004fc4 <_strtod_l+0x134>
 8005032:	f1b9 0f08 	cmp.w	r9, #8
 8005036:	bfd8      	it	le
 8005038:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 800503a:	f100 0001 	add.w	r0, r0, #1
 800503e:	bfda      	itte	le
 8005040:	fb02 3301 	mlale	r3, r2, r1, r3
 8005044:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8005046:	fb02 3707 	mlagt	r7, r2, r7, r3
 800504a:	f109 0901 	add.w	r9, r9, #1
 800504e:	9019      	str	r0, [sp, #100]	@ 0x64
 8005050:	e7bf      	b.n	8004fd2 <_strtod_l+0x142>
 8005052:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005054:	1c5a      	adds	r2, r3, #1
 8005056:	9219      	str	r2, [sp, #100]	@ 0x64
 8005058:	785a      	ldrb	r2, [r3, #1]
 800505a:	f1b9 0f00 	cmp.w	r9, #0
 800505e:	d03b      	beq.n	80050d8 <_strtod_l+0x248>
 8005060:	900a      	str	r0, [sp, #40]	@ 0x28
 8005062:	464d      	mov	r5, r9
 8005064:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8005068:	2b09      	cmp	r3, #9
 800506a:	d912      	bls.n	8005092 <_strtod_l+0x202>
 800506c:	2301      	movs	r3, #1
 800506e:	e7c2      	b.n	8004ff6 <_strtod_l+0x166>
 8005070:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005072:	1c5a      	adds	r2, r3, #1
 8005074:	9219      	str	r2, [sp, #100]	@ 0x64
 8005076:	785a      	ldrb	r2, [r3, #1]
 8005078:	3001      	adds	r0, #1
 800507a:	2a30      	cmp	r2, #48	@ 0x30
 800507c:	d0f8      	beq.n	8005070 <_strtod_l+0x1e0>
 800507e:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8005082:	2b08      	cmp	r3, #8
 8005084:	f200 84c4 	bhi.w	8005a10 <_strtod_l+0xb80>
 8005088:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800508a:	900a      	str	r0, [sp, #40]	@ 0x28
 800508c:	2000      	movs	r0, #0
 800508e:	930c      	str	r3, [sp, #48]	@ 0x30
 8005090:	4605      	mov	r5, r0
 8005092:	3a30      	subs	r2, #48	@ 0x30
 8005094:	f100 0301 	add.w	r3, r0, #1
 8005098:	d018      	beq.n	80050cc <_strtod_l+0x23c>
 800509a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800509c:	4419      	add	r1, r3
 800509e:	910a      	str	r1, [sp, #40]	@ 0x28
 80050a0:	462e      	mov	r6, r5
 80050a2:	f04f 0e0a 	mov.w	lr, #10
 80050a6:	1c71      	adds	r1, r6, #1
 80050a8:	eba1 0c05 	sub.w	ip, r1, r5
 80050ac:	4563      	cmp	r3, ip
 80050ae:	dc15      	bgt.n	80050dc <_strtod_l+0x24c>
 80050b0:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 80050b4:	182b      	adds	r3, r5, r0
 80050b6:	2b08      	cmp	r3, #8
 80050b8:	f105 0501 	add.w	r5, r5, #1
 80050bc:	4405      	add	r5, r0
 80050be:	dc1a      	bgt.n	80050f6 <_strtod_l+0x266>
 80050c0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80050c2:	230a      	movs	r3, #10
 80050c4:	fb03 2301 	mla	r3, r3, r1, r2
 80050c8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80050ca:	2300      	movs	r3, #0
 80050cc:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80050ce:	1c51      	adds	r1, r2, #1
 80050d0:	9119      	str	r1, [sp, #100]	@ 0x64
 80050d2:	7852      	ldrb	r2, [r2, #1]
 80050d4:	4618      	mov	r0, r3
 80050d6:	e7c5      	b.n	8005064 <_strtod_l+0x1d4>
 80050d8:	4648      	mov	r0, r9
 80050da:	e7ce      	b.n	800507a <_strtod_l+0x1ea>
 80050dc:	2e08      	cmp	r6, #8
 80050de:	dc05      	bgt.n	80050ec <_strtod_l+0x25c>
 80050e0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80050e2:	fb0e f606 	mul.w	r6, lr, r6
 80050e6:	960b      	str	r6, [sp, #44]	@ 0x2c
 80050e8:	460e      	mov	r6, r1
 80050ea:	e7dc      	b.n	80050a6 <_strtod_l+0x216>
 80050ec:	2910      	cmp	r1, #16
 80050ee:	bfd8      	it	le
 80050f0:	fb0e f707 	mulle.w	r7, lr, r7
 80050f4:	e7f8      	b.n	80050e8 <_strtod_l+0x258>
 80050f6:	2b0f      	cmp	r3, #15
 80050f8:	bfdc      	itt	le
 80050fa:	230a      	movle	r3, #10
 80050fc:	fb03 2707 	mlale	r7, r3, r7, r2
 8005100:	e7e3      	b.n	80050ca <_strtod_l+0x23a>
 8005102:	2300      	movs	r3, #0
 8005104:	930a      	str	r3, [sp, #40]	@ 0x28
 8005106:	2301      	movs	r3, #1
 8005108:	e77a      	b.n	8005000 <_strtod_l+0x170>
 800510a:	f04f 0c00 	mov.w	ip, #0
 800510e:	1ca2      	adds	r2, r4, #2
 8005110:	9219      	str	r2, [sp, #100]	@ 0x64
 8005112:	78a2      	ldrb	r2, [r4, #2]
 8005114:	e782      	b.n	800501c <_strtod_l+0x18c>
 8005116:	f04f 0c01 	mov.w	ip, #1
 800511a:	e7f8      	b.n	800510e <_strtod_l+0x27e>
 800511c:	08007414 	.word	0x08007414
 8005120:	7ff00000 	.word	0x7ff00000
 8005124:	08007247 	.word	0x08007247
 8005128:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800512a:	1c51      	adds	r1, r2, #1
 800512c:	9119      	str	r1, [sp, #100]	@ 0x64
 800512e:	7852      	ldrb	r2, [r2, #1]
 8005130:	2a30      	cmp	r2, #48	@ 0x30
 8005132:	d0f9      	beq.n	8005128 <_strtod_l+0x298>
 8005134:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8005138:	2908      	cmp	r1, #8
 800513a:	f63f af75 	bhi.w	8005028 <_strtod_l+0x198>
 800513e:	3a30      	subs	r2, #48	@ 0x30
 8005140:	9209      	str	r2, [sp, #36]	@ 0x24
 8005142:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8005144:	920f      	str	r2, [sp, #60]	@ 0x3c
 8005146:	f04f 080a 	mov.w	r8, #10
 800514a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800514c:	1c56      	adds	r6, r2, #1
 800514e:	9619      	str	r6, [sp, #100]	@ 0x64
 8005150:	7852      	ldrb	r2, [r2, #1]
 8005152:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8005156:	f1be 0f09 	cmp.w	lr, #9
 800515a:	d939      	bls.n	80051d0 <_strtod_l+0x340>
 800515c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800515e:	1a76      	subs	r6, r6, r1
 8005160:	2e08      	cmp	r6, #8
 8005162:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8005166:	dc03      	bgt.n	8005170 <_strtod_l+0x2e0>
 8005168:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800516a:	4588      	cmp	r8, r1
 800516c:	bfa8      	it	ge
 800516e:	4688      	movge	r8, r1
 8005170:	f1bc 0f00 	cmp.w	ip, #0
 8005174:	d001      	beq.n	800517a <_strtod_l+0x2ea>
 8005176:	f1c8 0800 	rsb	r8, r8, #0
 800517a:	2d00      	cmp	r5, #0
 800517c:	d14e      	bne.n	800521c <_strtod_l+0x38c>
 800517e:	9908      	ldr	r1, [sp, #32]
 8005180:	4308      	orrs	r0, r1
 8005182:	f47f aebe 	bne.w	8004f02 <_strtod_l+0x72>
 8005186:	2b00      	cmp	r3, #0
 8005188:	f47f aed4 	bne.w	8004f34 <_strtod_l+0xa4>
 800518c:	2a69      	cmp	r2, #105	@ 0x69
 800518e:	d028      	beq.n	80051e2 <_strtod_l+0x352>
 8005190:	dc25      	bgt.n	80051de <_strtod_l+0x34e>
 8005192:	2a49      	cmp	r2, #73	@ 0x49
 8005194:	d025      	beq.n	80051e2 <_strtod_l+0x352>
 8005196:	2a4e      	cmp	r2, #78	@ 0x4e
 8005198:	f47f aecc 	bne.w	8004f34 <_strtod_l+0xa4>
 800519c:	4999      	ldr	r1, [pc, #612]	@ (8005404 <_strtod_l+0x574>)
 800519e:	a819      	add	r0, sp, #100	@ 0x64
 80051a0:	f001 f9d8 	bl	8006554 <__match>
 80051a4:	2800      	cmp	r0, #0
 80051a6:	f43f aec5 	beq.w	8004f34 <_strtod_l+0xa4>
 80051aa:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80051ac:	781b      	ldrb	r3, [r3, #0]
 80051ae:	2b28      	cmp	r3, #40	@ 0x28
 80051b0:	d12e      	bne.n	8005210 <_strtod_l+0x380>
 80051b2:	4995      	ldr	r1, [pc, #596]	@ (8005408 <_strtod_l+0x578>)
 80051b4:	aa1c      	add	r2, sp, #112	@ 0x70
 80051b6:	a819      	add	r0, sp, #100	@ 0x64
 80051b8:	f001 f9e0 	bl	800657c <__hexnan>
 80051bc:	2805      	cmp	r0, #5
 80051be:	d127      	bne.n	8005210 <_strtod_l+0x380>
 80051c0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80051c2:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 80051c6:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 80051ca:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 80051ce:	e698      	b.n	8004f02 <_strtod_l+0x72>
 80051d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80051d2:	fb08 2101 	mla	r1, r8, r1, r2
 80051d6:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 80051da:	9209      	str	r2, [sp, #36]	@ 0x24
 80051dc:	e7b5      	b.n	800514a <_strtod_l+0x2ba>
 80051de:	2a6e      	cmp	r2, #110	@ 0x6e
 80051e0:	e7da      	b.n	8005198 <_strtod_l+0x308>
 80051e2:	498a      	ldr	r1, [pc, #552]	@ (800540c <_strtod_l+0x57c>)
 80051e4:	a819      	add	r0, sp, #100	@ 0x64
 80051e6:	f001 f9b5 	bl	8006554 <__match>
 80051ea:	2800      	cmp	r0, #0
 80051ec:	f43f aea2 	beq.w	8004f34 <_strtod_l+0xa4>
 80051f0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80051f2:	4987      	ldr	r1, [pc, #540]	@ (8005410 <_strtod_l+0x580>)
 80051f4:	3b01      	subs	r3, #1
 80051f6:	a819      	add	r0, sp, #100	@ 0x64
 80051f8:	9319      	str	r3, [sp, #100]	@ 0x64
 80051fa:	f001 f9ab 	bl	8006554 <__match>
 80051fe:	b910      	cbnz	r0, 8005206 <_strtod_l+0x376>
 8005200:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005202:	3301      	adds	r3, #1
 8005204:	9319      	str	r3, [sp, #100]	@ 0x64
 8005206:	f8df b20c 	ldr.w	fp, [pc, #524]	@ 8005414 <_strtod_l+0x584>
 800520a:	f04f 0a00 	mov.w	sl, #0
 800520e:	e678      	b.n	8004f02 <_strtod_l+0x72>
 8005210:	4881      	ldr	r0, [pc, #516]	@ (8005418 <_strtod_l+0x588>)
 8005212:	f000 fedd 	bl	8005fd0 <nan>
 8005216:	4682      	mov	sl, r0
 8005218:	468b      	mov	fp, r1
 800521a:	e672      	b.n	8004f02 <_strtod_l+0x72>
 800521c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800521e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8005220:	eba8 0303 	sub.w	r3, r8, r3
 8005224:	f1b9 0f00 	cmp.w	r9, #0
 8005228:	bf08      	it	eq
 800522a:	46a9      	moveq	r9, r5
 800522c:	2d10      	cmp	r5, #16
 800522e:	9309      	str	r3, [sp, #36]	@ 0x24
 8005230:	462c      	mov	r4, r5
 8005232:	bfa8      	it	ge
 8005234:	2410      	movge	r4, #16
 8005236:	f7fb f965 	bl	8000504 <__aeabi_ui2d>
 800523a:	2d09      	cmp	r5, #9
 800523c:	4682      	mov	sl, r0
 800523e:	468b      	mov	fp, r1
 8005240:	dc11      	bgt.n	8005266 <_strtod_l+0x3d6>
 8005242:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005244:	2b00      	cmp	r3, #0
 8005246:	f43f ae5c 	beq.w	8004f02 <_strtod_l+0x72>
 800524a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800524c:	dd76      	ble.n	800533c <_strtod_l+0x4ac>
 800524e:	2b16      	cmp	r3, #22
 8005250:	dc5d      	bgt.n	800530e <_strtod_l+0x47e>
 8005252:	4972      	ldr	r1, [pc, #456]	@ (800541c <_strtod_l+0x58c>)
 8005254:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005258:	e9d1 0100 	ldrd	r0, r1, [r1]
 800525c:	4652      	mov	r2, sl
 800525e:	465b      	mov	r3, fp
 8005260:	f7fb f9ca 	bl	80005f8 <__aeabi_dmul>
 8005264:	e7d7      	b.n	8005216 <_strtod_l+0x386>
 8005266:	4b6d      	ldr	r3, [pc, #436]	@ (800541c <_strtod_l+0x58c>)
 8005268:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800526c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8005270:	f7fb f9c2 	bl	80005f8 <__aeabi_dmul>
 8005274:	4682      	mov	sl, r0
 8005276:	4638      	mov	r0, r7
 8005278:	468b      	mov	fp, r1
 800527a:	f7fb f943 	bl	8000504 <__aeabi_ui2d>
 800527e:	4602      	mov	r2, r0
 8005280:	460b      	mov	r3, r1
 8005282:	4650      	mov	r0, sl
 8005284:	4659      	mov	r1, fp
 8005286:	f7fb f801 	bl	800028c <__adddf3>
 800528a:	2d0f      	cmp	r5, #15
 800528c:	4682      	mov	sl, r0
 800528e:	468b      	mov	fp, r1
 8005290:	ddd7      	ble.n	8005242 <_strtod_l+0x3b2>
 8005292:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005294:	1b2c      	subs	r4, r5, r4
 8005296:	441c      	add	r4, r3
 8005298:	2c00      	cmp	r4, #0
 800529a:	f340 8093 	ble.w	80053c4 <_strtod_l+0x534>
 800529e:	f014 030f 	ands.w	r3, r4, #15
 80052a2:	d00a      	beq.n	80052ba <_strtod_l+0x42a>
 80052a4:	495d      	ldr	r1, [pc, #372]	@ (800541c <_strtod_l+0x58c>)
 80052a6:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80052aa:	4652      	mov	r2, sl
 80052ac:	465b      	mov	r3, fp
 80052ae:	e9d1 0100 	ldrd	r0, r1, [r1]
 80052b2:	f7fb f9a1 	bl	80005f8 <__aeabi_dmul>
 80052b6:	4682      	mov	sl, r0
 80052b8:	468b      	mov	fp, r1
 80052ba:	f034 040f 	bics.w	r4, r4, #15
 80052be:	d073      	beq.n	80053a8 <_strtod_l+0x518>
 80052c0:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 80052c4:	dd49      	ble.n	800535a <_strtod_l+0x4ca>
 80052c6:	2400      	movs	r4, #0
 80052c8:	46a0      	mov	r8, r4
 80052ca:	940b      	str	r4, [sp, #44]	@ 0x2c
 80052cc:	46a1      	mov	r9, r4
 80052ce:	9a05      	ldr	r2, [sp, #20]
 80052d0:	f8df b140 	ldr.w	fp, [pc, #320]	@ 8005414 <_strtod_l+0x584>
 80052d4:	2322      	movs	r3, #34	@ 0x22
 80052d6:	6013      	str	r3, [r2, #0]
 80052d8:	f04f 0a00 	mov.w	sl, #0
 80052dc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80052de:	2b00      	cmp	r3, #0
 80052e0:	f43f ae0f 	beq.w	8004f02 <_strtod_l+0x72>
 80052e4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80052e6:	9805      	ldr	r0, [sp, #20]
 80052e8:	f7ff f94e 	bl	8004588 <_Bfree>
 80052ec:	9805      	ldr	r0, [sp, #20]
 80052ee:	4649      	mov	r1, r9
 80052f0:	f7ff f94a 	bl	8004588 <_Bfree>
 80052f4:	9805      	ldr	r0, [sp, #20]
 80052f6:	4641      	mov	r1, r8
 80052f8:	f7ff f946 	bl	8004588 <_Bfree>
 80052fc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80052fe:	9805      	ldr	r0, [sp, #20]
 8005300:	f7ff f942 	bl	8004588 <_Bfree>
 8005304:	9805      	ldr	r0, [sp, #20]
 8005306:	4621      	mov	r1, r4
 8005308:	f7ff f93e 	bl	8004588 <_Bfree>
 800530c:	e5f9      	b.n	8004f02 <_strtod_l+0x72>
 800530e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005310:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8005314:	4293      	cmp	r3, r2
 8005316:	dbbc      	blt.n	8005292 <_strtod_l+0x402>
 8005318:	4c40      	ldr	r4, [pc, #256]	@ (800541c <_strtod_l+0x58c>)
 800531a:	f1c5 050f 	rsb	r5, r5, #15
 800531e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8005322:	4652      	mov	r2, sl
 8005324:	465b      	mov	r3, fp
 8005326:	e9d1 0100 	ldrd	r0, r1, [r1]
 800532a:	f7fb f965 	bl	80005f8 <__aeabi_dmul>
 800532e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005330:	1b5d      	subs	r5, r3, r5
 8005332:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8005336:	e9d4 2300 	ldrd	r2, r3, [r4]
 800533a:	e791      	b.n	8005260 <_strtod_l+0x3d0>
 800533c:	3316      	adds	r3, #22
 800533e:	dba8      	blt.n	8005292 <_strtod_l+0x402>
 8005340:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005342:	eba3 0808 	sub.w	r8, r3, r8
 8005346:	4b35      	ldr	r3, [pc, #212]	@ (800541c <_strtod_l+0x58c>)
 8005348:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800534c:	e9d8 2300 	ldrd	r2, r3, [r8]
 8005350:	4650      	mov	r0, sl
 8005352:	4659      	mov	r1, fp
 8005354:	f7fb fa7a 	bl	800084c <__aeabi_ddiv>
 8005358:	e75d      	b.n	8005216 <_strtod_l+0x386>
 800535a:	2300      	movs	r3, #0
 800535c:	4f30      	ldr	r7, [pc, #192]	@ (8005420 <_strtod_l+0x590>)
 800535e:	1124      	asrs	r4, r4, #4
 8005360:	4650      	mov	r0, sl
 8005362:	4659      	mov	r1, fp
 8005364:	461e      	mov	r6, r3
 8005366:	2c01      	cmp	r4, #1
 8005368:	dc21      	bgt.n	80053ae <_strtod_l+0x51e>
 800536a:	b10b      	cbz	r3, 8005370 <_strtod_l+0x4e0>
 800536c:	4682      	mov	sl, r0
 800536e:	468b      	mov	fp, r1
 8005370:	492b      	ldr	r1, [pc, #172]	@ (8005420 <_strtod_l+0x590>)
 8005372:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8005376:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800537a:	4652      	mov	r2, sl
 800537c:	465b      	mov	r3, fp
 800537e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005382:	f7fb f939 	bl	80005f8 <__aeabi_dmul>
 8005386:	4b23      	ldr	r3, [pc, #140]	@ (8005414 <_strtod_l+0x584>)
 8005388:	460a      	mov	r2, r1
 800538a:	400b      	ands	r3, r1
 800538c:	4925      	ldr	r1, [pc, #148]	@ (8005424 <_strtod_l+0x594>)
 800538e:	428b      	cmp	r3, r1
 8005390:	4682      	mov	sl, r0
 8005392:	d898      	bhi.n	80052c6 <_strtod_l+0x436>
 8005394:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8005398:	428b      	cmp	r3, r1
 800539a:	bf86      	itte	hi
 800539c:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 8005428 <_strtod_l+0x598>
 80053a0:	f04f 3aff 	movhi.w	sl, #4294967295
 80053a4:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 80053a8:	2300      	movs	r3, #0
 80053aa:	9308      	str	r3, [sp, #32]
 80053ac:	e076      	b.n	800549c <_strtod_l+0x60c>
 80053ae:	07e2      	lsls	r2, r4, #31
 80053b0:	d504      	bpl.n	80053bc <_strtod_l+0x52c>
 80053b2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80053b6:	f7fb f91f 	bl	80005f8 <__aeabi_dmul>
 80053ba:	2301      	movs	r3, #1
 80053bc:	3601      	adds	r6, #1
 80053be:	1064      	asrs	r4, r4, #1
 80053c0:	3708      	adds	r7, #8
 80053c2:	e7d0      	b.n	8005366 <_strtod_l+0x4d6>
 80053c4:	d0f0      	beq.n	80053a8 <_strtod_l+0x518>
 80053c6:	4264      	negs	r4, r4
 80053c8:	f014 020f 	ands.w	r2, r4, #15
 80053cc:	d00a      	beq.n	80053e4 <_strtod_l+0x554>
 80053ce:	4b13      	ldr	r3, [pc, #76]	@ (800541c <_strtod_l+0x58c>)
 80053d0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80053d4:	4650      	mov	r0, sl
 80053d6:	4659      	mov	r1, fp
 80053d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053dc:	f7fb fa36 	bl	800084c <__aeabi_ddiv>
 80053e0:	4682      	mov	sl, r0
 80053e2:	468b      	mov	fp, r1
 80053e4:	1124      	asrs	r4, r4, #4
 80053e6:	d0df      	beq.n	80053a8 <_strtod_l+0x518>
 80053e8:	2c1f      	cmp	r4, #31
 80053ea:	dd1f      	ble.n	800542c <_strtod_l+0x59c>
 80053ec:	2400      	movs	r4, #0
 80053ee:	46a0      	mov	r8, r4
 80053f0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80053f2:	46a1      	mov	r9, r4
 80053f4:	9a05      	ldr	r2, [sp, #20]
 80053f6:	2322      	movs	r3, #34	@ 0x22
 80053f8:	f04f 0a00 	mov.w	sl, #0
 80053fc:	f04f 0b00 	mov.w	fp, #0
 8005400:	6013      	str	r3, [r2, #0]
 8005402:	e76b      	b.n	80052dc <_strtod_l+0x44c>
 8005404:	08007135 	.word	0x08007135
 8005408:	08007400 	.word	0x08007400
 800540c:	0800712d 	.word	0x0800712d
 8005410:	08007164 	.word	0x08007164
 8005414:	7ff00000 	.word	0x7ff00000
 8005418:	0800729d 	.word	0x0800729d
 800541c:	08007338 	.word	0x08007338
 8005420:	08007310 	.word	0x08007310
 8005424:	7ca00000 	.word	0x7ca00000
 8005428:	7fefffff 	.word	0x7fefffff
 800542c:	f014 0310 	ands.w	r3, r4, #16
 8005430:	bf18      	it	ne
 8005432:	236a      	movne	r3, #106	@ 0x6a
 8005434:	4e78      	ldr	r6, [pc, #480]	@ (8005618 <_strtod_l+0x788>)
 8005436:	9308      	str	r3, [sp, #32]
 8005438:	4650      	mov	r0, sl
 800543a:	4659      	mov	r1, fp
 800543c:	2300      	movs	r3, #0
 800543e:	07e7      	lsls	r7, r4, #31
 8005440:	d504      	bpl.n	800544c <_strtod_l+0x5bc>
 8005442:	e9d6 2300 	ldrd	r2, r3, [r6]
 8005446:	f7fb f8d7 	bl	80005f8 <__aeabi_dmul>
 800544a:	2301      	movs	r3, #1
 800544c:	1064      	asrs	r4, r4, #1
 800544e:	f106 0608 	add.w	r6, r6, #8
 8005452:	d1f4      	bne.n	800543e <_strtod_l+0x5ae>
 8005454:	b10b      	cbz	r3, 800545a <_strtod_l+0x5ca>
 8005456:	4682      	mov	sl, r0
 8005458:	468b      	mov	fp, r1
 800545a:	9b08      	ldr	r3, [sp, #32]
 800545c:	b1b3      	cbz	r3, 800548c <_strtod_l+0x5fc>
 800545e:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8005462:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8005466:	2b00      	cmp	r3, #0
 8005468:	4659      	mov	r1, fp
 800546a:	dd0f      	ble.n	800548c <_strtod_l+0x5fc>
 800546c:	2b1f      	cmp	r3, #31
 800546e:	dd58      	ble.n	8005522 <_strtod_l+0x692>
 8005470:	2b34      	cmp	r3, #52	@ 0x34
 8005472:	bfde      	ittt	le
 8005474:	f04f 33ff 	movle.w	r3, #4294967295
 8005478:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800547c:	4093      	lslle	r3, r2
 800547e:	f04f 0a00 	mov.w	sl, #0
 8005482:	bfcc      	ite	gt
 8005484:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8005488:	ea03 0b01 	andle.w	fp, r3, r1
 800548c:	2200      	movs	r2, #0
 800548e:	2300      	movs	r3, #0
 8005490:	4650      	mov	r0, sl
 8005492:	4659      	mov	r1, fp
 8005494:	f7fb fb18 	bl	8000ac8 <__aeabi_dcmpeq>
 8005498:	2800      	cmp	r0, #0
 800549a:	d1a7      	bne.n	80053ec <_strtod_l+0x55c>
 800549c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800549e:	9300      	str	r3, [sp, #0]
 80054a0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80054a2:	9805      	ldr	r0, [sp, #20]
 80054a4:	462b      	mov	r3, r5
 80054a6:	464a      	mov	r2, r9
 80054a8:	f7ff f8d6 	bl	8004658 <__s2b>
 80054ac:	900b      	str	r0, [sp, #44]	@ 0x2c
 80054ae:	2800      	cmp	r0, #0
 80054b0:	f43f af09 	beq.w	80052c6 <_strtod_l+0x436>
 80054b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80054b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80054b8:	2a00      	cmp	r2, #0
 80054ba:	eba3 0308 	sub.w	r3, r3, r8
 80054be:	bfa8      	it	ge
 80054c0:	2300      	movge	r3, #0
 80054c2:	9312      	str	r3, [sp, #72]	@ 0x48
 80054c4:	2400      	movs	r4, #0
 80054c6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80054ca:	9316      	str	r3, [sp, #88]	@ 0x58
 80054cc:	46a0      	mov	r8, r4
 80054ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80054d0:	9805      	ldr	r0, [sp, #20]
 80054d2:	6859      	ldr	r1, [r3, #4]
 80054d4:	f7ff f818 	bl	8004508 <_Balloc>
 80054d8:	4681      	mov	r9, r0
 80054da:	2800      	cmp	r0, #0
 80054dc:	f43f aef7 	beq.w	80052ce <_strtod_l+0x43e>
 80054e0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80054e2:	691a      	ldr	r2, [r3, #16]
 80054e4:	3202      	adds	r2, #2
 80054e6:	f103 010c 	add.w	r1, r3, #12
 80054ea:	0092      	lsls	r2, r2, #2
 80054ec:	300c      	adds	r0, #12
 80054ee:	f000 fd61 	bl	8005fb4 <memcpy>
 80054f2:	ab1c      	add	r3, sp, #112	@ 0x70
 80054f4:	9301      	str	r3, [sp, #4]
 80054f6:	ab1b      	add	r3, sp, #108	@ 0x6c
 80054f8:	9300      	str	r3, [sp, #0]
 80054fa:	9805      	ldr	r0, [sp, #20]
 80054fc:	4652      	mov	r2, sl
 80054fe:	465b      	mov	r3, fp
 8005500:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8005504:	f7ff fbd4 	bl	8004cb0 <__d2b>
 8005508:	901a      	str	r0, [sp, #104]	@ 0x68
 800550a:	2800      	cmp	r0, #0
 800550c:	f43f aedf 	beq.w	80052ce <_strtod_l+0x43e>
 8005510:	9805      	ldr	r0, [sp, #20]
 8005512:	2101      	movs	r1, #1
 8005514:	f7ff f936 	bl	8004784 <__i2b>
 8005518:	4680      	mov	r8, r0
 800551a:	b948      	cbnz	r0, 8005530 <_strtod_l+0x6a0>
 800551c:	f04f 0800 	mov.w	r8, #0
 8005520:	e6d5      	b.n	80052ce <_strtod_l+0x43e>
 8005522:	f04f 32ff 	mov.w	r2, #4294967295
 8005526:	fa02 f303 	lsl.w	r3, r2, r3
 800552a:	ea03 0a0a 	and.w	sl, r3, sl
 800552e:	e7ad      	b.n	800548c <_strtod_l+0x5fc>
 8005530:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8005532:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8005534:	2d00      	cmp	r5, #0
 8005536:	bfab      	itete	ge
 8005538:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 800553a:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800553c:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 800553e:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8005540:	bfac      	ite	ge
 8005542:	18ef      	addge	r7, r5, r3
 8005544:	1b5e      	sublt	r6, r3, r5
 8005546:	9b08      	ldr	r3, [sp, #32]
 8005548:	1aed      	subs	r5, r5, r3
 800554a:	4415      	add	r5, r2
 800554c:	4b33      	ldr	r3, [pc, #204]	@ (800561c <_strtod_l+0x78c>)
 800554e:	3d01      	subs	r5, #1
 8005550:	429d      	cmp	r5, r3
 8005552:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8005556:	da50      	bge.n	80055fa <_strtod_l+0x76a>
 8005558:	1b5b      	subs	r3, r3, r5
 800555a:	2b1f      	cmp	r3, #31
 800555c:	eba2 0203 	sub.w	r2, r2, r3
 8005560:	f04f 0101 	mov.w	r1, #1
 8005564:	dc3d      	bgt.n	80055e2 <_strtod_l+0x752>
 8005566:	fa01 f303 	lsl.w	r3, r1, r3
 800556a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800556c:	2300      	movs	r3, #0
 800556e:	9310      	str	r3, [sp, #64]	@ 0x40
 8005570:	18bd      	adds	r5, r7, r2
 8005572:	9b08      	ldr	r3, [sp, #32]
 8005574:	42af      	cmp	r7, r5
 8005576:	4416      	add	r6, r2
 8005578:	441e      	add	r6, r3
 800557a:	463b      	mov	r3, r7
 800557c:	bfa8      	it	ge
 800557e:	462b      	movge	r3, r5
 8005580:	42b3      	cmp	r3, r6
 8005582:	bfa8      	it	ge
 8005584:	4633      	movge	r3, r6
 8005586:	2b00      	cmp	r3, #0
 8005588:	bfc2      	ittt	gt
 800558a:	1aed      	subgt	r5, r5, r3
 800558c:	1af6      	subgt	r6, r6, r3
 800558e:	1aff      	subgt	r7, r7, r3
 8005590:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8005592:	2b00      	cmp	r3, #0
 8005594:	dd16      	ble.n	80055c4 <_strtod_l+0x734>
 8005596:	4641      	mov	r1, r8
 8005598:	9805      	ldr	r0, [sp, #20]
 800559a:	461a      	mov	r2, r3
 800559c:	f7ff f9aa 	bl	80048f4 <__pow5mult>
 80055a0:	4680      	mov	r8, r0
 80055a2:	2800      	cmp	r0, #0
 80055a4:	d0ba      	beq.n	800551c <_strtod_l+0x68c>
 80055a6:	4601      	mov	r1, r0
 80055a8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80055aa:	9805      	ldr	r0, [sp, #20]
 80055ac:	f7ff f900 	bl	80047b0 <__multiply>
 80055b0:	900a      	str	r0, [sp, #40]	@ 0x28
 80055b2:	2800      	cmp	r0, #0
 80055b4:	f43f ae8b 	beq.w	80052ce <_strtod_l+0x43e>
 80055b8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80055ba:	9805      	ldr	r0, [sp, #20]
 80055bc:	f7fe ffe4 	bl	8004588 <_Bfree>
 80055c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80055c2:	931a      	str	r3, [sp, #104]	@ 0x68
 80055c4:	2d00      	cmp	r5, #0
 80055c6:	dc1d      	bgt.n	8005604 <_strtod_l+0x774>
 80055c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80055ca:	2b00      	cmp	r3, #0
 80055cc:	dd28      	ble.n	8005620 <_strtod_l+0x790>
 80055ce:	4649      	mov	r1, r9
 80055d0:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80055d2:	9805      	ldr	r0, [sp, #20]
 80055d4:	f7ff f98e 	bl	80048f4 <__pow5mult>
 80055d8:	4681      	mov	r9, r0
 80055da:	bb08      	cbnz	r0, 8005620 <_strtod_l+0x790>
 80055dc:	f04f 0900 	mov.w	r9, #0
 80055e0:	e675      	b.n	80052ce <_strtod_l+0x43e>
 80055e2:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 80055e6:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 80055ea:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 80055ee:	35e2      	adds	r5, #226	@ 0xe2
 80055f0:	fa01 f305 	lsl.w	r3, r1, r5
 80055f4:	9310      	str	r3, [sp, #64]	@ 0x40
 80055f6:	9113      	str	r1, [sp, #76]	@ 0x4c
 80055f8:	e7ba      	b.n	8005570 <_strtod_l+0x6e0>
 80055fa:	2300      	movs	r3, #0
 80055fc:	9310      	str	r3, [sp, #64]	@ 0x40
 80055fe:	2301      	movs	r3, #1
 8005600:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005602:	e7b5      	b.n	8005570 <_strtod_l+0x6e0>
 8005604:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005606:	9805      	ldr	r0, [sp, #20]
 8005608:	462a      	mov	r2, r5
 800560a:	f7ff f9cd 	bl	80049a8 <__lshift>
 800560e:	901a      	str	r0, [sp, #104]	@ 0x68
 8005610:	2800      	cmp	r0, #0
 8005612:	d1d9      	bne.n	80055c8 <_strtod_l+0x738>
 8005614:	e65b      	b.n	80052ce <_strtod_l+0x43e>
 8005616:	bf00      	nop
 8005618:	08007428 	.word	0x08007428
 800561c:	fffffc02 	.word	0xfffffc02
 8005620:	2e00      	cmp	r6, #0
 8005622:	dd07      	ble.n	8005634 <_strtod_l+0x7a4>
 8005624:	4649      	mov	r1, r9
 8005626:	9805      	ldr	r0, [sp, #20]
 8005628:	4632      	mov	r2, r6
 800562a:	f7ff f9bd 	bl	80049a8 <__lshift>
 800562e:	4681      	mov	r9, r0
 8005630:	2800      	cmp	r0, #0
 8005632:	d0d3      	beq.n	80055dc <_strtod_l+0x74c>
 8005634:	2f00      	cmp	r7, #0
 8005636:	dd08      	ble.n	800564a <_strtod_l+0x7ba>
 8005638:	4641      	mov	r1, r8
 800563a:	9805      	ldr	r0, [sp, #20]
 800563c:	463a      	mov	r2, r7
 800563e:	f7ff f9b3 	bl	80049a8 <__lshift>
 8005642:	4680      	mov	r8, r0
 8005644:	2800      	cmp	r0, #0
 8005646:	f43f ae42 	beq.w	80052ce <_strtod_l+0x43e>
 800564a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800564c:	9805      	ldr	r0, [sp, #20]
 800564e:	464a      	mov	r2, r9
 8005650:	f7ff fa32 	bl	8004ab8 <__mdiff>
 8005654:	4604      	mov	r4, r0
 8005656:	2800      	cmp	r0, #0
 8005658:	f43f ae39 	beq.w	80052ce <_strtod_l+0x43e>
 800565c:	68c3      	ldr	r3, [r0, #12]
 800565e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005660:	2300      	movs	r3, #0
 8005662:	60c3      	str	r3, [r0, #12]
 8005664:	4641      	mov	r1, r8
 8005666:	f7ff fa0b 	bl	8004a80 <__mcmp>
 800566a:	2800      	cmp	r0, #0
 800566c:	da3d      	bge.n	80056ea <_strtod_l+0x85a>
 800566e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005670:	ea53 030a 	orrs.w	r3, r3, sl
 8005674:	d163      	bne.n	800573e <_strtod_l+0x8ae>
 8005676:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800567a:	2b00      	cmp	r3, #0
 800567c:	d15f      	bne.n	800573e <_strtod_l+0x8ae>
 800567e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005682:	0d1b      	lsrs	r3, r3, #20
 8005684:	051b      	lsls	r3, r3, #20
 8005686:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800568a:	d958      	bls.n	800573e <_strtod_l+0x8ae>
 800568c:	6963      	ldr	r3, [r4, #20]
 800568e:	b913      	cbnz	r3, 8005696 <_strtod_l+0x806>
 8005690:	6923      	ldr	r3, [r4, #16]
 8005692:	2b01      	cmp	r3, #1
 8005694:	dd53      	ble.n	800573e <_strtod_l+0x8ae>
 8005696:	4621      	mov	r1, r4
 8005698:	2201      	movs	r2, #1
 800569a:	9805      	ldr	r0, [sp, #20]
 800569c:	f7ff f984 	bl	80049a8 <__lshift>
 80056a0:	4641      	mov	r1, r8
 80056a2:	4604      	mov	r4, r0
 80056a4:	f7ff f9ec 	bl	8004a80 <__mcmp>
 80056a8:	2800      	cmp	r0, #0
 80056aa:	dd48      	ble.n	800573e <_strtod_l+0x8ae>
 80056ac:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80056b0:	9a08      	ldr	r2, [sp, #32]
 80056b2:	0d1b      	lsrs	r3, r3, #20
 80056b4:	051b      	lsls	r3, r3, #20
 80056b6:	2a00      	cmp	r2, #0
 80056b8:	d062      	beq.n	8005780 <_strtod_l+0x8f0>
 80056ba:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80056be:	d85f      	bhi.n	8005780 <_strtod_l+0x8f0>
 80056c0:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 80056c4:	f67f ae96 	bls.w	80053f4 <_strtod_l+0x564>
 80056c8:	4ba3      	ldr	r3, [pc, #652]	@ (8005958 <_strtod_l+0xac8>)
 80056ca:	4650      	mov	r0, sl
 80056cc:	4659      	mov	r1, fp
 80056ce:	2200      	movs	r2, #0
 80056d0:	f7fa ff92 	bl	80005f8 <__aeabi_dmul>
 80056d4:	4ba1      	ldr	r3, [pc, #644]	@ (800595c <_strtod_l+0xacc>)
 80056d6:	400b      	ands	r3, r1
 80056d8:	4682      	mov	sl, r0
 80056da:	468b      	mov	fp, r1
 80056dc:	2b00      	cmp	r3, #0
 80056de:	f47f ae01 	bne.w	80052e4 <_strtod_l+0x454>
 80056e2:	9a05      	ldr	r2, [sp, #20]
 80056e4:	2322      	movs	r3, #34	@ 0x22
 80056e6:	6013      	str	r3, [r2, #0]
 80056e8:	e5fc      	b.n	80052e4 <_strtod_l+0x454>
 80056ea:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 80056ee:	d165      	bne.n	80057bc <_strtod_l+0x92c>
 80056f0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80056f2:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80056f6:	b35a      	cbz	r2, 8005750 <_strtod_l+0x8c0>
 80056f8:	4a99      	ldr	r2, [pc, #612]	@ (8005960 <_strtod_l+0xad0>)
 80056fa:	4293      	cmp	r3, r2
 80056fc:	d12b      	bne.n	8005756 <_strtod_l+0x8c6>
 80056fe:	9b08      	ldr	r3, [sp, #32]
 8005700:	4651      	mov	r1, sl
 8005702:	b303      	cbz	r3, 8005746 <_strtod_l+0x8b6>
 8005704:	4b95      	ldr	r3, [pc, #596]	@ (800595c <_strtod_l+0xacc>)
 8005706:	465a      	mov	r2, fp
 8005708:	4013      	ands	r3, r2
 800570a:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800570e:	f04f 32ff 	mov.w	r2, #4294967295
 8005712:	d81b      	bhi.n	800574c <_strtod_l+0x8bc>
 8005714:	0d1b      	lsrs	r3, r3, #20
 8005716:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800571a:	fa02 f303 	lsl.w	r3, r2, r3
 800571e:	4299      	cmp	r1, r3
 8005720:	d119      	bne.n	8005756 <_strtod_l+0x8c6>
 8005722:	4b90      	ldr	r3, [pc, #576]	@ (8005964 <_strtod_l+0xad4>)
 8005724:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005726:	429a      	cmp	r2, r3
 8005728:	d102      	bne.n	8005730 <_strtod_l+0x8a0>
 800572a:	3101      	adds	r1, #1
 800572c:	f43f adcf 	beq.w	80052ce <_strtod_l+0x43e>
 8005730:	4b8a      	ldr	r3, [pc, #552]	@ (800595c <_strtod_l+0xacc>)
 8005732:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005734:	401a      	ands	r2, r3
 8005736:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800573a:	f04f 0a00 	mov.w	sl, #0
 800573e:	9b08      	ldr	r3, [sp, #32]
 8005740:	2b00      	cmp	r3, #0
 8005742:	d1c1      	bne.n	80056c8 <_strtod_l+0x838>
 8005744:	e5ce      	b.n	80052e4 <_strtod_l+0x454>
 8005746:	f04f 33ff 	mov.w	r3, #4294967295
 800574a:	e7e8      	b.n	800571e <_strtod_l+0x88e>
 800574c:	4613      	mov	r3, r2
 800574e:	e7e6      	b.n	800571e <_strtod_l+0x88e>
 8005750:	ea53 030a 	orrs.w	r3, r3, sl
 8005754:	d0aa      	beq.n	80056ac <_strtod_l+0x81c>
 8005756:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005758:	b1db      	cbz	r3, 8005792 <_strtod_l+0x902>
 800575a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800575c:	4213      	tst	r3, r2
 800575e:	d0ee      	beq.n	800573e <_strtod_l+0x8ae>
 8005760:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005762:	9a08      	ldr	r2, [sp, #32]
 8005764:	4650      	mov	r0, sl
 8005766:	4659      	mov	r1, fp
 8005768:	b1bb      	cbz	r3, 800579a <_strtod_l+0x90a>
 800576a:	f7ff fb6d 	bl	8004e48 <sulp>
 800576e:	4602      	mov	r2, r0
 8005770:	460b      	mov	r3, r1
 8005772:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005776:	f7fa fd89 	bl	800028c <__adddf3>
 800577a:	4682      	mov	sl, r0
 800577c:	468b      	mov	fp, r1
 800577e:	e7de      	b.n	800573e <_strtod_l+0x8ae>
 8005780:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8005784:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8005788:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800578c:	f04f 3aff 	mov.w	sl, #4294967295
 8005790:	e7d5      	b.n	800573e <_strtod_l+0x8ae>
 8005792:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005794:	ea13 0f0a 	tst.w	r3, sl
 8005798:	e7e1      	b.n	800575e <_strtod_l+0x8ce>
 800579a:	f7ff fb55 	bl	8004e48 <sulp>
 800579e:	4602      	mov	r2, r0
 80057a0:	460b      	mov	r3, r1
 80057a2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80057a6:	f7fa fd6f 	bl	8000288 <__aeabi_dsub>
 80057aa:	2200      	movs	r2, #0
 80057ac:	2300      	movs	r3, #0
 80057ae:	4682      	mov	sl, r0
 80057b0:	468b      	mov	fp, r1
 80057b2:	f7fb f989 	bl	8000ac8 <__aeabi_dcmpeq>
 80057b6:	2800      	cmp	r0, #0
 80057b8:	d0c1      	beq.n	800573e <_strtod_l+0x8ae>
 80057ba:	e61b      	b.n	80053f4 <_strtod_l+0x564>
 80057bc:	4641      	mov	r1, r8
 80057be:	4620      	mov	r0, r4
 80057c0:	f7ff face 	bl	8004d60 <__ratio>
 80057c4:	2200      	movs	r2, #0
 80057c6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80057ca:	4606      	mov	r6, r0
 80057cc:	460f      	mov	r7, r1
 80057ce:	f7fb f98f 	bl	8000af0 <__aeabi_dcmple>
 80057d2:	2800      	cmp	r0, #0
 80057d4:	d06d      	beq.n	80058b2 <_strtod_l+0xa22>
 80057d6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80057d8:	2b00      	cmp	r3, #0
 80057da:	d178      	bne.n	80058ce <_strtod_l+0xa3e>
 80057dc:	f1ba 0f00 	cmp.w	sl, #0
 80057e0:	d156      	bne.n	8005890 <_strtod_l+0xa00>
 80057e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80057e4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	d158      	bne.n	800589e <_strtod_l+0xa0e>
 80057ec:	4b5e      	ldr	r3, [pc, #376]	@ (8005968 <_strtod_l+0xad8>)
 80057ee:	2200      	movs	r2, #0
 80057f0:	4630      	mov	r0, r6
 80057f2:	4639      	mov	r1, r7
 80057f4:	f7fb f972 	bl	8000adc <__aeabi_dcmplt>
 80057f8:	2800      	cmp	r0, #0
 80057fa:	d157      	bne.n	80058ac <_strtod_l+0xa1c>
 80057fc:	4630      	mov	r0, r6
 80057fe:	4639      	mov	r1, r7
 8005800:	4b5a      	ldr	r3, [pc, #360]	@ (800596c <_strtod_l+0xadc>)
 8005802:	2200      	movs	r2, #0
 8005804:	f7fa fef8 	bl	80005f8 <__aeabi_dmul>
 8005808:	4606      	mov	r6, r0
 800580a:	460f      	mov	r7, r1
 800580c:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8005810:	9606      	str	r6, [sp, #24]
 8005812:	9307      	str	r3, [sp, #28]
 8005814:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005818:	4d50      	ldr	r5, [pc, #320]	@ (800595c <_strtod_l+0xacc>)
 800581a:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800581e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005820:	401d      	ands	r5, r3
 8005822:	4b53      	ldr	r3, [pc, #332]	@ (8005970 <_strtod_l+0xae0>)
 8005824:	429d      	cmp	r5, r3
 8005826:	f040 80a9 	bne.w	800597c <_strtod_l+0xaec>
 800582a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800582c:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 8005830:	4650      	mov	r0, sl
 8005832:	4659      	mov	r1, fp
 8005834:	f7ff f9d2 	bl	8004bdc <__ulp>
 8005838:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800583c:	f7fa fedc 	bl	80005f8 <__aeabi_dmul>
 8005840:	4652      	mov	r2, sl
 8005842:	465b      	mov	r3, fp
 8005844:	f7fa fd22 	bl	800028c <__adddf3>
 8005848:	460b      	mov	r3, r1
 800584a:	4944      	ldr	r1, [pc, #272]	@ (800595c <_strtod_l+0xacc>)
 800584c:	4a49      	ldr	r2, [pc, #292]	@ (8005974 <_strtod_l+0xae4>)
 800584e:	4019      	ands	r1, r3
 8005850:	4291      	cmp	r1, r2
 8005852:	4682      	mov	sl, r0
 8005854:	d942      	bls.n	80058dc <_strtod_l+0xa4c>
 8005856:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005858:	4b42      	ldr	r3, [pc, #264]	@ (8005964 <_strtod_l+0xad4>)
 800585a:	429a      	cmp	r2, r3
 800585c:	d103      	bne.n	8005866 <_strtod_l+0x9d6>
 800585e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005860:	3301      	adds	r3, #1
 8005862:	f43f ad34 	beq.w	80052ce <_strtod_l+0x43e>
 8005866:	f8df b0fc 	ldr.w	fp, [pc, #252]	@ 8005964 <_strtod_l+0xad4>
 800586a:	f04f 3aff 	mov.w	sl, #4294967295
 800586e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005870:	9805      	ldr	r0, [sp, #20]
 8005872:	f7fe fe89 	bl	8004588 <_Bfree>
 8005876:	9805      	ldr	r0, [sp, #20]
 8005878:	4649      	mov	r1, r9
 800587a:	f7fe fe85 	bl	8004588 <_Bfree>
 800587e:	9805      	ldr	r0, [sp, #20]
 8005880:	4641      	mov	r1, r8
 8005882:	f7fe fe81 	bl	8004588 <_Bfree>
 8005886:	9805      	ldr	r0, [sp, #20]
 8005888:	4621      	mov	r1, r4
 800588a:	f7fe fe7d 	bl	8004588 <_Bfree>
 800588e:	e61e      	b.n	80054ce <_strtod_l+0x63e>
 8005890:	f1ba 0f01 	cmp.w	sl, #1
 8005894:	d103      	bne.n	800589e <_strtod_l+0xa0e>
 8005896:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005898:	2b00      	cmp	r3, #0
 800589a:	f43f adab 	beq.w	80053f4 <_strtod_l+0x564>
 800589e:	4b36      	ldr	r3, [pc, #216]	@ (8005978 <_strtod_l+0xae8>)
 80058a0:	4f31      	ldr	r7, [pc, #196]	@ (8005968 <_strtod_l+0xad8>)
 80058a2:	2200      	movs	r2, #0
 80058a4:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80058a8:	2600      	movs	r6, #0
 80058aa:	e7b3      	b.n	8005814 <_strtod_l+0x984>
 80058ac:	4f2f      	ldr	r7, [pc, #188]	@ (800596c <_strtod_l+0xadc>)
 80058ae:	2600      	movs	r6, #0
 80058b0:	e7ac      	b.n	800580c <_strtod_l+0x97c>
 80058b2:	4b2e      	ldr	r3, [pc, #184]	@ (800596c <_strtod_l+0xadc>)
 80058b4:	4630      	mov	r0, r6
 80058b6:	4639      	mov	r1, r7
 80058b8:	2200      	movs	r2, #0
 80058ba:	f7fa fe9d 	bl	80005f8 <__aeabi_dmul>
 80058be:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80058c0:	4606      	mov	r6, r0
 80058c2:	460f      	mov	r7, r1
 80058c4:	2b00      	cmp	r3, #0
 80058c6:	d0a1      	beq.n	800580c <_strtod_l+0x97c>
 80058c8:	e9cd 6706 	strd	r6, r7, [sp, #24]
 80058cc:	e7a2      	b.n	8005814 <_strtod_l+0x984>
 80058ce:	4b26      	ldr	r3, [pc, #152]	@ (8005968 <_strtod_l+0xad8>)
 80058d0:	2200      	movs	r2, #0
 80058d2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80058d6:	4616      	mov	r6, r2
 80058d8:	461f      	mov	r7, r3
 80058da:	e79b      	b.n	8005814 <_strtod_l+0x984>
 80058dc:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 80058e0:	9b08      	ldr	r3, [sp, #32]
 80058e2:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d1c1      	bne.n	800586e <_strtod_l+0x9de>
 80058ea:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80058ee:	0d1b      	lsrs	r3, r3, #20
 80058f0:	051b      	lsls	r3, r3, #20
 80058f2:	429d      	cmp	r5, r3
 80058f4:	d1bb      	bne.n	800586e <_strtod_l+0x9de>
 80058f6:	4630      	mov	r0, r6
 80058f8:	4639      	mov	r1, r7
 80058fa:	f7fb fcaf 	bl	800125c <__aeabi_d2lz>
 80058fe:	f7fa fe4d 	bl	800059c <__aeabi_l2d>
 8005902:	4602      	mov	r2, r0
 8005904:	460b      	mov	r3, r1
 8005906:	4630      	mov	r0, r6
 8005908:	4639      	mov	r1, r7
 800590a:	f7fa fcbd 	bl	8000288 <__aeabi_dsub>
 800590e:	460b      	mov	r3, r1
 8005910:	4602      	mov	r2, r0
 8005912:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8005916:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800591a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800591c:	ea46 060a 	orr.w	r6, r6, sl
 8005920:	431e      	orrs	r6, r3
 8005922:	d068      	beq.n	80059f6 <_strtod_l+0xb66>
 8005924:	a308      	add	r3, pc, #32	@ (adr r3, 8005948 <_strtod_l+0xab8>)
 8005926:	e9d3 2300 	ldrd	r2, r3, [r3]
 800592a:	f7fb f8d7 	bl	8000adc <__aeabi_dcmplt>
 800592e:	2800      	cmp	r0, #0
 8005930:	f47f acd8 	bne.w	80052e4 <_strtod_l+0x454>
 8005934:	a306      	add	r3, pc, #24	@ (adr r3, 8005950 <_strtod_l+0xac0>)
 8005936:	e9d3 2300 	ldrd	r2, r3, [r3]
 800593a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800593e:	f7fb f8eb 	bl	8000b18 <__aeabi_dcmpgt>
 8005942:	2800      	cmp	r0, #0
 8005944:	d093      	beq.n	800586e <_strtod_l+0x9de>
 8005946:	e4cd      	b.n	80052e4 <_strtod_l+0x454>
 8005948:	94a03595 	.word	0x94a03595
 800594c:	3fdfffff 	.word	0x3fdfffff
 8005950:	35afe535 	.word	0x35afe535
 8005954:	3fe00000 	.word	0x3fe00000
 8005958:	39500000 	.word	0x39500000
 800595c:	7ff00000 	.word	0x7ff00000
 8005960:	000fffff 	.word	0x000fffff
 8005964:	7fefffff 	.word	0x7fefffff
 8005968:	3ff00000 	.word	0x3ff00000
 800596c:	3fe00000 	.word	0x3fe00000
 8005970:	7fe00000 	.word	0x7fe00000
 8005974:	7c9fffff 	.word	0x7c9fffff
 8005978:	bff00000 	.word	0xbff00000
 800597c:	9b08      	ldr	r3, [sp, #32]
 800597e:	b323      	cbz	r3, 80059ca <_strtod_l+0xb3a>
 8005980:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8005984:	d821      	bhi.n	80059ca <_strtod_l+0xb3a>
 8005986:	a328      	add	r3, pc, #160	@ (adr r3, 8005a28 <_strtod_l+0xb98>)
 8005988:	e9d3 2300 	ldrd	r2, r3, [r3]
 800598c:	4630      	mov	r0, r6
 800598e:	4639      	mov	r1, r7
 8005990:	f7fb f8ae 	bl	8000af0 <__aeabi_dcmple>
 8005994:	b1a0      	cbz	r0, 80059c0 <_strtod_l+0xb30>
 8005996:	4639      	mov	r1, r7
 8005998:	4630      	mov	r0, r6
 800599a:	f7fb f905 	bl	8000ba8 <__aeabi_d2uiz>
 800599e:	2801      	cmp	r0, #1
 80059a0:	bf38      	it	cc
 80059a2:	2001      	movcc	r0, #1
 80059a4:	f7fa fdae 	bl	8000504 <__aeabi_ui2d>
 80059a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80059aa:	4606      	mov	r6, r0
 80059ac:	460f      	mov	r7, r1
 80059ae:	b9fb      	cbnz	r3, 80059f0 <_strtod_l+0xb60>
 80059b0:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80059b4:	9014      	str	r0, [sp, #80]	@ 0x50
 80059b6:	9315      	str	r3, [sp, #84]	@ 0x54
 80059b8:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 80059bc:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80059c0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80059c2:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 80059c6:	1b5b      	subs	r3, r3, r5
 80059c8:	9311      	str	r3, [sp, #68]	@ 0x44
 80059ca:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80059ce:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 80059d2:	f7ff f903 	bl	8004bdc <__ulp>
 80059d6:	4602      	mov	r2, r0
 80059d8:	460b      	mov	r3, r1
 80059da:	4650      	mov	r0, sl
 80059dc:	4659      	mov	r1, fp
 80059de:	f7fa fe0b 	bl	80005f8 <__aeabi_dmul>
 80059e2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80059e6:	f7fa fc51 	bl	800028c <__adddf3>
 80059ea:	4682      	mov	sl, r0
 80059ec:	468b      	mov	fp, r1
 80059ee:	e777      	b.n	80058e0 <_strtod_l+0xa50>
 80059f0:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 80059f4:	e7e0      	b.n	80059b8 <_strtod_l+0xb28>
 80059f6:	a30e      	add	r3, pc, #56	@ (adr r3, 8005a30 <_strtod_l+0xba0>)
 80059f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80059fc:	f7fb f86e 	bl	8000adc <__aeabi_dcmplt>
 8005a00:	e79f      	b.n	8005942 <_strtod_l+0xab2>
 8005a02:	2300      	movs	r3, #0
 8005a04:	930e      	str	r3, [sp, #56]	@ 0x38
 8005a06:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8005a08:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005a0a:	6013      	str	r3, [r2, #0]
 8005a0c:	f7ff ba7d 	b.w	8004f0a <_strtod_l+0x7a>
 8005a10:	2a65      	cmp	r2, #101	@ 0x65
 8005a12:	f43f ab76 	beq.w	8005102 <_strtod_l+0x272>
 8005a16:	2a45      	cmp	r2, #69	@ 0x45
 8005a18:	f43f ab73 	beq.w	8005102 <_strtod_l+0x272>
 8005a1c:	2301      	movs	r3, #1
 8005a1e:	f7ff bbae 	b.w	800517e <_strtod_l+0x2ee>
 8005a22:	bf00      	nop
 8005a24:	f3af 8000 	nop.w
 8005a28:	ffc00000 	.word	0xffc00000
 8005a2c:	41dfffff 	.word	0x41dfffff
 8005a30:	94a03595 	.word	0x94a03595
 8005a34:	3fcfffff 	.word	0x3fcfffff

08005a38 <_strtod_r>:
 8005a38:	4b01      	ldr	r3, [pc, #4]	@ (8005a40 <_strtod_r+0x8>)
 8005a3a:	f7ff ba29 	b.w	8004e90 <_strtod_l>
 8005a3e:	bf00      	nop
 8005a40:	20000070 	.word	0x20000070

08005a44 <_strtol_l.isra.0>:
 8005a44:	2b24      	cmp	r3, #36	@ 0x24
 8005a46:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a4a:	4686      	mov	lr, r0
 8005a4c:	4690      	mov	r8, r2
 8005a4e:	d801      	bhi.n	8005a54 <_strtol_l.isra.0+0x10>
 8005a50:	2b01      	cmp	r3, #1
 8005a52:	d106      	bne.n	8005a62 <_strtol_l.isra.0+0x1e>
 8005a54:	f7fd fdce 	bl	80035f4 <__errno>
 8005a58:	2316      	movs	r3, #22
 8005a5a:	6003      	str	r3, [r0, #0]
 8005a5c:	2000      	movs	r0, #0
 8005a5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a62:	4834      	ldr	r0, [pc, #208]	@ (8005b34 <_strtol_l.isra.0+0xf0>)
 8005a64:	460d      	mov	r5, r1
 8005a66:	462a      	mov	r2, r5
 8005a68:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005a6c:	5d06      	ldrb	r6, [r0, r4]
 8005a6e:	f016 0608 	ands.w	r6, r6, #8
 8005a72:	d1f8      	bne.n	8005a66 <_strtol_l.isra.0+0x22>
 8005a74:	2c2d      	cmp	r4, #45	@ 0x2d
 8005a76:	d110      	bne.n	8005a9a <_strtol_l.isra.0+0x56>
 8005a78:	782c      	ldrb	r4, [r5, #0]
 8005a7a:	2601      	movs	r6, #1
 8005a7c:	1c95      	adds	r5, r2, #2
 8005a7e:	f033 0210 	bics.w	r2, r3, #16
 8005a82:	d115      	bne.n	8005ab0 <_strtol_l.isra.0+0x6c>
 8005a84:	2c30      	cmp	r4, #48	@ 0x30
 8005a86:	d10d      	bne.n	8005aa4 <_strtol_l.isra.0+0x60>
 8005a88:	782a      	ldrb	r2, [r5, #0]
 8005a8a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8005a8e:	2a58      	cmp	r2, #88	@ 0x58
 8005a90:	d108      	bne.n	8005aa4 <_strtol_l.isra.0+0x60>
 8005a92:	786c      	ldrb	r4, [r5, #1]
 8005a94:	3502      	adds	r5, #2
 8005a96:	2310      	movs	r3, #16
 8005a98:	e00a      	b.n	8005ab0 <_strtol_l.isra.0+0x6c>
 8005a9a:	2c2b      	cmp	r4, #43	@ 0x2b
 8005a9c:	bf04      	itt	eq
 8005a9e:	782c      	ldrbeq	r4, [r5, #0]
 8005aa0:	1c95      	addeq	r5, r2, #2
 8005aa2:	e7ec      	b.n	8005a7e <_strtol_l.isra.0+0x3a>
 8005aa4:	2b00      	cmp	r3, #0
 8005aa6:	d1f6      	bne.n	8005a96 <_strtol_l.isra.0+0x52>
 8005aa8:	2c30      	cmp	r4, #48	@ 0x30
 8005aaa:	bf14      	ite	ne
 8005aac:	230a      	movne	r3, #10
 8005aae:	2308      	moveq	r3, #8
 8005ab0:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8005ab4:	f10c 3cff 	add.w	ip, ip, #4294967295
 8005ab8:	2200      	movs	r2, #0
 8005aba:	fbbc f9f3 	udiv	r9, ip, r3
 8005abe:	4610      	mov	r0, r2
 8005ac0:	fb03 ca19 	mls	sl, r3, r9, ip
 8005ac4:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8005ac8:	2f09      	cmp	r7, #9
 8005aca:	d80f      	bhi.n	8005aec <_strtol_l.isra.0+0xa8>
 8005acc:	463c      	mov	r4, r7
 8005ace:	42a3      	cmp	r3, r4
 8005ad0:	dd1b      	ble.n	8005b0a <_strtol_l.isra.0+0xc6>
 8005ad2:	1c57      	adds	r7, r2, #1
 8005ad4:	d007      	beq.n	8005ae6 <_strtol_l.isra.0+0xa2>
 8005ad6:	4581      	cmp	r9, r0
 8005ad8:	d314      	bcc.n	8005b04 <_strtol_l.isra.0+0xc0>
 8005ada:	d101      	bne.n	8005ae0 <_strtol_l.isra.0+0x9c>
 8005adc:	45a2      	cmp	sl, r4
 8005ade:	db11      	blt.n	8005b04 <_strtol_l.isra.0+0xc0>
 8005ae0:	fb00 4003 	mla	r0, r0, r3, r4
 8005ae4:	2201      	movs	r2, #1
 8005ae6:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005aea:	e7eb      	b.n	8005ac4 <_strtol_l.isra.0+0x80>
 8005aec:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005af0:	2f19      	cmp	r7, #25
 8005af2:	d801      	bhi.n	8005af8 <_strtol_l.isra.0+0xb4>
 8005af4:	3c37      	subs	r4, #55	@ 0x37
 8005af6:	e7ea      	b.n	8005ace <_strtol_l.isra.0+0x8a>
 8005af8:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8005afc:	2f19      	cmp	r7, #25
 8005afe:	d804      	bhi.n	8005b0a <_strtol_l.isra.0+0xc6>
 8005b00:	3c57      	subs	r4, #87	@ 0x57
 8005b02:	e7e4      	b.n	8005ace <_strtol_l.isra.0+0x8a>
 8005b04:	f04f 32ff 	mov.w	r2, #4294967295
 8005b08:	e7ed      	b.n	8005ae6 <_strtol_l.isra.0+0xa2>
 8005b0a:	1c53      	adds	r3, r2, #1
 8005b0c:	d108      	bne.n	8005b20 <_strtol_l.isra.0+0xdc>
 8005b0e:	2322      	movs	r3, #34	@ 0x22
 8005b10:	f8ce 3000 	str.w	r3, [lr]
 8005b14:	4660      	mov	r0, ip
 8005b16:	f1b8 0f00 	cmp.w	r8, #0
 8005b1a:	d0a0      	beq.n	8005a5e <_strtol_l.isra.0+0x1a>
 8005b1c:	1e69      	subs	r1, r5, #1
 8005b1e:	e006      	b.n	8005b2e <_strtol_l.isra.0+0xea>
 8005b20:	b106      	cbz	r6, 8005b24 <_strtol_l.isra.0+0xe0>
 8005b22:	4240      	negs	r0, r0
 8005b24:	f1b8 0f00 	cmp.w	r8, #0
 8005b28:	d099      	beq.n	8005a5e <_strtol_l.isra.0+0x1a>
 8005b2a:	2a00      	cmp	r2, #0
 8005b2c:	d1f6      	bne.n	8005b1c <_strtol_l.isra.0+0xd8>
 8005b2e:	f8c8 1000 	str.w	r1, [r8]
 8005b32:	e794      	b.n	8005a5e <_strtol_l.isra.0+0x1a>
 8005b34:	08007451 	.word	0x08007451

08005b38 <_strtol_r>:
 8005b38:	f7ff bf84 	b.w	8005a44 <_strtol_l.isra.0>

08005b3c <__ssputs_r>:
 8005b3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b40:	688e      	ldr	r6, [r1, #8]
 8005b42:	461f      	mov	r7, r3
 8005b44:	42be      	cmp	r6, r7
 8005b46:	680b      	ldr	r3, [r1, #0]
 8005b48:	4682      	mov	sl, r0
 8005b4a:	460c      	mov	r4, r1
 8005b4c:	4690      	mov	r8, r2
 8005b4e:	d82d      	bhi.n	8005bac <__ssputs_r+0x70>
 8005b50:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005b54:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005b58:	d026      	beq.n	8005ba8 <__ssputs_r+0x6c>
 8005b5a:	6965      	ldr	r5, [r4, #20]
 8005b5c:	6909      	ldr	r1, [r1, #16]
 8005b5e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005b62:	eba3 0901 	sub.w	r9, r3, r1
 8005b66:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005b6a:	1c7b      	adds	r3, r7, #1
 8005b6c:	444b      	add	r3, r9
 8005b6e:	106d      	asrs	r5, r5, #1
 8005b70:	429d      	cmp	r5, r3
 8005b72:	bf38      	it	cc
 8005b74:	461d      	movcc	r5, r3
 8005b76:	0553      	lsls	r3, r2, #21
 8005b78:	d527      	bpl.n	8005bca <__ssputs_r+0x8e>
 8005b7a:	4629      	mov	r1, r5
 8005b7c:	f7fe fc38 	bl	80043f0 <_malloc_r>
 8005b80:	4606      	mov	r6, r0
 8005b82:	b360      	cbz	r0, 8005bde <__ssputs_r+0xa2>
 8005b84:	6921      	ldr	r1, [r4, #16]
 8005b86:	464a      	mov	r2, r9
 8005b88:	f000 fa14 	bl	8005fb4 <memcpy>
 8005b8c:	89a3      	ldrh	r3, [r4, #12]
 8005b8e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005b92:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005b96:	81a3      	strh	r3, [r4, #12]
 8005b98:	6126      	str	r6, [r4, #16]
 8005b9a:	6165      	str	r5, [r4, #20]
 8005b9c:	444e      	add	r6, r9
 8005b9e:	eba5 0509 	sub.w	r5, r5, r9
 8005ba2:	6026      	str	r6, [r4, #0]
 8005ba4:	60a5      	str	r5, [r4, #8]
 8005ba6:	463e      	mov	r6, r7
 8005ba8:	42be      	cmp	r6, r7
 8005baa:	d900      	bls.n	8005bae <__ssputs_r+0x72>
 8005bac:	463e      	mov	r6, r7
 8005bae:	6820      	ldr	r0, [r4, #0]
 8005bb0:	4632      	mov	r2, r6
 8005bb2:	4641      	mov	r1, r8
 8005bb4:	f000 f9c2 	bl	8005f3c <memmove>
 8005bb8:	68a3      	ldr	r3, [r4, #8]
 8005bba:	1b9b      	subs	r3, r3, r6
 8005bbc:	60a3      	str	r3, [r4, #8]
 8005bbe:	6823      	ldr	r3, [r4, #0]
 8005bc0:	4433      	add	r3, r6
 8005bc2:	6023      	str	r3, [r4, #0]
 8005bc4:	2000      	movs	r0, #0
 8005bc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005bca:	462a      	mov	r2, r5
 8005bcc:	f000 fd83 	bl	80066d6 <_realloc_r>
 8005bd0:	4606      	mov	r6, r0
 8005bd2:	2800      	cmp	r0, #0
 8005bd4:	d1e0      	bne.n	8005b98 <__ssputs_r+0x5c>
 8005bd6:	6921      	ldr	r1, [r4, #16]
 8005bd8:	4650      	mov	r0, sl
 8005bda:	f7fe fb95 	bl	8004308 <_free_r>
 8005bde:	230c      	movs	r3, #12
 8005be0:	f8ca 3000 	str.w	r3, [sl]
 8005be4:	89a3      	ldrh	r3, [r4, #12]
 8005be6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005bea:	81a3      	strh	r3, [r4, #12]
 8005bec:	f04f 30ff 	mov.w	r0, #4294967295
 8005bf0:	e7e9      	b.n	8005bc6 <__ssputs_r+0x8a>
	...

08005bf4 <_svfiprintf_r>:
 8005bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bf8:	4698      	mov	r8, r3
 8005bfa:	898b      	ldrh	r3, [r1, #12]
 8005bfc:	061b      	lsls	r3, r3, #24
 8005bfe:	b09d      	sub	sp, #116	@ 0x74
 8005c00:	4607      	mov	r7, r0
 8005c02:	460d      	mov	r5, r1
 8005c04:	4614      	mov	r4, r2
 8005c06:	d510      	bpl.n	8005c2a <_svfiprintf_r+0x36>
 8005c08:	690b      	ldr	r3, [r1, #16]
 8005c0a:	b973      	cbnz	r3, 8005c2a <_svfiprintf_r+0x36>
 8005c0c:	2140      	movs	r1, #64	@ 0x40
 8005c0e:	f7fe fbef 	bl	80043f0 <_malloc_r>
 8005c12:	6028      	str	r0, [r5, #0]
 8005c14:	6128      	str	r0, [r5, #16]
 8005c16:	b930      	cbnz	r0, 8005c26 <_svfiprintf_r+0x32>
 8005c18:	230c      	movs	r3, #12
 8005c1a:	603b      	str	r3, [r7, #0]
 8005c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8005c20:	b01d      	add	sp, #116	@ 0x74
 8005c22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c26:	2340      	movs	r3, #64	@ 0x40
 8005c28:	616b      	str	r3, [r5, #20]
 8005c2a:	2300      	movs	r3, #0
 8005c2c:	9309      	str	r3, [sp, #36]	@ 0x24
 8005c2e:	2320      	movs	r3, #32
 8005c30:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005c34:	f8cd 800c 	str.w	r8, [sp, #12]
 8005c38:	2330      	movs	r3, #48	@ 0x30
 8005c3a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005dd8 <_svfiprintf_r+0x1e4>
 8005c3e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005c42:	f04f 0901 	mov.w	r9, #1
 8005c46:	4623      	mov	r3, r4
 8005c48:	469a      	mov	sl, r3
 8005c4a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005c4e:	b10a      	cbz	r2, 8005c54 <_svfiprintf_r+0x60>
 8005c50:	2a25      	cmp	r2, #37	@ 0x25
 8005c52:	d1f9      	bne.n	8005c48 <_svfiprintf_r+0x54>
 8005c54:	ebba 0b04 	subs.w	fp, sl, r4
 8005c58:	d00b      	beq.n	8005c72 <_svfiprintf_r+0x7e>
 8005c5a:	465b      	mov	r3, fp
 8005c5c:	4622      	mov	r2, r4
 8005c5e:	4629      	mov	r1, r5
 8005c60:	4638      	mov	r0, r7
 8005c62:	f7ff ff6b 	bl	8005b3c <__ssputs_r>
 8005c66:	3001      	adds	r0, #1
 8005c68:	f000 80a7 	beq.w	8005dba <_svfiprintf_r+0x1c6>
 8005c6c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005c6e:	445a      	add	r2, fp
 8005c70:	9209      	str	r2, [sp, #36]	@ 0x24
 8005c72:	f89a 3000 	ldrb.w	r3, [sl]
 8005c76:	2b00      	cmp	r3, #0
 8005c78:	f000 809f 	beq.w	8005dba <_svfiprintf_r+0x1c6>
 8005c7c:	2300      	movs	r3, #0
 8005c7e:	f04f 32ff 	mov.w	r2, #4294967295
 8005c82:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005c86:	f10a 0a01 	add.w	sl, sl, #1
 8005c8a:	9304      	str	r3, [sp, #16]
 8005c8c:	9307      	str	r3, [sp, #28]
 8005c8e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005c92:	931a      	str	r3, [sp, #104]	@ 0x68
 8005c94:	4654      	mov	r4, sl
 8005c96:	2205      	movs	r2, #5
 8005c98:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005c9c:	484e      	ldr	r0, [pc, #312]	@ (8005dd8 <_svfiprintf_r+0x1e4>)
 8005c9e:	f7fa fa97 	bl	80001d0 <memchr>
 8005ca2:	9a04      	ldr	r2, [sp, #16]
 8005ca4:	b9d8      	cbnz	r0, 8005cde <_svfiprintf_r+0xea>
 8005ca6:	06d0      	lsls	r0, r2, #27
 8005ca8:	bf44      	itt	mi
 8005caa:	2320      	movmi	r3, #32
 8005cac:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005cb0:	0711      	lsls	r1, r2, #28
 8005cb2:	bf44      	itt	mi
 8005cb4:	232b      	movmi	r3, #43	@ 0x2b
 8005cb6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005cba:	f89a 3000 	ldrb.w	r3, [sl]
 8005cbe:	2b2a      	cmp	r3, #42	@ 0x2a
 8005cc0:	d015      	beq.n	8005cee <_svfiprintf_r+0xfa>
 8005cc2:	9a07      	ldr	r2, [sp, #28]
 8005cc4:	4654      	mov	r4, sl
 8005cc6:	2000      	movs	r0, #0
 8005cc8:	f04f 0c0a 	mov.w	ip, #10
 8005ccc:	4621      	mov	r1, r4
 8005cce:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005cd2:	3b30      	subs	r3, #48	@ 0x30
 8005cd4:	2b09      	cmp	r3, #9
 8005cd6:	d94b      	bls.n	8005d70 <_svfiprintf_r+0x17c>
 8005cd8:	b1b0      	cbz	r0, 8005d08 <_svfiprintf_r+0x114>
 8005cda:	9207      	str	r2, [sp, #28]
 8005cdc:	e014      	b.n	8005d08 <_svfiprintf_r+0x114>
 8005cde:	eba0 0308 	sub.w	r3, r0, r8
 8005ce2:	fa09 f303 	lsl.w	r3, r9, r3
 8005ce6:	4313      	orrs	r3, r2
 8005ce8:	9304      	str	r3, [sp, #16]
 8005cea:	46a2      	mov	sl, r4
 8005cec:	e7d2      	b.n	8005c94 <_svfiprintf_r+0xa0>
 8005cee:	9b03      	ldr	r3, [sp, #12]
 8005cf0:	1d19      	adds	r1, r3, #4
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	9103      	str	r1, [sp, #12]
 8005cf6:	2b00      	cmp	r3, #0
 8005cf8:	bfbb      	ittet	lt
 8005cfa:	425b      	neglt	r3, r3
 8005cfc:	f042 0202 	orrlt.w	r2, r2, #2
 8005d00:	9307      	strge	r3, [sp, #28]
 8005d02:	9307      	strlt	r3, [sp, #28]
 8005d04:	bfb8      	it	lt
 8005d06:	9204      	strlt	r2, [sp, #16]
 8005d08:	7823      	ldrb	r3, [r4, #0]
 8005d0a:	2b2e      	cmp	r3, #46	@ 0x2e
 8005d0c:	d10a      	bne.n	8005d24 <_svfiprintf_r+0x130>
 8005d0e:	7863      	ldrb	r3, [r4, #1]
 8005d10:	2b2a      	cmp	r3, #42	@ 0x2a
 8005d12:	d132      	bne.n	8005d7a <_svfiprintf_r+0x186>
 8005d14:	9b03      	ldr	r3, [sp, #12]
 8005d16:	1d1a      	adds	r2, r3, #4
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	9203      	str	r2, [sp, #12]
 8005d1c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005d20:	3402      	adds	r4, #2
 8005d22:	9305      	str	r3, [sp, #20]
 8005d24:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8005ddc <_svfiprintf_r+0x1e8>
 8005d28:	7821      	ldrb	r1, [r4, #0]
 8005d2a:	2203      	movs	r2, #3
 8005d2c:	4650      	mov	r0, sl
 8005d2e:	f7fa fa4f 	bl	80001d0 <memchr>
 8005d32:	b138      	cbz	r0, 8005d44 <_svfiprintf_r+0x150>
 8005d34:	9b04      	ldr	r3, [sp, #16]
 8005d36:	eba0 000a 	sub.w	r0, r0, sl
 8005d3a:	2240      	movs	r2, #64	@ 0x40
 8005d3c:	4082      	lsls	r2, r0
 8005d3e:	4313      	orrs	r3, r2
 8005d40:	3401      	adds	r4, #1
 8005d42:	9304      	str	r3, [sp, #16]
 8005d44:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d48:	4825      	ldr	r0, [pc, #148]	@ (8005de0 <_svfiprintf_r+0x1ec>)
 8005d4a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005d4e:	2206      	movs	r2, #6
 8005d50:	f7fa fa3e 	bl	80001d0 <memchr>
 8005d54:	2800      	cmp	r0, #0
 8005d56:	d036      	beq.n	8005dc6 <_svfiprintf_r+0x1d2>
 8005d58:	4b22      	ldr	r3, [pc, #136]	@ (8005de4 <_svfiprintf_r+0x1f0>)
 8005d5a:	bb1b      	cbnz	r3, 8005da4 <_svfiprintf_r+0x1b0>
 8005d5c:	9b03      	ldr	r3, [sp, #12]
 8005d5e:	3307      	adds	r3, #7
 8005d60:	f023 0307 	bic.w	r3, r3, #7
 8005d64:	3308      	adds	r3, #8
 8005d66:	9303      	str	r3, [sp, #12]
 8005d68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005d6a:	4433      	add	r3, r6
 8005d6c:	9309      	str	r3, [sp, #36]	@ 0x24
 8005d6e:	e76a      	b.n	8005c46 <_svfiprintf_r+0x52>
 8005d70:	fb0c 3202 	mla	r2, ip, r2, r3
 8005d74:	460c      	mov	r4, r1
 8005d76:	2001      	movs	r0, #1
 8005d78:	e7a8      	b.n	8005ccc <_svfiprintf_r+0xd8>
 8005d7a:	2300      	movs	r3, #0
 8005d7c:	3401      	adds	r4, #1
 8005d7e:	9305      	str	r3, [sp, #20]
 8005d80:	4619      	mov	r1, r3
 8005d82:	f04f 0c0a 	mov.w	ip, #10
 8005d86:	4620      	mov	r0, r4
 8005d88:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005d8c:	3a30      	subs	r2, #48	@ 0x30
 8005d8e:	2a09      	cmp	r2, #9
 8005d90:	d903      	bls.n	8005d9a <_svfiprintf_r+0x1a6>
 8005d92:	2b00      	cmp	r3, #0
 8005d94:	d0c6      	beq.n	8005d24 <_svfiprintf_r+0x130>
 8005d96:	9105      	str	r1, [sp, #20]
 8005d98:	e7c4      	b.n	8005d24 <_svfiprintf_r+0x130>
 8005d9a:	fb0c 2101 	mla	r1, ip, r1, r2
 8005d9e:	4604      	mov	r4, r0
 8005da0:	2301      	movs	r3, #1
 8005da2:	e7f0      	b.n	8005d86 <_svfiprintf_r+0x192>
 8005da4:	ab03      	add	r3, sp, #12
 8005da6:	9300      	str	r3, [sp, #0]
 8005da8:	462a      	mov	r2, r5
 8005daa:	4b0f      	ldr	r3, [pc, #60]	@ (8005de8 <_svfiprintf_r+0x1f4>)
 8005dac:	a904      	add	r1, sp, #16
 8005dae:	4638      	mov	r0, r7
 8005db0:	f7fc fce6 	bl	8002780 <_printf_float>
 8005db4:	1c42      	adds	r2, r0, #1
 8005db6:	4606      	mov	r6, r0
 8005db8:	d1d6      	bne.n	8005d68 <_svfiprintf_r+0x174>
 8005dba:	89ab      	ldrh	r3, [r5, #12]
 8005dbc:	065b      	lsls	r3, r3, #25
 8005dbe:	f53f af2d 	bmi.w	8005c1c <_svfiprintf_r+0x28>
 8005dc2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005dc4:	e72c      	b.n	8005c20 <_svfiprintf_r+0x2c>
 8005dc6:	ab03      	add	r3, sp, #12
 8005dc8:	9300      	str	r3, [sp, #0]
 8005dca:	462a      	mov	r2, r5
 8005dcc:	4b06      	ldr	r3, [pc, #24]	@ (8005de8 <_svfiprintf_r+0x1f4>)
 8005dce:	a904      	add	r1, sp, #16
 8005dd0:	4638      	mov	r0, r7
 8005dd2:	f7fc ff6f 	bl	8002cb4 <_printf_i>
 8005dd6:	e7ed      	b.n	8005db4 <_svfiprintf_r+0x1c0>
 8005dd8:	08007249 	.word	0x08007249
 8005ddc:	0800724f 	.word	0x0800724f
 8005de0:	08007253 	.word	0x08007253
 8005de4:	08002781 	.word	0x08002781
 8005de8:	08005b3d 	.word	0x08005b3d

08005dec <__sflush_r>:
 8005dec:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005df0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005df2:	0716      	lsls	r6, r2, #28
 8005df4:	4605      	mov	r5, r0
 8005df6:	460c      	mov	r4, r1
 8005df8:	d454      	bmi.n	8005ea4 <__sflush_r+0xb8>
 8005dfa:	684b      	ldr	r3, [r1, #4]
 8005dfc:	2b00      	cmp	r3, #0
 8005dfe:	dc02      	bgt.n	8005e06 <__sflush_r+0x1a>
 8005e00:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8005e02:	2b00      	cmp	r3, #0
 8005e04:	dd48      	ble.n	8005e98 <__sflush_r+0xac>
 8005e06:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005e08:	2e00      	cmp	r6, #0
 8005e0a:	d045      	beq.n	8005e98 <__sflush_r+0xac>
 8005e0c:	2300      	movs	r3, #0
 8005e0e:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8005e12:	682f      	ldr	r7, [r5, #0]
 8005e14:	6a21      	ldr	r1, [r4, #32]
 8005e16:	602b      	str	r3, [r5, #0]
 8005e18:	d030      	beq.n	8005e7c <__sflush_r+0x90>
 8005e1a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005e1c:	89a3      	ldrh	r3, [r4, #12]
 8005e1e:	0759      	lsls	r1, r3, #29
 8005e20:	d505      	bpl.n	8005e2e <__sflush_r+0x42>
 8005e22:	6863      	ldr	r3, [r4, #4]
 8005e24:	1ad2      	subs	r2, r2, r3
 8005e26:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005e28:	b10b      	cbz	r3, 8005e2e <__sflush_r+0x42>
 8005e2a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005e2c:	1ad2      	subs	r2, r2, r3
 8005e2e:	2300      	movs	r3, #0
 8005e30:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005e32:	6a21      	ldr	r1, [r4, #32]
 8005e34:	4628      	mov	r0, r5
 8005e36:	47b0      	blx	r6
 8005e38:	1c43      	adds	r3, r0, #1
 8005e3a:	89a3      	ldrh	r3, [r4, #12]
 8005e3c:	d106      	bne.n	8005e4c <__sflush_r+0x60>
 8005e3e:	6829      	ldr	r1, [r5, #0]
 8005e40:	291d      	cmp	r1, #29
 8005e42:	d82b      	bhi.n	8005e9c <__sflush_r+0xb0>
 8005e44:	4a28      	ldr	r2, [pc, #160]	@ (8005ee8 <__sflush_r+0xfc>)
 8005e46:	40ca      	lsrs	r2, r1
 8005e48:	07d6      	lsls	r6, r2, #31
 8005e4a:	d527      	bpl.n	8005e9c <__sflush_r+0xb0>
 8005e4c:	2200      	movs	r2, #0
 8005e4e:	6062      	str	r2, [r4, #4]
 8005e50:	04d9      	lsls	r1, r3, #19
 8005e52:	6922      	ldr	r2, [r4, #16]
 8005e54:	6022      	str	r2, [r4, #0]
 8005e56:	d504      	bpl.n	8005e62 <__sflush_r+0x76>
 8005e58:	1c42      	adds	r2, r0, #1
 8005e5a:	d101      	bne.n	8005e60 <__sflush_r+0x74>
 8005e5c:	682b      	ldr	r3, [r5, #0]
 8005e5e:	b903      	cbnz	r3, 8005e62 <__sflush_r+0x76>
 8005e60:	6560      	str	r0, [r4, #84]	@ 0x54
 8005e62:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005e64:	602f      	str	r7, [r5, #0]
 8005e66:	b1b9      	cbz	r1, 8005e98 <__sflush_r+0xac>
 8005e68:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005e6c:	4299      	cmp	r1, r3
 8005e6e:	d002      	beq.n	8005e76 <__sflush_r+0x8a>
 8005e70:	4628      	mov	r0, r5
 8005e72:	f7fe fa49 	bl	8004308 <_free_r>
 8005e76:	2300      	movs	r3, #0
 8005e78:	6363      	str	r3, [r4, #52]	@ 0x34
 8005e7a:	e00d      	b.n	8005e98 <__sflush_r+0xac>
 8005e7c:	2301      	movs	r3, #1
 8005e7e:	4628      	mov	r0, r5
 8005e80:	47b0      	blx	r6
 8005e82:	4602      	mov	r2, r0
 8005e84:	1c50      	adds	r0, r2, #1
 8005e86:	d1c9      	bne.n	8005e1c <__sflush_r+0x30>
 8005e88:	682b      	ldr	r3, [r5, #0]
 8005e8a:	2b00      	cmp	r3, #0
 8005e8c:	d0c6      	beq.n	8005e1c <__sflush_r+0x30>
 8005e8e:	2b1d      	cmp	r3, #29
 8005e90:	d001      	beq.n	8005e96 <__sflush_r+0xaa>
 8005e92:	2b16      	cmp	r3, #22
 8005e94:	d11d      	bne.n	8005ed2 <__sflush_r+0xe6>
 8005e96:	602f      	str	r7, [r5, #0]
 8005e98:	2000      	movs	r0, #0
 8005e9a:	e021      	b.n	8005ee0 <__sflush_r+0xf4>
 8005e9c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005ea0:	b21b      	sxth	r3, r3
 8005ea2:	e01a      	b.n	8005eda <__sflush_r+0xee>
 8005ea4:	690f      	ldr	r7, [r1, #16]
 8005ea6:	2f00      	cmp	r7, #0
 8005ea8:	d0f6      	beq.n	8005e98 <__sflush_r+0xac>
 8005eaa:	0793      	lsls	r3, r2, #30
 8005eac:	680e      	ldr	r6, [r1, #0]
 8005eae:	bf08      	it	eq
 8005eb0:	694b      	ldreq	r3, [r1, #20]
 8005eb2:	600f      	str	r7, [r1, #0]
 8005eb4:	bf18      	it	ne
 8005eb6:	2300      	movne	r3, #0
 8005eb8:	1bf6      	subs	r6, r6, r7
 8005eba:	608b      	str	r3, [r1, #8]
 8005ebc:	2e00      	cmp	r6, #0
 8005ebe:	ddeb      	ble.n	8005e98 <__sflush_r+0xac>
 8005ec0:	6a21      	ldr	r1, [r4, #32]
 8005ec2:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8005ec6:	4633      	mov	r3, r6
 8005ec8:	463a      	mov	r2, r7
 8005eca:	4628      	mov	r0, r5
 8005ecc:	47e0      	blx	ip
 8005ece:	2800      	cmp	r0, #0
 8005ed0:	dc07      	bgt.n	8005ee2 <__sflush_r+0xf6>
 8005ed2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005ed6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005eda:	81a3      	strh	r3, [r4, #12]
 8005edc:	f04f 30ff 	mov.w	r0, #4294967295
 8005ee0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005ee2:	4407      	add	r7, r0
 8005ee4:	1a36      	subs	r6, r6, r0
 8005ee6:	e7e9      	b.n	8005ebc <__sflush_r+0xd0>
 8005ee8:	20400001 	.word	0x20400001

08005eec <_fflush_r>:
 8005eec:	b538      	push	{r3, r4, r5, lr}
 8005eee:	690b      	ldr	r3, [r1, #16]
 8005ef0:	4605      	mov	r5, r0
 8005ef2:	460c      	mov	r4, r1
 8005ef4:	b913      	cbnz	r3, 8005efc <_fflush_r+0x10>
 8005ef6:	2500      	movs	r5, #0
 8005ef8:	4628      	mov	r0, r5
 8005efa:	bd38      	pop	{r3, r4, r5, pc}
 8005efc:	b118      	cbz	r0, 8005f06 <_fflush_r+0x1a>
 8005efe:	6a03      	ldr	r3, [r0, #32]
 8005f00:	b90b      	cbnz	r3, 8005f06 <_fflush_r+0x1a>
 8005f02:	f7fd fa89 	bl	8003418 <__sinit>
 8005f06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005f0a:	2b00      	cmp	r3, #0
 8005f0c:	d0f3      	beq.n	8005ef6 <_fflush_r+0xa>
 8005f0e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005f10:	07d0      	lsls	r0, r2, #31
 8005f12:	d404      	bmi.n	8005f1e <_fflush_r+0x32>
 8005f14:	0599      	lsls	r1, r3, #22
 8005f16:	d402      	bmi.n	8005f1e <_fflush_r+0x32>
 8005f18:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005f1a:	f7fd fb96 	bl	800364a <__retarget_lock_acquire_recursive>
 8005f1e:	4628      	mov	r0, r5
 8005f20:	4621      	mov	r1, r4
 8005f22:	f7ff ff63 	bl	8005dec <__sflush_r>
 8005f26:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005f28:	07da      	lsls	r2, r3, #31
 8005f2a:	4605      	mov	r5, r0
 8005f2c:	d4e4      	bmi.n	8005ef8 <_fflush_r+0xc>
 8005f2e:	89a3      	ldrh	r3, [r4, #12]
 8005f30:	059b      	lsls	r3, r3, #22
 8005f32:	d4e1      	bmi.n	8005ef8 <_fflush_r+0xc>
 8005f34:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005f36:	f7fd fb89 	bl	800364c <__retarget_lock_release_recursive>
 8005f3a:	e7dd      	b.n	8005ef8 <_fflush_r+0xc>

08005f3c <memmove>:
 8005f3c:	4288      	cmp	r0, r1
 8005f3e:	b510      	push	{r4, lr}
 8005f40:	eb01 0402 	add.w	r4, r1, r2
 8005f44:	d902      	bls.n	8005f4c <memmove+0x10>
 8005f46:	4284      	cmp	r4, r0
 8005f48:	4623      	mov	r3, r4
 8005f4a:	d807      	bhi.n	8005f5c <memmove+0x20>
 8005f4c:	1e43      	subs	r3, r0, #1
 8005f4e:	42a1      	cmp	r1, r4
 8005f50:	d008      	beq.n	8005f64 <memmove+0x28>
 8005f52:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005f56:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005f5a:	e7f8      	b.n	8005f4e <memmove+0x12>
 8005f5c:	4402      	add	r2, r0
 8005f5e:	4601      	mov	r1, r0
 8005f60:	428a      	cmp	r2, r1
 8005f62:	d100      	bne.n	8005f66 <memmove+0x2a>
 8005f64:	bd10      	pop	{r4, pc}
 8005f66:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005f6a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005f6e:	e7f7      	b.n	8005f60 <memmove+0x24>

08005f70 <strncmp>:
 8005f70:	b510      	push	{r4, lr}
 8005f72:	b16a      	cbz	r2, 8005f90 <strncmp+0x20>
 8005f74:	3901      	subs	r1, #1
 8005f76:	1884      	adds	r4, r0, r2
 8005f78:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005f7c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8005f80:	429a      	cmp	r2, r3
 8005f82:	d103      	bne.n	8005f8c <strncmp+0x1c>
 8005f84:	42a0      	cmp	r0, r4
 8005f86:	d001      	beq.n	8005f8c <strncmp+0x1c>
 8005f88:	2a00      	cmp	r2, #0
 8005f8a:	d1f5      	bne.n	8005f78 <strncmp+0x8>
 8005f8c:	1ad0      	subs	r0, r2, r3
 8005f8e:	bd10      	pop	{r4, pc}
 8005f90:	4610      	mov	r0, r2
 8005f92:	e7fc      	b.n	8005f8e <strncmp+0x1e>

08005f94 <_sbrk_r>:
 8005f94:	b538      	push	{r3, r4, r5, lr}
 8005f96:	4d06      	ldr	r5, [pc, #24]	@ (8005fb0 <_sbrk_r+0x1c>)
 8005f98:	2300      	movs	r3, #0
 8005f9a:	4604      	mov	r4, r0
 8005f9c:	4608      	mov	r0, r1
 8005f9e:	602b      	str	r3, [r5, #0]
 8005fa0:	f7fb fa90 	bl	80014c4 <_sbrk>
 8005fa4:	1c43      	adds	r3, r0, #1
 8005fa6:	d102      	bne.n	8005fae <_sbrk_r+0x1a>
 8005fa8:	682b      	ldr	r3, [r5, #0]
 8005faa:	b103      	cbz	r3, 8005fae <_sbrk_r+0x1a>
 8005fac:	6023      	str	r3, [r4, #0]
 8005fae:	bd38      	pop	{r3, r4, r5, pc}
 8005fb0:	200003ac 	.word	0x200003ac

08005fb4 <memcpy>:
 8005fb4:	440a      	add	r2, r1
 8005fb6:	4291      	cmp	r1, r2
 8005fb8:	f100 33ff 	add.w	r3, r0, #4294967295
 8005fbc:	d100      	bne.n	8005fc0 <memcpy+0xc>
 8005fbe:	4770      	bx	lr
 8005fc0:	b510      	push	{r4, lr}
 8005fc2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005fc6:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005fca:	4291      	cmp	r1, r2
 8005fcc:	d1f9      	bne.n	8005fc2 <memcpy+0xe>
 8005fce:	bd10      	pop	{r4, pc}

08005fd0 <nan>:
 8005fd0:	4901      	ldr	r1, [pc, #4]	@ (8005fd8 <nan+0x8>)
 8005fd2:	2000      	movs	r0, #0
 8005fd4:	4770      	bx	lr
 8005fd6:	bf00      	nop
 8005fd8:	7ff80000 	.word	0x7ff80000

08005fdc <__assert_func>:
 8005fdc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005fde:	4614      	mov	r4, r2
 8005fe0:	461a      	mov	r2, r3
 8005fe2:	4b09      	ldr	r3, [pc, #36]	@ (8006008 <__assert_func+0x2c>)
 8005fe4:	681b      	ldr	r3, [r3, #0]
 8005fe6:	4605      	mov	r5, r0
 8005fe8:	68d8      	ldr	r0, [r3, #12]
 8005fea:	b14c      	cbz	r4, 8006000 <__assert_func+0x24>
 8005fec:	4b07      	ldr	r3, [pc, #28]	@ (800600c <__assert_func+0x30>)
 8005fee:	9100      	str	r1, [sp, #0]
 8005ff0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005ff4:	4906      	ldr	r1, [pc, #24]	@ (8006010 <__assert_func+0x34>)
 8005ff6:	462b      	mov	r3, r5
 8005ff8:	f000 fba8 	bl	800674c <fiprintf>
 8005ffc:	f000 fbb8 	bl	8006770 <abort>
 8006000:	4b04      	ldr	r3, [pc, #16]	@ (8006014 <__assert_func+0x38>)
 8006002:	461c      	mov	r4, r3
 8006004:	e7f3      	b.n	8005fee <__assert_func+0x12>
 8006006:	bf00      	nop
 8006008:	20000020 	.word	0x20000020
 800600c:	08007262 	.word	0x08007262
 8006010:	0800726f 	.word	0x0800726f
 8006014:	0800729d 	.word	0x0800729d

08006018 <_calloc_r>:
 8006018:	b570      	push	{r4, r5, r6, lr}
 800601a:	fba1 5402 	umull	r5, r4, r1, r2
 800601e:	b934      	cbnz	r4, 800602e <_calloc_r+0x16>
 8006020:	4629      	mov	r1, r5
 8006022:	f7fe f9e5 	bl	80043f0 <_malloc_r>
 8006026:	4606      	mov	r6, r0
 8006028:	b928      	cbnz	r0, 8006036 <_calloc_r+0x1e>
 800602a:	4630      	mov	r0, r6
 800602c:	bd70      	pop	{r4, r5, r6, pc}
 800602e:	220c      	movs	r2, #12
 8006030:	6002      	str	r2, [r0, #0]
 8006032:	2600      	movs	r6, #0
 8006034:	e7f9      	b.n	800602a <_calloc_r+0x12>
 8006036:	462a      	mov	r2, r5
 8006038:	4621      	mov	r1, r4
 800603a:	f7fd fa88 	bl	800354e <memset>
 800603e:	e7f4      	b.n	800602a <_calloc_r+0x12>

08006040 <rshift>:
 8006040:	6903      	ldr	r3, [r0, #16]
 8006042:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8006046:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800604a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800604e:	f100 0414 	add.w	r4, r0, #20
 8006052:	dd45      	ble.n	80060e0 <rshift+0xa0>
 8006054:	f011 011f 	ands.w	r1, r1, #31
 8006058:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800605c:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8006060:	d10c      	bne.n	800607c <rshift+0x3c>
 8006062:	f100 0710 	add.w	r7, r0, #16
 8006066:	4629      	mov	r1, r5
 8006068:	42b1      	cmp	r1, r6
 800606a:	d334      	bcc.n	80060d6 <rshift+0x96>
 800606c:	1a9b      	subs	r3, r3, r2
 800606e:	009b      	lsls	r3, r3, #2
 8006070:	1eea      	subs	r2, r5, #3
 8006072:	4296      	cmp	r6, r2
 8006074:	bf38      	it	cc
 8006076:	2300      	movcc	r3, #0
 8006078:	4423      	add	r3, r4
 800607a:	e015      	b.n	80060a8 <rshift+0x68>
 800607c:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8006080:	f1c1 0820 	rsb	r8, r1, #32
 8006084:	40cf      	lsrs	r7, r1
 8006086:	f105 0e04 	add.w	lr, r5, #4
 800608a:	46a1      	mov	r9, r4
 800608c:	4576      	cmp	r6, lr
 800608e:	46f4      	mov	ip, lr
 8006090:	d815      	bhi.n	80060be <rshift+0x7e>
 8006092:	1a9a      	subs	r2, r3, r2
 8006094:	0092      	lsls	r2, r2, #2
 8006096:	3a04      	subs	r2, #4
 8006098:	3501      	adds	r5, #1
 800609a:	42ae      	cmp	r6, r5
 800609c:	bf38      	it	cc
 800609e:	2200      	movcc	r2, #0
 80060a0:	18a3      	adds	r3, r4, r2
 80060a2:	50a7      	str	r7, [r4, r2]
 80060a4:	b107      	cbz	r7, 80060a8 <rshift+0x68>
 80060a6:	3304      	adds	r3, #4
 80060a8:	1b1a      	subs	r2, r3, r4
 80060aa:	42a3      	cmp	r3, r4
 80060ac:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80060b0:	bf08      	it	eq
 80060b2:	2300      	moveq	r3, #0
 80060b4:	6102      	str	r2, [r0, #16]
 80060b6:	bf08      	it	eq
 80060b8:	6143      	streq	r3, [r0, #20]
 80060ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80060be:	f8dc c000 	ldr.w	ip, [ip]
 80060c2:	fa0c fc08 	lsl.w	ip, ip, r8
 80060c6:	ea4c 0707 	orr.w	r7, ip, r7
 80060ca:	f849 7b04 	str.w	r7, [r9], #4
 80060ce:	f85e 7b04 	ldr.w	r7, [lr], #4
 80060d2:	40cf      	lsrs	r7, r1
 80060d4:	e7da      	b.n	800608c <rshift+0x4c>
 80060d6:	f851 cb04 	ldr.w	ip, [r1], #4
 80060da:	f847 cf04 	str.w	ip, [r7, #4]!
 80060de:	e7c3      	b.n	8006068 <rshift+0x28>
 80060e0:	4623      	mov	r3, r4
 80060e2:	e7e1      	b.n	80060a8 <rshift+0x68>

080060e4 <__hexdig_fun>:
 80060e4:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 80060e8:	2b09      	cmp	r3, #9
 80060ea:	d802      	bhi.n	80060f2 <__hexdig_fun+0xe>
 80060ec:	3820      	subs	r0, #32
 80060ee:	b2c0      	uxtb	r0, r0
 80060f0:	4770      	bx	lr
 80060f2:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 80060f6:	2b05      	cmp	r3, #5
 80060f8:	d801      	bhi.n	80060fe <__hexdig_fun+0x1a>
 80060fa:	3847      	subs	r0, #71	@ 0x47
 80060fc:	e7f7      	b.n	80060ee <__hexdig_fun+0xa>
 80060fe:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8006102:	2b05      	cmp	r3, #5
 8006104:	d801      	bhi.n	800610a <__hexdig_fun+0x26>
 8006106:	3827      	subs	r0, #39	@ 0x27
 8006108:	e7f1      	b.n	80060ee <__hexdig_fun+0xa>
 800610a:	2000      	movs	r0, #0
 800610c:	4770      	bx	lr
	...

08006110 <__gethex>:
 8006110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006114:	b085      	sub	sp, #20
 8006116:	468a      	mov	sl, r1
 8006118:	9302      	str	r3, [sp, #8]
 800611a:	680b      	ldr	r3, [r1, #0]
 800611c:	9001      	str	r0, [sp, #4]
 800611e:	4690      	mov	r8, r2
 8006120:	1c9c      	adds	r4, r3, #2
 8006122:	46a1      	mov	r9, r4
 8006124:	f814 0b01 	ldrb.w	r0, [r4], #1
 8006128:	2830      	cmp	r0, #48	@ 0x30
 800612a:	d0fa      	beq.n	8006122 <__gethex+0x12>
 800612c:	eba9 0303 	sub.w	r3, r9, r3
 8006130:	f1a3 0b02 	sub.w	fp, r3, #2
 8006134:	f7ff ffd6 	bl	80060e4 <__hexdig_fun>
 8006138:	4605      	mov	r5, r0
 800613a:	2800      	cmp	r0, #0
 800613c:	d168      	bne.n	8006210 <__gethex+0x100>
 800613e:	49a0      	ldr	r1, [pc, #640]	@ (80063c0 <__gethex+0x2b0>)
 8006140:	2201      	movs	r2, #1
 8006142:	4648      	mov	r0, r9
 8006144:	f7ff ff14 	bl	8005f70 <strncmp>
 8006148:	4607      	mov	r7, r0
 800614a:	2800      	cmp	r0, #0
 800614c:	d167      	bne.n	800621e <__gethex+0x10e>
 800614e:	f899 0001 	ldrb.w	r0, [r9, #1]
 8006152:	4626      	mov	r6, r4
 8006154:	f7ff ffc6 	bl	80060e4 <__hexdig_fun>
 8006158:	2800      	cmp	r0, #0
 800615a:	d062      	beq.n	8006222 <__gethex+0x112>
 800615c:	4623      	mov	r3, r4
 800615e:	7818      	ldrb	r0, [r3, #0]
 8006160:	2830      	cmp	r0, #48	@ 0x30
 8006162:	4699      	mov	r9, r3
 8006164:	f103 0301 	add.w	r3, r3, #1
 8006168:	d0f9      	beq.n	800615e <__gethex+0x4e>
 800616a:	f7ff ffbb 	bl	80060e4 <__hexdig_fun>
 800616e:	fab0 f580 	clz	r5, r0
 8006172:	096d      	lsrs	r5, r5, #5
 8006174:	f04f 0b01 	mov.w	fp, #1
 8006178:	464a      	mov	r2, r9
 800617a:	4616      	mov	r6, r2
 800617c:	3201      	adds	r2, #1
 800617e:	7830      	ldrb	r0, [r6, #0]
 8006180:	f7ff ffb0 	bl	80060e4 <__hexdig_fun>
 8006184:	2800      	cmp	r0, #0
 8006186:	d1f8      	bne.n	800617a <__gethex+0x6a>
 8006188:	498d      	ldr	r1, [pc, #564]	@ (80063c0 <__gethex+0x2b0>)
 800618a:	2201      	movs	r2, #1
 800618c:	4630      	mov	r0, r6
 800618e:	f7ff feef 	bl	8005f70 <strncmp>
 8006192:	2800      	cmp	r0, #0
 8006194:	d13f      	bne.n	8006216 <__gethex+0x106>
 8006196:	b944      	cbnz	r4, 80061aa <__gethex+0x9a>
 8006198:	1c74      	adds	r4, r6, #1
 800619a:	4622      	mov	r2, r4
 800619c:	4616      	mov	r6, r2
 800619e:	3201      	adds	r2, #1
 80061a0:	7830      	ldrb	r0, [r6, #0]
 80061a2:	f7ff ff9f 	bl	80060e4 <__hexdig_fun>
 80061a6:	2800      	cmp	r0, #0
 80061a8:	d1f8      	bne.n	800619c <__gethex+0x8c>
 80061aa:	1ba4      	subs	r4, r4, r6
 80061ac:	00a7      	lsls	r7, r4, #2
 80061ae:	7833      	ldrb	r3, [r6, #0]
 80061b0:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 80061b4:	2b50      	cmp	r3, #80	@ 0x50
 80061b6:	d13e      	bne.n	8006236 <__gethex+0x126>
 80061b8:	7873      	ldrb	r3, [r6, #1]
 80061ba:	2b2b      	cmp	r3, #43	@ 0x2b
 80061bc:	d033      	beq.n	8006226 <__gethex+0x116>
 80061be:	2b2d      	cmp	r3, #45	@ 0x2d
 80061c0:	d034      	beq.n	800622c <__gethex+0x11c>
 80061c2:	1c71      	adds	r1, r6, #1
 80061c4:	2400      	movs	r4, #0
 80061c6:	7808      	ldrb	r0, [r1, #0]
 80061c8:	f7ff ff8c 	bl	80060e4 <__hexdig_fun>
 80061cc:	1e43      	subs	r3, r0, #1
 80061ce:	b2db      	uxtb	r3, r3
 80061d0:	2b18      	cmp	r3, #24
 80061d2:	d830      	bhi.n	8006236 <__gethex+0x126>
 80061d4:	f1a0 0210 	sub.w	r2, r0, #16
 80061d8:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80061dc:	f7ff ff82 	bl	80060e4 <__hexdig_fun>
 80061e0:	f100 3cff 	add.w	ip, r0, #4294967295
 80061e4:	fa5f fc8c 	uxtb.w	ip, ip
 80061e8:	f1bc 0f18 	cmp.w	ip, #24
 80061ec:	f04f 030a 	mov.w	r3, #10
 80061f0:	d91e      	bls.n	8006230 <__gethex+0x120>
 80061f2:	b104      	cbz	r4, 80061f6 <__gethex+0xe6>
 80061f4:	4252      	negs	r2, r2
 80061f6:	4417      	add	r7, r2
 80061f8:	f8ca 1000 	str.w	r1, [sl]
 80061fc:	b1ed      	cbz	r5, 800623a <__gethex+0x12a>
 80061fe:	f1bb 0f00 	cmp.w	fp, #0
 8006202:	bf0c      	ite	eq
 8006204:	2506      	moveq	r5, #6
 8006206:	2500      	movne	r5, #0
 8006208:	4628      	mov	r0, r5
 800620a:	b005      	add	sp, #20
 800620c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006210:	2500      	movs	r5, #0
 8006212:	462c      	mov	r4, r5
 8006214:	e7b0      	b.n	8006178 <__gethex+0x68>
 8006216:	2c00      	cmp	r4, #0
 8006218:	d1c7      	bne.n	80061aa <__gethex+0x9a>
 800621a:	4627      	mov	r7, r4
 800621c:	e7c7      	b.n	80061ae <__gethex+0x9e>
 800621e:	464e      	mov	r6, r9
 8006220:	462f      	mov	r7, r5
 8006222:	2501      	movs	r5, #1
 8006224:	e7c3      	b.n	80061ae <__gethex+0x9e>
 8006226:	2400      	movs	r4, #0
 8006228:	1cb1      	adds	r1, r6, #2
 800622a:	e7cc      	b.n	80061c6 <__gethex+0xb6>
 800622c:	2401      	movs	r4, #1
 800622e:	e7fb      	b.n	8006228 <__gethex+0x118>
 8006230:	fb03 0002 	mla	r0, r3, r2, r0
 8006234:	e7ce      	b.n	80061d4 <__gethex+0xc4>
 8006236:	4631      	mov	r1, r6
 8006238:	e7de      	b.n	80061f8 <__gethex+0xe8>
 800623a:	eba6 0309 	sub.w	r3, r6, r9
 800623e:	3b01      	subs	r3, #1
 8006240:	4629      	mov	r1, r5
 8006242:	2b07      	cmp	r3, #7
 8006244:	dc0a      	bgt.n	800625c <__gethex+0x14c>
 8006246:	9801      	ldr	r0, [sp, #4]
 8006248:	f7fe f95e 	bl	8004508 <_Balloc>
 800624c:	4604      	mov	r4, r0
 800624e:	b940      	cbnz	r0, 8006262 <__gethex+0x152>
 8006250:	4b5c      	ldr	r3, [pc, #368]	@ (80063c4 <__gethex+0x2b4>)
 8006252:	4602      	mov	r2, r0
 8006254:	21e4      	movs	r1, #228	@ 0xe4
 8006256:	485c      	ldr	r0, [pc, #368]	@ (80063c8 <__gethex+0x2b8>)
 8006258:	f7ff fec0 	bl	8005fdc <__assert_func>
 800625c:	3101      	adds	r1, #1
 800625e:	105b      	asrs	r3, r3, #1
 8006260:	e7ef      	b.n	8006242 <__gethex+0x132>
 8006262:	f100 0a14 	add.w	sl, r0, #20
 8006266:	2300      	movs	r3, #0
 8006268:	4655      	mov	r5, sl
 800626a:	469b      	mov	fp, r3
 800626c:	45b1      	cmp	r9, r6
 800626e:	d337      	bcc.n	80062e0 <__gethex+0x1d0>
 8006270:	f845 bb04 	str.w	fp, [r5], #4
 8006274:	eba5 050a 	sub.w	r5, r5, sl
 8006278:	10ad      	asrs	r5, r5, #2
 800627a:	6125      	str	r5, [r4, #16]
 800627c:	4658      	mov	r0, fp
 800627e:	f7fe fa35 	bl	80046ec <__hi0bits>
 8006282:	016d      	lsls	r5, r5, #5
 8006284:	f8d8 6000 	ldr.w	r6, [r8]
 8006288:	1a2d      	subs	r5, r5, r0
 800628a:	42b5      	cmp	r5, r6
 800628c:	dd54      	ble.n	8006338 <__gethex+0x228>
 800628e:	1bad      	subs	r5, r5, r6
 8006290:	4629      	mov	r1, r5
 8006292:	4620      	mov	r0, r4
 8006294:	f7fe fdb7 	bl	8004e06 <__any_on>
 8006298:	4681      	mov	r9, r0
 800629a:	b178      	cbz	r0, 80062bc <__gethex+0x1ac>
 800629c:	1e6b      	subs	r3, r5, #1
 800629e:	1159      	asrs	r1, r3, #5
 80062a0:	f003 021f 	and.w	r2, r3, #31
 80062a4:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80062a8:	f04f 0901 	mov.w	r9, #1
 80062ac:	fa09 f202 	lsl.w	r2, r9, r2
 80062b0:	420a      	tst	r2, r1
 80062b2:	d003      	beq.n	80062bc <__gethex+0x1ac>
 80062b4:	454b      	cmp	r3, r9
 80062b6:	dc36      	bgt.n	8006326 <__gethex+0x216>
 80062b8:	f04f 0902 	mov.w	r9, #2
 80062bc:	4629      	mov	r1, r5
 80062be:	4620      	mov	r0, r4
 80062c0:	f7ff febe 	bl	8006040 <rshift>
 80062c4:	442f      	add	r7, r5
 80062c6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80062ca:	42bb      	cmp	r3, r7
 80062cc:	da42      	bge.n	8006354 <__gethex+0x244>
 80062ce:	9801      	ldr	r0, [sp, #4]
 80062d0:	4621      	mov	r1, r4
 80062d2:	f7fe f959 	bl	8004588 <_Bfree>
 80062d6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80062d8:	2300      	movs	r3, #0
 80062da:	6013      	str	r3, [r2, #0]
 80062dc:	25a3      	movs	r5, #163	@ 0xa3
 80062de:	e793      	b.n	8006208 <__gethex+0xf8>
 80062e0:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 80062e4:	2a2e      	cmp	r2, #46	@ 0x2e
 80062e6:	d012      	beq.n	800630e <__gethex+0x1fe>
 80062e8:	2b20      	cmp	r3, #32
 80062ea:	d104      	bne.n	80062f6 <__gethex+0x1e6>
 80062ec:	f845 bb04 	str.w	fp, [r5], #4
 80062f0:	f04f 0b00 	mov.w	fp, #0
 80062f4:	465b      	mov	r3, fp
 80062f6:	7830      	ldrb	r0, [r6, #0]
 80062f8:	9303      	str	r3, [sp, #12]
 80062fa:	f7ff fef3 	bl	80060e4 <__hexdig_fun>
 80062fe:	9b03      	ldr	r3, [sp, #12]
 8006300:	f000 000f 	and.w	r0, r0, #15
 8006304:	4098      	lsls	r0, r3
 8006306:	ea4b 0b00 	orr.w	fp, fp, r0
 800630a:	3304      	adds	r3, #4
 800630c:	e7ae      	b.n	800626c <__gethex+0x15c>
 800630e:	45b1      	cmp	r9, r6
 8006310:	d8ea      	bhi.n	80062e8 <__gethex+0x1d8>
 8006312:	492b      	ldr	r1, [pc, #172]	@ (80063c0 <__gethex+0x2b0>)
 8006314:	9303      	str	r3, [sp, #12]
 8006316:	2201      	movs	r2, #1
 8006318:	4630      	mov	r0, r6
 800631a:	f7ff fe29 	bl	8005f70 <strncmp>
 800631e:	9b03      	ldr	r3, [sp, #12]
 8006320:	2800      	cmp	r0, #0
 8006322:	d1e1      	bne.n	80062e8 <__gethex+0x1d8>
 8006324:	e7a2      	b.n	800626c <__gethex+0x15c>
 8006326:	1ea9      	subs	r1, r5, #2
 8006328:	4620      	mov	r0, r4
 800632a:	f7fe fd6c 	bl	8004e06 <__any_on>
 800632e:	2800      	cmp	r0, #0
 8006330:	d0c2      	beq.n	80062b8 <__gethex+0x1a8>
 8006332:	f04f 0903 	mov.w	r9, #3
 8006336:	e7c1      	b.n	80062bc <__gethex+0x1ac>
 8006338:	da09      	bge.n	800634e <__gethex+0x23e>
 800633a:	1b75      	subs	r5, r6, r5
 800633c:	4621      	mov	r1, r4
 800633e:	9801      	ldr	r0, [sp, #4]
 8006340:	462a      	mov	r2, r5
 8006342:	f7fe fb31 	bl	80049a8 <__lshift>
 8006346:	1b7f      	subs	r7, r7, r5
 8006348:	4604      	mov	r4, r0
 800634a:	f100 0a14 	add.w	sl, r0, #20
 800634e:	f04f 0900 	mov.w	r9, #0
 8006352:	e7b8      	b.n	80062c6 <__gethex+0x1b6>
 8006354:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8006358:	42bd      	cmp	r5, r7
 800635a:	dd6f      	ble.n	800643c <__gethex+0x32c>
 800635c:	1bed      	subs	r5, r5, r7
 800635e:	42ae      	cmp	r6, r5
 8006360:	dc34      	bgt.n	80063cc <__gethex+0x2bc>
 8006362:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006366:	2b02      	cmp	r3, #2
 8006368:	d022      	beq.n	80063b0 <__gethex+0x2a0>
 800636a:	2b03      	cmp	r3, #3
 800636c:	d024      	beq.n	80063b8 <__gethex+0x2a8>
 800636e:	2b01      	cmp	r3, #1
 8006370:	d115      	bne.n	800639e <__gethex+0x28e>
 8006372:	42ae      	cmp	r6, r5
 8006374:	d113      	bne.n	800639e <__gethex+0x28e>
 8006376:	2e01      	cmp	r6, #1
 8006378:	d10b      	bne.n	8006392 <__gethex+0x282>
 800637a:	9a02      	ldr	r2, [sp, #8]
 800637c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8006380:	6013      	str	r3, [r2, #0]
 8006382:	2301      	movs	r3, #1
 8006384:	6123      	str	r3, [r4, #16]
 8006386:	f8ca 3000 	str.w	r3, [sl]
 800638a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800638c:	2562      	movs	r5, #98	@ 0x62
 800638e:	601c      	str	r4, [r3, #0]
 8006390:	e73a      	b.n	8006208 <__gethex+0xf8>
 8006392:	1e71      	subs	r1, r6, #1
 8006394:	4620      	mov	r0, r4
 8006396:	f7fe fd36 	bl	8004e06 <__any_on>
 800639a:	2800      	cmp	r0, #0
 800639c:	d1ed      	bne.n	800637a <__gethex+0x26a>
 800639e:	9801      	ldr	r0, [sp, #4]
 80063a0:	4621      	mov	r1, r4
 80063a2:	f7fe f8f1 	bl	8004588 <_Bfree>
 80063a6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80063a8:	2300      	movs	r3, #0
 80063aa:	6013      	str	r3, [r2, #0]
 80063ac:	2550      	movs	r5, #80	@ 0x50
 80063ae:	e72b      	b.n	8006208 <__gethex+0xf8>
 80063b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80063b2:	2b00      	cmp	r3, #0
 80063b4:	d1f3      	bne.n	800639e <__gethex+0x28e>
 80063b6:	e7e0      	b.n	800637a <__gethex+0x26a>
 80063b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80063ba:	2b00      	cmp	r3, #0
 80063bc:	d1dd      	bne.n	800637a <__gethex+0x26a>
 80063be:	e7ee      	b.n	800639e <__gethex+0x28e>
 80063c0:	08007247 	.word	0x08007247
 80063c4:	080071dd 	.word	0x080071dd
 80063c8:	0800729e 	.word	0x0800729e
 80063cc:	1e6f      	subs	r7, r5, #1
 80063ce:	f1b9 0f00 	cmp.w	r9, #0
 80063d2:	d130      	bne.n	8006436 <__gethex+0x326>
 80063d4:	b127      	cbz	r7, 80063e0 <__gethex+0x2d0>
 80063d6:	4639      	mov	r1, r7
 80063d8:	4620      	mov	r0, r4
 80063da:	f7fe fd14 	bl	8004e06 <__any_on>
 80063de:	4681      	mov	r9, r0
 80063e0:	117a      	asrs	r2, r7, #5
 80063e2:	2301      	movs	r3, #1
 80063e4:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 80063e8:	f007 071f 	and.w	r7, r7, #31
 80063ec:	40bb      	lsls	r3, r7
 80063ee:	4213      	tst	r3, r2
 80063f0:	4629      	mov	r1, r5
 80063f2:	4620      	mov	r0, r4
 80063f4:	bf18      	it	ne
 80063f6:	f049 0902 	orrne.w	r9, r9, #2
 80063fa:	f7ff fe21 	bl	8006040 <rshift>
 80063fe:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8006402:	1b76      	subs	r6, r6, r5
 8006404:	2502      	movs	r5, #2
 8006406:	f1b9 0f00 	cmp.w	r9, #0
 800640a:	d047      	beq.n	800649c <__gethex+0x38c>
 800640c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006410:	2b02      	cmp	r3, #2
 8006412:	d015      	beq.n	8006440 <__gethex+0x330>
 8006414:	2b03      	cmp	r3, #3
 8006416:	d017      	beq.n	8006448 <__gethex+0x338>
 8006418:	2b01      	cmp	r3, #1
 800641a:	d109      	bne.n	8006430 <__gethex+0x320>
 800641c:	f019 0f02 	tst.w	r9, #2
 8006420:	d006      	beq.n	8006430 <__gethex+0x320>
 8006422:	f8da 3000 	ldr.w	r3, [sl]
 8006426:	ea49 0903 	orr.w	r9, r9, r3
 800642a:	f019 0f01 	tst.w	r9, #1
 800642e:	d10e      	bne.n	800644e <__gethex+0x33e>
 8006430:	f045 0510 	orr.w	r5, r5, #16
 8006434:	e032      	b.n	800649c <__gethex+0x38c>
 8006436:	f04f 0901 	mov.w	r9, #1
 800643a:	e7d1      	b.n	80063e0 <__gethex+0x2d0>
 800643c:	2501      	movs	r5, #1
 800643e:	e7e2      	b.n	8006406 <__gethex+0x2f6>
 8006440:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006442:	f1c3 0301 	rsb	r3, r3, #1
 8006446:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006448:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800644a:	2b00      	cmp	r3, #0
 800644c:	d0f0      	beq.n	8006430 <__gethex+0x320>
 800644e:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8006452:	f104 0314 	add.w	r3, r4, #20
 8006456:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800645a:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800645e:	f04f 0c00 	mov.w	ip, #0
 8006462:	4618      	mov	r0, r3
 8006464:	f853 2b04 	ldr.w	r2, [r3], #4
 8006468:	f1b2 3fff 	cmp.w	r2, #4294967295
 800646c:	d01b      	beq.n	80064a6 <__gethex+0x396>
 800646e:	3201      	adds	r2, #1
 8006470:	6002      	str	r2, [r0, #0]
 8006472:	2d02      	cmp	r5, #2
 8006474:	f104 0314 	add.w	r3, r4, #20
 8006478:	d13c      	bne.n	80064f4 <__gethex+0x3e4>
 800647a:	f8d8 2000 	ldr.w	r2, [r8]
 800647e:	3a01      	subs	r2, #1
 8006480:	42b2      	cmp	r2, r6
 8006482:	d109      	bne.n	8006498 <__gethex+0x388>
 8006484:	1171      	asrs	r1, r6, #5
 8006486:	2201      	movs	r2, #1
 8006488:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800648c:	f006 061f 	and.w	r6, r6, #31
 8006490:	fa02 f606 	lsl.w	r6, r2, r6
 8006494:	421e      	tst	r6, r3
 8006496:	d13a      	bne.n	800650e <__gethex+0x3fe>
 8006498:	f045 0520 	orr.w	r5, r5, #32
 800649c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800649e:	601c      	str	r4, [r3, #0]
 80064a0:	9b02      	ldr	r3, [sp, #8]
 80064a2:	601f      	str	r7, [r3, #0]
 80064a4:	e6b0      	b.n	8006208 <__gethex+0xf8>
 80064a6:	4299      	cmp	r1, r3
 80064a8:	f843 cc04 	str.w	ip, [r3, #-4]
 80064ac:	d8d9      	bhi.n	8006462 <__gethex+0x352>
 80064ae:	68a3      	ldr	r3, [r4, #8]
 80064b0:	459b      	cmp	fp, r3
 80064b2:	db17      	blt.n	80064e4 <__gethex+0x3d4>
 80064b4:	6861      	ldr	r1, [r4, #4]
 80064b6:	9801      	ldr	r0, [sp, #4]
 80064b8:	3101      	adds	r1, #1
 80064ba:	f7fe f825 	bl	8004508 <_Balloc>
 80064be:	4681      	mov	r9, r0
 80064c0:	b918      	cbnz	r0, 80064ca <__gethex+0x3ba>
 80064c2:	4b1a      	ldr	r3, [pc, #104]	@ (800652c <__gethex+0x41c>)
 80064c4:	4602      	mov	r2, r0
 80064c6:	2184      	movs	r1, #132	@ 0x84
 80064c8:	e6c5      	b.n	8006256 <__gethex+0x146>
 80064ca:	6922      	ldr	r2, [r4, #16]
 80064cc:	3202      	adds	r2, #2
 80064ce:	f104 010c 	add.w	r1, r4, #12
 80064d2:	0092      	lsls	r2, r2, #2
 80064d4:	300c      	adds	r0, #12
 80064d6:	f7ff fd6d 	bl	8005fb4 <memcpy>
 80064da:	4621      	mov	r1, r4
 80064dc:	9801      	ldr	r0, [sp, #4]
 80064de:	f7fe f853 	bl	8004588 <_Bfree>
 80064e2:	464c      	mov	r4, r9
 80064e4:	6923      	ldr	r3, [r4, #16]
 80064e6:	1c5a      	adds	r2, r3, #1
 80064e8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80064ec:	6122      	str	r2, [r4, #16]
 80064ee:	2201      	movs	r2, #1
 80064f0:	615a      	str	r2, [r3, #20]
 80064f2:	e7be      	b.n	8006472 <__gethex+0x362>
 80064f4:	6922      	ldr	r2, [r4, #16]
 80064f6:	455a      	cmp	r2, fp
 80064f8:	dd0b      	ble.n	8006512 <__gethex+0x402>
 80064fa:	2101      	movs	r1, #1
 80064fc:	4620      	mov	r0, r4
 80064fe:	f7ff fd9f 	bl	8006040 <rshift>
 8006502:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006506:	3701      	adds	r7, #1
 8006508:	42bb      	cmp	r3, r7
 800650a:	f6ff aee0 	blt.w	80062ce <__gethex+0x1be>
 800650e:	2501      	movs	r5, #1
 8006510:	e7c2      	b.n	8006498 <__gethex+0x388>
 8006512:	f016 061f 	ands.w	r6, r6, #31
 8006516:	d0fa      	beq.n	800650e <__gethex+0x3fe>
 8006518:	4453      	add	r3, sl
 800651a:	f1c6 0620 	rsb	r6, r6, #32
 800651e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8006522:	f7fe f8e3 	bl	80046ec <__hi0bits>
 8006526:	42b0      	cmp	r0, r6
 8006528:	dbe7      	blt.n	80064fa <__gethex+0x3ea>
 800652a:	e7f0      	b.n	800650e <__gethex+0x3fe>
 800652c:	080071dd 	.word	0x080071dd

08006530 <L_shift>:
 8006530:	f1c2 0208 	rsb	r2, r2, #8
 8006534:	0092      	lsls	r2, r2, #2
 8006536:	b570      	push	{r4, r5, r6, lr}
 8006538:	f1c2 0620 	rsb	r6, r2, #32
 800653c:	6843      	ldr	r3, [r0, #4]
 800653e:	6804      	ldr	r4, [r0, #0]
 8006540:	fa03 f506 	lsl.w	r5, r3, r6
 8006544:	432c      	orrs	r4, r5
 8006546:	40d3      	lsrs	r3, r2
 8006548:	6004      	str	r4, [r0, #0]
 800654a:	f840 3f04 	str.w	r3, [r0, #4]!
 800654e:	4288      	cmp	r0, r1
 8006550:	d3f4      	bcc.n	800653c <L_shift+0xc>
 8006552:	bd70      	pop	{r4, r5, r6, pc}

08006554 <__match>:
 8006554:	b530      	push	{r4, r5, lr}
 8006556:	6803      	ldr	r3, [r0, #0]
 8006558:	3301      	adds	r3, #1
 800655a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800655e:	b914      	cbnz	r4, 8006566 <__match+0x12>
 8006560:	6003      	str	r3, [r0, #0]
 8006562:	2001      	movs	r0, #1
 8006564:	bd30      	pop	{r4, r5, pc}
 8006566:	f813 2b01 	ldrb.w	r2, [r3], #1
 800656a:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800656e:	2d19      	cmp	r5, #25
 8006570:	bf98      	it	ls
 8006572:	3220      	addls	r2, #32
 8006574:	42a2      	cmp	r2, r4
 8006576:	d0f0      	beq.n	800655a <__match+0x6>
 8006578:	2000      	movs	r0, #0
 800657a:	e7f3      	b.n	8006564 <__match+0x10>

0800657c <__hexnan>:
 800657c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006580:	680b      	ldr	r3, [r1, #0]
 8006582:	6801      	ldr	r1, [r0, #0]
 8006584:	115e      	asrs	r6, r3, #5
 8006586:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800658a:	f013 031f 	ands.w	r3, r3, #31
 800658e:	b087      	sub	sp, #28
 8006590:	bf18      	it	ne
 8006592:	3604      	addne	r6, #4
 8006594:	2500      	movs	r5, #0
 8006596:	1f37      	subs	r7, r6, #4
 8006598:	4682      	mov	sl, r0
 800659a:	4690      	mov	r8, r2
 800659c:	9301      	str	r3, [sp, #4]
 800659e:	f846 5c04 	str.w	r5, [r6, #-4]
 80065a2:	46b9      	mov	r9, r7
 80065a4:	463c      	mov	r4, r7
 80065a6:	9502      	str	r5, [sp, #8]
 80065a8:	46ab      	mov	fp, r5
 80065aa:	784a      	ldrb	r2, [r1, #1]
 80065ac:	1c4b      	adds	r3, r1, #1
 80065ae:	9303      	str	r3, [sp, #12]
 80065b0:	b342      	cbz	r2, 8006604 <__hexnan+0x88>
 80065b2:	4610      	mov	r0, r2
 80065b4:	9105      	str	r1, [sp, #20]
 80065b6:	9204      	str	r2, [sp, #16]
 80065b8:	f7ff fd94 	bl	80060e4 <__hexdig_fun>
 80065bc:	2800      	cmp	r0, #0
 80065be:	d151      	bne.n	8006664 <__hexnan+0xe8>
 80065c0:	9a04      	ldr	r2, [sp, #16]
 80065c2:	9905      	ldr	r1, [sp, #20]
 80065c4:	2a20      	cmp	r2, #32
 80065c6:	d818      	bhi.n	80065fa <__hexnan+0x7e>
 80065c8:	9b02      	ldr	r3, [sp, #8]
 80065ca:	459b      	cmp	fp, r3
 80065cc:	dd13      	ble.n	80065f6 <__hexnan+0x7a>
 80065ce:	454c      	cmp	r4, r9
 80065d0:	d206      	bcs.n	80065e0 <__hexnan+0x64>
 80065d2:	2d07      	cmp	r5, #7
 80065d4:	dc04      	bgt.n	80065e0 <__hexnan+0x64>
 80065d6:	462a      	mov	r2, r5
 80065d8:	4649      	mov	r1, r9
 80065da:	4620      	mov	r0, r4
 80065dc:	f7ff ffa8 	bl	8006530 <L_shift>
 80065e0:	4544      	cmp	r4, r8
 80065e2:	d952      	bls.n	800668a <__hexnan+0x10e>
 80065e4:	2300      	movs	r3, #0
 80065e6:	f1a4 0904 	sub.w	r9, r4, #4
 80065ea:	f844 3c04 	str.w	r3, [r4, #-4]
 80065ee:	f8cd b008 	str.w	fp, [sp, #8]
 80065f2:	464c      	mov	r4, r9
 80065f4:	461d      	mov	r5, r3
 80065f6:	9903      	ldr	r1, [sp, #12]
 80065f8:	e7d7      	b.n	80065aa <__hexnan+0x2e>
 80065fa:	2a29      	cmp	r2, #41	@ 0x29
 80065fc:	d157      	bne.n	80066ae <__hexnan+0x132>
 80065fe:	3102      	adds	r1, #2
 8006600:	f8ca 1000 	str.w	r1, [sl]
 8006604:	f1bb 0f00 	cmp.w	fp, #0
 8006608:	d051      	beq.n	80066ae <__hexnan+0x132>
 800660a:	454c      	cmp	r4, r9
 800660c:	d206      	bcs.n	800661c <__hexnan+0xa0>
 800660e:	2d07      	cmp	r5, #7
 8006610:	dc04      	bgt.n	800661c <__hexnan+0xa0>
 8006612:	462a      	mov	r2, r5
 8006614:	4649      	mov	r1, r9
 8006616:	4620      	mov	r0, r4
 8006618:	f7ff ff8a 	bl	8006530 <L_shift>
 800661c:	4544      	cmp	r4, r8
 800661e:	d936      	bls.n	800668e <__hexnan+0x112>
 8006620:	f1a8 0204 	sub.w	r2, r8, #4
 8006624:	4623      	mov	r3, r4
 8006626:	f853 1b04 	ldr.w	r1, [r3], #4
 800662a:	f842 1f04 	str.w	r1, [r2, #4]!
 800662e:	429f      	cmp	r7, r3
 8006630:	d2f9      	bcs.n	8006626 <__hexnan+0xaa>
 8006632:	1b3b      	subs	r3, r7, r4
 8006634:	f023 0303 	bic.w	r3, r3, #3
 8006638:	3304      	adds	r3, #4
 800663a:	3401      	adds	r4, #1
 800663c:	3e03      	subs	r6, #3
 800663e:	42b4      	cmp	r4, r6
 8006640:	bf88      	it	hi
 8006642:	2304      	movhi	r3, #4
 8006644:	4443      	add	r3, r8
 8006646:	2200      	movs	r2, #0
 8006648:	f843 2b04 	str.w	r2, [r3], #4
 800664c:	429f      	cmp	r7, r3
 800664e:	d2fb      	bcs.n	8006648 <__hexnan+0xcc>
 8006650:	683b      	ldr	r3, [r7, #0]
 8006652:	b91b      	cbnz	r3, 800665c <__hexnan+0xe0>
 8006654:	4547      	cmp	r7, r8
 8006656:	d128      	bne.n	80066aa <__hexnan+0x12e>
 8006658:	2301      	movs	r3, #1
 800665a:	603b      	str	r3, [r7, #0]
 800665c:	2005      	movs	r0, #5
 800665e:	b007      	add	sp, #28
 8006660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006664:	3501      	adds	r5, #1
 8006666:	2d08      	cmp	r5, #8
 8006668:	f10b 0b01 	add.w	fp, fp, #1
 800666c:	dd06      	ble.n	800667c <__hexnan+0x100>
 800666e:	4544      	cmp	r4, r8
 8006670:	d9c1      	bls.n	80065f6 <__hexnan+0x7a>
 8006672:	2300      	movs	r3, #0
 8006674:	f844 3c04 	str.w	r3, [r4, #-4]
 8006678:	2501      	movs	r5, #1
 800667a:	3c04      	subs	r4, #4
 800667c:	6822      	ldr	r2, [r4, #0]
 800667e:	f000 000f 	and.w	r0, r0, #15
 8006682:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8006686:	6020      	str	r0, [r4, #0]
 8006688:	e7b5      	b.n	80065f6 <__hexnan+0x7a>
 800668a:	2508      	movs	r5, #8
 800668c:	e7b3      	b.n	80065f6 <__hexnan+0x7a>
 800668e:	9b01      	ldr	r3, [sp, #4]
 8006690:	2b00      	cmp	r3, #0
 8006692:	d0dd      	beq.n	8006650 <__hexnan+0xd4>
 8006694:	f1c3 0320 	rsb	r3, r3, #32
 8006698:	f04f 32ff 	mov.w	r2, #4294967295
 800669c:	40da      	lsrs	r2, r3
 800669e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80066a2:	4013      	ands	r3, r2
 80066a4:	f846 3c04 	str.w	r3, [r6, #-4]
 80066a8:	e7d2      	b.n	8006650 <__hexnan+0xd4>
 80066aa:	3f04      	subs	r7, #4
 80066ac:	e7d0      	b.n	8006650 <__hexnan+0xd4>
 80066ae:	2004      	movs	r0, #4
 80066b0:	e7d5      	b.n	800665e <__hexnan+0xe2>

080066b2 <__ascii_mbtowc>:
 80066b2:	b082      	sub	sp, #8
 80066b4:	b901      	cbnz	r1, 80066b8 <__ascii_mbtowc+0x6>
 80066b6:	a901      	add	r1, sp, #4
 80066b8:	b142      	cbz	r2, 80066cc <__ascii_mbtowc+0x1a>
 80066ba:	b14b      	cbz	r3, 80066d0 <__ascii_mbtowc+0x1e>
 80066bc:	7813      	ldrb	r3, [r2, #0]
 80066be:	600b      	str	r3, [r1, #0]
 80066c0:	7812      	ldrb	r2, [r2, #0]
 80066c2:	1e10      	subs	r0, r2, #0
 80066c4:	bf18      	it	ne
 80066c6:	2001      	movne	r0, #1
 80066c8:	b002      	add	sp, #8
 80066ca:	4770      	bx	lr
 80066cc:	4610      	mov	r0, r2
 80066ce:	e7fb      	b.n	80066c8 <__ascii_mbtowc+0x16>
 80066d0:	f06f 0001 	mvn.w	r0, #1
 80066d4:	e7f8      	b.n	80066c8 <__ascii_mbtowc+0x16>

080066d6 <_realloc_r>:
 80066d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066da:	4607      	mov	r7, r0
 80066dc:	4614      	mov	r4, r2
 80066de:	460d      	mov	r5, r1
 80066e0:	b921      	cbnz	r1, 80066ec <_realloc_r+0x16>
 80066e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80066e6:	4611      	mov	r1, r2
 80066e8:	f7fd be82 	b.w	80043f0 <_malloc_r>
 80066ec:	b92a      	cbnz	r2, 80066fa <_realloc_r+0x24>
 80066ee:	f7fd fe0b 	bl	8004308 <_free_r>
 80066f2:	4625      	mov	r5, r4
 80066f4:	4628      	mov	r0, r5
 80066f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80066fa:	f000 f840 	bl	800677e <_malloc_usable_size_r>
 80066fe:	4284      	cmp	r4, r0
 8006700:	4606      	mov	r6, r0
 8006702:	d802      	bhi.n	800670a <_realloc_r+0x34>
 8006704:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8006708:	d8f4      	bhi.n	80066f4 <_realloc_r+0x1e>
 800670a:	4621      	mov	r1, r4
 800670c:	4638      	mov	r0, r7
 800670e:	f7fd fe6f 	bl	80043f0 <_malloc_r>
 8006712:	4680      	mov	r8, r0
 8006714:	b908      	cbnz	r0, 800671a <_realloc_r+0x44>
 8006716:	4645      	mov	r5, r8
 8006718:	e7ec      	b.n	80066f4 <_realloc_r+0x1e>
 800671a:	42b4      	cmp	r4, r6
 800671c:	4622      	mov	r2, r4
 800671e:	4629      	mov	r1, r5
 8006720:	bf28      	it	cs
 8006722:	4632      	movcs	r2, r6
 8006724:	f7ff fc46 	bl	8005fb4 <memcpy>
 8006728:	4629      	mov	r1, r5
 800672a:	4638      	mov	r0, r7
 800672c:	f7fd fdec 	bl	8004308 <_free_r>
 8006730:	e7f1      	b.n	8006716 <_realloc_r+0x40>

08006732 <__ascii_wctomb>:
 8006732:	4603      	mov	r3, r0
 8006734:	4608      	mov	r0, r1
 8006736:	b141      	cbz	r1, 800674a <__ascii_wctomb+0x18>
 8006738:	2aff      	cmp	r2, #255	@ 0xff
 800673a:	d904      	bls.n	8006746 <__ascii_wctomb+0x14>
 800673c:	228a      	movs	r2, #138	@ 0x8a
 800673e:	601a      	str	r2, [r3, #0]
 8006740:	f04f 30ff 	mov.w	r0, #4294967295
 8006744:	4770      	bx	lr
 8006746:	700a      	strb	r2, [r1, #0]
 8006748:	2001      	movs	r0, #1
 800674a:	4770      	bx	lr

0800674c <fiprintf>:
 800674c:	b40e      	push	{r1, r2, r3}
 800674e:	b503      	push	{r0, r1, lr}
 8006750:	4601      	mov	r1, r0
 8006752:	ab03      	add	r3, sp, #12
 8006754:	4805      	ldr	r0, [pc, #20]	@ (800676c <fiprintf+0x20>)
 8006756:	f853 2b04 	ldr.w	r2, [r3], #4
 800675a:	6800      	ldr	r0, [r0, #0]
 800675c:	9301      	str	r3, [sp, #4]
 800675e:	f000 f83d 	bl	80067dc <_vfiprintf_r>
 8006762:	b002      	add	sp, #8
 8006764:	f85d eb04 	ldr.w	lr, [sp], #4
 8006768:	b003      	add	sp, #12
 800676a:	4770      	bx	lr
 800676c:	20000020 	.word	0x20000020

08006770 <abort>:
 8006770:	b508      	push	{r3, lr}
 8006772:	2006      	movs	r0, #6
 8006774:	f000 fa06 	bl	8006b84 <raise>
 8006778:	2001      	movs	r0, #1
 800677a:	f7fa fe2e 	bl	80013da <_exit>

0800677e <_malloc_usable_size_r>:
 800677e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006782:	1f18      	subs	r0, r3, #4
 8006784:	2b00      	cmp	r3, #0
 8006786:	bfbc      	itt	lt
 8006788:	580b      	ldrlt	r3, [r1, r0]
 800678a:	18c0      	addlt	r0, r0, r3
 800678c:	4770      	bx	lr

0800678e <__sfputc_r>:
 800678e:	6893      	ldr	r3, [r2, #8]
 8006790:	3b01      	subs	r3, #1
 8006792:	2b00      	cmp	r3, #0
 8006794:	b410      	push	{r4}
 8006796:	6093      	str	r3, [r2, #8]
 8006798:	da07      	bge.n	80067aa <__sfputc_r+0x1c>
 800679a:	6994      	ldr	r4, [r2, #24]
 800679c:	42a3      	cmp	r3, r4
 800679e:	db01      	blt.n	80067a4 <__sfputc_r+0x16>
 80067a0:	290a      	cmp	r1, #10
 80067a2:	d102      	bne.n	80067aa <__sfputc_r+0x1c>
 80067a4:	bc10      	pop	{r4}
 80067a6:	f000 b931 	b.w	8006a0c <__swbuf_r>
 80067aa:	6813      	ldr	r3, [r2, #0]
 80067ac:	1c58      	adds	r0, r3, #1
 80067ae:	6010      	str	r0, [r2, #0]
 80067b0:	7019      	strb	r1, [r3, #0]
 80067b2:	4608      	mov	r0, r1
 80067b4:	bc10      	pop	{r4}
 80067b6:	4770      	bx	lr

080067b8 <__sfputs_r>:
 80067b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80067ba:	4606      	mov	r6, r0
 80067bc:	460f      	mov	r7, r1
 80067be:	4614      	mov	r4, r2
 80067c0:	18d5      	adds	r5, r2, r3
 80067c2:	42ac      	cmp	r4, r5
 80067c4:	d101      	bne.n	80067ca <__sfputs_r+0x12>
 80067c6:	2000      	movs	r0, #0
 80067c8:	e007      	b.n	80067da <__sfputs_r+0x22>
 80067ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80067ce:	463a      	mov	r2, r7
 80067d0:	4630      	mov	r0, r6
 80067d2:	f7ff ffdc 	bl	800678e <__sfputc_r>
 80067d6:	1c43      	adds	r3, r0, #1
 80067d8:	d1f3      	bne.n	80067c2 <__sfputs_r+0xa>
 80067da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080067dc <_vfiprintf_r>:
 80067dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067e0:	460d      	mov	r5, r1
 80067e2:	b09d      	sub	sp, #116	@ 0x74
 80067e4:	4614      	mov	r4, r2
 80067e6:	4698      	mov	r8, r3
 80067e8:	4606      	mov	r6, r0
 80067ea:	b118      	cbz	r0, 80067f4 <_vfiprintf_r+0x18>
 80067ec:	6a03      	ldr	r3, [r0, #32]
 80067ee:	b90b      	cbnz	r3, 80067f4 <_vfiprintf_r+0x18>
 80067f0:	f7fc fe12 	bl	8003418 <__sinit>
 80067f4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80067f6:	07d9      	lsls	r1, r3, #31
 80067f8:	d405      	bmi.n	8006806 <_vfiprintf_r+0x2a>
 80067fa:	89ab      	ldrh	r3, [r5, #12]
 80067fc:	059a      	lsls	r2, r3, #22
 80067fe:	d402      	bmi.n	8006806 <_vfiprintf_r+0x2a>
 8006800:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006802:	f7fc ff22 	bl	800364a <__retarget_lock_acquire_recursive>
 8006806:	89ab      	ldrh	r3, [r5, #12]
 8006808:	071b      	lsls	r3, r3, #28
 800680a:	d501      	bpl.n	8006810 <_vfiprintf_r+0x34>
 800680c:	692b      	ldr	r3, [r5, #16]
 800680e:	b99b      	cbnz	r3, 8006838 <_vfiprintf_r+0x5c>
 8006810:	4629      	mov	r1, r5
 8006812:	4630      	mov	r0, r6
 8006814:	f000 f938 	bl	8006a88 <__swsetup_r>
 8006818:	b170      	cbz	r0, 8006838 <_vfiprintf_r+0x5c>
 800681a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800681c:	07dc      	lsls	r4, r3, #31
 800681e:	d504      	bpl.n	800682a <_vfiprintf_r+0x4e>
 8006820:	f04f 30ff 	mov.w	r0, #4294967295
 8006824:	b01d      	add	sp, #116	@ 0x74
 8006826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800682a:	89ab      	ldrh	r3, [r5, #12]
 800682c:	0598      	lsls	r0, r3, #22
 800682e:	d4f7      	bmi.n	8006820 <_vfiprintf_r+0x44>
 8006830:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006832:	f7fc ff0b 	bl	800364c <__retarget_lock_release_recursive>
 8006836:	e7f3      	b.n	8006820 <_vfiprintf_r+0x44>
 8006838:	2300      	movs	r3, #0
 800683a:	9309      	str	r3, [sp, #36]	@ 0x24
 800683c:	2320      	movs	r3, #32
 800683e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006842:	f8cd 800c 	str.w	r8, [sp, #12]
 8006846:	2330      	movs	r3, #48	@ 0x30
 8006848:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80069f8 <_vfiprintf_r+0x21c>
 800684c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006850:	f04f 0901 	mov.w	r9, #1
 8006854:	4623      	mov	r3, r4
 8006856:	469a      	mov	sl, r3
 8006858:	f813 2b01 	ldrb.w	r2, [r3], #1
 800685c:	b10a      	cbz	r2, 8006862 <_vfiprintf_r+0x86>
 800685e:	2a25      	cmp	r2, #37	@ 0x25
 8006860:	d1f9      	bne.n	8006856 <_vfiprintf_r+0x7a>
 8006862:	ebba 0b04 	subs.w	fp, sl, r4
 8006866:	d00b      	beq.n	8006880 <_vfiprintf_r+0xa4>
 8006868:	465b      	mov	r3, fp
 800686a:	4622      	mov	r2, r4
 800686c:	4629      	mov	r1, r5
 800686e:	4630      	mov	r0, r6
 8006870:	f7ff ffa2 	bl	80067b8 <__sfputs_r>
 8006874:	3001      	adds	r0, #1
 8006876:	f000 80a7 	beq.w	80069c8 <_vfiprintf_r+0x1ec>
 800687a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800687c:	445a      	add	r2, fp
 800687e:	9209      	str	r2, [sp, #36]	@ 0x24
 8006880:	f89a 3000 	ldrb.w	r3, [sl]
 8006884:	2b00      	cmp	r3, #0
 8006886:	f000 809f 	beq.w	80069c8 <_vfiprintf_r+0x1ec>
 800688a:	2300      	movs	r3, #0
 800688c:	f04f 32ff 	mov.w	r2, #4294967295
 8006890:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006894:	f10a 0a01 	add.w	sl, sl, #1
 8006898:	9304      	str	r3, [sp, #16]
 800689a:	9307      	str	r3, [sp, #28]
 800689c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80068a0:	931a      	str	r3, [sp, #104]	@ 0x68
 80068a2:	4654      	mov	r4, sl
 80068a4:	2205      	movs	r2, #5
 80068a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80068aa:	4853      	ldr	r0, [pc, #332]	@ (80069f8 <_vfiprintf_r+0x21c>)
 80068ac:	f7f9 fc90 	bl	80001d0 <memchr>
 80068b0:	9a04      	ldr	r2, [sp, #16]
 80068b2:	b9d8      	cbnz	r0, 80068ec <_vfiprintf_r+0x110>
 80068b4:	06d1      	lsls	r1, r2, #27
 80068b6:	bf44      	itt	mi
 80068b8:	2320      	movmi	r3, #32
 80068ba:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80068be:	0713      	lsls	r3, r2, #28
 80068c0:	bf44      	itt	mi
 80068c2:	232b      	movmi	r3, #43	@ 0x2b
 80068c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80068c8:	f89a 3000 	ldrb.w	r3, [sl]
 80068cc:	2b2a      	cmp	r3, #42	@ 0x2a
 80068ce:	d015      	beq.n	80068fc <_vfiprintf_r+0x120>
 80068d0:	9a07      	ldr	r2, [sp, #28]
 80068d2:	4654      	mov	r4, sl
 80068d4:	2000      	movs	r0, #0
 80068d6:	f04f 0c0a 	mov.w	ip, #10
 80068da:	4621      	mov	r1, r4
 80068dc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80068e0:	3b30      	subs	r3, #48	@ 0x30
 80068e2:	2b09      	cmp	r3, #9
 80068e4:	d94b      	bls.n	800697e <_vfiprintf_r+0x1a2>
 80068e6:	b1b0      	cbz	r0, 8006916 <_vfiprintf_r+0x13a>
 80068e8:	9207      	str	r2, [sp, #28]
 80068ea:	e014      	b.n	8006916 <_vfiprintf_r+0x13a>
 80068ec:	eba0 0308 	sub.w	r3, r0, r8
 80068f0:	fa09 f303 	lsl.w	r3, r9, r3
 80068f4:	4313      	orrs	r3, r2
 80068f6:	9304      	str	r3, [sp, #16]
 80068f8:	46a2      	mov	sl, r4
 80068fa:	e7d2      	b.n	80068a2 <_vfiprintf_r+0xc6>
 80068fc:	9b03      	ldr	r3, [sp, #12]
 80068fe:	1d19      	adds	r1, r3, #4
 8006900:	681b      	ldr	r3, [r3, #0]
 8006902:	9103      	str	r1, [sp, #12]
 8006904:	2b00      	cmp	r3, #0
 8006906:	bfbb      	ittet	lt
 8006908:	425b      	neglt	r3, r3
 800690a:	f042 0202 	orrlt.w	r2, r2, #2
 800690e:	9307      	strge	r3, [sp, #28]
 8006910:	9307      	strlt	r3, [sp, #28]
 8006912:	bfb8      	it	lt
 8006914:	9204      	strlt	r2, [sp, #16]
 8006916:	7823      	ldrb	r3, [r4, #0]
 8006918:	2b2e      	cmp	r3, #46	@ 0x2e
 800691a:	d10a      	bne.n	8006932 <_vfiprintf_r+0x156>
 800691c:	7863      	ldrb	r3, [r4, #1]
 800691e:	2b2a      	cmp	r3, #42	@ 0x2a
 8006920:	d132      	bne.n	8006988 <_vfiprintf_r+0x1ac>
 8006922:	9b03      	ldr	r3, [sp, #12]
 8006924:	1d1a      	adds	r2, r3, #4
 8006926:	681b      	ldr	r3, [r3, #0]
 8006928:	9203      	str	r2, [sp, #12]
 800692a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800692e:	3402      	adds	r4, #2
 8006930:	9305      	str	r3, [sp, #20]
 8006932:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80069fc <_vfiprintf_r+0x220>
 8006936:	7821      	ldrb	r1, [r4, #0]
 8006938:	2203      	movs	r2, #3
 800693a:	4650      	mov	r0, sl
 800693c:	f7f9 fc48 	bl	80001d0 <memchr>
 8006940:	b138      	cbz	r0, 8006952 <_vfiprintf_r+0x176>
 8006942:	9b04      	ldr	r3, [sp, #16]
 8006944:	eba0 000a 	sub.w	r0, r0, sl
 8006948:	2240      	movs	r2, #64	@ 0x40
 800694a:	4082      	lsls	r2, r0
 800694c:	4313      	orrs	r3, r2
 800694e:	3401      	adds	r4, #1
 8006950:	9304      	str	r3, [sp, #16]
 8006952:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006956:	482a      	ldr	r0, [pc, #168]	@ (8006a00 <_vfiprintf_r+0x224>)
 8006958:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800695c:	2206      	movs	r2, #6
 800695e:	f7f9 fc37 	bl	80001d0 <memchr>
 8006962:	2800      	cmp	r0, #0
 8006964:	d03f      	beq.n	80069e6 <_vfiprintf_r+0x20a>
 8006966:	4b27      	ldr	r3, [pc, #156]	@ (8006a04 <_vfiprintf_r+0x228>)
 8006968:	bb1b      	cbnz	r3, 80069b2 <_vfiprintf_r+0x1d6>
 800696a:	9b03      	ldr	r3, [sp, #12]
 800696c:	3307      	adds	r3, #7
 800696e:	f023 0307 	bic.w	r3, r3, #7
 8006972:	3308      	adds	r3, #8
 8006974:	9303      	str	r3, [sp, #12]
 8006976:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006978:	443b      	add	r3, r7
 800697a:	9309      	str	r3, [sp, #36]	@ 0x24
 800697c:	e76a      	b.n	8006854 <_vfiprintf_r+0x78>
 800697e:	fb0c 3202 	mla	r2, ip, r2, r3
 8006982:	460c      	mov	r4, r1
 8006984:	2001      	movs	r0, #1
 8006986:	e7a8      	b.n	80068da <_vfiprintf_r+0xfe>
 8006988:	2300      	movs	r3, #0
 800698a:	3401      	adds	r4, #1
 800698c:	9305      	str	r3, [sp, #20]
 800698e:	4619      	mov	r1, r3
 8006990:	f04f 0c0a 	mov.w	ip, #10
 8006994:	4620      	mov	r0, r4
 8006996:	f810 2b01 	ldrb.w	r2, [r0], #1
 800699a:	3a30      	subs	r2, #48	@ 0x30
 800699c:	2a09      	cmp	r2, #9
 800699e:	d903      	bls.n	80069a8 <_vfiprintf_r+0x1cc>
 80069a0:	2b00      	cmp	r3, #0
 80069a2:	d0c6      	beq.n	8006932 <_vfiprintf_r+0x156>
 80069a4:	9105      	str	r1, [sp, #20]
 80069a6:	e7c4      	b.n	8006932 <_vfiprintf_r+0x156>
 80069a8:	fb0c 2101 	mla	r1, ip, r1, r2
 80069ac:	4604      	mov	r4, r0
 80069ae:	2301      	movs	r3, #1
 80069b0:	e7f0      	b.n	8006994 <_vfiprintf_r+0x1b8>
 80069b2:	ab03      	add	r3, sp, #12
 80069b4:	9300      	str	r3, [sp, #0]
 80069b6:	462a      	mov	r2, r5
 80069b8:	4b13      	ldr	r3, [pc, #76]	@ (8006a08 <_vfiprintf_r+0x22c>)
 80069ba:	a904      	add	r1, sp, #16
 80069bc:	4630      	mov	r0, r6
 80069be:	f7fb fedf 	bl	8002780 <_printf_float>
 80069c2:	4607      	mov	r7, r0
 80069c4:	1c78      	adds	r0, r7, #1
 80069c6:	d1d6      	bne.n	8006976 <_vfiprintf_r+0x19a>
 80069c8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80069ca:	07d9      	lsls	r1, r3, #31
 80069cc:	d405      	bmi.n	80069da <_vfiprintf_r+0x1fe>
 80069ce:	89ab      	ldrh	r3, [r5, #12]
 80069d0:	059a      	lsls	r2, r3, #22
 80069d2:	d402      	bmi.n	80069da <_vfiprintf_r+0x1fe>
 80069d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80069d6:	f7fc fe39 	bl	800364c <__retarget_lock_release_recursive>
 80069da:	89ab      	ldrh	r3, [r5, #12]
 80069dc:	065b      	lsls	r3, r3, #25
 80069de:	f53f af1f 	bmi.w	8006820 <_vfiprintf_r+0x44>
 80069e2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80069e4:	e71e      	b.n	8006824 <_vfiprintf_r+0x48>
 80069e6:	ab03      	add	r3, sp, #12
 80069e8:	9300      	str	r3, [sp, #0]
 80069ea:	462a      	mov	r2, r5
 80069ec:	4b06      	ldr	r3, [pc, #24]	@ (8006a08 <_vfiprintf_r+0x22c>)
 80069ee:	a904      	add	r1, sp, #16
 80069f0:	4630      	mov	r0, r6
 80069f2:	f7fc f95f 	bl	8002cb4 <_printf_i>
 80069f6:	e7e4      	b.n	80069c2 <_vfiprintf_r+0x1e6>
 80069f8:	08007249 	.word	0x08007249
 80069fc:	0800724f 	.word	0x0800724f
 8006a00:	08007253 	.word	0x08007253
 8006a04:	08002781 	.word	0x08002781
 8006a08:	080067b9 	.word	0x080067b9

08006a0c <__swbuf_r>:
 8006a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a0e:	460e      	mov	r6, r1
 8006a10:	4614      	mov	r4, r2
 8006a12:	4605      	mov	r5, r0
 8006a14:	b118      	cbz	r0, 8006a1e <__swbuf_r+0x12>
 8006a16:	6a03      	ldr	r3, [r0, #32]
 8006a18:	b90b      	cbnz	r3, 8006a1e <__swbuf_r+0x12>
 8006a1a:	f7fc fcfd 	bl	8003418 <__sinit>
 8006a1e:	69a3      	ldr	r3, [r4, #24]
 8006a20:	60a3      	str	r3, [r4, #8]
 8006a22:	89a3      	ldrh	r3, [r4, #12]
 8006a24:	071a      	lsls	r2, r3, #28
 8006a26:	d501      	bpl.n	8006a2c <__swbuf_r+0x20>
 8006a28:	6923      	ldr	r3, [r4, #16]
 8006a2a:	b943      	cbnz	r3, 8006a3e <__swbuf_r+0x32>
 8006a2c:	4621      	mov	r1, r4
 8006a2e:	4628      	mov	r0, r5
 8006a30:	f000 f82a 	bl	8006a88 <__swsetup_r>
 8006a34:	b118      	cbz	r0, 8006a3e <__swbuf_r+0x32>
 8006a36:	f04f 37ff 	mov.w	r7, #4294967295
 8006a3a:	4638      	mov	r0, r7
 8006a3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006a3e:	6823      	ldr	r3, [r4, #0]
 8006a40:	6922      	ldr	r2, [r4, #16]
 8006a42:	1a98      	subs	r0, r3, r2
 8006a44:	6963      	ldr	r3, [r4, #20]
 8006a46:	b2f6      	uxtb	r6, r6
 8006a48:	4283      	cmp	r3, r0
 8006a4a:	4637      	mov	r7, r6
 8006a4c:	dc05      	bgt.n	8006a5a <__swbuf_r+0x4e>
 8006a4e:	4621      	mov	r1, r4
 8006a50:	4628      	mov	r0, r5
 8006a52:	f7ff fa4b 	bl	8005eec <_fflush_r>
 8006a56:	2800      	cmp	r0, #0
 8006a58:	d1ed      	bne.n	8006a36 <__swbuf_r+0x2a>
 8006a5a:	68a3      	ldr	r3, [r4, #8]
 8006a5c:	3b01      	subs	r3, #1
 8006a5e:	60a3      	str	r3, [r4, #8]
 8006a60:	6823      	ldr	r3, [r4, #0]
 8006a62:	1c5a      	adds	r2, r3, #1
 8006a64:	6022      	str	r2, [r4, #0]
 8006a66:	701e      	strb	r6, [r3, #0]
 8006a68:	6962      	ldr	r2, [r4, #20]
 8006a6a:	1c43      	adds	r3, r0, #1
 8006a6c:	429a      	cmp	r2, r3
 8006a6e:	d004      	beq.n	8006a7a <__swbuf_r+0x6e>
 8006a70:	89a3      	ldrh	r3, [r4, #12]
 8006a72:	07db      	lsls	r3, r3, #31
 8006a74:	d5e1      	bpl.n	8006a3a <__swbuf_r+0x2e>
 8006a76:	2e0a      	cmp	r6, #10
 8006a78:	d1df      	bne.n	8006a3a <__swbuf_r+0x2e>
 8006a7a:	4621      	mov	r1, r4
 8006a7c:	4628      	mov	r0, r5
 8006a7e:	f7ff fa35 	bl	8005eec <_fflush_r>
 8006a82:	2800      	cmp	r0, #0
 8006a84:	d0d9      	beq.n	8006a3a <__swbuf_r+0x2e>
 8006a86:	e7d6      	b.n	8006a36 <__swbuf_r+0x2a>

08006a88 <__swsetup_r>:
 8006a88:	b538      	push	{r3, r4, r5, lr}
 8006a8a:	4b29      	ldr	r3, [pc, #164]	@ (8006b30 <__swsetup_r+0xa8>)
 8006a8c:	4605      	mov	r5, r0
 8006a8e:	6818      	ldr	r0, [r3, #0]
 8006a90:	460c      	mov	r4, r1
 8006a92:	b118      	cbz	r0, 8006a9c <__swsetup_r+0x14>
 8006a94:	6a03      	ldr	r3, [r0, #32]
 8006a96:	b90b      	cbnz	r3, 8006a9c <__swsetup_r+0x14>
 8006a98:	f7fc fcbe 	bl	8003418 <__sinit>
 8006a9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006aa0:	0719      	lsls	r1, r3, #28
 8006aa2:	d422      	bmi.n	8006aea <__swsetup_r+0x62>
 8006aa4:	06da      	lsls	r2, r3, #27
 8006aa6:	d407      	bmi.n	8006ab8 <__swsetup_r+0x30>
 8006aa8:	2209      	movs	r2, #9
 8006aaa:	602a      	str	r2, [r5, #0]
 8006aac:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006ab0:	81a3      	strh	r3, [r4, #12]
 8006ab2:	f04f 30ff 	mov.w	r0, #4294967295
 8006ab6:	e033      	b.n	8006b20 <__swsetup_r+0x98>
 8006ab8:	0758      	lsls	r0, r3, #29
 8006aba:	d512      	bpl.n	8006ae2 <__swsetup_r+0x5a>
 8006abc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006abe:	b141      	cbz	r1, 8006ad2 <__swsetup_r+0x4a>
 8006ac0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006ac4:	4299      	cmp	r1, r3
 8006ac6:	d002      	beq.n	8006ace <__swsetup_r+0x46>
 8006ac8:	4628      	mov	r0, r5
 8006aca:	f7fd fc1d 	bl	8004308 <_free_r>
 8006ace:	2300      	movs	r3, #0
 8006ad0:	6363      	str	r3, [r4, #52]	@ 0x34
 8006ad2:	89a3      	ldrh	r3, [r4, #12]
 8006ad4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006ad8:	81a3      	strh	r3, [r4, #12]
 8006ada:	2300      	movs	r3, #0
 8006adc:	6063      	str	r3, [r4, #4]
 8006ade:	6923      	ldr	r3, [r4, #16]
 8006ae0:	6023      	str	r3, [r4, #0]
 8006ae2:	89a3      	ldrh	r3, [r4, #12]
 8006ae4:	f043 0308 	orr.w	r3, r3, #8
 8006ae8:	81a3      	strh	r3, [r4, #12]
 8006aea:	6923      	ldr	r3, [r4, #16]
 8006aec:	b94b      	cbnz	r3, 8006b02 <__swsetup_r+0x7a>
 8006aee:	89a3      	ldrh	r3, [r4, #12]
 8006af0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006af4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006af8:	d003      	beq.n	8006b02 <__swsetup_r+0x7a>
 8006afa:	4621      	mov	r1, r4
 8006afc:	4628      	mov	r0, r5
 8006afe:	f000 f883 	bl	8006c08 <__smakebuf_r>
 8006b02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006b06:	f013 0201 	ands.w	r2, r3, #1
 8006b0a:	d00a      	beq.n	8006b22 <__swsetup_r+0x9a>
 8006b0c:	2200      	movs	r2, #0
 8006b0e:	60a2      	str	r2, [r4, #8]
 8006b10:	6962      	ldr	r2, [r4, #20]
 8006b12:	4252      	negs	r2, r2
 8006b14:	61a2      	str	r2, [r4, #24]
 8006b16:	6922      	ldr	r2, [r4, #16]
 8006b18:	b942      	cbnz	r2, 8006b2c <__swsetup_r+0xa4>
 8006b1a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006b1e:	d1c5      	bne.n	8006aac <__swsetup_r+0x24>
 8006b20:	bd38      	pop	{r3, r4, r5, pc}
 8006b22:	0799      	lsls	r1, r3, #30
 8006b24:	bf58      	it	pl
 8006b26:	6962      	ldrpl	r2, [r4, #20]
 8006b28:	60a2      	str	r2, [r4, #8]
 8006b2a:	e7f4      	b.n	8006b16 <__swsetup_r+0x8e>
 8006b2c:	2000      	movs	r0, #0
 8006b2e:	e7f7      	b.n	8006b20 <__swsetup_r+0x98>
 8006b30:	20000020 	.word	0x20000020

08006b34 <_raise_r>:
 8006b34:	291f      	cmp	r1, #31
 8006b36:	b538      	push	{r3, r4, r5, lr}
 8006b38:	4605      	mov	r5, r0
 8006b3a:	460c      	mov	r4, r1
 8006b3c:	d904      	bls.n	8006b48 <_raise_r+0x14>
 8006b3e:	2316      	movs	r3, #22
 8006b40:	6003      	str	r3, [r0, #0]
 8006b42:	f04f 30ff 	mov.w	r0, #4294967295
 8006b46:	bd38      	pop	{r3, r4, r5, pc}
 8006b48:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006b4a:	b112      	cbz	r2, 8006b52 <_raise_r+0x1e>
 8006b4c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006b50:	b94b      	cbnz	r3, 8006b66 <_raise_r+0x32>
 8006b52:	4628      	mov	r0, r5
 8006b54:	f000 f830 	bl	8006bb8 <_getpid_r>
 8006b58:	4622      	mov	r2, r4
 8006b5a:	4601      	mov	r1, r0
 8006b5c:	4628      	mov	r0, r5
 8006b5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006b62:	f000 b817 	b.w	8006b94 <_kill_r>
 8006b66:	2b01      	cmp	r3, #1
 8006b68:	d00a      	beq.n	8006b80 <_raise_r+0x4c>
 8006b6a:	1c59      	adds	r1, r3, #1
 8006b6c:	d103      	bne.n	8006b76 <_raise_r+0x42>
 8006b6e:	2316      	movs	r3, #22
 8006b70:	6003      	str	r3, [r0, #0]
 8006b72:	2001      	movs	r0, #1
 8006b74:	e7e7      	b.n	8006b46 <_raise_r+0x12>
 8006b76:	2100      	movs	r1, #0
 8006b78:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8006b7c:	4620      	mov	r0, r4
 8006b7e:	4798      	blx	r3
 8006b80:	2000      	movs	r0, #0
 8006b82:	e7e0      	b.n	8006b46 <_raise_r+0x12>

08006b84 <raise>:
 8006b84:	4b02      	ldr	r3, [pc, #8]	@ (8006b90 <raise+0xc>)
 8006b86:	4601      	mov	r1, r0
 8006b88:	6818      	ldr	r0, [r3, #0]
 8006b8a:	f7ff bfd3 	b.w	8006b34 <_raise_r>
 8006b8e:	bf00      	nop
 8006b90:	20000020 	.word	0x20000020

08006b94 <_kill_r>:
 8006b94:	b538      	push	{r3, r4, r5, lr}
 8006b96:	4d07      	ldr	r5, [pc, #28]	@ (8006bb4 <_kill_r+0x20>)
 8006b98:	2300      	movs	r3, #0
 8006b9a:	4604      	mov	r4, r0
 8006b9c:	4608      	mov	r0, r1
 8006b9e:	4611      	mov	r1, r2
 8006ba0:	602b      	str	r3, [r5, #0]
 8006ba2:	f7fa fc0a 	bl	80013ba <_kill>
 8006ba6:	1c43      	adds	r3, r0, #1
 8006ba8:	d102      	bne.n	8006bb0 <_kill_r+0x1c>
 8006baa:	682b      	ldr	r3, [r5, #0]
 8006bac:	b103      	cbz	r3, 8006bb0 <_kill_r+0x1c>
 8006bae:	6023      	str	r3, [r4, #0]
 8006bb0:	bd38      	pop	{r3, r4, r5, pc}
 8006bb2:	bf00      	nop
 8006bb4:	200003ac 	.word	0x200003ac

08006bb8 <_getpid_r>:
 8006bb8:	f7fa bbf8 	b.w	80013ac <_getpid>

08006bbc <__swhatbuf_r>:
 8006bbc:	b570      	push	{r4, r5, r6, lr}
 8006bbe:	460c      	mov	r4, r1
 8006bc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006bc4:	2900      	cmp	r1, #0
 8006bc6:	b096      	sub	sp, #88	@ 0x58
 8006bc8:	4615      	mov	r5, r2
 8006bca:	461e      	mov	r6, r3
 8006bcc:	da0d      	bge.n	8006bea <__swhatbuf_r+0x2e>
 8006bce:	89a3      	ldrh	r3, [r4, #12]
 8006bd0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006bd4:	f04f 0100 	mov.w	r1, #0
 8006bd8:	bf14      	ite	ne
 8006bda:	2340      	movne	r3, #64	@ 0x40
 8006bdc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006be0:	2000      	movs	r0, #0
 8006be2:	6031      	str	r1, [r6, #0]
 8006be4:	602b      	str	r3, [r5, #0]
 8006be6:	b016      	add	sp, #88	@ 0x58
 8006be8:	bd70      	pop	{r4, r5, r6, pc}
 8006bea:	466a      	mov	r2, sp
 8006bec:	f000 f848 	bl	8006c80 <_fstat_r>
 8006bf0:	2800      	cmp	r0, #0
 8006bf2:	dbec      	blt.n	8006bce <__swhatbuf_r+0x12>
 8006bf4:	9901      	ldr	r1, [sp, #4]
 8006bf6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006bfa:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006bfe:	4259      	negs	r1, r3
 8006c00:	4159      	adcs	r1, r3
 8006c02:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006c06:	e7eb      	b.n	8006be0 <__swhatbuf_r+0x24>

08006c08 <__smakebuf_r>:
 8006c08:	898b      	ldrh	r3, [r1, #12]
 8006c0a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c0c:	079d      	lsls	r5, r3, #30
 8006c0e:	4606      	mov	r6, r0
 8006c10:	460c      	mov	r4, r1
 8006c12:	d507      	bpl.n	8006c24 <__smakebuf_r+0x1c>
 8006c14:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006c18:	6023      	str	r3, [r4, #0]
 8006c1a:	6123      	str	r3, [r4, #16]
 8006c1c:	2301      	movs	r3, #1
 8006c1e:	6163      	str	r3, [r4, #20]
 8006c20:	b003      	add	sp, #12
 8006c22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c24:	ab01      	add	r3, sp, #4
 8006c26:	466a      	mov	r2, sp
 8006c28:	f7ff ffc8 	bl	8006bbc <__swhatbuf_r>
 8006c2c:	9f00      	ldr	r7, [sp, #0]
 8006c2e:	4605      	mov	r5, r0
 8006c30:	4639      	mov	r1, r7
 8006c32:	4630      	mov	r0, r6
 8006c34:	f7fd fbdc 	bl	80043f0 <_malloc_r>
 8006c38:	b948      	cbnz	r0, 8006c4e <__smakebuf_r+0x46>
 8006c3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006c3e:	059a      	lsls	r2, r3, #22
 8006c40:	d4ee      	bmi.n	8006c20 <__smakebuf_r+0x18>
 8006c42:	f023 0303 	bic.w	r3, r3, #3
 8006c46:	f043 0302 	orr.w	r3, r3, #2
 8006c4a:	81a3      	strh	r3, [r4, #12]
 8006c4c:	e7e2      	b.n	8006c14 <__smakebuf_r+0xc>
 8006c4e:	89a3      	ldrh	r3, [r4, #12]
 8006c50:	6020      	str	r0, [r4, #0]
 8006c52:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006c56:	81a3      	strh	r3, [r4, #12]
 8006c58:	9b01      	ldr	r3, [sp, #4]
 8006c5a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8006c5e:	b15b      	cbz	r3, 8006c78 <__smakebuf_r+0x70>
 8006c60:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006c64:	4630      	mov	r0, r6
 8006c66:	f000 f81d 	bl	8006ca4 <_isatty_r>
 8006c6a:	b128      	cbz	r0, 8006c78 <__smakebuf_r+0x70>
 8006c6c:	89a3      	ldrh	r3, [r4, #12]
 8006c6e:	f023 0303 	bic.w	r3, r3, #3
 8006c72:	f043 0301 	orr.w	r3, r3, #1
 8006c76:	81a3      	strh	r3, [r4, #12]
 8006c78:	89a3      	ldrh	r3, [r4, #12]
 8006c7a:	431d      	orrs	r5, r3
 8006c7c:	81a5      	strh	r5, [r4, #12]
 8006c7e:	e7cf      	b.n	8006c20 <__smakebuf_r+0x18>

08006c80 <_fstat_r>:
 8006c80:	b538      	push	{r3, r4, r5, lr}
 8006c82:	4d07      	ldr	r5, [pc, #28]	@ (8006ca0 <_fstat_r+0x20>)
 8006c84:	2300      	movs	r3, #0
 8006c86:	4604      	mov	r4, r0
 8006c88:	4608      	mov	r0, r1
 8006c8a:	4611      	mov	r1, r2
 8006c8c:	602b      	str	r3, [r5, #0]
 8006c8e:	f7fa fbf3 	bl	8001478 <_fstat>
 8006c92:	1c43      	adds	r3, r0, #1
 8006c94:	d102      	bne.n	8006c9c <_fstat_r+0x1c>
 8006c96:	682b      	ldr	r3, [r5, #0]
 8006c98:	b103      	cbz	r3, 8006c9c <_fstat_r+0x1c>
 8006c9a:	6023      	str	r3, [r4, #0]
 8006c9c:	bd38      	pop	{r3, r4, r5, pc}
 8006c9e:	bf00      	nop
 8006ca0:	200003ac 	.word	0x200003ac

08006ca4 <_isatty_r>:
 8006ca4:	b538      	push	{r3, r4, r5, lr}
 8006ca6:	4d06      	ldr	r5, [pc, #24]	@ (8006cc0 <_isatty_r+0x1c>)
 8006ca8:	2300      	movs	r3, #0
 8006caa:	4604      	mov	r4, r0
 8006cac:	4608      	mov	r0, r1
 8006cae:	602b      	str	r3, [r5, #0]
 8006cb0:	f7fa fbf1 	bl	8001496 <_isatty>
 8006cb4:	1c43      	adds	r3, r0, #1
 8006cb6:	d102      	bne.n	8006cbe <_isatty_r+0x1a>
 8006cb8:	682b      	ldr	r3, [r5, #0]
 8006cba:	b103      	cbz	r3, 8006cbe <_isatty_r+0x1a>
 8006cbc:	6023      	str	r3, [r4, #0]
 8006cbe:	bd38      	pop	{r3, r4, r5, pc}
 8006cc0:	200003ac 	.word	0x200003ac

08006cc4 <atan2f>:
 8006cc4:	f000 b88a 	b.w	8006ddc <__ieee754_atan2f>

08006cc8 <sqrtf>:
 8006cc8:	b538      	push	{r3, r4, r5, lr}
 8006cca:	4605      	mov	r5, r0
 8006ccc:	f000 f816 	bl	8006cfc <__ieee754_sqrtf>
 8006cd0:	4629      	mov	r1, r5
 8006cd2:	4604      	mov	r4, r0
 8006cd4:	4628      	mov	r0, r5
 8006cd6:	f7fa faab 	bl	8001230 <__aeabi_fcmpun>
 8006cda:	b968      	cbnz	r0, 8006cf8 <sqrtf+0x30>
 8006cdc:	2100      	movs	r1, #0
 8006cde:	4628      	mov	r0, r5
 8006ce0:	f7fa fa7e 	bl	80011e0 <__aeabi_fcmplt>
 8006ce4:	b140      	cbz	r0, 8006cf8 <sqrtf+0x30>
 8006ce6:	f7fc fc85 	bl	80035f4 <__errno>
 8006cea:	2321      	movs	r3, #33	@ 0x21
 8006cec:	2100      	movs	r1, #0
 8006cee:	6003      	str	r3, [r0, #0]
 8006cf0:	4608      	mov	r0, r1
 8006cf2:	f7fa f98b 	bl	800100c <__aeabi_fdiv>
 8006cf6:	4604      	mov	r4, r0
 8006cf8:	4620      	mov	r0, r4
 8006cfa:	bd38      	pop	{r3, r4, r5, pc}

08006cfc <__ieee754_sqrtf>:
 8006cfc:	f020 4200 	bic.w	r2, r0, #2147483648	@ 0x80000000
 8006d00:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8006d04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d08:	4603      	mov	r3, r0
 8006d0a:	4604      	mov	r4, r0
 8006d0c:	d30a      	bcc.n	8006d24 <__ieee754_sqrtf+0x28>
 8006d0e:	4601      	mov	r1, r0
 8006d10:	f7fa f8c8 	bl	8000ea4 <__aeabi_fmul>
 8006d14:	4601      	mov	r1, r0
 8006d16:	4620      	mov	r0, r4
 8006d18:	f7f9 ffbc 	bl	8000c94 <__addsf3>
 8006d1c:	4604      	mov	r4, r0
 8006d1e:	4620      	mov	r0, r4
 8006d20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006d24:	2a00      	cmp	r2, #0
 8006d26:	d0fa      	beq.n	8006d1e <__ieee754_sqrtf+0x22>
 8006d28:	2800      	cmp	r0, #0
 8006d2a:	da06      	bge.n	8006d3a <__ieee754_sqrtf+0x3e>
 8006d2c:	4601      	mov	r1, r0
 8006d2e:	f7f9 ffaf 	bl	8000c90 <__aeabi_fsub>
 8006d32:	4601      	mov	r1, r0
 8006d34:	f7fa f96a 	bl	800100c <__aeabi_fdiv>
 8006d38:	e7f0      	b.n	8006d1c <__ieee754_sqrtf+0x20>
 8006d3a:	f010 41ff 	ands.w	r1, r0, #2139095040	@ 0x7f800000
 8006d3e:	d03c      	beq.n	8006dba <__ieee754_sqrtf+0xbe>
 8006d40:	15c2      	asrs	r2, r0, #23
 8006d42:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8006d46:	f1a2 057f 	sub.w	r5, r2, #127	@ 0x7f
 8006d4a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006d4e:	07d2      	lsls	r2, r2, #31
 8006d50:	bf58      	it	pl
 8006d52:	005b      	lslpl	r3, r3, #1
 8006d54:	2400      	movs	r4, #0
 8006d56:	106d      	asrs	r5, r5, #1
 8006d58:	005b      	lsls	r3, r3, #1
 8006d5a:	2019      	movs	r0, #25
 8006d5c:	4626      	mov	r6, r4
 8006d5e:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
 8006d62:	1872      	adds	r2, r6, r1
 8006d64:	429a      	cmp	r2, r3
 8006d66:	bfdd      	ittte	le
 8006d68:	1856      	addle	r6, r2, r1
 8006d6a:	1864      	addle	r4, r4, r1
 8006d6c:	1a9a      	suble	r2, r3, r2
 8006d6e:	461a      	movgt	r2, r3
 8006d70:	3801      	subs	r0, #1
 8006d72:	ea4f 0342 	mov.w	r3, r2, lsl #1
 8006d76:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8006d7a:	d1f2      	bne.n	8006d62 <__ieee754_sqrtf+0x66>
 8006d7c:	b1ba      	cbz	r2, 8006dae <__ieee754_sqrtf+0xb2>
 8006d7e:	4e15      	ldr	r6, [pc, #84]	@ (8006dd4 <__ieee754_sqrtf+0xd8>)
 8006d80:	4f15      	ldr	r7, [pc, #84]	@ (8006dd8 <__ieee754_sqrtf+0xdc>)
 8006d82:	6830      	ldr	r0, [r6, #0]
 8006d84:	6839      	ldr	r1, [r7, #0]
 8006d86:	f8d6 8000 	ldr.w	r8, [r6]
 8006d8a:	f7f9 ff81 	bl	8000c90 <__aeabi_fsub>
 8006d8e:	4601      	mov	r1, r0
 8006d90:	4640      	mov	r0, r8
 8006d92:	f7fa fa2f 	bl	80011f4 <__aeabi_fcmple>
 8006d96:	b150      	cbz	r0, 8006dae <__ieee754_sqrtf+0xb2>
 8006d98:	6830      	ldr	r0, [r6, #0]
 8006d9a:	6839      	ldr	r1, [r7, #0]
 8006d9c:	6836      	ldr	r6, [r6, #0]
 8006d9e:	f7f9 ff79 	bl	8000c94 <__addsf3>
 8006da2:	4601      	mov	r1, r0
 8006da4:	4630      	mov	r0, r6
 8006da6:	f7fa fa1b 	bl	80011e0 <__aeabi_fcmplt>
 8006daa:	b170      	cbz	r0, 8006dca <__ieee754_sqrtf+0xce>
 8006dac:	3402      	adds	r4, #2
 8006dae:	1064      	asrs	r4, r4, #1
 8006db0:	f104 547c 	add.w	r4, r4, #1056964608	@ 0x3f000000
 8006db4:	eb04 54c5 	add.w	r4, r4, r5, lsl #23
 8006db8:	e7b1      	b.n	8006d1e <__ieee754_sqrtf+0x22>
 8006dba:	005b      	lsls	r3, r3, #1
 8006dbc:	0218      	lsls	r0, r3, #8
 8006dbe:	460a      	mov	r2, r1
 8006dc0:	f101 0101 	add.w	r1, r1, #1
 8006dc4:	d5f9      	bpl.n	8006dba <__ieee754_sqrtf+0xbe>
 8006dc6:	4252      	negs	r2, r2
 8006dc8:	e7bb      	b.n	8006d42 <__ieee754_sqrtf+0x46>
 8006dca:	3401      	adds	r4, #1
 8006dcc:	f024 0401 	bic.w	r4, r4, #1
 8006dd0:	e7ed      	b.n	8006dae <__ieee754_sqrtf+0xb2>
 8006dd2:	bf00      	nop
 8006dd4:	08007558 	.word	0x08007558
 8006dd8:	08007554 	.word	0x08007554

08006ddc <__ieee754_atan2f>:
 8006ddc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006dde:	f021 4600 	bic.w	r6, r1, #2147483648	@ 0x80000000
 8006de2:	f1b6 4fff 	cmp.w	r6, #2139095040	@ 0x7f800000
 8006de6:	4603      	mov	r3, r0
 8006de8:	d805      	bhi.n	8006df6 <__ieee754_atan2f+0x1a>
 8006dea:	f020 4200 	bic.w	r2, r0, #2147483648	@ 0x80000000
 8006dee:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8006df2:	4607      	mov	r7, r0
 8006df4:	d904      	bls.n	8006e00 <__ieee754_atan2f+0x24>
 8006df6:	4618      	mov	r0, r3
 8006df8:	f7f9 ff4c 	bl	8000c94 <__addsf3>
 8006dfc:	4603      	mov	r3, r0
 8006dfe:	e010      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006e00:	f1b1 5f7e 	cmp.w	r1, #1065353216	@ 0x3f800000
 8006e04:	d103      	bne.n	8006e0e <__ieee754_atan2f+0x32>
 8006e06:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006e0a:	f000 b86f 	b.w	8006eec <atanf>
 8006e0e:	178c      	asrs	r4, r1, #30
 8006e10:	f004 0402 	and.w	r4, r4, #2
 8006e14:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8006e18:	b92a      	cbnz	r2, 8006e26 <__ieee754_atan2f+0x4a>
 8006e1a:	2c02      	cmp	r4, #2
 8006e1c:	d04b      	beq.n	8006eb6 <__ieee754_atan2f+0xda>
 8006e1e:	2c03      	cmp	r4, #3
 8006e20:	d04b      	beq.n	8006eba <__ieee754_atan2f+0xde>
 8006e22:	4618      	mov	r0, r3
 8006e24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006e26:	b91e      	cbnz	r6, 8006e30 <__ieee754_atan2f+0x54>
 8006e28:	2f00      	cmp	r7, #0
 8006e2a:	db4c      	blt.n	8006ec6 <__ieee754_atan2f+0xea>
 8006e2c:	4b27      	ldr	r3, [pc, #156]	@ (8006ecc <__ieee754_atan2f+0xf0>)
 8006e2e:	e7f8      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006e30:	f1b6 4fff 	cmp.w	r6, #2139095040	@ 0x7f800000
 8006e34:	d10e      	bne.n	8006e54 <__ieee754_atan2f+0x78>
 8006e36:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8006e3a:	f104 34ff 	add.w	r4, r4, #4294967295
 8006e3e:	d105      	bne.n	8006e4c <__ieee754_atan2f+0x70>
 8006e40:	2c02      	cmp	r4, #2
 8006e42:	d83c      	bhi.n	8006ebe <__ieee754_atan2f+0xe2>
 8006e44:	4b22      	ldr	r3, [pc, #136]	@ (8006ed0 <__ieee754_atan2f+0xf4>)
 8006e46:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8006e4a:	e7ea      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006e4c:	2c02      	cmp	r4, #2
 8006e4e:	d838      	bhi.n	8006ec2 <__ieee754_atan2f+0xe6>
 8006e50:	4b20      	ldr	r3, [pc, #128]	@ (8006ed4 <__ieee754_atan2f+0xf8>)
 8006e52:	e7f8      	b.n	8006e46 <__ieee754_atan2f+0x6a>
 8006e54:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8006e58:	d0e6      	beq.n	8006e28 <__ieee754_atan2f+0x4c>
 8006e5a:	1b92      	subs	r2, r2, r6
 8006e5c:	f1b2 5ff4 	cmp.w	r2, #511705088	@ 0x1e800000
 8006e60:	ea4f 50e2 	mov.w	r0, r2, asr #23
 8006e64:	da17      	bge.n	8006e96 <__ieee754_atan2f+0xba>
 8006e66:	2900      	cmp	r1, #0
 8006e68:	da01      	bge.n	8006e6e <__ieee754_atan2f+0x92>
 8006e6a:	303c      	adds	r0, #60	@ 0x3c
 8006e6c:	db15      	blt.n	8006e9a <__ieee754_atan2f+0xbe>
 8006e6e:	4618      	mov	r0, r3
 8006e70:	f7fa f8cc 	bl	800100c <__aeabi_fdiv>
 8006e74:	f000 f946 	bl	8007104 <fabsf>
 8006e78:	f000 f838 	bl	8006eec <atanf>
 8006e7c:	4603      	mov	r3, r0
 8006e7e:	2c01      	cmp	r4, #1
 8006e80:	d00d      	beq.n	8006e9e <__ieee754_atan2f+0xc2>
 8006e82:	2c02      	cmp	r4, #2
 8006e84:	d00e      	beq.n	8006ea4 <__ieee754_atan2f+0xc8>
 8006e86:	2c00      	cmp	r4, #0
 8006e88:	d0cb      	beq.n	8006e22 <__ieee754_atan2f+0x46>
 8006e8a:	4913      	ldr	r1, [pc, #76]	@ (8006ed8 <__ieee754_atan2f+0xfc>)
 8006e8c:	4618      	mov	r0, r3
 8006e8e:	f7f9 ff01 	bl	8000c94 <__addsf3>
 8006e92:	4912      	ldr	r1, [pc, #72]	@ (8006edc <__ieee754_atan2f+0x100>)
 8006e94:	e00c      	b.n	8006eb0 <__ieee754_atan2f+0xd4>
 8006e96:	4b0d      	ldr	r3, [pc, #52]	@ (8006ecc <__ieee754_atan2f+0xf0>)
 8006e98:	e7f1      	b.n	8006e7e <__ieee754_atan2f+0xa2>
 8006e9a:	2300      	movs	r3, #0
 8006e9c:	e7ef      	b.n	8006e7e <__ieee754_atan2f+0xa2>
 8006e9e:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8006ea2:	e7be      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006ea4:	490c      	ldr	r1, [pc, #48]	@ (8006ed8 <__ieee754_atan2f+0xfc>)
 8006ea6:	4618      	mov	r0, r3
 8006ea8:	f7f9 fef4 	bl	8000c94 <__addsf3>
 8006eac:	4601      	mov	r1, r0
 8006eae:	480b      	ldr	r0, [pc, #44]	@ (8006edc <__ieee754_atan2f+0x100>)
 8006eb0:	f7f9 feee 	bl	8000c90 <__aeabi_fsub>
 8006eb4:	e7a2      	b.n	8006dfc <__ieee754_atan2f+0x20>
 8006eb6:	4b09      	ldr	r3, [pc, #36]	@ (8006edc <__ieee754_atan2f+0x100>)
 8006eb8:	e7b3      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006eba:	4b09      	ldr	r3, [pc, #36]	@ (8006ee0 <__ieee754_atan2f+0x104>)
 8006ebc:	e7b1      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006ebe:	4b09      	ldr	r3, [pc, #36]	@ (8006ee4 <__ieee754_atan2f+0x108>)
 8006ec0:	e7af      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006ec2:	2300      	movs	r3, #0
 8006ec4:	e7ad      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006ec6:	4b08      	ldr	r3, [pc, #32]	@ (8006ee8 <__ieee754_atan2f+0x10c>)
 8006ec8:	e7ab      	b.n	8006e22 <__ieee754_atan2f+0x46>
 8006eca:	bf00      	nop
 8006ecc:	3fc90fdb 	.word	0x3fc90fdb
 8006ed0:	08007568 	.word	0x08007568
 8006ed4:	0800755c 	.word	0x0800755c
 8006ed8:	33bbbd2e 	.word	0x33bbbd2e
 8006edc:	40490fdb 	.word	0x40490fdb
 8006ee0:	c0490fdb 	.word	0xc0490fdb
 8006ee4:	3f490fdb 	.word	0x3f490fdb
 8006ee8:	bfc90fdb 	.word	0xbfc90fdb

08006eec <atanf>:
 8006eec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ef0:	f020 4500 	bic.w	r5, r0, #2147483648	@ 0x80000000
 8006ef4:	f1b5 4fa1 	cmp.w	r5, #1350565888	@ 0x50800000
 8006ef8:	4604      	mov	r4, r0
 8006efa:	4680      	mov	r8, r0
 8006efc:	d30e      	bcc.n	8006f1c <atanf+0x30>
 8006efe:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8006f02:	d904      	bls.n	8006f0e <atanf+0x22>
 8006f04:	4601      	mov	r1, r0
 8006f06:	f7f9 fec5 	bl	8000c94 <__addsf3>
 8006f0a:	4604      	mov	r4, r0
 8006f0c:	e003      	b.n	8006f16 <atanf+0x2a>
 8006f0e:	2800      	cmp	r0, #0
 8006f10:	f340 80ce 	ble.w	80070b0 <atanf+0x1c4>
 8006f14:	4c67      	ldr	r4, [pc, #412]	@ (80070b4 <atanf+0x1c8>)
 8006f16:	4620      	mov	r0, r4
 8006f18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f1c:	4b66      	ldr	r3, [pc, #408]	@ (80070b8 <atanf+0x1cc>)
 8006f1e:	429d      	cmp	r5, r3
 8006f20:	d80e      	bhi.n	8006f40 <atanf+0x54>
 8006f22:	f1b5 5f44 	cmp.w	r5, #822083584	@ 0x31000000
 8006f26:	d208      	bcs.n	8006f3a <atanf+0x4e>
 8006f28:	4964      	ldr	r1, [pc, #400]	@ (80070bc <atanf+0x1d0>)
 8006f2a:	f7f9 feb3 	bl	8000c94 <__addsf3>
 8006f2e:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8006f32:	f7fa f973 	bl	800121c <__aeabi_fcmpgt>
 8006f36:	2800      	cmp	r0, #0
 8006f38:	d1ed      	bne.n	8006f16 <atanf+0x2a>
 8006f3a:	f04f 36ff 	mov.w	r6, #4294967295
 8006f3e:	e01c      	b.n	8006f7a <atanf+0x8e>
 8006f40:	f000 f8e0 	bl	8007104 <fabsf>
 8006f44:	4b5e      	ldr	r3, [pc, #376]	@ (80070c0 <atanf+0x1d4>)
 8006f46:	429d      	cmp	r5, r3
 8006f48:	4604      	mov	r4, r0
 8006f4a:	d87c      	bhi.n	8007046 <atanf+0x15a>
 8006f4c:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8006f50:	429d      	cmp	r5, r3
 8006f52:	d867      	bhi.n	8007024 <atanf+0x138>
 8006f54:	4601      	mov	r1, r0
 8006f56:	f7f9 fe9d 	bl	8000c94 <__addsf3>
 8006f5a:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8006f5e:	f7f9 fe97 	bl	8000c90 <__aeabi_fsub>
 8006f62:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 8006f66:	4605      	mov	r5, r0
 8006f68:	4620      	mov	r0, r4
 8006f6a:	f7f9 fe93 	bl	8000c94 <__addsf3>
 8006f6e:	4601      	mov	r1, r0
 8006f70:	4628      	mov	r0, r5
 8006f72:	f7fa f84b 	bl	800100c <__aeabi_fdiv>
 8006f76:	2600      	movs	r6, #0
 8006f78:	4604      	mov	r4, r0
 8006f7a:	4621      	mov	r1, r4
 8006f7c:	4620      	mov	r0, r4
 8006f7e:	f7f9 ff91 	bl	8000ea4 <__aeabi_fmul>
 8006f82:	4601      	mov	r1, r0
 8006f84:	4607      	mov	r7, r0
 8006f86:	f7f9 ff8d 	bl	8000ea4 <__aeabi_fmul>
 8006f8a:	494e      	ldr	r1, [pc, #312]	@ (80070c4 <atanf+0x1d8>)
 8006f8c:	4605      	mov	r5, r0
 8006f8e:	f7f9 ff89 	bl	8000ea4 <__aeabi_fmul>
 8006f92:	494d      	ldr	r1, [pc, #308]	@ (80070c8 <atanf+0x1dc>)
 8006f94:	f7f9 fe7e 	bl	8000c94 <__addsf3>
 8006f98:	4629      	mov	r1, r5
 8006f9a:	f7f9 ff83 	bl	8000ea4 <__aeabi_fmul>
 8006f9e:	494b      	ldr	r1, [pc, #300]	@ (80070cc <atanf+0x1e0>)
 8006fa0:	f7f9 fe78 	bl	8000c94 <__addsf3>
 8006fa4:	4629      	mov	r1, r5
 8006fa6:	f7f9 ff7d 	bl	8000ea4 <__aeabi_fmul>
 8006faa:	4949      	ldr	r1, [pc, #292]	@ (80070d0 <atanf+0x1e4>)
 8006fac:	f7f9 fe72 	bl	8000c94 <__addsf3>
 8006fb0:	4629      	mov	r1, r5
 8006fb2:	f7f9 ff77 	bl	8000ea4 <__aeabi_fmul>
 8006fb6:	4947      	ldr	r1, [pc, #284]	@ (80070d4 <atanf+0x1e8>)
 8006fb8:	f7f9 fe6c 	bl	8000c94 <__addsf3>
 8006fbc:	4629      	mov	r1, r5
 8006fbe:	f7f9 ff71 	bl	8000ea4 <__aeabi_fmul>
 8006fc2:	4945      	ldr	r1, [pc, #276]	@ (80070d8 <atanf+0x1ec>)
 8006fc4:	f7f9 fe66 	bl	8000c94 <__addsf3>
 8006fc8:	4639      	mov	r1, r7
 8006fca:	f7f9 ff6b 	bl	8000ea4 <__aeabi_fmul>
 8006fce:	4943      	ldr	r1, [pc, #268]	@ (80070dc <atanf+0x1f0>)
 8006fd0:	4607      	mov	r7, r0
 8006fd2:	4628      	mov	r0, r5
 8006fd4:	f7f9 ff66 	bl	8000ea4 <__aeabi_fmul>
 8006fd8:	4941      	ldr	r1, [pc, #260]	@ (80070e0 <atanf+0x1f4>)
 8006fda:	f7f9 fe59 	bl	8000c90 <__aeabi_fsub>
 8006fde:	4629      	mov	r1, r5
 8006fe0:	f7f9 ff60 	bl	8000ea4 <__aeabi_fmul>
 8006fe4:	493f      	ldr	r1, [pc, #252]	@ (80070e4 <atanf+0x1f8>)
 8006fe6:	f7f9 fe53 	bl	8000c90 <__aeabi_fsub>
 8006fea:	4629      	mov	r1, r5
 8006fec:	f7f9 ff5a 	bl	8000ea4 <__aeabi_fmul>
 8006ff0:	493d      	ldr	r1, [pc, #244]	@ (80070e8 <atanf+0x1fc>)
 8006ff2:	f7f9 fe4d 	bl	8000c90 <__aeabi_fsub>
 8006ff6:	4629      	mov	r1, r5
 8006ff8:	f7f9 ff54 	bl	8000ea4 <__aeabi_fmul>
 8006ffc:	493b      	ldr	r1, [pc, #236]	@ (80070ec <atanf+0x200>)
 8006ffe:	f7f9 fe47 	bl	8000c90 <__aeabi_fsub>
 8007002:	4629      	mov	r1, r5
 8007004:	f7f9 ff4e 	bl	8000ea4 <__aeabi_fmul>
 8007008:	4601      	mov	r1, r0
 800700a:	4638      	mov	r0, r7
 800700c:	f7f9 fe42 	bl	8000c94 <__addsf3>
 8007010:	4621      	mov	r1, r4
 8007012:	f7f9 ff47 	bl	8000ea4 <__aeabi_fmul>
 8007016:	1c73      	adds	r3, r6, #1
 8007018:	4601      	mov	r1, r0
 800701a:	d133      	bne.n	8007084 <atanf+0x198>
 800701c:	4620      	mov	r0, r4
 800701e:	f7f9 fe37 	bl	8000c90 <__aeabi_fsub>
 8007022:	e772      	b.n	8006f0a <atanf+0x1e>
 8007024:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8007028:	f7f9 fe32 	bl	8000c90 <__aeabi_fsub>
 800702c:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8007030:	4605      	mov	r5, r0
 8007032:	4620      	mov	r0, r4
 8007034:	f7f9 fe2e 	bl	8000c94 <__addsf3>
 8007038:	4601      	mov	r1, r0
 800703a:	4628      	mov	r0, r5
 800703c:	f7f9 ffe6 	bl	800100c <__aeabi_fdiv>
 8007040:	2601      	movs	r6, #1
 8007042:	4604      	mov	r4, r0
 8007044:	e799      	b.n	8006f7a <atanf+0x8e>
 8007046:	4b2a      	ldr	r3, [pc, #168]	@ (80070f0 <atanf+0x204>)
 8007048:	429d      	cmp	r5, r3
 800704a:	d814      	bhi.n	8007076 <atanf+0x18a>
 800704c:	f04f 517f 	mov.w	r1, #1069547520	@ 0x3fc00000
 8007050:	f7f9 fe1e 	bl	8000c90 <__aeabi_fsub>
 8007054:	f04f 517f 	mov.w	r1, #1069547520	@ 0x3fc00000
 8007058:	4605      	mov	r5, r0
 800705a:	4620      	mov	r0, r4
 800705c:	f7f9 ff22 	bl	8000ea4 <__aeabi_fmul>
 8007060:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8007064:	f7f9 fe16 	bl	8000c94 <__addsf3>
 8007068:	4601      	mov	r1, r0
 800706a:	4628      	mov	r0, r5
 800706c:	f7f9 ffce 	bl	800100c <__aeabi_fdiv>
 8007070:	2602      	movs	r6, #2
 8007072:	4604      	mov	r4, r0
 8007074:	e781      	b.n	8006f7a <atanf+0x8e>
 8007076:	4601      	mov	r1, r0
 8007078:	481e      	ldr	r0, [pc, #120]	@ (80070f4 <atanf+0x208>)
 800707a:	f7f9 ffc7 	bl	800100c <__aeabi_fdiv>
 800707e:	2603      	movs	r6, #3
 8007080:	4604      	mov	r4, r0
 8007082:	e77a      	b.n	8006f7a <atanf+0x8e>
 8007084:	4b1c      	ldr	r3, [pc, #112]	@ (80070f8 <atanf+0x20c>)
 8007086:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
 800708a:	f7f9 fe01 	bl	8000c90 <__aeabi_fsub>
 800708e:	4621      	mov	r1, r4
 8007090:	f7f9 fdfe 	bl	8000c90 <__aeabi_fsub>
 8007094:	4b19      	ldr	r3, [pc, #100]	@ (80070fc <atanf+0x210>)
 8007096:	4601      	mov	r1, r0
 8007098:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 800709c:	f7f9 fdf8 	bl	8000c90 <__aeabi_fsub>
 80070a0:	f1b8 0f00 	cmp.w	r8, #0
 80070a4:	4604      	mov	r4, r0
 80070a6:	f6bf af36 	bge.w	8006f16 <atanf+0x2a>
 80070aa:	f100 4400 	add.w	r4, r0, #2147483648	@ 0x80000000
 80070ae:	e732      	b.n	8006f16 <atanf+0x2a>
 80070b0:	4c13      	ldr	r4, [pc, #76]	@ (8007100 <atanf+0x214>)
 80070b2:	e730      	b.n	8006f16 <atanf+0x2a>
 80070b4:	3fc90fdb 	.word	0x3fc90fdb
 80070b8:	3edfffff 	.word	0x3edfffff
 80070bc:	7149f2ca 	.word	0x7149f2ca
 80070c0:	3f97ffff 	.word	0x3f97ffff
 80070c4:	3c8569d7 	.word	0x3c8569d7
 80070c8:	3d4bda59 	.word	0x3d4bda59
 80070cc:	3d886b35 	.word	0x3d886b35
 80070d0:	3dba2e6e 	.word	0x3dba2e6e
 80070d4:	3e124925 	.word	0x3e124925
 80070d8:	3eaaaaab 	.word	0x3eaaaaab
 80070dc:	bd15a221 	.word	0xbd15a221
 80070e0:	3d6ef16b 	.word	0x3d6ef16b
 80070e4:	3d9d8795 	.word	0x3d9d8795
 80070e8:	3de38e38 	.word	0x3de38e38
 80070ec:	3e4ccccd 	.word	0x3e4ccccd
 80070f0:	401bffff 	.word	0x401bffff
 80070f4:	bf800000 	.word	0xbf800000
 80070f8:	08007574 	.word	0x08007574
 80070fc:	08007584 	.word	0x08007584
 8007100:	bfc90fdb 	.word	0xbfc90fdb

08007104 <fabsf>:
 8007104:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8007108:	4770      	bx	lr
	...

0800710c <_init>:
 800710c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800710e:	bf00      	nop
 8007110:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007112:	bc08      	pop	{r3}
 8007114:	469e      	mov	lr, r3
 8007116:	4770      	bx	lr

08007118 <_fini>:
 8007118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800711a:	bf00      	nop
 800711c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800711e:	bc08      	pop	{r3}
 8007120:	469e      	mov	lr, r3
 8007122:	4770      	bx	lr
