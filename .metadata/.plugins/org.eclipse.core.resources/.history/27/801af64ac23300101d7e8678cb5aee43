/*
 * MAX7219.c
 *
 *  Created on: May 18, 2025
 *      Author: quanvm198
 */
#include "MAX7219.h"



void MAX7219_SendCommand(SPI_RegDef_t* SPIx, uint8_t Address, uint8_t Data){
  uint8_t TX_Data[2] = {Address, Data};

  SPI_Transmit(SPIx, TX_Data, 2);
}


void MAX7219_OperationMode(SPI_RegDef_t* SPIx, _Bool Mode){
  MAX7219_SendCommand(SPIx, MAX7219_REG_SHUTDOWN, Mode);
}

void MAX7219_SetDecodeMode(SPI_RegDef_t* SPIx, uint8_t DecodeMode){
  MAX7219_SendCommand(SPIx, MAX7219_REG_DECODE_MODE, DecodeMode);
}

void MAX7219_SetIntensity(SPI_RegDef_t* SPIx, uint8_t IntensityLevel){
  MAX7219_SendCommand(SPIx, MAX7219_REG_INTENSITY, IntensityLevel);
}

void MAX7219_SetScanLimit(SPI_RegDef_t* SPIx, uint8_t ScanLimit){
  MAX7219_SendCommand(SPIx, MAX7219_REG_SCAN_LIMIT, ScanLimit);
}

void MAX7219_Init(SPI_RegDef_t* SPIx, uint8_t DecodeMode, uint8_t IntensityLevel, uint8_t ScanLimit){
  MAX7219_Clean(SPIx);
  MAX7219_OperationMode(SPIx, MAX7219_NORMAL_OPERATION);
  MAX7219_SetDecodeMode(SPIx, DecodeMode);
  MAX7219_SetIntensity(SPIx, IntensityLevel);
  MAX7219_SetScanLimit(SPIx, ScanLimit);
}

void MAX7219_SetDigitValue(SPI_RegDef_t* SPIx, uint8_t Digit, uint8_t Value){
  MAX7219_SendCommand(SPIx, Digit, Value);
}

void MAX7219_TestLED(SPI_RegDef_t* SPIx, _Bool IsEnabled){
  MAX7219_SendCommand(SPIx, MAX7219_REG_DISPLAY_TEST, IsEnabled);
}

void MAX7219_Clean(SPI_RegDef_t* SPIx){
	for(int count = 0; count <= 0xC; count++){
	    MAX7219_SendCommand(SPIx, count, 0);
	}
	MAX7219_SendCommand(SPIx, 0xF, 0);
}

void MAX7219_LeftSignal(SPI_RegDef_t* SPIx){
    for(uint8_t digit = MAX7219_REG_DIGIT0; digit <= MAX7219_REG_DIGIT3; digit++){
	if(digit == MAX7219_REG_DIGIT0){
	    MAX7219_SetDigitValue(SPIx, digit, 0x6);
	}
	else{
	MAX7219_SetDigitValue(SPIx, digit, 0x1);
	}
	Delay_ms(50);
    }
    Delay_ms(200);

    for(uint8_t digit = MAX7219_REG_DIGIT0; digit <= MAX7219_REG_DIGIT3; digit++){
	MAX7219_SetDigitValue(SPIx, digit, 0x0);
    }
    Delay_ms(200);
}

void MAX7219_RightSignal(SPI_RegDef_t* SPIx){
    for(uint8_t digit = MAX7219_REG_DIGIT4; digit <= MAX7219_REG_DIGIT7; digit++){
	if(digit == MAX7219_REG_DIGIT7){
	    MAX7219_SetDigitValue(SPIx, digit, 0x30);
	}
	else{
	MAX7219_SetDigitValue(SPIx, digit, 0x1);
	}
	Delay_ms(50);
    }
    Delay_ms(200);

    for(uint8_t digit = MAX7219_REG_DIGIT4; digit <= MAX7219_REG_DIGIT7; digit++){
	MAX7219_SetDigitValue(SPIx, digit, 0x0);
    }
    Delay_ms(200);
}

void MAX7219_StopSignal(SPI_RegDef_t* SPIx){
  for(uint8_t digit = MAX7219_REG_DIGIT0; digit <= MAX7219_REG_DIGIT7; digit++)
    {
      if(digit == MAX7219_REG_DIGIT0 || digit == MAX7219_REG_DIGIT7){
      	    MAX7219_SetDigitValue(SPIx, MAX7219_REG_DIGIT0, 0x6);
      	    MAX7219_SetDigitValue(SPIx, MAX7219_REG_DIGIT7, 0x30);
      	}else {
      	MAX7219_SetDigitValue(SPIx, digit, 0x1);
      	}
      Delay_ms(50);
    }

  Delay_ms(200);
  for(uint8_t digit = MAX7219_REG_DIGIT0; digit <= MAX7219_REG_DIGIT3; digit++){
  	MAX7219_SetDigitValue(SPIx, digit, 0x0);
      }
      Delay_ms(200);
  MAX7219_LeftSignal(SPIx);
  MAX7219_RightSignal(SPIx);
}
